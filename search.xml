<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ASGNet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ASGNet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ASGNet/</url>
      
        <content type="html"><![CDATA[<h1 id="asgnet"><a class="markdownIt-Anchor" href="#asgnet"></a> ASGNet</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>原型学习被广泛应用于小样本分割。通常情况下，通过平均全局对象信息，从支持特征中获得单一原型。然而，使用一个原型来表示所有信息可能会导致模糊不清。在本文中，我们提出了两个用于多原型提取和分配的新型模块，分别名为超像素引导聚类（SGC）和引导原型分配（GPA）。具体来说，SGC 是一种无参数、无训练的方法，它通过聚合相似的特征向量来提取更具代表性的原型，而 GPA 则能够选择匹配的原型，从而提供更准确的指导。通过将 SGC 和 GPA 整合在一起，我们提出了自适应超像素引导网络 (ASGNet)，它是一种轻量级模型，能适应物体的比例和形状变化。此外，我们的网络还可以很容易地推广到 k 个镜头的分割，并在不增加计算成本的情况下实现大幅改进。特别是，我们在 COCO 上进行的评估表明，ASGNet 在 5 镜头分割方面比最先进的方法高出 5%。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>人类具有非凡的学习能力，只需看到小样本的示例，就能学会如何识别新物体。另一方面，基于深度学习的计算机视觉系统取得了巨大进步，但主要依赖于大规模的训练集。此外，深度网络大多适用于预定义的类别，无法泛化到新的类别。小样本学习领域研究人工学习系统中这种学习能力的发展，在这种情况下，只有少数新类别的实例可用。</p><p>在这项工作中，我们要解决的是小样本分割问题，其目标是学习如何在给定的查询图像中分割对象，而此时只有少数具有GT分割掩码的支持图0  像可用。这是一个具有挑战性的问题，因为测试数据是训练集中不存在的新类别，而且支持图像和查询图像之间通常在外观和形状上存在很大差异。</p><p><img src="images/image-20240108145303857.png" alt="image-20240108145303857" /></p><blockquote><p>图 1. (a) 单一原型学习与 (b) 提出的自适应原型学习和分配之间的比较。我们利用超像素引导聚类来生成多个原型，然后按像素分配它们以查询特征。</p></blockquote><p>当前的小样本分割网络通常从查询图像和支持图像中提取特征，然后提出不同的方法进行特征匹配，并将对象掩码从支持图像转移到查询图像。特征匹配和掩码转移通常通过两种方式之一来完成：原型特征学习或亲和性学习。原型学习技术将支持图像中的mask对象特征浓缩为一个或几个原型特征向量。然后，这些技术会找到查询图像中类似特征的像素位置，从而分割出所需的对象。原型学习的一个主要优势是，原型特征比像素特征更能抵御噪声。但是，原型特征不可避免地会丢失空间信息，而当支持图像和查询图像之间的物体外观存在较大差异时，空间信息就显得非常重要。此外，大多数原型学习网络[41, 43, 33, 30, 4]只是通过如图 1(a) 所示的屏蔽平均池生成单一原型，从而丢失了信息和可辨别性。</p><p>另一方面，亲和学习技术 [40, 37, 32] 则直接尝试将支持图像中的对象像素与查询图像像素相匹配，从而转移对象掩码。这些技术利用学习到的特征来预测跨图像像素的亲和性（也称为连接强度），在进行特征匹配的同时，比原型学习方法更好地保留了空间信息。然而，亲和力学习技术在试图解决具有密集亲和力矩阵的欠约束像素匹配问题时，容易出现训练数据过拟合的问题。</p><p>在这项工作中，我们提出了一种新型原型学习技术，以解决现有技术的一些主要缺陷。特别是，我们希望根据图像内容自适应地改变原型数量及其空间范围，使原型具有内容适应性和空间感知性。这种自适应的多原型策略对于处理不同图像中物体尺度和形状的巨大差异非常重要。直观地说，当一个物体占据了图像的很大一部分时，它就会携带更多的信息，因此需要更多的原型来表示所有必要的信息。相反，如果物体相当小，背景所占比例较大，那么只需要一个或几个原型就足够了。此外，我们希望每个原型的支持区域（空间范围）都能适应支持图像中存在的物体信息。具体来说，我们的目标是根据特征的相似性将支持特征划分为几个具有代表性的区域。我们还希望在查找查询图像中的相似特征时，自适应地选择更重要的原型。由于在不同的图像区域和不同的查询图像中可以看到不同的物体部分，我们希望在整个查询图像中动态分配不同的原型进行特征匹配。例如，在查询图像中，物体的某些部分可能被遮挡，我们希望动态选择与查询图像中可见部分相对应的原型。</p><p>我们通过自适应超像素引导网络（ASGNet）来实现这种自适应多原型学习和分配，该网络利用超像素来调整原型的数量和支持区域。示意图如图 1(b) 所示。我们特别提出了两个模块：<strong>超像素引导聚类（SGC）和引导原型分配（GPA）</strong>，它们构成了 ASGNet 的核心。SGC 模块对支持图像进行基于特征的超像素快速提取，并将提取的超像素中心点视为原型特征。由于超像素的形状和数量与图像内容相适应，因此得到的原型也是自适应的。GPA 模块使用类似于注意力的机制，为查询图像中的每个像素分配最相关的支持原型特征。总之，SGC 模块在原型数量及其空间范围方面提供了自适应原型学习，而 GPA 模块则在处理查询特征时提供了对所学原型的自适应分配。这两个模块使 ASGNet 高度灵活，能适应不同的物体形状和大小，从而更好地泛化到未见过的物体类别。我们的贡献如下：</p><ul><li><p>我们提出了自适应超像素引导网络（ASGNet），这是一种灵活的原型学习方法，适用于小样本分割，能适应不同的物体尺度、形状和遮挡物。</p></li><li><p>我们引入了两个新模块，即超像素引导聚类（SGC）和引导原型分配（GPA），分别用于自适应原型提取和分配。它们可以作为特征匹配的有效即插即用组件。</p></li><li><p>ASGNet 以更少的参数和更少的计算量取得了最佳效果。具体来说，在 Pascal-5i/COCO-20i 上的 5 次拍摄设置中，所提出的方法获得了 64.36%/42.48% 的 mIoUs，比最先进的方法高出 2.40%/5.08%。</p></li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>**语义分割。**现有的语义分割方法大多基于全卷积网络 (FCN)[19]，用全卷积层代替全连接层进行像素级预测。近期语义分割方面的突破主要来自多尺度特征聚合 [44, 2, 36, 10] 或注意力机制 [7, 39, 15, 29, 3, 45, 42]。这些方法通常使用扩张卷积核[38]，并建立编码器-解码器结构，以获得大的感受野，同时保持特征分辨率。虽然这些方法取得了巨大的成功，但它们需要较长的训练时间和大量像素级标注的GT来对网络进行全面监督。此外，在推理阶段，训练好的模型无法识别训练集中不存在的新类别。</p><p>**小样本学习。**小样本学习侧重于模型的泛化能力，使其能够学会在仅有小样本标注示例的情况下预测新的类别。现有方法主要集中在度量学习 [31, 28, 26] 和元学习 [34, 6, 23]。度量学习的核心思想是距离测量，一般表述为优化图像或区域之间的距离/相似性。在元学习方法中，主要思想是定义特定的优化或损失函数，以实现快速学习能力。在这些方法中，原型网络的概念已被广泛应用于小样本分割，在保持高性能的同时大大减少了计算预算。大多数方法都集中于图像分类，而最近少数几个镜头的分割受到越来越多的关注。</p><p>**小样本分割。**小样本分割是小样本分类的扩展，它解决了预测每个像素的标签而不是预测整个图像的单一标签这一更具挑战性的任务。这一研究问题是由 Shaban 等人提出的[24]，他们提出了一种经典的双分支网络。后来，PL [4] 提出了使用原型的想法。在该研究中，每个预测都是通过测量原型与查询图像中像素之间的相似度生成的。SGOne[43]提出了掩码平均池化方法来获取与对象相关的原型，并在随后的工作中得到了广泛应用。PANet [33] 引入了一种新颖的原型对齐正则化方法，充分利用了支持知识，只需测量余弦距离即可做出最终预测。CANet [41] 在屏蔽平均池化的基础上，将原型扩展到与查询特征相同的大小，并将它们串联在一起。这项研究还使用了迭代优化模块来完善分割结果。PGNet、BriNet 和 DAN [40, 37, 32] 在支持特征和查询特征之间引入了密集的像素到像素连接，以保持空间信息。最近，PMMs [35] 利用期望最大化（EM）算法生成了多个原型。然而，在该模型中，所有原型都具有相同的相关性，这可能会对匹配度较低的原型产生敏感性。相反，在我们的工作中，我们利用每个原型与查询特征之间的相似性来选择每个像素位置上最相关的原型。</p><p>**超像素分割。**超像素是指具有相似特征（颜色、纹理、类别）的像素集合。超像素在许多计算机视觉任务中都很有效，最近还被用作小样本分割的基本单位 [18, 21]。超像素比像素携带更多信息，能为下游视觉任务提供更紧凑、更方便的图像表示。有关超像素的传统和现有方法的更多详情，请参阅 [1, 27]。</p><p>我们的研究受到了 maskSLIC [12] 和超像素采样网络（SSN）[13] 的启发。MaskSLIC 将 SLIC [1] 应用于定义的感兴趣区域 (RoI)，其主要贡献在于在 RoI 内放置种子点。SSN [13] 通过使 SLIC 算法可微分，提出了首个端到端可训练超像素算法。受这两种技术的启发，我们提出了在特征空间中进行掩蔽超像素聚类的方法，它可以将相似的特征聚集在一起，并生成超像素中心点作为原型。超像素中心点并不代表整个物体的信息，而是代表物体中具有相似特征的部分。</p><h2 id="3-problem-definition"><a class="markdownIt-Anchor" href="#3-problem-definition"></a> 3. Problem Definition</h2><p>小样本分割与一般语义分割的主要区别在于，训练集和测试集中的类别并不交叉。这意味着，在推理阶段，测试集中的类别在训练中完全没有出现过。具体来说，给定一个训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>I</mi><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>Q</mi></mrow></msub><mo separator="true">,</mo><msub><mi>M</mi><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>Q</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S_{train}=\{(I_{S/Q},M_{S/Q})\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>和测试集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>S</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>I</mi><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>Q</mi></mrow></msub><mo separator="true">,</mo><msub><mi>M</mi><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>Q</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}S_{test}=\{(I_{S/Q},M_{S/Q})\}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5000000000000002em;vertical-align:-0.5000000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">Q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5000000000000002em;"><span></span></span></span></span></span></span></span></span></span></span>, 两个集的类别不相交<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>S</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∩</mo><msub><mi>S</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>=</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(S_{train}\cap S_{test}=\emptyset)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∅</span><span class="mclose">)</span></span></span></span>。这里 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>3</mn></mrow></msup></mrow><annotation encoding="application/x-tex">I\in\mathbb{R}^{H\times W\times3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span>表示 RGB 图像，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>M</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}M\in\mathbb{R}^{H\times W}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5513310000000002em;vertical-align:-0.5256655em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0256655000000001em;"><span style="top:-3.1343345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5256655em;"><span></span></span></span></span></span></span></span></span></span></span> 表示分割掩码。下标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span></span></span></span> 分别代表支持和查询。继首次单次分割工作[24]之后，我们将训练和测试与情节范式[31]相统一。在每一集中，模型的输入由查询图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">I_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和来自支持集的$ K$ 个样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>I</mi><mi>S</mi><mi>i</mi></msubsup><mo separator="true">,</mo><msubsup><mi>M</mi><mi>S</mi><mi>i</mi></msubsup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">(I_S^i,M_S^i),i\in\{1,...,K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0999949999999998em;vertical-align:-0.275331em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.424669em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.424669em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span>组成。所有支持图像和查询图像都有相同的类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>。我们估计查询掩<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>M</mi><mo>~</mo></mover><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">\tilde{M}_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2062979999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，以近似GT掩码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">M_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="4-proposed-method"><a class="markdownIt-Anchor" href="#4-proposed-method"></a> 4. Proposed Method</h2><p><img src="images/image-20240108150918570.png" alt="image-20240108150918570" /></p><blockquote><p>图 2.所提出的自适应超像素引导网络的整体架构。</p></blockquote><p>在本节中，我们首先介绍了用于原型生成和匹配的两个模块，即超像素引导聚类（SGC）和引导原型分配（GPA）。然后，我们讨论这两个模块的自适应能力。之后，我们介绍了将 SGC 和 GPA 模块集成在一个模型中的整体网络架构，并将其命名为自适应超像素引导网络（ASGNet）。整体结构如图 2 所示。最后，我们将详细介绍 ASGNet 中的 k-shot 设置。</p><h3 id="41-superpixel-guided-clustering"><a class="markdownIt-Anchor" href="#41-superpixel-guided-clustering"></a> 4.1. Superpixel-guided Clustering</h3><p>SGC 的核心思想受到超级像素采样网络（SSN）[13] 和 MaskSLIC [12] 的启发。SSN 是首个用于超像素分割的端到端可训练深度网络。<strong>SSN 的主要贡献是将 SLIC [1] 中的最近邻操作转换为可微分操作</strong>。传统的 SLIC 超像素算法使用 k-means 聚类，有两个迭代步骤： 像素-超像素关联和超像素中心点更新。根据颜色的相似性和接近性，像素会被分配到不同的超像素中心点。具体来说，输入图像 I∈Rn×5 通常是一个有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个像素的五维空间（labxy），其中 lab 表示 CIELAB 色彩空间中的像素向量，xy 表示像素位置。经过迭代聚类后，该算法输出关联图，其中每个像素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 被分配到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 个超像素中的一个。</p><p><img src="images/image-20240108153754285.png" alt="image-20240108153754285" /></p><p>这个简单的方法启发了我们一个深刻的想法，那就是以聚类的方式将特征图聚合成多个超像素中心点，这里的超像素中心点可以作为原型。因此，我们不是在图像空间中计算超像素中心点，而是在特征空间中通过聚类相似的特征向量来估计超像素中心点。SGC 的整个过程如算法 1 所示。</p><p>给定支持特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub><mtext> </mtext><mo>∈</mo><mtext> </mtext><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mi>h</mi><mo>×</mo><mi>w</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F_s~\in~\mathbb{R}^{c\times h\times w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9991079999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span>, 支持掩码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>s</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow></msup></mrow><annotation encoding="application/x-tex">M_{s}\in\mathbb{R}^{h\times w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span> 和初始超像素种子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>S</mi><mn>0</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msub><mi>N</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}S^0&amp;\in\mathbb{R}^{c\times N_{sp}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5513310000000002em;vertical-align:-0.5256655em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0256655000000001em;"><span style="top:-3.1343345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5256655em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0256655000000001em;"><span style="top:-3.1343345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5256655em;"><span></span></span></span></span></span></span></span></span></span></span> （<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{sp}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是超像素的个数），我们的目标是得到最终的超像素中心点，它可以作为多个紧凑的原型。首先，我们将每个像素的坐标与支持特征图连接起来，以引入位置信息。然后，我们按照 SLIC [1] 方法定义距离函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>，它由特征距离和空间距离组成：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><msub><mi>d</mi><mi>f</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><mfrac><msub><mi>d</mi><mi>s</mi></msub><mi>r</mi></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">D = \sqrt{(d_f)^2 + \left(\frac{d_s}{r}\right)^2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.0541359999999997em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9858640000000003em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6540080000000001em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.9458640000000003em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0541359999999997em;"><span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">d_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">d_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 分别为特征值和坐标值的欧氏距离，r 为加权系数。我们用支持掩码过滤掉背景信息，只保留被掩码的特征，将特征图从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub><mtext> </mtext><mo>∈</mo><mtext> </mtext><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mi>h</mi><mo>×</mo><mi>w</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F_s~\in~\mathbb{R}^{c\times h\times w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9991079999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span>压缩为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mi>s</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msub><mi>N</mi><mi>m</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">F_{s}^{&#x27;}\in\mathbb{R}^{c\times N_{m}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.18948em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，其中 $N_m $是支持掩码内的像素数量。</p><p>然后，我们以迭代方式计算基于超像素的原型。在每次迭代 $t $中，我们首先根据距离函数 D 计算每个像素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>与所有超像素之间的关联图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Q</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">Q^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9879959999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span>：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>Q</mi><mrow><mi>p</mi><mi>i</mi></mrow><mi>t</mi></msubsup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>D</mi><mo stretchy="false">(</mo><msubsup><mi>F</mi><mi>p</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo separator="true">,</mo><msubsup><mi>S</mi><mi>i</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mrow><mo fence="true">∥</mo><msubsup><mi>F</mi><mi>p</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo>−</mo><msubsup><mi>S</mi><mi>i</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo fence="true">∥</mo></mrow><mn>2</mn></msup></mrow></msup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">Q_{pi}^t=e^{-D(F_p^{^{\prime}},S_i^{t-1})}=e^{-\left\|F_p^{^{\prime}}-S_i^{t-1}\right\|^2}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.226664em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19448em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.19448em;"><span style="top:-3.19448em;margin-right:0.05em;"><span class="pstrut" style="height:2.78148em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1164em;"><span style="top:-2.3994em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6854em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1164em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6854em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9595600000000001em;"><span style="top:-2.9595599999999997em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142856em;"><span style="top:-2.204392857142857em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29560714285714285em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.40096em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.40096em;"><span style="top:-3.5327599999999997em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="minner mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.79298em;"><span style="top:-2.18099em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.19198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.79298em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42500999999999994em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1164em;"><span style="top:-2.3994em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6854em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1164em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6854em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9595600000000001em;"><span style="top:-2.9595599999999997em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142856em;"><span style="top:-2.204392857142857em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29560714285714285em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.79298em;"><span style="top:-2.18099em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.19198em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.79298em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42500999999999994em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2402857142857144em;"><span style="top:-3.2799714285714288em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></p><p>然后，根据屏蔽特征的加权和更新新的超像素中心点：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>S</mi><mi>i</mi><mi>t</mi></msubsup><mo>=</mo><mfrac><mn>1</mn><msubsup><mi>Z</mi><mi>i</mi><mi>t</mi></msubsup></mfrac><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>m</mi></msub></munderover><msubsup><mi>Q</mi><mrow><mi>p</mi><mi>i</mi></mrow><mi>t</mi></msubsup><msubsup><mi>F</mi><mi>p</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">S_i^t=\frac1{Z_i^t}\sum_{p=1}^{N_m}Q_{pi}^tF_p^{^{\prime}},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0905559999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2426570000000003em;vertical-align:-1.403221em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7753559999999999em;"><span style="top:-2.4231360000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9628639999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.839436em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Z</mi><mi>i</mi><mi>t</mi></msubsup><mo>=</mo><msub><mo>∑</mo><mi>p</mi></msub><msubsup><mi>Q</mi><mrow><mi>p</mi><mi>i</mi></mrow><mi>t</mi></msubsup></mrow><annotation encoding="application/x-tex">Z_i^t=\sum_pQ_{pi}^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05222em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.229374em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span>是用于归一化的常数。上述过程如图 3 所示。</p><p><img src="images/image-20240108154301817.png" alt="image-20240108154301817" /></p><blockquote><p>图 3. 拟议的超像素引导聚类说明。</p></blockquote><p>在此，我们将详细说明初始种子的选择。一般来说，在超像素算法中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">H×W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 图像会被均匀分割成大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">h×w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 的规则网格单元，每个网格单元都被视为初始种子（即超像素）。然而，这种初始化方法并不适合我们的目的，因为我们只需要初始化前景区域内的种子。为了在mask区域内均匀地初始化种子，我们参考了 MaskSLIC [12] 来迭代放置每个初始种子，其流程如图 5 所示。这种种子初始化方法只需迭代几次，就能加快超像素引导聚类的收敛速度。</p><p><img src="images/image-20240108154434281.png" alt="image-20240108154434281" /></p><blockquote><p>图 5. 放置初始种子的管道。 (1)第1步：我们进行距离变换并选择最大点。 （2）第2步：我们将该点设置为False，然后重复第1步。之后，我们迭代第2步，直到获得所有初始种子的坐标。</p></blockquote><h3 id="42-guided-prototype-allocation"><a class="markdownIt-Anchor" href="#42-guided-prototype-allocation"></a> 4.2. Guided Prototype Allocation</h3><p><img src="images/image-20240108154600785.png" alt="image-20240108154600785" /></p><blockquote><p>图 4. 拟议的引导原型分配的图示</p></blockquote><p>提取原型后，以往的方法大多沿用 CANet [41] 的设计，将单个原型扩展到与查询特征相同的大小，然后将它们串联起来。然而，这种操作会对查询特征中的每个位置造成同等的引导。为了使原型匹配更适应查询图像的内容，我们提出了引导原型分配（GPA），如图 4 所示。我们首先计算余弦距离，以衡量每个原型与每个查询特征元素之间的相似度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>C</mi><mi>i</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msubsup><mo>=</mo><mfrac><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>⋅</mo><msubsup><mi>F</mi><mi>q</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msubsup></mrow><mrow><mi mathvariant="normal">∥</mi><msub><mi>S</mi><mi>i</mi></msub><mi mathvariant="normal">∥</mi><mo>⋅</mo><mi mathvariant="normal">∥</mi><msubsup><mi>F</mi><mi>q</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msubsup><mi mathvariant="normal">∥</mi></mrow></mfrac><mspace width="1em"/><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>N</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mspace width="1em"/><mtext>(4)</mtext></mrow><annotation encoding="application/x-tex">C_i^{x,y}=\frac{S_i\cdot F_q^{x,y}}{\|S_i\|\cdot\|F_q^{x,y}\|}\quad i\in\{1,2,...,N_{sp}\},\quad\text{(4)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.059164em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7822999999999999em;"><span style="top:-2.4231360000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.395138em;vertical-align:-0.9387000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.456438em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∥</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∥</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">∥</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.5834080000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mord">∥</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.773108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9387000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">(4)</span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">S_i \in \mathbb{R}^{c×1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 是第 i 个超像素中心点（原型），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mi>q</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">F^{x,y}_{q} \in \mathbb{R}^{c×1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.066438em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 是查询特征位置$ (x, y) $的特征向量。我们将这些相似性信息作为双分支结构的输入。第一个分支计算每个像素位置上哪个原型最相似，如下所示：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>G</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msup><mo>=</mo><mi><munder><mo><mi mathvariant="normal"><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo></mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>N</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub><mo stretchy="false">}</mo></mrow></munder></mi><msubsup><mi>C</mi><mi>i</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">G^{x,y}=\underset{i\in\{0,..,N_{sp}\}}{\operatorname*{\arg\max}}C_i^{x,y},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.9650599999999998em;vertical-align:-1.18276em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.11456em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mopen mtight">{</span><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mclose mtight">}</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.18276em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7822999999999999em;"><span style="top:-2.4231360000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中，采用 argmax 运算符获得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>G</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">G^{x,y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span>，这是代表特定原型的单个索引值。将所有索引值放在一起，就得到了一个导图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow></msup></mrow><annotation encoding="application/x-tex">G∈\mathbb{R}^{h×w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span>。然后，在导向图的每个位置上放置相应的原型，就得到了导向特征 $F_G \in \mathbb{R}^{c\times h \times w} $，从而实现像素导向。在另一个分支中，将所有超像素的相似性信息 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 相加，得到概率图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>。</p><p>最后，我们将概率图和引导特征与原始查询特征 FQ 连接起来，提供引导信息，从而得到细化的查询特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mi>Q</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">F_Q^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3539189999999999em;vertical-align:-0.411439em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span></span></span></span>：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>F</mi><mi>Q</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>Q</mi></msub><mo>⊕</mo><msub><mi>F</mi><mi>G</mi></msub><mo>⊕</mo><mi>P</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">F_Q^{&#x27;}=f(F_Q\oplus F_G\oplus P),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.375588em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊕</span></span></span></span> 表示沿通道维度的连接操作，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> 是 $1 \times 1 $卷积。</p><h3 id="43-adaptability"><a class="markdownIt-Anchor" href="#43-adaptability"></a> 4.3. Adaptability</h3><p><img src="images/image-20240108154730135.png" alt="image-20240108154730135" /></p><blockquote><p>图 6. 原型学习和分配中模型适应性的图示。 SGC和GPA分别表示提出的超像素引导聚类和引导原型分配，MAP表示[43]中提出的掩模平均池化。</p></blockquote><p>如前所述，我们认为所提议的网络的关键属性之一是其对小样本语义分割的自适应能力。图 6 举例说明了 SGC 和 GPA 的自适应能力。在 SGC 中，为了使其能够适应物体的比例，我们定义了一个标准来调节超像素中心点的数量，即</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>N</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mrow><mo fence="true">⌊</mo><mfrac><msub><mi>N</mi><mi>m</mi></msub><msub><mi>S</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub></mfrac><mo fence="true">⌋</mo></mrow><mo separator="true">,</mo><msub><mi>N</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">N_{sp}=\min(\left\lfloor\frac{N_m}{S_{sp}}\right\rfloor,N_{max}),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4221079999999997em;vertical-align:-0.972108em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⌋</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">N_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是支持掩码中的像素数量；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>s</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{sp}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是分配给每个初始超像素种子的平均面积，我们根据经验设定为 100。当前景相当小，$N_{sp} = 0 $或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，这种方法会退化为一般的屏蔽平均池化，如图 6(a) 所示。此外，为了减轻计算负担，我们设置了一个超参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 来限制原型的最大数量。在 GPA 中，我们可以观察到它对物体形状的适应性。换句话说，它对遮挡具有弹性。当查询图像（如图 6(b)）存在严重遮挡时，GPA 可以为每个查询特征位置选择最佳匹配的原型。</p><h3 id="44-adaptive-superpixel-guided-network"><a class="markdownIt-Anchor" href="#44-adaptive-superpixel-guided-network"></a> 4.4. Adaptive Superpixel-guided Network</h3><p><img src="images/image-20240108155349829.png" alt="image-20240108155349829" /></p><p>在上述 SGC 和 GPA 模块的基础上，我们提出了自适应超像素引导网络（ASGNet），用于小样本语义分割，如图 2 所示。首先，将支持图像和查询图像输入共享 CNN（在 ImageNet [14] 上进行预训练）以提取特征。然后，将支持特征通过带有支持掩码的 SGC，得到超像素中心点，并将其视为原型。之后，为了实现更精确的像素引导，我们采用 GPA 模块将原型与查询特征进行匹配。最后，我们使用特征富集模块[30]，建立类似于 FPN[16] 的自上而下的结构，引入多尺度信息。正如文献[30]所证明的，将特征从细粒度转移到粗粒度会促进特征交互，因此我们沿用了他们的设计，以实现快速的多尺度聚合。最后，所有不同尺度的特征都会被串联起来，每个尺度都会产生一个用于计算损失的分割结果。</p><h3 id="45k-shot-setting"><a class="markdownIt-Anchor" href="#45k-shot-setting"></a> 4.5.K-shot Setting</h3><p>在以往的工作中，K-shot 设置通常是通过特征平均或基于注意力的融合来解决的。然而，事实证明，这些策略的改进效果甚微，而且需要大量计算。相比之下，基于所提出的 SGC 和 GPA，我们的 ASGNet 可以轻松采用高效的 k-shot 策略，而无需折叠支持特征。具体来说，在每个支持图像和掩码对中，我们实施 SGC 来获取超像素中心点。将所有超像素中心点收集在一起，我们就得到了 k -shot 的总体超像素中心点 S：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>S</mi><mn>1</mn></msup><mo separator="true">,</mo><msup><mi>S</mi><mn>2</mn></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>S</mi><mi>k</mi></msup><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">S=(S^1,S^2,...,S^k),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p>通过这种方法，GPA 可以从多个shot中获得更大范围的选择，从而为分割查询图像中的物体提供更准确的指导。</p><h2 id="5-experiments"><a class="markdownIt-Anchor" href="#5-experiments"></a> 5. Experiments</h2><h3 id="51-datasets-and-evaluation-metric"><a class="markdownIt-Anchor" href="#51-datasets-and-evaluation-metric"></a> 5.1. Datasets and Evaluation Metric</h3><p>我们选择 Pascal-5i 和 COCO-20i 这两个广泛应用于小样本语义分割的数据集来分析我们的模型性能。Pascal-5i [24] 包含来自 PASCAL VOC 2012 [5] 的图像和来自 SBD [9] 的额外注释。总共 20 个类别被平均分成四个部分，并以交叉验证的方式进行模型训练。具体来说，在训练过程中选择三个部分，剩下的一个用于测试。在推理过程中，随机抽取 1000 个支持-查询对进行评估[24]。与 Pascal5i 不同，MSCOCO[17]是一个大型数据集，训练集中有 82,081 幅图像。按照 FWB [20]，MSCOCO[17]中的 80 个类别被平均分成四个部分，并采用相同的交叉验证策略。为了获得更稳定的结果，我们在评估过程中随机抽样 20,000 对图像[30]。</p><p>在消融研究中，我们使用平均相交愈合（mIoU）作为主要评估指标，因为它在图像分割中得到了普遍认可。此外，为了进行更一致的比较，我们还报告了前景-背景 IoU（FB-IoU）的结果。</p><h3 id="52-implementation-details"><a class="markdownIt-Anchor" href="#52-implementation-details"></a> 5.2. Implementation Details</h3><p>我们采用 ResNet [11] 作为骨干网络 [41]，并将 block2 和 block3 连接起来生成特征图。我们在 Pascal-5i 上使用 SGD 优化器对模型进行 200 次历时训练，在 COCO-20i 上使用 SGD 优化器进行 50 次历时训练。我们将 Pascal-5i 上的初始学习率设置为 0.0025，批量大小为 4；将 COCO-20i 上的初始学习率设置为 0.005，批量大小为 8。在训练和推理过程中，SGC 模块的迭代次数分别设置为 10 次和 5 次。在训练过程中，我们使用了数据增强技术–输入图像经过[-10，10]的随机缩放、水平翻转和旋转转换，然后所有图像被裁剪为 473 × 473（Pascal）或 641 × 641（COCO）作为训练样本。我们使用 Pytorch 实现模型，并在配备 Nvidia Tesla V100 GPU 的工作站上进行实验。为了增加余弦测量的方差，我们去掉了支持和查询特征前的 ReLU 层，因此相似度指标的边界为 [-1, 1]，而不是 [0, 1]。</p><h3 id="53-ablation-study"><a class="markdownIt-Anchor" href="#53-ablation-study"></a> 5.3. Ablation Study</h3><p><img src="images/image-20240108155818761.png" alt="image-20240108155818761" /></p><blockquote><p>表 1. 最大超像素质心数 Nmax 的消融研究。 s-x 表示不同的交叉验证分割。</p></blockquote><p>为了验证所提模块的有效性，我们在 Pascal-5i 上使用 ResNet-50 骨干网进行了广泛的消融研究。我们使用浮点运算 (FLOP) 表示计算量，并将加法和乘法考虑在内。</p><p>**超像素中心点数量。**为了探索超像素中心点数量的影响，我们在单次分割中进行了不同 Nmax 的实验。如第 4.3 节所述，Nmax 是一个超参数设置，用于调节原型的最大数量。特别是当 Nmax = 1 时，原型生成过程会退化为屏蔽平均池化。如表 1 所示，当 Nmax 等于 5 时，ASGNet 在分割 0 和分割 2 中取得了最好的结果，平均性能也最好，这证明了超像素引导聚类的有效性。当 Nmax 从 1 增加到 5 时，结果逐渐得到改善，之后略有下降，这说明过多的原型会带来负面影响，容易造成过度拟合。最后，我们选择 Nmax 为 5，用于 1 次分割和 5 次分割。此外，我们还分析了自适应方案对超像素中心点数量 Nsp 的影响，结果如表 2 所示。与使用固定数量（5）的超像素相比，结果表明自适应设置（公式 7）可以减少冗余计算，同时获得更好的性能。</p><p><img src="images/image-20240108155915314.png" alt="image-20240108155915314" /></p><blockquote><p>表 3. 原型生成（掩蔽平均池 (MAP) 与 SGC）和匹配（Expand 与 GPA）的消融研究。 FLOPsΔ表示原型匹配过程的计算成本，K是原型的自适应数量（K≤5）。</p></blockquote><p>**SGC 和 GPA。**为了证明 SGC 和 GPA 模块的有效性，我们对原型生成和匹配进行了诊断实验。我们首先使用 PFENet [30] 中提出的单一原型学习方法实现了一个基线模型。然后，我们引入 SGC 来生成多个原型，并参照 PMMs [35]，以密集的方式对它们进行融合。最后，我们用提议的分配方案取代原型扩展。对于 SGC 模块上的消融，如表 3 所示，在 1-shot的情况下，我们发现用 SGC 代替均值平均池化（MAP）会使表征恶化，导致性能下降，但在 5-shot的情况下，模型却能从中受益。我们认为主要原因是在单个支持样本上，过多的原型变得高度相似，余弦距离无法将它们区分开来。最后，采用 GPA 模块进行原型匹配时，性能比原型扩展提高了 2.70%，计算开销也大大降低。</p><p><strong>K-shot 融合设置</strong>。如第 4.5 节所述，ASGNet 能够在不折叠支持特征的情况下解决 K-shot 学习问题。为了探索不同融合方法的效果，我们将 K-shot 设置与其他两种常用解决方案进行了比较： 1) 特征平均融合 [22] 和 2) 注意力加权求和 [41]。为简单起见，本消融研究的实验仅在 Pascal-50 中进行。如表 4 所示，我们的简单策略无需额外计算即可获得最佳性能，与单次基线相比，增量最大（4.82%）。相反，基于注意力的融合需要大量计算，性能提升有限。这表明，在有大量选择的情况下，GPA 模块是非常有效的。</p><h3 id="54-comparison-to-state-of-the-art"><a class="markdownIt-Anchor" href="#54-comparison-to-state-of-the-art"></a> 5.4. Comparison to State-of-the-art</h3><p><img src="images/image-20240108170607992.png" alt="image-20240108170607992" /></p><p><img src="images/image-20240108171802869.png" alt="image-20240108171802869" /></p><blockquote><p>表 6. FB-IoU 和 Pascal-5i 上可训练参数数量的比较。 †表示采用多尺度推理。 Δ 表示 1-shot 分割结果的增量。</p></blockquote><p>Pascal-5i. 与最先进方法的比较见表 5 和表 6，其中采用了两种不同的指标。在表 5 中，以 ResNet-101 为骨干，ASGNet 在 5 次分割中以 2.40% 的可观优势优于最新方法，而在 1 次分割中与最新方法相当。在表 6 中，我们进一步比较了 FB-IoU 和可训练参数的数量。同样，在 5 次拍摄设置下，所提出的 ASGNet 比同行有了显著提高（75.2% 对 73.9%），而且比 1 次拍摄结果的性能提高幅度最大，达到 5.0%。此外，与其他方法相比，我们的可训练参数要少得多。在图 7 中，我们展示了一些具有代表性的分割实例。我们观察到，即使支持图像和查询图像在外观和姿态上存在较大差异，所提出的 ASGNet 也能生成准确的分割结果。</p><p><img src="images/image-20240108171840497.png" alt="image-20240108171840497" /></p><blockquote><p>表 7. 与 COCO-20i 上最新技术的比较。</p></blockquote><p>COCO-20i。表 7 列出了平均 IoU 和 FB-IoU 在 COCO-20i 上的性能比较。可以看出，在平均 IoU 方面，ASGNet 在 1 次拍摄和 5 次拍摄设置中都取得了最先进的结果，大大优于之前的方法。特别是在 1 次和 5 次分割中，ASGNet 的平均 IoU 分别比 RPMMs [35] 高出 3.98% 和 6.96%。此外，在 FB-IoU 方面，我们的 ASGNet 获得了具有竞争力的 1 次分割结果和表现最佳的 5 次分割结果。这些结果表明，所提出的方法能够处理更复杂的情况，因为 MSCOCO 是一个更具挑战性的数据集，包含多种样本和类别。</p><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>在本文中，我们提出了用于小样本图像分割的 ASGNet。针对现有基于单一原型的模型的局限性，我们引入了两个新模块，分别名为超像素引导聚类（SGC）和引导原型分配（GPA），用于自适应原型学习和分配。具体来说，SGC 通过基于特征的超像素聚类来聚合相似的特征向量，而 GPA 则旨在通过余弦距离测量相似度，为每个查询特征元素分配最相关的原型。广泛的实验和消融研究证明了 ASGNet 的优越性，我们在 Pascal-5i 和 COCO-20i 上实现了最先进的性能，而无需任何额外的后处理步骤。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Head-Free Lightweight Semantic Segmentation with Linear Transformer</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/AFFformer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/AFFformer/</url>
      
        <content type="html"><![CDATA[<h1 id="head-free-lightweight-semantic-segmentation-with-linear-transformer"><a class="markdownIt-Anchor" href="#head-free-lightweight-semantic-segmentation-with-linear-transformer"></a> Head-Free Lightweight Semantic Segmentation with Linear Transformer</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>现有的语义分割工作主要集中在设计有效的解码器上；然而，整体结构所带来的计算负荷长期以来一直被忽视，这阻碍了它们在资源有限的硬件上的应用。在本文中，我们提出了一个专门用于语义分割的无头轻量级架构，名为自适应频率变换器（AFFormer）。AFFormer采用了一个并行的架构来利用原型表征作为特定的可学习的局部描述，它取代了解码器并保留了高分辨率特征上丰富的图像语义。虽然去掉解码器后压缩了大部分的计算，但并行结构的准确性仍然受到低计算资源的限制。因此，我们采用异质运算器（CNN和Vision Transformer）进行像素嵌入和原型表示，以进一步节省计算成本。此外，从空间域的角度来看，transformer的复杂性很难线性化。由于语义分割对频率信息非常敏感，我们构建了一个轻量级的原型学习块，其复杂度为O(n)的自适应频率滤波器，以O(n2)取代标准的self-attention。在广泛采用的数据集上进行的广泛实验表明，AFFormer在只保留3M参数的情况下实现了卓越的准确性。在ADE20K数据集上，AFFormer实现了41.8 mIoU和4.6 GFLOPs，比Segformer高4.4 mIoU，GFLOPs减少45%。在Cityscapes数据集上，AFFormer实现了78.7 mIoU和34.4 GFLOPs，比Segformer高2.5 mIoU，GFLOPs减少72.5%。</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>语义分割旨在将图像划分为子区域（像素集合），并被定义为像素级分类任务（Long, Shelhamer, and Darrell 2015; Xie et al. 2021; Zhao et al. 2017; Chen et al. 2018; Strudel et al. 2021; Cheng, Schwing, and Kirillov 2021）全卷积网络（FCN）（Long, Shelhamer, and Darrell 2015）与图像分类相比，它有两个独特的特点：像素级的密集预测和多类表示，通常分别建立在高分辨率的特征上，需要图像语义的全局归纳能力。之前的语义分割方法（Zhao等人，2017；Chen等人，2018；Strudel等人，2021；Xie等人，2021；Cheng, Schwing, and Kirillov，2021；Yuan等人，2021b）主要是以分类网络为骨干，提取多尺度特征，并设计复杂的解码头，建立多尺度特征之间的关系。然而，这些改进是以大的模型尺寸和高的计算成本为代价的。例如，著名的PSPNet（Zhao等人，2017）使用轻量级的MobilenetV2（Sandler等人，2018）作为骨干，在输入尺度为512×512时，包含13.7M的参数和52.2GFLOPs。广泛使用的DeepLabV3+（Chen等人，2018）以相同的骨架需要15.4M参数和25.8GFLOPs。固有的设计方式限制了这一领域的发展，阻碍了许多现实世界的应用。因此，我们提出以下问题：语义分割能否像图像分类一样简单？</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426151850291.png" alt="image-20230426151850291" /></p><blockquote><p>图1：左图：不同输入规模下的计算复杂性。与传统方法相比，Segformer（Xie等人，2021）大大降低了计算复杂度，如PSPNet（Zhao等人，2017）和DeepLabV3+（Chen等人，2018），它们以mobilenetV2（Sandler等人，2018）作为骨干。然而，Segformer对于更高的分辨率仍然有巨大的计算负担。对： AFFormer在ADE20K和Cityscapes数据集上取得了更好的准确性，FLOPs明显降低。</p></blockquote><p>最近，transformer（ViTs）（Liu等人2021；Lee等人2022；Xie等人2021；Strudel等人2021；Cheng, Schwing, and Kirillov 2021；Xu等人2021；Lee等人2022）在语义分割方面显示出巨大的潜力，然而，当它们部署在超低计算能力设备上时，面临着平衡性能和内存使用的挑战。标准变形金刚在空间域的计算复杂度为O(n2)，其中n为输入分辨率。现有的方法通过减少标记的数量（Xie等人2021；Wang等人2021；Liang等人2022；Ren等人2022）或滑动窗口（Liu等人2021；Yuan等人2021a）来缓解这种情况，但它们对计算复杂性的减少有限，甚至会损害分割任务的全局或局部语义。同时，语义分割作为一个基础研究领域，有着广泛的应用场景，需要处理各种分辨率的图像。如图1所示，尽管众所周知的高效Segformer（Xie等人，2021）与PSPNet和DeepLabV3+相比取得了很大的突破，但对于更高的分辨率，它仍然面临巨大的计算负担。在512×512的尺度上，尽管Segformer与PSPNet和DeepLabV3+相比非常轻，但它的成本几乎是我们的两倍（8.4 GFLOPs vs 4.6 GFLOPs）；在2048×2048的尺度上，甚至需要5倍的GFLOPs（384.3 GFLOPs vs 73.2 GFLOPs）。因此，我们提出了另一个问题：我们能否为超低计算场景下的语义分割设计一个高效、轻量的Transformer网络？</p><p>上述两个问题的答案是肯定的。为此，我们提出了一个无头轻量级语义分割的具体架构，名为自适应频率变换器（AFFormer）。受ViT保持单一的高分辨率特征图以保持细节（Dosovitskiy等人，2021）和金字塔结构降低分辨率以探索语义并降低计算成本（He等人，2016；Wang等人，2021；Liu等人，2021）的特性启发，AFFormer采用并行结构，利用原型表征作为特定的可学习局部描述，取代解码器并保留高分辨率特征上的丰富图像语义。并行结构通过移除解码器压缩了大部分的计算，但对于超低的计算资源来说，这还是不够的。此外，我们对像素嵌入特征和局部描述特征采用了异质算子，以节省更多的计算成本。一个名为prototype learning (PL)的基于变换器的模块被用来学习原型表征，而一个名为pixel descriptor (PD)的基于卷积的模块将像素嵌入特征和学到的原型表征作为输入，将它们转换回完整的像素嵌入空间以保留高分辨率语义。</p><p>然而，从空间域的角度来看，要将transformer的复杂性线性化仍然非常困难。受频率对分类任务影响的启发（Rao等人，2021；Wang等人，2020），我们发现，语义分割对频率信息也非常敏感。因此，**我们构建了一个复杂度为O(n)的轻量级自适应频率滤波器作为原型学习，以取代O(n2)的标准自我注意。**这个模块的核心是由频率相似性核、动态低通和高通滤波器组成，它们分别从强调重要的频率成分和动态过滤频率的角度捕捉有利于语义分割的频率信息。最后，通过共享高、低频提取和增强模块的权重，进一步降低了计算成本。**我们还在前馈网络（FFN）层中嵌入了一个简化的深度卷积层以增强融合效果，**减少了两个矩阵变换的大小。</p><p>在并行异构结构和自适应频率滤波器的帮助下，**我们只用一个卷积层作为分类层（CLS）来处理单尺度特征，实现了最佳性能，**使语义分割像图像分类一样简单。我们在三个广泛使用的数据集上证明了所提出的AFFormer的优势： ADE20K、Cityscapes和COCO-stuff。仅用3个参数，AFFormer就大大超过了最先进的轻型方法。在ADE20K上，AFFormer以4.6 GFLOPs实现了41.8 mIoU，比Segformer高出4.4 mIoU，同时GFLOPs减少45%。在Cityscapes上，AFFormer实现了78.7 mIoU和34.4 GFLOPs，比Segformer高2.5 mIoU，GFLOPs减少72.5%。广泛的实验结果表明，在计算受限的情况下应用我们的模型是可能的，而且在不同的数据集上仍然保持高性能和稳健性。</p><h2 id="related"><a class="markdownIt-Anchor" href="#related"></a> Related</h2><h3 id="work-semantic-segmentation"><a class="markdownIt-Anchor" href="#work-semantic-segmentation"></a> Work Semantic Segmentation</h3><p>语义分割被认为是一项像素分类任务（Strudel等人，2021；Xu等人，2017；Xie等人，2021）。在过去的两年里，出现了基于transformer的新范式，这些范式通过查询或动态内核实现掩模分类（Zhang等人2021；Li等人2022；Cheng, Schwing, and Kirillov 2021；Cheng等人2022）。例如，Maskformer（Cheng, Schwing, and Kirillov 2021）学习对象查询并将其转换为面具的嵌入。Mask2former（Cheng等人，2022）用一个强大的多尺度掩模Transformer（Zhu等人，2021）加强了查询学习。K-Net（Zhang等人，2021）采用了动态内核来生成掩码。MaskDINO（Li等人，2022）将物体检测引入语义分割，进一步提高了查询能力。然而，由于学习高效查询和动态内核的计算成本很高，上述方法都不适合低计算能力的场景。我们认为，这些范式的本质是通过用单个表征代替整体来更新像素语义。因此，我们利用像素嵌入作为特定的可学习的局部描述，提取图像和像素语义并允许语义互动。</p><h3 id="efficient-vision-transformers"><a class="markdownIt-Anchor" href="#efficient-vision-transformers"></a> Efficient Vision Transformers</h3><p>transformer的轻量级解决方案主要集中在对自我注意力的优化上，包括以下方式：减少令牌长度（Wang等人2021；Xie等人2021；Wang等人2022）和使用局部窗口（Liu等人2021；Yuan等人2021a）。PVT（Wang等人，2021）通过空间缩减对键和值进行空间压缩，PVTv2（Wang等人，2022）通过池化操作进一步取代了空间缩减，但这种方式会丢失很多细节。Swin（Liu等人，2021；Yuan等人，2021a）通过将自我注意力限制在局部窗口，大大减少了令牌的长度，而这些违背了Transformer的全局性，限制了全局接受域。同时，许多轻量级设计（Chen et al. 2022; Mehta and Rastegari 2022）在MobileNet中引入Transformer，以获得更多的全局语义，但这些方法仍然受到传统Transformer的方形计算复杂性的影响。Mobile-Former（Chen等人，2022）结合了MobileNet（Sandler等人，2018）和Transformer（Dosovitskiy等人，2021）的并行设计，可以实现本地和全局特征的双向融合性能，远远超过MobileNetV3等轻量级网络。然而，它只使用非常少的标记，这不利于语义分割任务。</p><h2 id="method"><a class="markdownIt-Anchor" href="#method"></a> Method</h2><p>在本节中，我们介绍了用于语义分割的轻型并行异构网络。首先证明了用并行异构网络取代语义解码器的基本信息。然后，我们介绍了像素描述和语义频率的建模。最后，我们讨论了并行架构的具体细节和计算开销。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>s</mi><mi>y</mi><mi>m</mi><mi>b</mi><mi>o</mi><mi>l</mi><mi>G</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>u</mi><msubsup><mi>m</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">boldsymbol{G}(s)=sum_{i=0}^nw_ix_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">m</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal">G</span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20240130210316093.png" alt="image-20240130210316093" /></p><blockquote><p>图2：自适应频率变换器（AFFormer）的概述。我们首先展示平行异构网络的整体结构。具体来说，首先对贴片嵌入后的特征F进行聚类，得到原型特征G，从而构建一个平行网络结构，其中包括两个异质算子。基于变换器的模块作为原型学习，捕捉G中有利的频率成分，得到原型表示G′。最后G′被一个基于CNN的像素描述器恢复，产生F′，用于下一阶段。</p></blockquote><h3 id="parallel-heterogeneous-architecture"><a class="markdownIt-Anchor" href="#parallel-heterogeneous-architecture"></a> Parallel Heterogeneous Architecture</h3><p>语义解码器将编码器获得的图像语义传播到每个像素，并恢复降采样时丢失的细节。一种直接的替代方法是在高分辨率特征中提取图像语义，但这会带来大量的计算，尤其是对于视觉变换器而言。相比之下，我们提出了一种用原型语义描述像素语义信息的新策略。在每个阶段，给定一个特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>i</mi><mi>n</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi>b</mi><mi>b</mi><msup><mi>R</mi><mrow><mi>H</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>s</mi><mi>W</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>s</mi><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Finmathbb{R}^{Htimes Wtimes C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">b</span><span class="mord mathnormal">b</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>后，我们首先初始化一个网格 G∈Rh×w×C 作为图像的原型，其中 G 中的每个点都作为局部聚类中心，初始状态只包含周围区域的信息。在这里，我们使用 1 × C 向量来表示每个点的本地语义信息。对于每个特定像素点，由于周围像素点的语义并不一致，因此每个聚类中心之间存在语义重叠。聚类中心在其对应的区域 α2 中进行加权初始化，每个聚类中心的初始化表示为</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426142250414.png" alt="image-20230426142144244" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">n=alpha times alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">a</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的权重，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>设为3。我们的目的是更新网格G中的每个簇中心s，而不是直接更新特征F。由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">h×w  H×W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，它大大简化了计算。</p><p>在这里，我们使用一个基于Transformer的模块作为原型学习来更新每个聚类中心，总共包含L层，更新后的中心表示为G′(s)。对于每个更新的聚类中心，我们通过一个像素描述符来恢复它。让F′i表示恢复的特征，它不仅包含来自F的丰富的像素语义，还包含集群中心G′(s)所收集的原型语义。由于聚类中心聚集了周围像素的语义，导致了局部细节的损失，因此PD首先用像素语义来模拟F中的局部细节。具体来说，F被投射到一个低维空间，在像素之间建立局部关系，使每个局部斑块保持一个独特的边界。然后G′(s)被嵌入到F中，通过双线性插值恢复到原始空间特征F′。最后，它们通过线性投影层被整合。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426142325152.png" alt="image-20230426153043215" /></p><blockquote><p>图3：不同频率成分对语义分割的影响。我们使用切边方法Segformer（Xie等人，2021）来评估频率成分对广泛使用的ADE20K数据集（Zhou等人，2017）的语义分割的影响。通过快速傅里叶变换（Heideman, Johnson, and Burrus 1984）将图像转换到频域，并使用半径为的低通算子将高频信息过滤掉。去除不同层次的高频成分后，预测性能会明显下降。</p></blockquote><h3 id="prototype-learning-by-adaptive-frequency-filter"><a class="markdownIt-Anchor" href="#prototype-learning-by-adaptive-frequency-filter"></a> Prototype Learning by Adaptive Frequency Filter</h3><p>**动机:**语义分割是一项极其复杂的像素级分类任务，容易出现类别混淆。频率表示可以作为学习类别间差异的新范式，它可以挖掘出人类视觉所忽略的信息（Zhong等人，2022；Qian等人，2020）。如图3所示，人类对频率信息的去除是稳健的，除非绝大部分的频率成分被过滤掉了。然而，该模型对频率信息的去除极为敏感，即使去除少量的频率信息也会导致性能的显著下降。这表明，对于该模型来说，挖掘更多的频率信息可以增强类别之间的差异，使每个类别之间的边界更加清晰，从而提高语义分割的效果。</p><p>由于特征F包含丰富的频率特征，网格G中的每个聚类中心也会收集这些频率信息。在上述分析的激励下，在网格G中提取更多有益的频率有助于区分每个聚类的属性。为了提取不同的频率特征，直接的方法是通过傅里叶变换将空间域特征转化为频谱特征，并在频域中使用一个简单的掩码滤波器来增强或衰减频谱中每个频率分量的强度。然后通过反傅里叶变换将提取的频率特征转换到空间域。然而，傅里叶变换和反变换带来了额外的计算费用，而且许多硬件不支持这种运算。因此，我们从光谱相关的角度出发，在香草transformer的基础上设计了一个自适应频率滤波器块，以直接在空间域捕获重要的高频和低频特征。核心部件如图4所示，公式定义为：：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426152029338.png" alt="image-20230426142250414" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>D</mi><mi>h</mi><mrow><mi>f</mi><mi>c</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">D_{h}^{fc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2683239999999998em;vertical-align:-0.3013079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.3986920000000005em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>D</mi><mi>m</mi><mrow><mi>l</mi><mi>f</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_{m}^{lf}(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>D</mi><mi>n</mi><mrow><mi>h</mi><mi>f</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_{n}^{hf}(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>分别表示为实现频率成分相关性增强而采用的H组的频率相似性核，M组的动态低通滤波器和N组的动态高通滤波器。||·||表示串联。值得注意的是，这些运算符采用了并行结构，通过共享权重来进一步降低计算成本。</p><h3 id="frequency-similarity-kernel-fsk"><a class="markdownIt-Anchor" href="#frequency-similarity-kernel-fsk"></a> Frequency Similarity Kernel (FSK)</h3><p>不同的频率成分分布在G中，而我们的目的是选择和加强有助于语义解析的重要成分。为此，我们设计了一个频率相似性内核模块。一般来说，这个模块是由transformer实现的。给定一个特征X∈R(hw)×C，通过卷积层对G进行相对位置编码（Wu等人，2021）。我们首先使用一个固定大小的相似性核A∈RC/H×C/H来表示不同频率成分之间的对应关系，并通过查询相似性核来选择重要的频率成分。我们将其视为一个函数转移，通过线性层计算出频率成分的键值K和值V，并通过Softmax操作将各频率成分的键值归一化。每个成分都集成了一个相似性核Ai,j，其计算方式为：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426142410927.png" alt="image-20230426142325152" /></p><p>其中ki代表K中的第i个频率成分，vj代表V中的第j个频率成分。我们还通过线性层将输入X转化为查询Q，并通过对固定大小的相似性核的交互作用获得分量增强的输出。</p><h3 id="dynamic-low-pass-filters-dlf"><a class="markdownIt-Anchor" href="#dynamic-low-pass-filters-dlf"></a> Dynamic Low-Pass Filters (DLF)</h3><p>低频成分占据了绝对图像中的大部分能量，代表了大部分的语义信息。一个低通滤波器允许低于截止频率的信号通过，而高于截止频率的信号则被阻断。因此，我们采用典型的平均集合作为低通滤波器。然而，不同图像的截止频率是不同的。为此，我们在多组中控制不同的内核和步长来产生动态低通滤波器。对于第m组，我们有：<img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426142344156.png" alt="image-20230426142344156" /></p><p>其中B(-)表示双线性插值，Γs×s表示输出大小为s×s的自适应平均集合。</p><h3 id="dynamic-high-pass-filters-dhf"><a class="markdownIt-Anchor" href="#dynamic-high-pass-filters-dhf"></a> Dynamic High-Pass Filters (DHF)</h3><p>高频信息对于保留分割中的细节至关重要。作为一个典型的高通算子，卷积可以过滤掉不相关的低频冗余成分，保留有利的高频成分。高频成分决定了图像的质量，而每幅图像的高通的截止频率是不同的。因此，我们把数值V分成N组，得出vn。对于每一组，我们使用不同内核的卷积层来模拟不同高通滤波器中的截止频率。对于第n组，我们有：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426154858983.png" alt="image-20230426142410927" /></p><p>其中Λk×k表示深度卷积层，核大小为k×k。此外，我们使用查询和高频特征的Hadamard乘积来抑制物体内部的高频，这些高频是分割的噪声。</p><p>FFN有助于融合捕获的频率信息，但拥有大量的计算量，这在轻量级设计中经常被忽略。在这里，我们通过引入卷积层来减少隐藏层的维度，以弥补由于维度压缩而缺失的能力。</p><h3 id="discuss"><a class="markdownIt-Anchor" href="#discuss"></a> Discuss</h3><p>对于频率相似性核，其计算复杂度为O(hwC2)。每个动态高通滤波器的计算复杂度为O(hwCk2)，比频率相似性核的计算复杂度小得多。由于动态低通滤波器是通过每组的自适应均值池实现的，其计算复杂度约为O(hwC)。因此，一个模块的计算复杂度与分辨率呈线性关系，这对语义分割中的高分辨率是有利的。</p><h2 id="experiments"><a class="markdownIt-Anchor" href="#experiments"></a> Experiments</h2><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426154941898.png" alt="image-20230426154858983" /></p><blockquote><p>表1：与ADE20K上分辨率为512×512的先进方法的比较。这里我们用Segformer作为基线，并报告增长百分比。MV2=MobileNetV2, EN=EfficientNet, SV2=ShuffleNetV2.</p></blockquote><h3 id="implementation-details"><a class="markdownIt-Anchor" href="#implementation-details"></a> Implementation Details</h3><p>我们在三个公开的数据集上验证了提议的AFFormer： ADE20K（Zhou等人，2017）、Cityscapes（Cordts等人，2016）和COCO-stuff（Caesar, Uijlings, and Ferrari，2018）。我们用基于MMSegmentation工具箱的PyTorch框架实现我们的AFFormer（贡献者2020）。按照以前的工作（Cheng, Schwing, and Kirillov 2021; Zhao et al. 2017），我们使用ImageNet-1k来预训练我们的模型。在语义分割训练期间，我们对所有数据集采用广泛使用的AdamW优化器来更新模型参数。为了进行公平的比较，我们的训练参数主要遵循以前的工作（Xie等人，2021）。对于ADE20K和Cityscapes数据集，我们采用Segformer中默认的训练迭代160K，其中mini-batchsize分别设置为16和8。对于COCO-stuff数据集，我们将训练迭代次数设置为80K，迷你批处理为16。此外，我们在ADE20K、Cityscapes、COCO-stuff的训练过程中分别通过随机水平翻转、随机调整大小的比例为0.5-2.0、随机裁剪为512×512、1024×1024、512×512来实现数据增强。我们用平均相交于联合（mIoU）的指标来评估结果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426153043215.png" alt="image-20230426154941898" /></p><blockquote><p>表2：与Cityscapes估值集上的最新方法的比较。FLOPs是在1024×2048的分辨率下测试的。同时，我们还报告了与Segformer相比增加的百分比。</p></blockquote><h3 id="comparisons-with-existing-works"><a class="markdownIt-Anchor" href="#comparisons-with-existing-works"></a> Comparisons with Existing Works</h3><h4 id="results-on-ade20k-dataset"><a class="markdownIt-Anchor" href="#results-on-ade20k-dataset"></a> Results on ADE20K Dataset.</h4><p>我们将我们的AFFormer与排名靠前的语义分割方法进行比较，包括基于CNN和基于视觉的Transformer模型。按照（Xie等人，2021）中的推理设置，我们在512×512的分辨率下测试FLOPs，并在表1中显示了单比例结果。我们的模型AFFormer-base在与Lite-ASPP相同的计算能力消耗下提高了5.2 mIoU，达到41.8 mIoU。同时，通过减少层数和通道数，我们得到了AFFormertiny和AFFormer-small版本，以适应不同的计算能力情况。对于轻量级和高效的Segformer（8.4GFLOPs），我们的基础版本（4.6GFLOPs）也用一半的计算能力获得了4.4mIoU，而微小版本（2.4GFLOPs）仅用1/4的计算能力提高了1.3mIoU。更轻的topformer只需要1.8GFLOPs，但我们的基本版本少了210万个参数（5.1M vs 3M），mIoU提高了4.0。</p><h4 id="results-on-cityscapes-dataset"><a class="markdownIt-Anchor" href="#results-on-cityscapes-dataset"></a> Results on Cityscapes Dataset.</h4><p>表2显示了我们的模型和前沿方法在Cityscapes上的结果。尽管Segformer足够高效，但由于其方形级别的复杂性，我们只用了30%的计算成本就达到了78.7 mIoU，在FLOPs减少70%的情况下，提高了2.5 mIoU。同时，我们在表3中报告了不同高分辨率下的结果。在{512, 640, 768, 1024}的短边上，我们模型的计算成本分别是Segformer的51.4%, 57.5%, 62.5%和72.5%。同时，mIoU分别提高了1.6、1.9、1.2和2.5。输入的分辨率越高，我们的模型在计算成本和准确性方面就越有优势。</p><h4 id="results-on-coco-stuff-dataset"><a class="markdownIt-Anchor" href="#results-on-coco-stuff-dataset"></a> Results on COCO-stuff Dataset.</h4><p>COCO-stuff数据集包含了大量在COCO中收集的困难样本。如表4所示，尽管复杂的解码器（如PSPNet、DeepLabV3+）可以取得比LR-ASPP（MV3）更好的结果，但它们带来了大量的计算成本。我们的模型实现了35.1 mIoU的精度，而只占用了4.5 GFLOPs，实现了最佳的权衡。</p><h4 id="ablation-studies"><a class="markdownIt-Anchor" href="#ablation-studies"></a> Ablation Studies</h4><p>除非另有说明，所有的消融研究都是在ADE20K数据集和AFFormer-base上进行的。</p><h4 id="rationalization-of-parallel-structures"><a class="markdownIt-Anchor" href="#rationalization-of-parallel-structures"></a> Rationalization of Parallel Structures.</h4><p>并行结构是去除解码器头并确保准确性和效率的关键。我们首先将提议的结构调整为天真的金字塔结构（表示为 “w/o PD”）和ViT结构（表示为 “w/o PL”），以说明并行结构的优势。具体来说，&quot;w/o PD &quot;意味着去除PD模块，只保留PL模块，而 &quot;w/o PL &quot;则相反。如表5所示，由于缺乏高分辨率的像素语义信息，&quot;w/o PD &quot;的设置减少了2.6 mIoU。没有金字塔结构的 &quot;w/o PL &quot;由于参数少，缺乏丰富的图像语义信息，准确率明显下降。这也证明了我们的并行架构可以有效地结合两种架构的优势。</p><h4 id="advantages-of-heterogeneous-structure"><a class="markdownIt-Anchor" href="#advantages-of-heterogeneous-structure"></a> Advantages of Heterogeneous Structure.</h4><p>采用异质方法的目的是为了进一步减少计算开销。采用PL模块学习聚类特征中的原型表示，然后用PD结合原始特征进行修复，这样就避免了对高分辨率原始特征的直接计算，降低了计算成本。从表6可以看出，当并行分支调整为像素描述模块（表示为 “全PD”）时，即通过PD模块学习原型表示。模型大小只有0.6M，FLOPs减少了2.5G，但精度却降低了14.3mIoU。这是由于PD缺乏学习伟大原型表征的能力。相比之下，当我们用PL模块（表示为 “所有PL”）取代PD模块后，FLOPs增加了2.4G，但准确性几乎没有差别。我们认为，PD模块实际上只是一个简单的恢复所学原型的方法，而相对复杂的PL模块使模型容量饱和。</p><h4 id="advantages-of-adaptive-frequency-filter"><a class="markdownIt-Anchor" href="#advantages-of-adaptive-frequency-filter"></a> Advantages of Adaptive Frequency Filter.</h4><p>我们使用两个差异较大的数据集，包括ADE20K和Cityscapes，来探索自适应频率滤波器模块的核心部件。主要原因是ADE20K数据集的上限只有40 mIoU，而Cityscapes的上限是80 mIoU。这两个数据集对不同频率有不同程度的敏感度。我们在表7中报告了每个内部组件的好处。我们发现，DHF单独优于DLF，特别是在Cityscapes数据集上优于2.6 mIoU，而FSK在ADE20K上明显高于DLF和DHF。这表明ADE20K可能更倾向于高频和低频之间的中间状态，而Cityscapes则更需要高频信息。综合实验表明，结合各部分的优势可以稳定地提高ADE20K和Cityscapes的结果。</p><h4 id="frequency-statistics-visualization"><a class="markdownIt-Anchor" href="#frequency-statistics-visualization"></a> Frequency Statistics Visualization.</h4><p>我们首先统计不同阶段的特征频率分布，如图5所示。可以发现，G2和F2的曲线几乎重合，说明聚类后的频率与原始特征中的频率非常相似。G3和F3的情况也是如此。而经过频率自适应滤波后，学习到的原型表示明显改善了所包含的频率信息。在PD修复后，不同的频率成分可以在不同阶段得到强调。如图6所示，我们也分析了AFF模块中核心成分的频率影响。正如预期的那样，DLF和DHF分别表现出强大的低通和高通能力，就像FSK一样。同时，我们还发现，FSK筛选和增强的重要频率成分主要集中在高频部分，但该频率信号比DHF更饱和。这也说明高频分量部分在语义分割任务中尤为重要，因为它更强调物体间的边界细节和纹理差异。同时，根据表7的分析（ADE20K和Cityscapes的效果得到了稳步提升），每个核心组件都有自己的优势，AFF模块在各种类型和复杂场景中表现出强大的鲁棒性。</p><h4 id="speed-and-memory-costs"><a class="markdownIt-Anchor" href="#speed-and-memory-costs"></a> Speed and Memory Costs.</h4><p>同时，我们在表8中报告了城市景观数据集的速度。我们可以发现，所提出的模型提高了10 FPS，在这种高分辨率的城市景观图像上的表现比Segformer好很多。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426155135820.png" alt="image-20230426155119202" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230426155119202.png" alt="image-20230426155135820" /></p><h2 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h2><p>在本文中，我们提出了AFFormer，一个无头的轻量级语义分割具体架构。其核心是从频率角度学习聚类原型的局部描述表示，而不是直接学习所有的像素嵌入特征。它去掉了复杂的解码器，同时拥有线性复杂度转化器，实现了语义分割与常规分类一样简单。各种实验表明，AFFormer在低计算成本的情况下拥有强大的准确性和极大的稳定性和鲁棒性。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Automatic-Classification-and-Segmentation-of-Teeth-on-3D-Dental-Model-Using-Hierarchica-Deep-Learning-Network</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Automatic-Classification-and-Segmentation-of-Teeth-on-3D-Dental-Model-Using-Hierarchical-Deep-Learning-Networks/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Automatic-Classification-and-Segmentation-of-Teeth-on-3D-Dental-Model-Using-Hierarchical-Deep-Learning-Networks/</url>
      
        <content type="html"><![CDATA[<h1 id="automatic-classification-and-segmentation-of-teeth-on-3d-dental-model-using-hierarchical-deep-learning-network"><a class="markdownIt-Anchor" href="#automatic-classification-and-segmentation-of-teeth-on-3d-dental-model-using-hierarchical-deep-learning-network"></a> Automatic Classification and Segmentation of Teeth on 3D Dental Model Using Hierarchical Deep Learning Network</h1><p><a href="zotero://open-pdf/library/items/J2TQUQN8">Automatic Classification and Segmentation of Teeth on 3D Dental Model Using Hierarchical Deep Learning Network</a></p><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>为了解决现有方法效率低、交互操作复杂、人工干预程度高的问题，我们提出了一种基于稀疏体素八叉树和三维卷积神经网络（CNN）的新方法，对三维牙齿模型进行分割和分类。首先，提出了利用两级分层特征学习的牙齿分类方法，以解决高度相似的牙齿类别中的错误分类问题。其次，我们利用基于深度卷积特征的改进的三层分层分割方法，**分别对牙龈和牙间进行分割，并利用条件随机场模型来细化牙龈边缘和牙间融合区的边界。**实验结果表明，Level_1网络的分类精度为95.96%，Level_2网络的平均分类精度为88.06%，牙齿分割的精度为89.81%。与现有的最先进的方法相比，所提出的方法具有更高的准确性和普适性，在计算机辅助正畸治疗诊断方面具有很大的应用潜力。</p><h2 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1. 介绍</h2><p>从三维牙齿模型中分割出单个牙齿是计算机辅助正畸系统的一项关键技术。错颌畸形是一种常见的口腔疾病，发病率很高，其发病率约为50%[1]。牙科模型在临床正畸诊断中发挥着重要作用。它们可以真实地展现错颌畸形患者的三维解剖结构，以及牙齿的形状和位置分布，通过对牙齿模型的提取、移动和重新排列，协助牙医设计出高效、准确的牙齿治疗方案[2], [3]。因此，牙齿分割是许多口腔医学研究过程中的核心步骤，是计算机辅助牙科诊断和治疗的基础。</p><p>随着计算机硬件和软件技术的提高，出现了许多商业化的正畸CAD/CAM软件，如3Shape、Implant3D和OrthoCAD等，这些软件在一定程度上可以实现牙齿的自动分割。但是，由于正畸CAD系统交互操作的复杂性和高度的人工干预，其分割效率较低。正畸患者通常会出现牙合不齐、相邻牙齿之间拥挤错位、牙齿缺失和牙齿边界不清晰等症状。为了解决这个问题，研究人员试图通过改进和优化算法来实现牙齿的自动分割，但这些算法缺乏鲁棒性，分割效果不甚理想。Kondo等人[4]根据三维牙科模型和牙弓的形状计算出的范围图像信息，提取出牙齿的分割轮廓。Grzegorzek等人[5]提出了一种基于二维模型的轮廓检索算法的多阶段方法，用于从牙列表面进行牙齿分割。Poonsri等人[6]提出了一种通过牙齿区域识别和模板匹配的方法从全景牙科X射线图像中分割牙齿。然而，这些方法对于不规则的牙齿排列和不明显的牙齿边界的牙齿分割是不可靠的，而且这些方法不能准确表达牙齿的三维形状。因此，出现了许多基于三维牙齿模型的分割方法。Li等人[2]提出了一种基于快速行进分水岭和阈值控制方法的交互式牙齿分割方法。Wu等人[7]和Yuan等人[8]采用形态学骨架操作来优化特征区域和识别牙齿边界，取得了良好的分割效果。Kumar等[9]采用最短路径搜索算法和表面曲率场从牙齿模型中分离出牙龈和单个牙齿，但这种方法不适合于牙齿缺失或脱位的情况。对于牙齿边界严重畸形和不清晰的复杂牙齿模型，Zou等人[10]和Li和Wang[11]提出了一种基于谐波场的交互式牙齿分割方法，但该方法需要太多的表面点作为先验。Fan等人[12]提出了一种使用各向异性滤波和聚集聚类来分割和优化牙齿边界的方法，该方法是基于紧凑形状先验技术。尽管对牙齿分割进行了广泛的研究，但由于牙齿形态的特殊性，牙齿和牙龈组织之间的紧密联系，以及牙齿之间的紧密融合，自动和准确的牙齿分割已经变得非常困难。</p><p>近年来，随着深度学习成为计算机视觉领域的研究热点。以CNN为代表的典型深度学习模型具有很强的鲁棒性和普适性，在医学诊断领域取得了突破性进展[13]，[14]。Wang等人[15]提出了一种基于CNN和集合随机森林的监督学习方法，用于视网膜血管的自动分割。Kallenberg等人[16]根据CNN和堆叠卷积自动编码器的特征表达能力，构建了一个卷积稀疏自动编码器（CSAE）模型，应用于乳腺密度分割和乳腺风险评分。Shen等人[17]提出了一个多尺度卷积神经网络（MCNN）架构，用于肺部结节诊断分类，并在结节分类上取得了86.84%的准确率。Kamnitsas等人[18]通过使用平行卷积通路架构，提出了一种多模态脑MRI中脑部病变分割的全自动方法，分割结果超过了人类专家的划分水平。由于深度学习具有从样本数据集中自动学习高层次、更具判别力的特征的能力，研究人员开始关注卷积特征在口腔疾病智能诊断中的应用。基于GoogLeNet Inception v3架构，Lee等人[19]介绍了一种评估深度CNN算法对龋齿检测和诊断的功效的方法。Miki等人[20]采用预先训练好的AlexNet网络对牙科锥形束CT图像进行牙齿类型分类，并成功地从CT切片中提取了包括单颗牙齿的ROI。Xu等人[21]在[22]的基础上设计了一个DCNN架构，用于3D牙科模型分割，并通过结合边界感知简化方法和模糊聚类算法提高了牙齿分割的边界精度。</p><p>在对三维牙齿分割方法研究的基础上，本文提出了一种牙齿模型的自动分割和分类方法，其中使用了稀疏体素八度和条件随机场（CRF）模型。它不仅具有较高的准确性和鲁棒性，而且人工干预和参数调整也较少。据我们所知，这是首次尝试利用基于三维CNN的分层特征学习框架，从三维牙齿模型中自动提取高维特征来分割和分类牙齿类型。更重要的是，所提出的方法对具有各种复杂症状的患者的牙齿模型具有鲁棒性，如牙菌斑、无特征区域、拥挤的牙齿以及缺失的牙齿。具体来说，本研究的主要贡献包括以下几点。</p><ul><li>一个通用的、稳健的牙齿分割和分类框架，对高度相似的牙齿类别达到88.06%的准确率，对单个牙齿分割达到89.81%。</li><li>优化设计的两级分层分类网络架构可以解决高度相似的牙齿类别中的错误分类问题。</li><li>一种改进的基于条件随机场的三级分层分割网络，以细化分割边界，并对患者牙齿的各种复杂畸形具有鲁棒性。</li><li>最后但并非最不重要的是，所提出的模型是灵活和可扩展的，可以再次进行训练以概括新的牙齿样本，这使得该框架能够提高正畸CAD系统的智能水平。</li></ul><h2 id="2-material-and-methods"><a class="markdownIt-Anchor" href="#2-material-and-methods"></a> 2. MATERIAL AND METHODS</h2><h4 id="a-建议的方法概述"><a class="markdownIt-Anchor" href="#a-建议的方法概述"></a> A. 建议的方法概述</h4><p>所提出的基于三维CNN的牙齿分割和分类方法主要包括三个步骤，如图1所示。</p><ul><li>(1) 数据预处理阶段，采用稀疏八叉树划分方法对原始牙齿模型进行标注，然后将牙齿模型标注为输入模型（八叉树模型）。</li><li>(2) 牙齿分类阶段，将预处理后的八叉树模型输入到两级分层特征学习网络进行训练，以完成分类任务。第一级网络是一个4标签的分类网络，用于区分门牙、犬牙、前臼齿和臼齿的类型。2级网络是一个2标签的分类网络，用于区分中切牙和侧切牙、第一和第二前臼齿以及第一和第二臼齿的类型。</li><li>(3) 牙齿模型分割阶段，将设计好的具有相似层次的三级层次网络进行训练，分别得到三个具有不同权重参数的caffe模型。</li></ul><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221120142401690.png" alt="image-20221120142401690" /></p><p>牙齿和牙龈的分割由牙齿-牙龈caffemodel完成，然后用另外两个牙齿间caffemodel完成各个牙齿的分割。最后，条件随机场模型被用来优化牙龈边缘和牙齿间融合区域的边界。</p><h4 id="b-数据集预处理"><a class="markdownIt-Anchor" href="#b-数据集预处理"></a> B. 数据集预处理</h4><p>为了验证所提出的自动分割和分类牙齿模型的方法的有效性和准确性。使用高分辨率激光扫描仪（3Shape D700，丹麦）获得质量可靠的三维数字牙科模型，并以PLY格式表示，将扫描的牙科样本随机分为三个子集：训练集、验证集和测试集。</p><p>卷积神经网络通常依靠基于梯度下降法的监督学习方法进行网络训练。当训练数据集足够大时，网络可以表现出更强的特征表达能力和自学功能。但当训练数据集有限时，网络具有较强的样本依赖特性[14]。因此，采用文献[23]，[24]中提到的基于扰动法的虚拟样本生成技术来实现样本扩展，即通过将每个牙齿模型沿直立方向均匀旋转来增加样本数量，提高网络的泛化能力。</p><p>点云模型在分割或分类过程中具有不规则空间关系的特点，因此现有的网络模型不能直接应用于点云模型。传统的基于体素的三维CNN通常使用空间中的全体素来表达模型的三维形状信息，其中采用八叉树的自适应空间划分方法来提高空间利用率。然而，由于内存和计算成本随着八叉树深度的增加而增长（图2），这些方法对于高分辨率的三维模型来说变得过于昂贵[23]。由于内存和计算成本较高，这些基于全体素的CNN被限制在低分辨率的三维模型上。因此，根据哈希方法在数据存储和计算方面的高效率，我们构建了一个基于哈希表的八叉树稀疏表达模型，将牙齿模型处理成带有标签的稀疏点云，并为牙齿和牙龈的点云模型以及模型中的每个点分别设置标签。同时，以八叉树结构中最细的叶子八分位采样的牙齿模型的平均法向量作为输入，方法的效率得到了体现。</p><h4 id="c-网络架构"><a class="markdownIt-Anchor" href="#c-网络架构"></a> C. 网络架构</h4><p>近年来，深度CNN向着更深入、更灵活、更有效的训练方向发展。其目的是为了降低网络的计算复杂度和内存消耗，获得更好的特征表示，因此出现了众多基于点云模型体素化方法的深度学习框架。作为一种典型的深度CNN结构，O-CNN网络在三维模型分类、检索和语义分割方面取得了重大突破[23]。因此，本文通过修改滤波器的大小，扩大O-CNN网络模型的深度，优化网络结构和参数，有效提高了网络模型对牙齿模型的分割和识别能力。具体结构如图3所示。</p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153309472.png" alt="image-20221119174303102" style="zoom:200%;" /><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221120144332672.png" alt="image-20221120144332672" /></p><h5 id="1基于两级分层特征学习的牙齿分类网络"><a class="markdownIt-Anchor" href="#1基于两级分层特征学习的牙齿分类网络"></a> 1）基于两级分层特征学习的牙齿分类网络</h5><p>虽然基于深度卷积神经网络的点云分类已经取得了一些成绩，但仍有不少问题需要进一步完善。针对相似度较高的类别容易产生样本误分类的问题，提出了一种基于两级分层特征学习的牙齿分类方法，进一步提取相似度较高的不同牙齿类型之间的不同特征，提高识别的准确性，网络结构如图1和图3所示。为了体现网络分层结构的优越性，该网络由卷积层、池化层和全连接层交替组成。同时，为了加快分离器网络的训练过程，我们按照’‘卷积+批量归一化（BN）+整流线性单元（ReLU）+池化’'的顺序构建基本单元块结构，如果卷积应用于第d个深度八分位，则用blockd表示。网络结构定义如下。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153325542.png" alt="image-20221119153309472" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153437193.png" alt="image-20221119174433468" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153602124.png" alt="image-20221119174410902" /></p><p>卷积层是整个网络结构的核心。根据其局部连接和权重共享的特点，它可以有效地降低网络的复杂性和训练参数的数量。同时，卷积计算只限于八叉树的叶子八叉，三维卷积表达式定义为：。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153501610.png" alt="image-20221119153325542" /></p><p>其中，f（-）为非线性函数，Pi×Q×R为核大小，ω∈&lt;P×Q×R表示核在（p,q,r）处的权重向量，Oi,j,k表示八叉树的相邻八叉，T（m）（-）表示特征向量的第m个通道，bi,j表示偏置项。为了有效缓解梯度分散现象，我们利用ReLU函数提高网络的稀疏度，并加入BN处理，使网络在训练梯度下降时以更快的速度收敛，进而解决梯度消失的问题。</p><p>作为CNN中的一个重要操作，池化层可以降低三维几何特征的维度，并在一定程度上保持特征的局部平移/旋转不变性。最大池化是最常见的形式，在（S1，S2，S3）中定义为。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153623666.png" alt="image-20221119153437193" /></p><p>其中βx,y,z是下采样系数，μ是在（x×l+i，y×m+j，z×n+k）的值，（l,m,n）表示在（x,y,z）的跨度。</p><p>与卷积层的局部连接不同，深度CNN的最后一层通常是全连接的，被称为全连接层，用于连接分类器层。为了避免过度拟合，全连接层中通常采用Dropout技术，以减少特征之间的相关性，提高模型的泛化能力，然后将转移到输出层的特征送入分类器进行分类和预测。在使用Softmax分类器得到牙齿的预测标签后，通过交叉熵损失函数计算出预测标签与地面真相之间的偏差。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153704991.png" alt="image-20221119153501610" /></p><p>其中pi(x)是实际的概率分布；qi(x)是预测的概率分布。最后，通过反向传播算法调整神经网络的参数，提取牙齿数据集的特征，完成牙齿分类模型的构建。</p><h5 id="2基于深度卷积特征的三层层次化牙齿分割模型"><a class="markdownIt-Anchor" href="#2基于深度卷积特征的三层层次化牙齿分割模型"></a> 2）基于深度卷积特征的三层层次化牙齿分割模型</h5><p>近年来，随着深度学习的发展，基于深度CNN的语义分割技术引起了广泛关注。它主要利用神经网络来完成对点云模型的分割和分类，从而对具有语义信息的元素进行分割。随着语义抽象化和非线性的增加，模型的空间形状信息会随着特征提取而逐层丢失[25]。为了缓解深度网络中梯度消失的问题，Noh等人[26]提出了一个基于深度编码器-解码器网络的语义分割系统。编码器网络与滤波器组进行卷积，提取语义特征并产生一组特征图。解码器网络使用相应编码器特征图的集合指数对其输入的特征图进行上采样（通过去卷积）。解卷积网络[27]是一个无监督的学习模型，由交替的非池化层（池化的反向操作）、解卷积层（卷积核的转置）组成，它也是一个形状发生器，从卷积网络提取的多维特征中产生物体的分割[26]。鉴于牙科模型数据集(N )中的第l个样本是x(l)，第m个通道的成本函数是由三维特征zi k和隐含层中的卷积核fk,m的去卷积操作得到。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153720846.png" alt="image-20221119153602124" /></p><p>其中，gi k,m是一个二进制矩阵，用于连接相邻层之间的三维特征，p表示正则化参数，p=1。</p><p>分层网络框架具有可扩展性和高效率的优点，可以最大限度地利用训练数据集，缓解数据不平衡的问题[28]。参照DeconvNet[29]和O-CNN结构[23]的构建理想，本文构建了一个基于编码器-解码器结构的层次化分割网络架构，该架构更适合于牙齿模型分割。该网络结构如图3所示。分割网络由类似于分类模型的结构定义如下。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153837459.png" alt="image-20221119153623666" /></p><p>这里block′d表示去卷积操作，即’‘unpooling + deconvolution + BN + ReLU’'。虽然通过去卷积运算和特征指数补偿技术解决了解码网络中网络梯度消失的问题，但在上采样运算时，特征补偿的连续性较低，导致在牙龈边缘和牙间融合区出现锯齿状边缘。</p><h4 id="d-分割边界细化和后处理"><a class="markdownIt-Anchor" href="#d-分割边界细化和后处理"></a> D. 分割边界细化和后处理</h4><p>基于深度CNN的目标区域分割算法可以获得点云模型的高层语义信息，从分割结果来看，<strong>目标物体的主要部分可以被分割出来。但是，由于没有考虑模型的局部细节特征，预测结果容易产生粗糙和不准确的分割边缘。现有的基于深度CNN的分割方法对于点云模型的边界分割是低效的。为了解决这个问题，我们利用密集CRF技术[30]来细化牙龈边缘和牙齿间融合区域的边界，并获得分割-化区域的局部细节特征。</strong></p><p>我们把牙科点云表示为{pi}N i=1，把每个点的法线表示为{ni}N i=1。标签集L由每个点的标签li组成，li∈（0，…k），k≤4。相应的吉布斯能量函数构造为：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119174433468.png" alt="image-20221119153704991" /></p><p><img src="https://alist988.tocmcc.cn/d/images/image-20221119174433468.png" alt="image-20221119153704991" /></p><p>其中i，j∈[1，N]，φi(li)=-log(p(xi))是单值能量，用于表示相应点的类别，其中p(x)是神经网络产生的标签概率。φij(li,lj)是配对势能，用于结合邻居数据信息来完善输出。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119153950632.png" alt="image-20221119153720846" /></p><p>其中μ(xi,xj)是标签兼容性函数，km是高斯函数，ωm是与km对应的线性组合权重。最后，我们做能量函数优化来平滑分割边界，然后进行点云重建和反投影，得到最终的分割结果。</p><h2 id="3-实验和结果"><a class="markdownIt-Anchor" href="#3-实验和结果"></a> 3. 实验和结果</h2><h4 id="a参数设置"><a class="markdownIt-Anchor" href="#a参数设置"></a> A.参数设置</h4><p>为了客观地记录牙齿模型的表面形态特征，同时保证高图形内存和计算效率，我们利用了一个8深度的八叉树结构来表达牙齿模型的三维细节。构建了7个基本单元块用于牙齿特征提取，其中卷积和解卷积的核大小被设置为3×3×3，并以1的步长应用，最大集合大小被设置为2×2×2。 此外，在每次卷积之后都采用ReLU函数和BN来提高网络特征学习能力。参照图1中的分层齿形分类网络结构，Level-1网络的全连接层的神经元数量被设置为128个和4个，Level2网络的最后一个块的神经元数量分别被设置为128个、128个和2个。全连接层输出的高维特征表示被输入到Softmax分类器中，以预测牙齿结构的类别概率。参照牙齿分割框架，牙齿模型的分割类别数量被设置为2∼4。此外，在分割网络中加入了跳层连接，以传递三维卷积的几何细节，去卷积操作的权重与相应的卷积层的权重相联系。</p><p>正如在数据集预处理部分所介绍的，我们从扫描的牙齿石膏模型中共提取了600个牙齿模型，从每个牙齿模型中分割出来的牙齿都被用作分类网络的训练样本数据集。为了增加样本数据集，我们进一步将训练和验证数据集从0到360◦沿Z轴分别旋转60◦和36◦步。我们用没有旋转的数据集I、旋转60◦的数据集II和旋转36◦的数据集III来比较分割和分类的结果。三个样本数据集的数量列于表1。</p><p>在本文中，我们采用随机梯度下降算法来训练三维CNN网络模型，这样学习率可以随着网络梯度的变化而自适应调整，其中我们设定最大迭代次数为10000次，初始学习率为0.01，每1000次迭代后下降10倍，辍学率为0.5，批次大小为12。</p><h4 id="b-实验结果和评价"><a class="markdownIt-Anchor" href="#b-实验结果和评价"></a> B. 实验结果和评价</h4><h5 id="我们进行了一些实验来验证我们方法的优越性我们的网络模型是用caffe框架31在英特尔r白金8168处理器270ghz和geforce-gtx-1080ti-gpu上训练的-1-classification-performance-with-different-network-layers"><a class="markdownIt-Anchor" href="#我们进行了一些实验来验证我们方法的优越性我们的网络模型是用caffe框架31在英特尔r白金8168处理器270ghz和geforce-gtx-1080ti-gpu上训练的-1-classification-performance-with-different-network-layers"></a> 我们进行了一些实验来验证我们方法的优越性，我们的网络模型是用Caffe框架[31]在英特尔（R）白金8168处理器（2.70GHz）和GeForce GTX 1080Ti GPU上训练的。1) CLASSIFICATION PERFORMANCE WITH DIFFERENT NETWORK LAYERS</h5><p>传统的二元分类器通常采用准确性（A）、特异性（S）和召回率（R）三个评价指标来验证分类结果。对于不平衡牙齿数据集的K分类问题，通过宏观准确率（MA）、宏观特异性（MS）和宏观召回率（MR）来验证牙齿分类网络的可行性和有效性。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119174303102.png" alt="image-20221119153837459" /></p><p>其中，真阳性（TP）表示正确识别为目标类型的牙齿类型的数量，假阳性（FP）表示错误识别为目标类型的牙齿类型的数量，假阴性（FN）表示原本属于这个类别但被误判的牙齿类型的数量，真阴性（TN）表示不属于这个类别且没有误判的牙齿类型的数量。</p><p>我们选择七个牙齿类型作为分类对象，它们是中切牙、侧切牙、犬齿、第一前臼齿、第二前臼齿、第一磨牙和第二磨牙。由于样本数量较少，第三磨牙被排除在牙齿分类任务之外。在牙齿分类任务中，不同牙齿类型之间的相似性是不同的，样本通常被错误地分类为高度相似的类别。为了区分高度相似的牙齿类别，我们利用梯度下降法使损失函数最小化来微调网络参数，并通过反复迭代训练提高分类器的分类性能。第1级网络（4类）用于对牙齿类型进行分类，以获得所有牙齿类别的一般特征和具有高相似度的牙齿类别。Level-2网络（2类）是通过增加预分类网络的全连接层数来构建的，网络的特征表达和特征自学习能力得到提高。我们使用预分类网络中的模型参数来初始化Level-2网络，然后获得相似度较高的牙齿数据集的具体特征。表2总结了不同数据集和级别的测试结果的评价指标。</p><p>从表2可以看出，一级网络的测量指标值要高于二级网络。因为不同类别之间的特征复杂度不同，网络的学习能力也不同，所以Level-1网络的分类精度略好于Level-2网络。我们还发现，用DatasetIII训练的网络在三个测量指标上都能得到最高值，这说明深度学习的特征分类准确率与训练样本的数量有关，通过使用虚拟样本生成技术可以进一步提高我们网络的准确性。同样有趣的是，DatasetIII有很好的准确性，它在85.63%以上。最后，我们可以从宏观召回和宏观特异性中看到，不平衡的牙齿数据集对我们网络的学习能力影响不大，这说明网络具有较高的鲁棒性。</p><p>为了进一步测试层次分类网络是否对网络的深度敏感，我们将块设置为不同的大小，保持其他参数不变，并将DatasetIII数据集的分类精度绘制在图4中。</p><p>在图4中，我们显示分类网络的性能随着层数的增加而逐渐提高。它显示，当基本单元块大小为7时，Level-1网络获得了95.96%的最高准确率，Level-2网络获得了86.01%的平均准确率。 然而，由于不平衡牙齿数据集中门牙的数量较少，分类准确率相对较低。最后，结果表明，深度网络结构可以在高层表达中获得更多抽象的特征。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221120144840920.png" alt="image-20221120144840920" /></p><h5 id="2-牙齿分割的有效性"><a class="markdownIt-Anchor" href="#2-牙齿分割的有效性"></a> 2) 牙齿分割的有效性</h5><p>牙科模型由牙齿和牙龈组成，然而，牙科模型中大约50%的点云属于牙龈，其余部分由不同的牙齿类型组成，产生了一个严重的不平衡标签分布问题。为了解决这个问题，我们设计了一个分层的牙齿分割架构。为了验证所提出的牙齿分割网络工作的有效性和鲁棒性，我们采用了具有不同程度牙齿畸形的患者的牙齿模型来测试网络性能。考虑到牙齿模型的不完全对称性和避免增加网络训练的负担，我们将每个牙齿模型分为4个部分进行训练（Seg-2网络），即左磨牙和前磨牙、左门牙和犬齿、右磨牙和前磨牙、右门牙和犬齿，如图1所示。在本文中，图3所示的训练好的分割网络被用来分割牙龈边缘和牙齿间的融合区域。我们通过Seg-1网络（牙齿-牙龈caffemodel）来分割牙齿和牙龈，然后用Seg-2和Seg-3网络（牙齿间caffemodel）来完成各个牙齿的分割。为了定量分析牙齿模型的分割结果，我们采用准确性来直接评价我们的网络性能。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221119174410902.png" alt="image-20221119153950632" /></p><p>其中，ap是正确预测的点p的数量，lp表示预测的标签，fp(-)表示lp的参数函数，如果预测正确，则等于1，否则为0。测试的准确性是其正确分割目标区域的能力，这也是评估我们的网络分割牙龈边缘和牙齿间融合区域的第一个标准。具体来说，图5报告了DatasetIII数据集上每200次迭代的训练精度。我们可以看到，随着迭代次数的增加，分割精度普遍提高。尽管由于训练样本的不同，迭代次数存在小的波动，但我们的分割网络训练逐渐收敛。它表明，当迭代数为6800时，Seg3网络达到了最高的准确性，即89.81%。因此，一旦网络训练完成，我们用它来获得新的牙齿样本的分割。</p><p>为了评估我们方法的有效性和3D CNN框架的推理能力，我们与[23]中的O-CNN(8)模型和[32]中的PointNet模型进行了比较，这两个模型在任意牙齿模型中表现非常好。从表3中，我们可以发现，我们的方法在分割所有牙齿和牙龈方面比其他方法有明显的优势。</p><p>图6显示了牙齿分割的测试结果。它表明，CRF技术有效地减少了牙龈边缘和牙齿间融合区域边界的不一致，而且分割后的边界更接近于地面真实。</p><h2 id="4-discussion"><a class="markdownIt-Anchor" href="#4-discussion"></a> 4. DISCUSSION</h2><p>计算机辅助正畸技术是口腔医学和计算机科学的结合。它的临床应用改变了传统的主要依靠医生的经验和病人的主观感觉来确定治疗方案的正畸方法。作为计算机辅助正畸系统的一个重要步骤，牙齿分割的主要任务是从病人的数字牙齿模型中准确定位、识别和提取牙齿。由于牙齿形状复杂，牙齿排列也因人而异，因此自动分割单个牙齿并不是一项简单的任务。然而，深度学习在医疗诊断中的成功应用已经证明了它在减少劳动成本和人工干预方面的优势。此外，使用CNN的特征自学习能力可以极大地提高网络的准确性和效率。这对于提高义齿修复CAD系统的智能化水平也具有重要意义。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AXIAL-ATTENTION</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Axial-attention/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Axial-attention/</url>
      
        <content type="html"><![CDATA[<h1 id="axial-attention"><a class="markdownIt-Anchor" href="#axial-attention"></a> AXIAL ATTENTION</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> ABSTRACT</h2><p>We propose Axial Transformers, a self-attention-based autoregressive model for images and other data organized as high dimensional tensors. Existing autoregressive models either suffer from excessively large computational resource requirements for high dimensional data, or make compromises in terms of distribution expressiveness or ease of implementation in order to decrease resource requirements. Our architecture, by contrast, maintains both full expressiveness over joint distributions over data and ease of implementation with standard deep learning frameworks, while requiring reasonable memory and computation and achieving state-of-the-art results on standard generative modeling benchmarks. Our models are based on axial attention, a simple generalization of self-attention that naturally aligns with the multiple dimensions of the tensors in both the encoding and the decoding settings. Notably the proposed structure of the layers allows for the vast majority of the context to be computed in parallel during decoding without introducing any independence assumptions. This semi-parallel structure goes a long way to making decoding from even a very large Axial Transformer broadly applicable. We demonstrate state-of-the-art results for the Axial Transformer on the ImageNet-32 and ImageNet-64 image benchmarks as well as on the BAIR Robotic Pushing video benchmark. We open source the implementation of Axial Transformers.</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 INTRODUCTION</h2><p>Autoregressive models are a family of exact likelihood-based generative models that represent the joint distribution of data x = (x1, . . . , xN ) as a product of conditionals pθ(x) = ∏N i=1 pθ(xi | x&lt;i). Neural network models in this family have achieved state-of-the-art log likelihoods on highdimensional image and video datasets (van den Oord et al., 2016a; Chen et al., 2018; Menick &amp; Kalchbrenner, 2018; Parmar et al., 2018; Child et al., 2019; Weissenborn et al., 2019; Salimans et al., 2017; Kalchbrenner et al., 2017; Uria et al., 2016; Parikh et al., 2016; Theis &amp; Bethge, 2015; van den Oord et al., 2016b) due to architectural innovations that enable the following capabilities:</p><ol><li>Large, high information bandwidth receptive fields for each pixel xi, capable of expressing long-range dependencies over previous pixels x&lt;i, and</li><li>Computationally efficient, vectorizable computation of the log likelihood and its gradient.</li></ol><p>Autoregressive model architectures that can read long-range dependencies over large receptive fields are able to express all joint distributions over the data. Meanwhile, architectures that admit fast log likelihood gradient computation are suitable for training using a stochastic gradient method on a maximum likelihood objective—a straightforward, stable training procedure for generative models.</p><p>These desiderata make self-attention a compelling building block for autoregressive model architectures. Self-attention is a neural network operation that is able to transform a sequence y1, . . . , yN into a sequence y′ 1, . . . , y′ N , where each y′ i depends on all yi by way of a single vectorizable computation (Vaswani et al., 2017). Self-attention is remarkably effective at learning long-range dependencies between data dimensions and neural networks that incorporate self-attention in their designs are state-of-the-art on many tasks from language modelling and machine translation to image and video modelling (Parmar et al., 2018; Child et al., 2019).</p><p>But the power of self-attention comes at the price of computational complexity. The memory and computation it consumes grow quadratically with the sequence length N making it prohibitively expensive to directly apply self-attention to long sequences. In the case of autoregressive models of multidimensional tensors such as images or videos, the aim to capture large receptive fields in multiple dimensions further exacerbates the problem as even a modest number of receptive field steps in each dimension can encompass a large total number of locations. Various approaches have been proposed to alleviate this difficulty at the cost of either limiting the receptive field or requiring operations that may not be broadly available on GPUs or TPUs.</p><p>We propose the Axial Transformer, a simple yet effective self-attention-based autoregressive model for data organized as multidimensional tensors. Rather than applying attention to a flattened string of tensor elements, our model instead applies attention along a single axis of the tensor without flattening—we refer to this as “axial attention.” Since the length of any single axis (that is, the height or width of an image) is typically much smaller than the total number of elements, an axial attention operation enjoys a significant saving in computation and memory over standard self-attention: for a d-dimensional tensor with shape N = N 1/d × · · · × N 1/d, axial attention saves a O(N (d−1)/d) factor of resources over standard self-attention.</p><p>Our Axial Transformer architecture allows for the majority of the context x&lt;i to be embedded with a high degree of parallelism without introducing conditional independence assumptions among any of the locations, but has an interesting property that it is amenable to a simple-to-implement fast sampling procedure. To sample one row of an image, the Axial Transformer only runs an autoregressive Transformer over that one row only, without re-embedding pixels from previous rows. We structure the Axial Transformer, however, so that it always defines a fully expressive joint distribution. No dependencies on previous pixels are ever lost.</p><p>We evaluate Axial Transformers on image and video modelling benchmarks. We show that Axial Transformer achieves state-of-the-art results on ImageNet-32 and on ImageNet-64. We also show that, simply by stacking a video along the channel dimension, the Axial Transformer can be directly applied to the channel-stacked video without nearly any modification. On the BAIR Robot Pushing benchmark, the Axial Transformer significantly outperforms previous results without using an architecture specially designed for videos. The generated samples on these datasets are of the expected high quality.</p><p>Axial Transformers do not require subroutines for GPUs or TPUs that may exhibit unfavorable memory bandwidth and computation trade-offs. Axial Transformers are simple to implement using efficient operations that are widely available in deep learning frameworks (primarily dense-dense MatMuls). An open source implementation of our models is available at anonymized URL.</p><h2 id="2-background"><a class="markdownIt-Anchor" href="#2-background"></a> 2 BACKGROUND</h2><p>To set the stage for our discussion, we first review self-attention and its computational resource requirements in the context of autoregressive modeling. A self-attention layer takes as input a length N sequence of D-dimensional embeddings X (a N × D matrix) and produces an output sequence Y (also a N × D matrix) via:</p><p>WQ, WK , and WV are D × D parameter matrices responsible for projecting the entries of the sequence X into keys, queries, and values, respectively. Each entry of the output sequence Y is a linear combination of values in V weighted by the attention matrix A, which itself is computed from similarities between all pairs of query and key vectors. Both the expressive power and the resource cost of self-attention come from computing A and Y : it takes O(N 2) time and space to compute the pairwise similarities between Q and K and to compute the linear combination of V vectors.</p><p>This quadratic complexity makes it impractical to apply self-attention to images and videos directly as flattened vectors: a small 32×32×3 image has 3072 dimensions. Sequences such as these are too long for self-attention, so attempts to scale self-attention to these modalities generally involve restricting these sequence lengths in a modality-aware manner while attempting to preserve modeling performance.</p><p>One strategy is to restrict the conditioning context x&lt;i to a carefully designed small subset of the data dimensions. While this reduces the cost of attention, which is only performed over these small subsets instead of the full data, the model can no longer express all joint distributions over the data. Parmar et al. (2018) propose image models with conditioning context x&lt;i restricted to a small window of the full image, but the implementation requires redundant data copies to extract and process these windows. Weissenborn et al. (2019) similarly scale video autoregressive models by restricting the context, again preventing their model from expressing all joint distributions over pixels. Our models do not restrict context and hence we obtain better log likelihoods, as we will see in section 4.</p><p>A different strategy is to stack multiple sparse attention layers, each with restricted context for computational efficiency, but in a manner that overlapping these layers yields a full-context model. Child et al. (2019) propose two sparse attention patterns with this property. However, the architecture they propose that works best for images (the Strided Sparse Transformer) requires custom sparse attention GPU kernels to implement a specific block-sparse variant of matrix-matrix-multiply. The model cannot be easily implemented on other hardware such as TPUs.</p><p>See table 1 for a summary of these architecture design tradeoffs. Our goal in this paper is to design attention-based autoregressive models that attain the best of all worlds. Our Axial Transformer, described in subsequent sections, has a full conditioning context, so its ability to express joint distributions is never limited. The Axial Transformer also does not require any redundant data copies or custom kernels to implement in an efficient way. Indeed, we designed, and will make open source, an efficient implementation that uses only standard operations in deep learning libraries.</p><h2 id="3-axial-transformers"><a class="markdownIt-Anchor" href="#3-axial-transformers"></a> 3 AXIAL TRANSFORMERS</h2><p>现在，我们将介绍轴向Transformer，这是我们为高维数据张量设计的基于自我关注的自回归模型。我们将在第 3.1 节中描述其基本构件，然后在第 3.2 节中完成对完整自回归模型的描述。</p><h3 id="31-axial-attention"><a class="markdownIt-Anchor" href="#31-axial-attention"></a> 3.1 AXIAL ATTENTION</h3><p>我们首先介绍了为高维数据张量开发基于自注意的自回归模型的基本构件。</p><p>我们提出的方法不改变多维数据张量的原始形状，每次只对张量的一个轴执行屏蔽或非屏蔽注意。我们称这种操作为轴向注意力，用 $Attention_k(x) $表示。它对张量 $x <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>的轴</mtext></mrow><annotation encoding="application/x-tex">的轴</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">轴</span></span></span></span> k <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>执行关注，混合轴</mtext></mrow><annotation encoding="application/x-tex">执行关注，混合轴</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">注</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">混</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">轴</span></span></span></span> k <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>上的信息，同时保持其他轴上的信息独立。它的实现非常简单：可以通过将除</mtext></mrow><annotation encoding="application/x-tex">上的信息，同时保持其他轴上的信息独立。它的实现非常简单：可以通过将除</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">保</span><span class="mord cjk_fallback">持</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span><span class="mord cjk_fallback">轴</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">独</span><span class="mord cjk_fallback">立</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">它</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">将</span><span class="mord cjk_fallback">除</span></span></span></span> k $轴以外的所有轴转置到批处理轴，作为子程序调用标准注意力，然后撤销转置（另一种方法是使用大多数深度学习库中的 einsum 操作）来实现对 k 轴的轴向注意力。</p><p>当数据是图像时，我们称<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Attention_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为列注意力，因为它可以混合列内的信息，同时保持独立列的独立性。出于类似的原因，我们将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">Attention_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 称为行注意力。在大小为$ N = S \times S $的正方形图像上，轴向注意力对长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 个序列执行注意力–这总共需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>S</mi><mo>⋅</mo><msup><mi>S</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><msqrt><mi>N</mi></msqrt><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(S \cdot S^2) = O(N \sqrt{N} )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.176665em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9266650000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-2.886665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11333499999999996em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的计算量与标准自我注意力相比，计算量节省了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msqrt><mi>N</mi></msqrt><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\sqrt{N})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.176665em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9266650000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-2.886665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11333499999999996em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。一般来说，对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><msup><mi>S</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">N = S^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span> 的 $d $维张量，轴向注意力比标准注意力节省 $O(N^{(d-1)/d}) $计算量。当然，沿着某个轴 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>​ 的单层轴向注意并不具有完整的感受野，因为它只覆盖了一个轴，但我们将在第 3.2 节中看到，堆叠两个轴向注意层可以让模型获得一个全局感受野。</p><p><img src="C:%5CUsers%5C86187%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240325125423736.png" alt="image-20240325125423736" /></p><blockquote><p>图 2：轴向注意力层的类型是轴向转换器的组成部分。蓝色位置与输出红色位置的感受野相对应。</p></blockquote><p>重要的是，我们还要定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>a</mi><mi>s</mi><mi>k</mi><mi>e</mi><mi>d</mi><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">MaskedAttention_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">Attention_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的因果掩蔽变体：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>a</mi><mi>s</mi><mi>k</mi><mi>e</mi><mi>d</mi><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MaskedAttention_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>结果中沿$ k <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>轴的</mtext></mrow><annotation encoding="application/x-tex">轴的</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">轴</span><span class="mord cjk_fallback">的</span></span></span></span> i <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>分量只取决于沿</mtext></mrow><annotation encoding="application/x-tex">分量只取决于沿</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">决</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">沿</span></span></span></span> k $轴的 $x $的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">1,\ldots,i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span>， 图 2 展示了这些注意力模式的感受野，包括未屏蔽和屏蔽注意力模式。我们将在第 3.2 节中使用这些屏蔽块来建立我们的自回归模型。</p><p>轴向注意力可以直接用于标准Transformer层，从而产生轴向Transformer层。其基本构建模块与标准Transformer架构中的模块相同：</p><ul><li><p>D 表示输出激活的维度。如果输入具有 H × W × C 的形状，那么该操作与 1 × 1 卷积相同，输出具有 H × W × D 的形状。</p></li><li><p>我们利用这些定义了在 D 维嵌入张量上运行的 ResNet 轴向注意块（Vaswani 等人，2017 年；Child 等人，2019 年）：</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>FeedforwardBlock</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><msub><mtext>Dense</mtext><mi>D</mi></msub><mo stretchy="false">(</mo><mtext>Nonlinearity</mtext><mo stretchy="false">(</mo><msub><mtext>Dense</mtext><msup><mi>D</mi><mo mathvariant="normal">′</mo></msup></msub><mo stretchy="false">(</mo><mtext>LayerNorm</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{FeedforwardBlock}(x)=x+\text{Dense}_D(\text{Nonlinearity}(\text{Dense}_{D^\prime}(\text{LayerNorm}(x)))))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">FeedforwardBlock</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">Dense</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">Nonlinearity</span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Dense</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">LayerNorm</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AttentionBlockk</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><msub><mtext>Dense</mtext><mi>D</mi></msub><mo stretchy="false">(</mo><msub><mtext>Attention</mtext><mi>k</mi></msub><mo stretchy="false">(</mo><mtext>LayerNorm</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{AttentionBlockk}(x) = x + \text{Dense}_D(\text{Attention}_k(\text{LayerNorm}(x)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">AttentionBlockk</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">Dense</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Attention</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">LayerNorm</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>​</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>TransformerBlock</mtext><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><msub><mtext>Dense</mtext><mi>D</mi></msub><mo stretchy="false">(</mo><msub><mtext>Attention</mtext><mi>k</mi></msub><mo stretchy="false">(</mo><mtext>LayerNorm</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{TransformerBlock}_k(x) = x + \text{Dense}_D(\text{Attention}_k(\text{LayerNorm}(x)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">TransformerBlock</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">Dense</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Attention</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">LayerNorm</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></li></ul><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">D^\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span> 被选择为比 $D $大的某个常数因子，从 1 到 4 不等（Vaswani 等人，2017）。我们还定义了一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>MaskedTransformerBlock</mtext><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\text{MaskedTransformerBlock}_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">MaskedTransformerBlock</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>MaskedAttention</mtext><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\text{MaskedAttention}_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">MaskedAttention</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代替 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>Attention</mtext><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\text{Attention}_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">Attention</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>在计算机视觉的其他情况下，也有人提出了类似于无掩蔽轴向注意力的操作（Huang 等人，2019 年）。在接下来的章节中，我们将重点讨论掩蔽轴向注意力的使用及其在自回归图像建模中的实用性，而这些作品并未对此进行探讨。</p><h3 id="32-axial-transformers"><a class="markdownIt-Anchor" href="#32-axial-transformers"></a> 3.2 AXIAL TRANSFORMERS</h3><p>We now describe Axial Transformers, our axial attention-based autoregressive models for images and videos. We will use the axial attention operations described in section 3.1 as building blocks in a multi-layer autoregressive model of the form pθ(x) = ∏N i=1 pθ(xi | x&lt;i) following the raster scan ordering of pixels. We will accomplish this by building an autoregressive model over rows (section 3.2.1), then conditioning each row on previous rows (section 3.2.1), then further conditioning on previous channels and frames (section 3.2.2). Decomposing the model in this manner also leads to a simple fast and partly parallel sampling procedure (section 3.2.1).</p><h4 id="321-a-model-for-single-channel-images"><a class="markdownIt-Anchor" href="#321-a-model-for-single-channel-images"></a> 3.2.1 A MODEL FOR SINGLE-CHANNEL IMAGES</h4><p>We begin with an autoregressive model for a single-channel image x with shape H × W , with each pixel taking an integer value in [0, 255] representing its intensity. As is standard practice with Transformers, pixel intensities are first embedded into a H × W × D tensor of D-dimensional embeddings, which we call h. The architecture’s responsibility is to transform h into a H ×W ×256 tensor of logits suitable for classification or sampling. These logits must depend only on previous pixels in the input x along the raster scan ordering to ensure that the architecture defines a valid autoregressive model.</p><p>Inner Decoder: a row-wise model Our idea is to begin with masked row attention layers to create a “row-wise” model:</p><p><img src="images/image-20240306151527582.png" alt="image-20240306151527582" /></p><p>Here, Lrow is the number of masked row attention blocks applied to h. PositionEmbeddings is a H × W × D tensor of position embeddings that inform the attention layers of the position. For parameter efficiency we use “additively factorized” position embeddings, meaning that we parameterize them as a broadcasted sum of H × 1 × D embeddings for rows and 1 × W × D embeddings for columns.</p><p>The operation ShiftRight shifts the input right by one pixel, which has the effect of shifting the receptive field left by one pixel. This ensures that the masked row attention layers exclude the current pixel from their receptive field, which is crucial for architecture to define a correct autoregressive model.</p><p>As this model employs row attention only, it enjoys the computational efficiency benefits described in section 3.1. However, it clearly does not define a full-context model because each location in the output does not depend on input pixels in previous rows. If we were to use the resulting h as logits for pixel intensity prediction, we would obtain a set of H independent autoregressive models p(xi,j|xi,1, . . . , xi,j−1) for each row i ∈ [1, H], not a single autoregressive model with full context. We address this issue next.</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CA</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CA/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CA/</url>
      
        <content type="html"><![CDATA[<h1 id="coordinate-attention-for-efficient-mobile-network-design"><a class="markdownIt-Anchor" href="#coordinate-attention-for-efficient-mobile-network-design"></a> Coordinate Attention for Efficient Mobile Network Design</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>最近关于移动网络设计的研究已经证明了通道注意（如SE注意力机制）对于提高模型性能的显著效果，但他们通常忽略了位置信息，而位置信息对于生成空间选择性注意图是很重要的。在本文中，我们提出了一种新的移动网络注意机制，将位置信息嵌入到通道注意中，我们称之为 “坐标注意”。与通过二维全局汇集将特征张量转化为单一特征向量的通道注意不同，坐标注意将通道注意分解为两个一维特征编码过程，分别沿两个空间方向汇集特征。通过这种方式，可以沿一个空间方向捕获长距离的依赖性，同时可以沿另一个空间方向保留精确的位置信息。然后，产生的特征图被分别编码为一对方向感知和位置敏感的注意图，它们可以互补地应用于输入特征图，以增强对感兴趣的物体的表征。我们的坐标注意很简单，可以灵活地插入到经典的移动网络中，如MobileNetV2、MobileNeXt和EfficientNet，几乎没有计算开销。大量的实验表明，我们的坐标注意不仅有利于ImageNet的分类，而且更有趣的是，在下游任务中表现得更好，如物体检测和语义分割。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>用于告诉模型 &quot;什么 &quot;和 &quot;哪里 &quot;需要注意的注意机制已经被广泛研究[47, 29]，并被广泛用于提高现代深度神经网络的性能[18, 44, 3, 25, 10, 14]。然而，它们在移动网络中的应用（模型大小有限）明显落后于大型网络的应用[36, 13, 46]。这主要是因为大多数关注机制所带来的计算开销是移动网络所不能承受的。</p><p><img src="images/image-20230425211442800.png" alt="image-20230425211442800" /></p><blockquote><p>图2. 提出的坐标注意块（c）与经典的SE通道注意块[18]（a）和CBAM[44]（b）的示意图比较。这里，&quot;GAP &quot;和 &quot;GMP &quot;分别指的是全局平均池和全局最大池。X平均池 &quot;和 &quot;Y平均池 &quot;分别指的是一维水平全局池和一维垂直全局池。</p></blockquote><p>考虑到移动网络的计算能力有限，到目前为止，最流行的移动网络关注机制仍然是挤压和激发（SE）关注[18]。它在二维全局池的帮助下计算信道注意力，并以相当低的计算成本提供明显的性能提升。然而，SE注意只考虑了通道间信息的编码，而忽略了位置信息的重要性，而位置信息对于捕捉视觉任务中的物体结构至关重要[42]。后来的工作，如BAM[30]和CBAM[44]，试图通过减少输入张量的通道维度来利用位置信息，然后使用卷积计算空间注意力，如图2（b）所示。然而，卷积只能捕捉到局部关系，而不能模拟对视觉任务至关重要的长距离依赖关系[48, 14]。</p><p>为了使移动网络能够在大的区域内进行关注，同时避免产生大量的计算开销，我们建议将位置信息嵌入通道关注中，以建立高效的关注机制。为了缓解二维全局集合引起的位置信息损失，我们将通道注意分解为两个平行的一维特征编码过程，以有效地将空间坐标信息整合到生成的注意图中。具体来说，我们的方法利用两个一维全局池化操作，将沿垂直和水平方向的输入特征分别聚集到两个独立的方向感知特征图中。然后，这两个具有嵌入式方向特定信息的特征图被分别编码为两个注意力图，每个注意力图都捕捉到输入特征图沿一个空间方向的长距离依赖性。因此，位置信息可以在生成的注意图中得到保留。然后，两个注意图都通过乘法应用于输入特征图，以强调感兴趣的表征。我们把提出的注意方法命名为坐标注意，因为它的操作区分了空间方向（即坐标），并产生了坐标意识的注意图。</p><p>我们的坐标注意具有以下优点。首先，它不仅能捕捉到跨频道的信息，还能捕捉到方向意识和位置敏感的信息，这有助于模型更准确地定位和识别感兴趣的对象。其次，我们的方法灵活而轻便，可以很容易地插入移动网络的经典构建模块，如MobileNetV2[34]中提出的倒置残差块和MobileNeXt[49]中提出的沙镜块，通过强调信息表征来增强特征。第三，作为一个预训练的模型，我们的坐标关注可以为移动网络的下游任务带来显著的性能提升，特别是对于那些有密集预测的任务（例如，语义分割），我们将在实验部分展示。</p><p>为了证明所提出的方法相对于以前的移动网络注意力方法的优势，我们在ImageNet分类[33]和流行的下游任务中进行了广泛的实验，包括物体检测和语义分割。在可学习的参数和计算量相当的情况下，我们的网络在ImageNet上实现了0.8%的顶级分类精度的性能提升。在物体检测和语义分割方面，我们也观察到与其他注意力机制的模型相比有明显的改进，如图1所示。我们希望我们简单而有效的设计能够促进未来移动网络注意力机制的发展。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>在这一节中，我们对本文进行了简要的文献回顾，包括之前关于高效网络架构设计和关注或非本地模型的工作。</p><h3 id="21-mobile-network-architectures"><a class="markdownIt-Anchor" href="#21-mobile-network-architectures"></a> 2.1. Mobile Network Architectures</h3><p>最近最先进的移动网络大多是基于深度可分离卷积[16]和倒置残差块[34]。HBONet[20]在每个倒置的残差块内引入了下采样操作，用于对代表性的空间信息进行建模。ShuffleNetV2[27]在倒置的残差块前后使用了一个信道分割模块和一个信道洗牌模块。后来，MobileNetV3[15]与神经结构搜索算法[50]相结合，搜索最佳激活函数和不同深度的倒置残差块的扩展率。此外，MixNet[39]、EfficientNet[38]和ProxylessNAS[2]也采用了不同的搜索策略，在扩展率、输入分辨率、网络深度和宽度方面搜索深度可分离卷积的最佳核大小或控制网络权重的标量。最近，Zhou等人[49]重新思考了利用纵深可分离卷积的方式，并提出了MobileNeXt，它采用了移动网络的经典瓶颈结构。</p><h3 id="22-attention-mechanisms"><a class="markdownIt-Anchor" href="#22-attention-mechanisms"></a> 2.2. Attention Mechanisms</h3><p>注意力机制[41, 40]已被证明有助于各种计算机视觉任务，如图像分类[18, 17, 44, 1]和图像分割[14, 19, 10]。其中一个成功的例子是SENet[18]，它简单地挤压每个二维特征图以有效地建立通道之间的相互依赖关系。CBAM[44]通过引入大尺寸核的卷积进行空间信息编码，进一步推进了这一想法。后来的工作，如GENET[17]、GALA[22]、AA[1]和TA[28]，通过采用不同的空间注意机制或设计先进的注意块来扩展这一思想。</p><p>非局部/自我注意网络最近非常流行，因为它们有能力建立空间或通道式注意。典型的例子包括NLNet[43]、GCNNet[3]、A2Net[7]、SCNet[25]、GSoP-Net[11]或CCNNet[19]，它们都是利用非局部机制来捕捉不同类型的空间信息。然而，由于自我关注模块内部有大量的计算，它们通常在大型模型中被采用[13, 46]，但不适合移动网络。</p><p>与这些利用昂贵而繁重的非本地或自留地块的方法不同，我们的方法考虑了一种更有效的捕捉位置信息和通道关系的方法，以增强移动网络的特征表示。通过将二维全局集合操作分解为两个一维编码过程，我们的方法比其他具有轻量级特性的注意力方法（如SENet[18]、CBAM[44]和TA[28]）表现得更好。</p><h2 id="3-coordinate-attention"><a class="markdownIt-Anchor" href="#3-coordinate-attention"></a> 3. Coordinate Attention</h2><p>一个坐标注意块可以被看作是一个计算单元，其目的是提高移动网络所学特征的表达能力。它可以把任何中间特征张量X=[x1, x2, … , xc]∈RC×H×W作为输入，并输出一个与X大小相同的具有增强表示的张量Y=[y1, y2, … , yc]的转变。</p><h3 id="31-revisit-squeeze-and-excitation-attention"><a class="markdownIt-Anchor" href="#31-revisit-squeeze-and-excitation-attention"></a> 3.1. Revisit Squeeze-and-Excitation Attention</h3><p>如[18]所述，标准卷积本身很难对通道关系进行建模。明确建立信道间的依赖关系可以提高模型对信息信道的敏感性，这些信道对最终的分类决策贡献更大。此外，使用全局平均池也可以帮助模型捕捉全局信息，而这正是卷积所缺乏的。</p><p>从结构上看，SE块可以分解为两个步骤：挤压和激励，分别用于全局信息嵌入和通道关系的适应性再校准。给定输入X，第c个通道的挤压步骤可以表述为：：</p><p><img src="images/image-20230413211007633.png" alt="image-20230413211007633" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">Z_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是与第c个通道相关的输出。输入X直接来自具有固定核大小的卷积层，因此可以被视为局部描述符的集合。挤压操作使得收集全局信息成为可能。</p><p>第二步，激发，旨在充分捕捉通道间的依赖关系，可以表述为</p><p><img src="images/image-20230413211030868.png" alt="image-20230413211030868" /></p><p>其中，-指的是信道明智的乘法，σ是sigmoid函数，ˆ z是由一个变换函数产生的结果，其表述如下：</p><p><img src="images/image-20230425201102531.png" alt="image-20230425201102531" /></p><p>这里，T1和T2是两个线性变换，可以通过学习来捕捉每个通道的重要性。</p><p>SE块在最近的移动网络中被广泛使用[18, 4, 38]，并被证明是实现最先进性能的一个关键组成部分。然而，它只考虑了通过对信道关系的建模来重新权衡每个信道的重要性，但忽略了位置信息，正如我们将在第4节中通过实验证明的那样，位置信息对于生成空间选择性注意力图是很重要的。在下文中，我们将介绍一个新的注意力块，它同时考虑到通道间的关系和位置信息。</p><h3 id="32-coordinate-attention-blocks"><a class="markdownIt-Anchor" href="#32-coordinate-attention-blocks"></a> 3.2. Coordinate Attention Blocks</h3><p>我们的坐标注意在两个步骤中对通道关系和长距离的依赖性进行编码：坐标信息嵌入和坐标注意生成。图2的右边部分是拟议的坐标注意模块的图。在下文中，我们将详细描述它。</p><h4 id="321-coordinate-information-embedding"><a class="markdownIt-Anchor" href="#321-coordinate-information-embedding"></a> 3.2.1 Coordinate Information Embedding</h4><p>全局集合在通道注意中经常被用来对空间信息进行全局编码，但它将全局空间信息挤压到通道描述符中，因此很难保留位置信息，而位置信息对捕捉视觉任务中的空间结构至关重要。为了鼓励注意力区块以精确的位置信息来捕捉长距离的空间互动，我们将公式（1）中表述的全局集合分解为一对一维特征编码操作。具体来说，给定输入X，我们使用两个空间范围的集合核（H，1）或（1，W ），分别沿横坐标和纵坐标对每个通道进行编码。因此，高度为h的第c个通道的输出可以被表述为<img src="images/image-20230425201256333.png" alt="image-20230425201256333" /></p><p>类似地，在宽度为w的第c个通道的输出可以写为</p><p><img src="images/image-20230425201321721.png" alt="image-20230425201321721" /></p><p>上述两种变换分别沿两个空间方向聚集特征，产生一对方向感知的特征图。这与通道注意方法中产生单一特征向量的挤压操作（公式（1））相当不同。这两个转换还允许我们的注意力块沿一个空间方向捕捉长距离的依赖性，并沿另一个空间方向保留精确的位置信息，这有助于网络更准确地定位感兴趣的对象。</p><h4 id="322-coordinate-attention-generation"><a class="markdownIt-Anchor" href="#322-coordinate-attention-generation"></a> 3.2.2 Coordinate Attention Generation</h4><p>如上所述，公式(4)和公式(5)实现了一个全局性的接受领域，并对精确的位置信息进行编码。为了利用由此产生的表达性表征，我们提出了第二个转换，称为坐标注意生成。我们的设计指的是以下三个标准。首先，就移动环境中的应用而言，新的转换应该尽可能的简单和便宜。其次，它可以充分利用捕捉到的位置信息，从而使感兴趣的区域能够被准确地突出。最后但并非最不重要的是，它还应该能够有效地捕捉通道间的关系，这在现有的研究中已经被证明是至关重要的[18, 44]。</p><p>具体来说，给定由公式4和公式5产生的聚合特征图，我们首先将它们连接起来，然后将它们发送到一个共享的1×1卷积变换函数F1，产生</p><p><img src="images/image-20230425205626787.png" alt="image-20230425205626787" /></p><p>其中[-，-]表示沿空间维度的连接操作，δ是一个非线性激活函数，f∈RC/r×(H+W )是编码水平方向和垂直方向空间信息的中间特征图。这里，r是控制区块大小的还原率，如同SE区块。然后我们将f沿空间维度分割成两个独立的张量f h∈RC/r×H和f w∈RC/r×W。再利用两个1×1的卷积变换Fh和Fw将f h和f w分别变换为与输入X具有相同通道数的张量，得到</p><p><img src="images/image-20230425205650185.png" alt="image-20230425205650185" /></p><p>回顾一下，σ是sigmoid函数。为了减少开销模型的复杂性，我们经常用一个适当的减少比率r（例如32）来减少f的通道数。我们将在实验部分讨论不同的还原比对性能的影响。然后，输出的gh和gw被扩大，并分别作为注意力的权重。最后，我们的坐标注意块Y的输出可以写为</p><p><img src="images/image-20230425205704434.png" alt="image-20230425205704434" /></p><p>讨论。与只注重重新权衡不同通道的重要性的通道注意不同，我们的坐标注意块也考虑了空间信息的编码。如上所述，沿水平和垂直方向的注意同时应用于输入张量。两个注意图中的每个元素都反映了感兴趣的物体是否存在于相应的行和列中。这个编码过程使我们的坐标注意能够更准确地定位感兴趣的物体的确切位置，从而帮助整个模型更好地识别。我们将在实验部分详尽地证明这一点。</p><h3 id="33-implementation"><a class="markdownIt-Anchor" href="#33-implementation"></a> 3.3. Implementation</h3><p>由于本文的目标是研究一种更好的方法来增强移动网络的卷积特征，这里我们以两个具有不同类型的残差块的经典轻量级架构（即MobileNetV2[34]和MobileNeXt[49]）为例来证明所提出的坐标注意力块相对于其他著名的轻量级注意力块的优势。图3显示了我们如何将注意力块插入MobileNetV2的倒置残差块和MobileNeXt的沙漏块。</p><p><img src="images/image-20230620194302020.png" alt="image-20230620194302020" /></p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>在这一节中，我们首先描述了我们的实验设置，然后进行了一系列的消融实验，以证明所提出的协调注意力中的每个组成部分对性能的贡献。接下来，我们将我们的方法与一些基于注意力的方法进行比较。最后，我们报告了所提出的方法与其他基于注意力的方法在物体检测和语义分割方面的比较结果。</p><h3 id="41-experiment-setup"><a class="markdownIt-Anchor" href="#41-experiment-setup"></a> 4.1. Experiment Setup</h3><p>我们使用PyTorch工具箱[31]来实现我们所有的实验。在训练过程中，我们使用标准的SGD优化器，衰减和动量为0.9来训练所有模型。权重的衰减被设置为4×10-5。采用初始学习率为0.05的余弦学习计划。我们使用四个NVIDIA GPU进行训练，批次大小被设置为256。在没有额外声明的情况下，我们将MobileNetV2作为基线，对所有的模型进行200次的训练。对于数据增强，我们使用与MobileNetV2相同的方法。我们报告了在ImageNet数据集[33]上的分类结果。</p><h3 id="42-ablation-studies"><a class="markdownIt-Anchor" href="#42-ablation-studies"></a> 4.2. Ablation Studies</h3><p>协调注意的重要性。为了证明所提出的坐标注意的性能，我们进行了一系列的消融实验，其相应的结果都列于表1。我们从坐标注意中去除水平注意或垂直注意，以观察编码坐标信息的重要性。如表1所示，沿任何一个方向的注意的模型都具有与SE注意的模型相当的性能。然而，当水平注意和垂直注意都被纳入时，我们得到了表1中强调的最佳结果。这些实验反映出，在可学习的参数和计算成本相当的情况下，坐标信息嵌入对图像分类更有帮助。</p><p>不同的权重乘数。在这里，我们以两个经典的移动网络（包括带有倒置剩余块的MobileNetV2[34]和带有沙镜瓶颈块的MobileNeXt[49]）为基线，看看在不同的权重乘数下，所提出的方法与SE关注[18]和CBAM[44]相比的性能。在这个实验中，我们采用了三种典型的权重乘数，包括{1.0, 0.75, 0.5}。如表2所示，当以MobileNetV2网络为基线时，采用CBAM的模型与采用SE注意力的模型有类似的结果。然而，在每一种设置下，采用建议的协调注意力的模型都能产生最好的结果。当使用MobileNeXt网络时，也可以观察到类似的现象，如表3中所列。这表明，不管是考虑沙漏瓶颈区块还是倒置的残余区块，也不管选择哪一个权重乘数，我们的坐标注意都表现得最好，因为它是同时编码位置和通道间信息的先进方式。</p><p>减少比率r的影响。为了研究不同减少比率的注意力块对模型性能的影响，我们尝试减少减少比率的大小，看看性能变化。如表4所示，当我们把r减少到原始大小的一半时，模型的大小会增加，但可以产生更好的性能。这表明，通过减少缩减率来增加参数对提高模型性能很重要。更重要的是，在这个实验中，我们的坐标注意仍然比SE注意和CBAM表现得更好，反映了所提出的坐标注意对减少比例的鲁棒性。</p><h3 id="43-comparison-with-other-methods"><a class="markdownIt-Anchor" href="#43-comparison-with-other-methods"></a> 4.3. Comparison with Other Methods</h3><p>移动网络的注意力。我们将我们的协调注意力与其他用于移动网络的轻量级注意力方法进行比较，包括表2中广泛采用的SE注意力[18]和CBAM[44]。可以看出，加入SE注意力后，分类性能已经提高了1%以上。对于CBAM，与SE注意相比，其图2(b)所示的空间注意模块似乎在移动网络中没有贡献。然而，当考虑到提议的坐标注意时，我们取得了最好的结果。我们还在图4中可视化了不同注意力方法的模型所产生的特征图。很明显，我们的坐标注意比SE注意和CBAM更能帮助定位感兴趣的对象。</p><p>我们认为，所提出的位置信息编码方式比CBAM的优势有两个方面。首先，CBAM中的空间注意模块将通道维度压缩为1，导致信息损失。然而，我们的坐标注意使用一个适当的减少率来减少瓶颈处的通道维度，避免了过多的信息损失。其次，CBAM利用内核大小为7×7的卷积层来编码局部空间信息，而我们的坐标注意通过使用两个互补的1D全局池操作来编码全局信息。这使我们的坐标注意能够捕捉到空间位置之间的长距离依赖关系，这对视觉任务是至关重要的。</p><p>更强的基线。为了进一步证明所提出的坐标注意在更强大的移动网络中比SE注意的优势，我们把EfficientNet-b0[38]作为我们的基线。EfficientNet是基于架构搜索算法的，包含SE注意力。为了研究在EfficientNet上提出的坐标注意的性能，我们只是用我们提出的坐标注意替换了SE注意。对于其他的设置，我们遵循原论文的规定。结果已列于表5。与包含SE注意力的原始EfficientNet-b0以及其他与EfficientNet-b0具有可比性的参数和计算方法相比，我们的网络在协调注意力方面取得了最好的结果。这表明所提出的协调注意力在强大的移动网络中仍能有良好的表现。</p><h3 id="44-applications"><a class="markdownIt-Anchor" href="#44-applications"></a> 4.4. Applications</h3><p>在本小节中，我们对物体检测任务和语义分割任务进行了实验，以探索所提出的协调注意对其他注意方法的可转移能力。</p><h4 id="441-object-detection"><a class="markdownIt-Anchor" href="#441-object-detection"></a> 4.4.1 Object Detection</h4><p>**实施细节。**我们的代码是基于PyTorch和SSDLite[34, 26]。按照[34]，我们将SSDLite的第一层和第二层分别与输出跨度为16和32的最后一个点状卷积层相连接，并在最后一个卷积层之上添加其余的SSDLite层。在COCO上训练时，我们将批次大小设置为256，并使用同步的批次归一化。使用余弦学习计划，初始学习率为0.01。我们对模型进行了1,600,000次迭代训练。当在Pascal VOC上训练时，批次大小被设置为24，所有的模型被训练了24万次迭代。权重衰减被设置为0.9。初始学习率为0.001，然后在160,000次和200,000次迭代时除以10。对于其他设置，读者可以参考[34，26]。</p><p>关于COCO的结果。在这个实验中，我们遵循大多数以前的工作，分别以AP、AP50、AP75、APS、APM和APL的方式报告结果。在表6中，我们显示了不同的网络设置在COCO 2017验证集上产生的结果。很明显，在MobileNetV2中加入坐标关注，在只有0.5M的参数开销和几乎相同的计算成本的情况下，大幅提高了检测结果（24.5 v.s. 22.3）。与其他轻量级的注意力方法，如SE注意力和CBAM相比，我们的SSDLite320版本在所有指标上都取得了最好的结果，而参数和计算的数量几乎相同。</p><p>此外，我们还展示了以前基于SSDLite320的最先进模型产生的结果，如表6所列。请注意，有些方法（例如MobileNetV3[15]和MnasNet-A1[37]）是基于神经结构搜索方法的，但我们的模型没有。很明显，与其他参数和计算接近的方法相比，我们的检测模型在AP方面取得了最好的结果。</p><p>Pascal VOC的结果。在表7中，我们显示了采用不同注意力方法时对Pascal VOC 2007测试集的检测结果。我们观察到，SE注意力和CBAM不能改善基线结果。然而，加入提议的协调注意力可以将平均AP从71.7提高到73.1。在COCO和Pascal VOC数据集上的两个检测实验都表明，与其他注意力方法相比，采用建议的协调注意力的分类模型具有更好的可转移能力。</p><h4 id="442-semantic-segmentation"><a class="markdownIt-Anchor" href="#442-semantic-segmentation"></a> 4.4.2 Semantic Segmentation</h4><p>我们还对语义分割进行了实验。在MobileNetV2[34]之后，我们利用经典的DeepLabV3[6]作为例子，将所提出的方法与其他模型进行比较，以证明所提出的坐标注意在语义分割中的可转移能力。具体来说，我们抛弃了最后一个线性算子，将ASPP连接到最后一个卷积算子。在ASPP中，我们用深度可分离的卷积算子取代了标准的3×3卷积算子，以减少考虑移动应用的模型大小。ASPP中每个分支的输出通道被设置为256，ASPP中的其他组件保持不变（包括1×1卷积分支和图像级特征编码分支）。我们报告了两个广泛使用的语义分割基准的结果，包括Pascal VOC 2012 [9] 和Cityscapes [8]。对于实验设置，我们严格遵循DeeplabV3的论文，除了权重衰减被设置为4e-5。当输出跨度设置为16时，ASPP中的扩张率为{6，12，18}，而当输出跨度设置为8时，扩张率为{12，24，36}。</p><p>Pascal VOC 2012的结果。Pascal VOC 2012的分割基准共有21个类，包括一个背景类。按照原论文的建议，我们用1,464张图像的分割来训练，用1,449张图像的分割来验证。此外，正如大多数以前的工作[6，5]所做的那样，我们通过增加来自[12]的额外图像来增加训练集，结果是共有10,582张图像用于训练。</p><p>我们在表8中显示了以不同模型为骨干的分割结果。我们报告了两种不同输出步长下的结果，即16和8。请注意，这里报告的所有结果都不是基于COCO预训练的。根据表8，配备了我们的协调注意力的模型比虚构的MobileNetV2和其他注意力方法表现得更好。</p><p>城市景观的结果。Cityscapes[8]是最流行的城市街道场景分割数据集之一，共包含19个不同的类别。按照官方的建议，我们使用了2,975张图片进行训练，500张图片进行验证的分割。只有精细标注的图像被用于训练。在训练中，我们将原始图像随机裁剪为768×768。在测试过程中，所有图像都保持原始尺寸（1024 × 2048）。</p><p>在表9中，我们显示了采用不同注意力方法的模型在Cityscapes数据集上产生的分割结果。与虚构的MobileNetV2和其他注意力方法相比，我们的坐标注意力可以在可学习参数数量相当的情况下大幅提高分割结果。</p><p>讨论。我们观察到，我们的坐标注意力在语义分割上的改进比ImageNet分类和物体检测上的改进更大。我们认为，这是因为我们的坐标注意能够通过精确的位置信息来捕捉长距离的依赖关系，这对具有密集预测的视觉任务更有利，比如语义分割。</p><h2 id="5-conclusions"><a class="markdownIt-Anchor" href="#5-conclusions"></a> 5. Conclusions</h2><p>在本文中，我们为移动网络提出了一种新的轻量级的注意机制，名为协调注意。我们的协调注意继承了通道注意方法（如挤压和激发注意）的优点，这些方法对通道间的关系进行建模，同时用精确的位置信息捕捉长距离的依赖关系。在ImageNet分类、物体检测和语义分割中的实验证明了我们的协调注意的有效性。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BiFormer-Vision-Transformer-with-Bi-Level-Routing-Attention</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Biformer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Biformer/</url>
      
        <content type="html"><![CDATA[<p>BiFormer: Vision Transformer with Bi-Level Routing Attention</p><p><a href="zotero://open-pdf/library/items/RZLZU8RG">BiFormer: Vision Transformer with Bi-Level Routing Attention</a></p><h2 id="2-related-works"><a class="markdownIt-Anchor" href="#2-related-works"></a> 2. Related Works</h2><p><strong>Vision transformers.</strong> 变形器是一个神经网络家族，它采用信道明智的MLP块来进行每个位置的嵌入（信道混合），采用注意力[42]块来进行跨位置关系建模（空间混合）。变形器最初是为自然语言处理提出的[13, 42]，然后由DETR[1]和ViT[15]等开创性工作引入到计算机视觉。与CNN相比，最大的区别是，transformer使用注意力作为卷积的替代，以实现全局上下文建模。然而，由于香草注意计算所有空间位置的成对特征亲和力，它产生了高计算负担和沉重的内存足迹，特别是对于高分辨率输入。因此，一个重要的研究方向是寻求更有效的注意力机制。</p><p><strong>Efficient attention mechanisms.</strong> 大量的工作被提出来，通过利用稀疏连接模式[6]、低等级近似[43]或递归操作[11]来减少香草注意力的计算和记忆复杂性瓶颈。对这些注意力变体的彻底调查可以在[39]中找到。在vision transformer的范围内，由于Swin transformer[29]的巨大成功，稀疏注意力最近得到了普及。在Swin transformer中，注意力被限制在不重叠的局部窗口，并且引入了移位窗口操作以实现相邻窗口之间的交流。为了在合理的计算预算下实现更大的甚至是准全球的感受野，一些后续工作引入了不同的手工稀疏模式，如扩张的窗口[41，46]或十字形的窗口[14]。还有一些作品试图使稀疏模式对数据具有适应性，如DAT[48]、TCFormer[53]和DPT[5]。虽然这些作品通过不同的合并或选择策略减少了键/值标记的数量，但这些键/值标记是由图像上的所有查询共享的。相反，我们探索查询感知的键/值标记选择。促使我们工作的关键观察是，根据预训练的ViT[15]和DETR[1]的可视化，不同查询的注意区域可能有很大的不同。由于我们以从粗到细的方式实现了查询适应性稀疏性的目标，它与四叉树关注[38]有一些相似之处。与四叉树关注不同的是，我们的双级路由关注的目标是定位几个最相关的键值对，而四叉树关注建立了一个令牌金字塔，并集合了来自各级不同粒度的消息。此外，四叉树需要深度递归来覆盖整个特征图，这损害了并行性，而我们的双级路由关注可以更有效地通过键/值令牌收集来实现，然后进行密集的矩阵乘法。因此，四叉树转化器要比我们的BiFormer慢得多。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BAM</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/BAM/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/BAM/</url>
      
        <content type="html"><![CDATA[<h1 id="bam"><a class="markdownIt-Anchor" href="#bam"></a> BAM</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>近来，小样本分割分割技术（FSS）得到了广泛的发展。然而，训练出来的模型偏向于所看到的类别，而不是理想的类别无关性，从而阻碍了对新内容的识别。本文提出了一种新颖而直接的见解来缓解这一问题。具体来说，我们在传统的 FSS 模型（元学习器）上增加了一个分支（基础学习器），以明确识别基础类别的目标，即不需要分割的区域。然后，对这两个学习器并行输出的粗略结果进行自适应整合，从而得出精确的分割预测结果。考虑到元学习器的敏感性，我们进一步引入了一个调整因子来估计输入图像对之间的场景差异，以促进模型的集合预测。在 PASCAL-5i 和 COCO-20i 上取得的显著性能提升验证了这一方法的有效性，而且令人惊讶的是，即使使用两个普通学习器，我们的多功能方案也创造了新的一流水平。此外，鉴于所提方法的独特性，我们还将其扩展到了更现实但更具挑战性的环境中，即广义 FSS，在这种环境中，基础类和新类别的像素都需要确定。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><ul><li><p>得益于成熟的大规模数据集 [8, 9, 29]，大量基于卷积神经网络（CNN）的计算机视觉技术在过去几年中得到了快速发展 [15-17, 27, 28, 35, 4345, 48]。然而，收集足够的标注数据耗时耗力是众所周知的，尤其是对于密集预测任务，如实例分割 [2,3,15,21,59] 和语义分割 [1,25,35,40,45]。与机器学习范式形成鲜明对比的是，人类可以很容易地从少量实例中识别出新的内容或模式，这极大地激发了社区的研究兴趣[39,52,53]。因此，为了解决这一问题，有人提出了少量学习（FSL），即建立一个网络，将其泛化到缺少注释样本的未知领域 [7,42,54,57]。</p><p>在本文中，我们将在语义分割领域应用 FSL，即小样本分割（FSS），模型仅利用极少量的标注训练数据从原始图像中分割出特定语义类别的目标[46]。在寥寥几个分类成功的推动下，大多数现有的 FSS 方法都在努力通过元学习框架实现泛化[23, 30-34, 36-38, 47, 55, 56, 58, 61, 62, 64-67]。从基础数据集中抽取一系列学习任务（情节），以模拟新类别的少量场景，即匹配训练和测试条件。然而，这种方法远远不够，而且能力不足。在具有丰富注释样本的基础数据集上进行元训练，不可避免地会偏向所见的类，而不是理想的类无关性，从而阻碍了对新概念的识别[10]。值得注意的是，在对抗与基础数据具有相似类别的困难查询样本时，泛化性能可能会濒临崩溃。</p><p><img src="images/image-20231202231630936.png" alt="image-20231202231630936" /></p><blockquote><p>图 1. 我们的 BAM 与之前工作的比较。(a) 传统方法通常采用元学习框架来训练 FSS 模型，这不可避免地会偏向于基类，而不是理想的类无关性，从而阻碍了对新类别目标对象（如猫（-））的识别。(b) 我们的 BAM 引入了一个额外的分支，即基类学习器，以明确预测基类区域。这样，查询图像中的干扰对象（如人（-）和沙发（-））就能在集合模块之后被显著抑制。© 我们的 BAM 在广义 FSS 设置下的扩展，其中基础类和新类别的像素都需要确定。细化后的结果与基础学习器的输出再次合并，生成综合预测结果。</p></blockquote><p>我们认为，除了设计更强大的特征提取模块[23, 60, 61]，调整使用包含足够训练样本的基础数据集也是缓解上述偏差问题的另一种方法，而这一问题在以往的研究中一直被忽视。为此，我们在传统的 FSS 模型（元学习器）中引入了一个额外的分支（基础学习器），以明确预测基础类的目标（见图 1）。然后，对这两个学习器并行输出的粗略结果进行自适应整合，以生成准确的预测结果。这种操作背后的核心理念是通过在传统范例中训练的高容量分割模型来识别查询图像中的可混淆区域，从而进一步促进对新物体的识别。顺便提一下，所提出的方案被命名为 BAM，因为它由两个独特的学习器组成，即基础学习器和元学习器。</p><p>此外，我们注意到元学习器通常对支持图像的质量很敏感，输入图像对之间的巨大差异会导致性能严重下降。相反，基础学习器往往能提供高度可靠的分割结果，并且由于输入的是单一查询图像，因此性能稳定。基于这一观察结果，我们进一步建议利用查询-支持图像对之间的场景差异评估结果来调整元学习器得出的粗略预测结果。受在图像风格转换领域被广泛采用的风格损失（style loss）[12, 13, 20]的启发，我们首先计算两幅输入图像的格兰矩阵差，然后利用弗罗贝尼斯规范（Frobenius norm）获得整体指标，用于指导调整过程。如图 1(b)所示，经过组合模块后，查询图像中的基类（如人和沙发）干扰物被明显抑制，实现了对新物体（如猫）的准确定位。此外，鉴于所提方法的独特性，我们还将当前任务扩展到了一个更现实但更具挑战性的环境（即广义 FSS）中，要求同时确定基础类和新类别的像素，如图 1©所示。总之，我们的主要贡献可以总结如下：</p></li><li><p>我们提出了一个简单而高效的方案，通过引入一个额外的分支来明确预测查询图像中的基类区域，从而解决偏差问题，这为未来的工作提供了启示。</p></li><li><p>我们建议通过格拉姆矩阵来估计查询-支持图像对之间的场景差异，以减轻元学习器的灵敏度带来的不利影响。</p></li><li><p>我们的多用途计划为所有环境下的家庭支助服务设定了新的艺术基准，即使是两名普通学员也不例外。</p></li><li><p>我们将提出的方法扩展到更具挑战性的环境中，即广义 FSS，它可以同时识别基础类和新类别的目标。</p></li></ul><h2 id="2-related-works"><a class="markdownIt-Anchor" href="#2-related-works"></a> 2. Related Works</h2><p><strong>语义分割：</strong> 语义分割是一项基本的计算机视觉任务，旨在根据一组预定义的语义类别识别给定图像中的每个像素[45]。最近，得益于全卷积网络（FCN）[35] 的优势，这一领域取得了巨大进步。人们相继提出了各种稳健的网络设计，同时也带来了一些基本技术，如扩张卷积[63]、编码器-解码器结构[45]、多级特征聚合[26]、注意力机制[18]等。然而，传统的分割模型需要足够多的注释样本才能产生令人满意的结果，而且在没有微调的情况下很难泛化到未见过的类别，因此在一定程度上阻碍了其实际应用。在本研究中，元学习器中引入了基于扩张卷积的空间金字塔池化（ASPP）模块[4]，以扩大接受区，并以 PSPNet[68] 作为基础学习器，预测基础类别中的分心对象。</p><p>**小样本学习：**多年来，计算机视觉领域一直在努力开发一种能够泛化到新类别的网络。目前，小样本学习（FSL）领域的大多数方法都遵循 [54] 中提出的元学习框架，即从基础数据集中抽取一组学习任务（集）来模拟小样本场景。在此基础上，FSL 方法可进一步细分为三个分支：(i) 基于度量的 [24, 49, 50]；(ii) 基于优化的 [11, 19, 42]；(iii) 基于增强的 [5, 6]。我们的工作与基于度量的方法密切相关，这种方法通过特定的距离度量（如欧氏距离和余弦距离）来确定支持原型 [49] 与查询特征之间的亲和性。受 FSL [22] 中广义设置的启发，我们试图通过预测查询图像中的基类区域来帮助识别新目标，低数据机制下的分割任务也扩展到了这一设置中。</p><p>**小样本分割：**小样本分割（FSS）是 FSL 技术在密集预测任务中的自然应用，近年来受到越来越多的关注。以往的方法通常采用双分支结构（即支持分支和查询分支）来传输注释信息并在提取的特征之间进行交互。Shaban 等人[46]提出了这一领域的开创性工作–OSLSM，其中支持（条件）分支被用来生成分类器权重，用于查询分支预测。后来，Zhang 等人[67] 利用掩蔽平均池操作获得了具有代表性的支持特征，这也是后续工作的基础技术。最近，一些相关研究放弃了重骨干网络的训练过程，转而在固定骨干网络上构建功能强大的块来提高性能，如 CANet [66]、PFENet [51]、ASGNet [23]、SAGNN [60] 和 MM-Net [58]。</p><p>然而，这些方法的泛化性能在很大程度上取决于元学习框架，即使经过微调过程也可能很脆弱。更具体地说，由于不平衡的数据分布和较大的领域偏移，训练好的 FSS 模型会偏向于基类。我们注意到，该领域很少有作品明确研究泛化退化问题，而是专注于设计两个分支之间的高容量交互模块。Tian 等人[51]利用从固定骨干网络中提取的高级特征来评估相似性，为查询图像提供了重要的分割线索。这种无参数方法可以帮助网络学习捕捉更多通用模式，从而提高泛化能力。本文则从更根本的角度出发，通过明确识别基类的可混淆区域来解决偏差问题。</p><h2 id="3-problem-definition"><a class="markdownIt-Anchor" href="#3-problem-definition"></a> 3. Problem Definition</h2><p>小样本分割的目的是仅使用少量标记数据进行分割。目前的方法通常是在元学习范式（也称为情节训练）中训练模型。具体来说，给定两个在对象类别上互不关联的图像集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，模型有望在有足够标注样本的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 上学习到可迁移的知识，从而在标注样本较少的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 上表现出良好的泛化能力。具体来说，这两个集合都由许多情节组成，每个情节都包含一个小的支持集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mi>S</mi></msubsup><mo separator="true">,</mo><msubsup><mi>m</mi><mi>i</mi><mi>S</mi></msubsup><mo stretchy="false">)</mo><msubsup><mo stretchy="false">}</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup></mrow><annotation encoding="application/x-tex">S=\{(x_{i}^{S},m_{i}^{S})\}_{i=1}^K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0999949999999998em;vertical-align:-0.258664em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>和一个查询集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi>m</mi><mi>q</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Q = \{(x^q, m^q)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mtext>∗</mtext></msup></mrow><annotation encoding="application/x-tex">x^∗</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mtext>∗</mtext></msup></mrow><annotation encoding="application/x-tex">m^∗</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span> 分别代表原始图像及其对应的特定类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 的二进制掩码。在每次训练过程中都会对模型进行优化，以便在支持集$ S$ 的条件下对查询图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mi>q</mi></msup></mrow><annotation encoding="application/x-tex">x^q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span> 做出预测。训练完成后，我们将评估它们在所有测试集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 上的少帧分割性能，而无需进一步优化。</p><h2 id="4-proposed-method"><a class="markdownIt-Anchor" href="#4-proposed-method"></a> 4. Proposed Method</h2><p><img src="images/image-20231203004741938.png" alt="image-20231203004741938" /></p><blockquote><p>图 2. 拟议 BAM 的整体架构，由三个基本组件组成：基础学习器、元学习器和集合模块。在每次训练中，两个学习器使用共享编码器提取输入图像对（xs，xq）的特征，并分别对特定基础类别 c（注意，c 表示元测试阶段的新类别）和其余基础类别进行预测。然后，粗略预测结果连同调整因子ψ一起被送入集合模块，以抑制基础类别的错误激活区域，从而进一步产生精确的分割结果。为便于理解，我们以分割掩码的形式呈现概率图，但它们实际上是二维浮点矩阵，即 p∈[0, 1]H×W 。MAP 表示屏蔽平均池化操作 [67]。</p></blockquote><p>为了缓解当前 FSS 方法的偏差问题，我们建议建立一个额外的网络，明确预测查询图像中的基础类别区域，从而促进新物体的分割。在不失一般性的前提下，我们展示了单镜头设置下模型的整体架构（见图 2）。拟议的 BAM 由三个主要部分组成，包括两个互补学习器（即基础学习器和元学习器）和一个集合模块。两个具有共享骨干的学习器分别用于识别基础类和新类别。然后，集合模块接收它们的粗略预测和调整因子ψ，以抑制基础类的错误激活区域，从而进一步产生精确的分割。此外，我们还建议根据ψ来学习 K-shot 设置下不同支持图像的融合权重，旨在为查询分支提供更好的指导。</p><h3 id="41-base-learner"><a class="markdownIt-Anchor" href="#41-base-learner"></a> 4.1. Base Learner</h3><p>如第 2 章所述，当前的 FSS 模型偏重于已见类别，这阻碍了对新内容的识别。基于这一观点，我们建议引入一个额外的分支，即基类学习器，以明确预测查询图像中的基类区域。具体来说，给定查询图像 xq∈R3×H×W 时，我们首先应用编码器网络 E 和卷积块提取其中间特征图 f q b，可表述为</p><p><img src="images/image-20231130144732222.png" alt="image-20231130144732222" /></p><p><img src="images/image-20231130144756290.png" alt="image-20231130144756290" /></p><p>其中，Fconv 表示连续卷积运算*。c、h 和 w 分别为信道维度、高度和宽度，h × w 表示所有提取的特征图中的最小分辨率。</p><p>然后，解码器网络 Db 逐步放大中间特征图 f q b 的空间尺度，最终得到预测结果，其定义如下</p><p><img src="images/image-20231130144818004.png" alt="image-20231130144818004" /></p><p>其中，nbs 是每批训练样本的数量。</p><p><strong>为什么不联合训练两个学习器？</strong> 预测查询图像中基础类别区域的一种自然方法是遵循标准语义分割网络，如 PSPNet [68]、DeepLab [4]等。然而，在原有的几帧模型基础上额外构建如此庞大的网络是不现实的，这会引入过多的参数，降低推理速度。因此，我们尝试设计一个统一的框架，让两个学习者共享同一个骨干网络。然而，我们注意到，先进的 FSS 方法 [23, 51, 66] 通常会在训练过程中冻结主干网络，以增强泛化效果。这种操作与标准分割模型的学习方案不一致，无疑会影响基础学习器的性能。更重要的是，基础学习器能否在偶发学习范式下得到很好的训练还是个未知数，因此我们最终采用了两阶段训练策略。在第 5.3 节中，我们将讨论不同训练方法和网络设计对分割准确性的影响。</p><h3 id="42-meta-learner"><a class="markdownIt-Anchor" href="#42-meta-learner"></a> 4.2. Meta Learner</h3><p>给定支持集 S = {xs、ms} 和查询图像 xq，元学习器的目标是在 S 的指导下，分割 xq 中与注释掩码 ms 具有相同类别的对象。然后，应用 1×1 卷积来降低通道维度并生成中间特征图：</p><p><img src="images/image-20231130144855301.png" alt="image-20231130144855301" /></p><p>其中，E 是基础学习器和元学习器共享的编码器网络，F1×1 表示将输入特征编码为 256 维的 1×1 卷积。此外，我们通过掩码平均池化（MAP）[67]计算原型（f s m, ms），以提供关键的类别相关线索：</p><p><img src="images/image-20231130144910079.png" alt="image-20231130144910079" /></p><p>其中，Fpool 是平均池化运算，代表哈达玛乘积，I 是一个函数，通过插值和扩展技术将 ms 重塑为与 f s m 相同的形状，使 I : RH×W → Rc×h×w。之后，在 vs 的指导下激活 f q m 中的目标区域，并通过解码器网络生成最终预测结果，可概括为：<img src="images/image-20231130144928622.png" alt="image-20231130144928622" /></p><p>其中 Dm 表示元学习器的解码器网络。Fguidance 是 FSS 的一个重要模块，它将注释信息从支持分支传递到查询分支，以提供特定的分割线索。在我们的工作中，它代表了 &quot;扩展与连接 &quot;操作 [66]。同样，我们计算 pm 和 mq 之间的 BCE 损失，以更新元学习器的所有参数：</p><p><img src="images/image-20231201002116222.png" alt="image-20231201002116222" /></p><p>其中，ne 表示每个批次的训练集数。</p><h3 id="43-ensemble"><a class="markdownIt-Anchor" href="#43-ensemble"></a> 4.3. Ensemble</h3><p>考虑到元学习器通常对支持图像的质量很敏感，我们进一步建议利用查询-支持图像对之间场景差异的评估结果来调整元学习器得出的粗略预测。具体来说，我们首先整合基础学习器生成的前景概率图，以获得相对于小样本分割任务的背景区域预测：</p><p><img src="images/image-20231201002147732.png" alt="image-20231201002147732" /></p><p>其中 pf b 的上标代表前景，下标 &quot;b &quot;代表基础学习者。</p><p>然后，我们利用从固定骨干网络中提取的低层次特征 f s low、f q low∈ RC1×H1×W1 分别计算支持图像和查询图像的革兰氏矩阵（见图 3）。请注意，这两种输入图像的相关运算是相似的，支持图像的运算可概括为</p><p><img src="images/image-20231201002205432.png" alt="image-20231201002205432" /></p><p>其中 N =H1×W1，Freshape 将输入张量的大小调整为 C1×N。利用计算出的格兰矩阵，对它们的差值进行弗罗贝尼斯规范（Frobenius norm）评估，从而得到整体指标ψ，用于指导调整过程：</p><p><img src="images/image-20231201002225323.png" alt="image-20231201002225323" /></p><p>其中，‖-‖F 表示输入矩阵的 Frobenius 准则。之后，在调整因子ψ的指导下，对两个学习器的粗略结果进行整合，进一步得出最终的分割预测结果 pf：</p><p><img src="images/image-20231201002232436.png" alt="image-20231201002232436" /></p><p>其中 pm、pb 分别表示元学习器和基础学习器的预测结果。上标 &quot;0 &quot;和 &quot;1 &quot;分别代表背景和前景。Fψ 和 Fensemble 都是具有特定初始参数的 1×1 卷积运算。前者的目标是调整元学习器的粗略结果，而后者的目标是整合两个学习器。⊕ 表示沿通道维度的连接操作。最后，元训练阶段的总体损失可以通过以下方式进行评估：</p><p><img src="images/image-20231201002251246.png" alt="image-20231201002251246" /></p><p>其中，λ 在所有实验中均设为 1.0，Lmeta 是式 (8) 所定义的元学习器的损失函数。</p><h3 id="44-k-shot-setting"><a class="markdownIt-Anchor" href="#44-k-shot-setting"></a> 4.4. K-Shot Setting</h3><p>当任务扩展到 K-shot（K&gt;1）设置时，就会有多幅注释（支持）图像可用。目前的 FSS 方法通常是将从支持分支提取的原型平均化，然后利用平均化后的特征来指导后续的分割过程，这种方法假定每个样本的贡献是相同的 [51, 56]。然而，这种方法可能并不理想，因为与查询图像有显著场景差异的样本无法提供更有针对性的指导。因此，我们进一步建议根据调整因子ψ来自适应地估计每张支持图像的权重，ψ值越小表示贡献越大，反之亦然。</p><p>具体来说，给定每个支持样本的调整因子ψi，我们首先通过连接操作将它们整合为一个统一的向量ψt∈RK。然后，应用两个全连接（FC）层来生成支持图像的融合权重η：</p><p><img src="images/image-20231201002324426.png" alt="image-20231201002324426" /></p><p>其中，w1∈ RK× K r ，w2∈ R K r ×K 是 FC 层的权重，r 代表降维系数。最后，我们进行加权求和，得到最终的集合ψ。</p><h3 id="45-extension-to-generalized-fss"><a class="markdownIt-Anchor" href="#45-extension-to-generalized-fss"></a> 4.5. Extension to Generalized FSS</h3><p>所提出的 BAM 最初是为标准 FSS 任务而设计的，但它可以很容易地扩展到需要确定查询图像中基础类别和新类别区域的通用设置中。在这项工作中，我们只需根据预定义的阈值 τ 将基础学习器的结果和集合后的最终结果进行融合，即可得到整体分割预测结果 ˆ mg，可表述为</p><p><img src="images/image-20231201002349668.png" alt="image-20231201002349668" /></p><p>其中 (x, y) 表示空间位置。ˆ mb 表示基本分割掩码，其计算公式为</p><p><img src="images/image-20231201002402519.png" alt="image-20231201002402519" /></p><p>其中 arg max(-) 沿通道维度执行。</p><h2 id="5-experiments"><a class="markdownIt-Anchor" href="#5-experiments"></a> 5. Experiments</h2><h3 id="51-setup"><a class="markdownIt-Anchor" href="#51-setup"></a> 5.1. Setup</h3><p>**我们在两个广泛使用的 FSS 数据集（即 PASCAL-5i [46] 和 COCO-20i [38]）上评估了我们方法的性能。PASCAL-5i 由 Shaban 等人提出，基于 PASCAL VOC 2012 [9]，并添加了 SDS [14] 的注释；COCO-20i 由 MSCOCO [29]提出，载于 [38] 中。这两个数据集的对象类别被平均分为四个褶皱，实验以交叉验证的方式进行。对于每个褶皱，我们随机抽取 1,000 对支持和查询图像进行验证。</p><p><strong>评价指标：</strong> 参照前人的研究成果[34, 51, 61]，我们采用平均交集-重叠-联合（mIoU）和前景-背景 IoU（FB-IoU）作为实验的评价指标。</p><p><strong>实施细节</strong>* 拟议方法的训练过程可分为两个阶段，即预训练和元训练。在第一阶段，我们采用标准的监督学习范式，在 FSS 数据集的每个褶上训练基础学习器，该数据集由 PASCAL5i/COCO-20i 的 16/61 个类别（包括背景）组成。在我们的工作中，PSPNet [68] 被用作基础学习器，它在 PASCAL-5i 上进行了 100 次历时训练，在 COCO-20i 上进行了 20 次历时训练。使用初始学习率为 2.5e-3 的 SGD 优化器更新参数，训练批次大小设为 12。在第二阶段，我们以偶发学习的方式联合训练元学习器和集合模块，基础学习器的参数在这一阶段是固定的。需要注意的是，两个学习器共用同一个编码器来提取输入图像的特征，这也不利于泛化。其余网络层使用 SGD 优化器在 PASCAL-5i 和 COCO-20i 上分别训练 200 次和 50 次。在这两个数据集上，批量大小和学习率分别设置为 8 和 5e-2。我们采用 [51] 中的数据增强技术进行训练。在我们的工作中，PFENet [51] 的变体被用作元学习器，其中 FEM 被 ASPP [4] 代替，以降低复杂度。我们使用不同的随机种子对 5 条路径的结果进行了平均。提议的模型在 PyTorch 中实现，并在英伟达 RTX 2080Ti GPU 上运行。</p><h3 id="52-comparison-with-state-of-the-arts"><a class="markdownIt-Anchor" href="#52-comparison-with-state-of-the-arts"></a> 5.2. Comparison with State-of-the-Arts</h3><p>**表 1 和表 2 列出了不同方法在 PASCAL-5i 和 COCO-20i 基准上的 mIoU 结果。可以发现，我们的 BAM 以相当大的优势超过了先进的 FSS 模型，并在所有设置下都创造了新的技术水平。使用 VGG16 主干网时，与 PASCAL-5i 先前的最佳结果相比，拟议方法的 mIoU 分别提高了 4.71%p（1-shot）和 4.66%p（5-shot）。至于 COCO-20i，在使用 ResNet50 主干网的情况下，我们的 1shot 和 5-shot 结果分别比最佳竞争对手 HSNet 高出 7.03%p 和 4.26%p mIoU，证明了其处理复杂任务的卓越能力。此外，我们还在 PASCAL-5i 上将我们的模型与其他先进方法的 FBIoU 进行了比较（见表 3）。我们提出的 BAM 再次实现了大幅改进，尤其是在使用 ResNet50 主干网的单次搜索结果方面。</p><p><strong>定量结果</strong> 为了更好地分析和理解所提出的模型，我们进一步选取了元测试阶段的几个事件，并将相应的分割结果可视化，如图 4 所示。从我们的结果（第 4 行）中可以发现，与基线方法（第 3 行）相比，基类的假激活目标明显减少，这验证了基类学习器和集合模块的有效性。</p><h3 id="53-ablation-study"><a class="markdownIt-Anchor" href="#53-ablation-study"></a> 5.3. Ablation Study</h3><p>我们进行了一系列消融研究，以调查每个组件对分割性能的影响。请注意，除非另有说明，本节中的实验都是在使用 VGG16 骨干的 PASCAL-5i 数据集上进行的。</p><p>对两个学习者的消减研究。如第 4.1 节所述，两个学习器可以联合训练，也可以分开训练。在我们的实验中，后一种方案表现出更好的性能，如表 4 的前两行所示。4. 我们将这一现象归因于两个学习器对骨干网的不同利用。具体来说，一个学习者倾向于固定参数以增强泛化能力，而另一个学习者则倾向于更新参数以提取更具区分性的特征，这在端到端训练范式中很难取得平衡。此外，我们注意到，不使用 Lmeta 的模型性能会略微变差，这表明有必要对元学习器的预测结果进行约束。</p><p><strong>对集合模块的消融研究</strong> 模型的初始权重对训练过程乃至最终结果都有重大影响。因此，我们对合集模块的这一环节进行了相关的消减研究，它可以说是 BAM 的一个重要组成部分。在我们的实验中，元学习器和基础学习器的初始权重分别为1和0的集合模块明显优于其他方案，比随机初始化权重的模块提高了2.73%的mIoU，如表4第3行和第4行所示。4. 此外，我们还研究了调整因子ψ对性能的影响，结果表明，根据ψ调整元学习器的粗预测在模型集合预测中起着至关重要的作用。图 5 显示了使用不同低级特征估计ψ的方法之间的比较结果，其中使用 B2 特征的情况在分割准确性和计算复杂性之间显示出更好的权衡。</p><p>K 射线融合方案的消融研究。如第 4.4 节所述，我们建议根据ψ的值自适应调整每个支持样本的融合权重。与其他方案相比，所提出的方案在 5 次拍摄设置下获得了可观的增益（见表 5），进一步证明了衡量图像差异的因子对于 FSS 任务的重要性。</p><p>**为了评估 BAM 在复杂场景中的性能，我们使用不同的支持注释进行了实验。具体来说，除了标准的密集掩膜注释外，我们还引入了边界框注释进行比较。从表 6 中可以看出，使用边界框注释的模型在复杂场景中的表现更好。从表 6 中可以看出，与采用高成本像素注释的模型相比，采用边界框注释的模型结果更有竞争力，这表明所提出的方案具有很强的鲁棒性。</p><h3 id="54-generalized-few-shot-segmentation"><a class="markdownIt-Anchor" href="#54-generalized-few-shot-segmentation"></a> 5.4. Generalized Few-Shot Segmentation</h3><p>鉴于所提方法的独特性，我们将其扩展到更现实但更具挑战性的环境中，即广义 FSS。我们只需根据预定义阈值 τ 将最终输出与基础学习器的输出合并，即可生成整体分割结果，而无需任何可学习参数（公式 (18)）。受到与少拍分类和检测相关的工作[10, 22]的启发，我们还定义了三个指标来评估广义设置下的性能：mIoUn、mIoUb 和 mIoUa，分别表示新类别、基础类别和所有类别的 mIoU 分数。如表 7 所示 如表 7 所示，使用集合模块后，分割模型的性能得到了全面提升，而不仅仅是新类别。此外，图 6 中的定性结果也说明了该模型在处理通用 FSS 任务方面令人满意的能力。</p><h4 id="6-conclusion"><a class="markdownIt-Anchor" href="#6-conclusion"></a> 6. Conclusion</h4><p>我们提出了一种新颖的方案来缓解 FSS 模型对所见内容的偏差问题。我们方案的核心思想是利用基础学习器来识别查询图像中的可混淆（基础）区域，并进一步完善元学习器的预测。令人惊讶的是，即使只有两个普通学习器，我们的方案也在 FSS 基准上创造了新的技术水平。此外，我们还将当前任务扩展到了更具挑战性的广义环境中，并取得了优异的基线结果。我们希望我们的工作能为未来解决偏差或语义混淆问题的研究提供启示。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CANet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CANet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CANet/</url>
      
        <content type="html"><![CDATA[<h1 id="canet-class-agnostic-segmentation-networks-with-iterative-refinement-and-attentive-few-shot-learning"><a class="markdownIt-Anchor" href="#canet-class-agnostic-segmentation-networks-with-iterative-refinement-and-attentive-few-shot-learning"></a> CANet: Class-Agnostic Segmentation Networks with Iterative Refinement and Attentive Few-Shot Learning</h1><p>(<a href="zotero://select/library/items/3AR39Q4N">Chi Zhang 等。, 2019</a>)</p><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>深度卷积神经网络和大规模标记的图像数据集推动了语义分割的最新进展。然而，用于像素分割的数据标签是繁琐而昂贵的。此外，一个训练有素的模型只能在一组预先定义的类别中进行预测。在本文中，我们提出了CANet，一个与类别无关的分割网络，在只有小样本注释图像的情况下对新的类别进行小样本的分割。我们的网络由一个双分支密集比较模块和一个迭代优化模块组成，前者在支持图像和查询图像之间进行多层次的特征比较，后者对预测结果进行迭代改进。此外，我们还引入了一种注意力机制，在k-shot学习的设定下，有效地融合来自多个支持实例的信息。在PASCAL VOC 2012上的实验表明，我们的方法在1张照片分割和5张照片分割中分别取得了55.4%和57.1%的平均交叉-联合得分，比最先进的方法分别高出14.6%和13.2%的幅度。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221024162858165.png" alt="img" /></p><blockquote><p>图1：我们提出的用于单张照片分割的网络概述。我们的框架包括一个密集比较模块（DCM）和一个迭代优化模块（IOM）。只需给定一张有注释的训练图像，我们的网络就能用新的类别对测试图像进行分割，并迭代优化结果。</p></blockquote><h2 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1、介绍</h2><p>深度卷积神经网络在许多视觉理解任务中取得了重大突破，包括图像分类[13, 9, 30]，物体检测[27, 8, 26]，和语义分割[16, 2, 20]。一个关键的原因是大规模数据集的可用性，如ImageNet[4]，使深度模型的训练成为可能。然而，数据标记是昂贵的，特别是对于密集的预测任务，如语义分割和实例分割。与机器学习算法相比，人类在只看到几个例子时就能轻易地从图像中分割出一个新概念。人类和机器学习算法之间的差距促使人们研究小样本的学习，其目的是学习一个模型，该模型可以用稀少的标记训练数据很好地归纳到新的类别。</p><p>==在本文中，我们承担了小样本语义分割的任务，即只使用少数有注释的训练图像来对新类别进行分割。以前关于这个任务的工作[29, 24, 5]遵循双分支结构的设计，包括一个支持分支和一个查询分支。支持分支旨在从支持集中提取信息以指导查询分支的分割工作。在我们的框架中，我们也采用了双分支的设计，以解决少数片段分割的问题。==</p><p>==我们的网络包括一个双分支的密集比较模块，其中一个共享的特征提取器从查询集和支持集中提取表征用于比较。密集比较模块的设计从图像分类任务的度量学习[37, 31]中得到启发，其中距离函数评估了图像之间的相似度。然而，与每个图像都有一个标签的图像分类不同，图像分割需要对具有结构化表示的数据进行预测。直接将公因子学习应用于密集的预测问题是很困难的。为了解决这个问题，一个直接的方法是在所有的像素对之间进行比较。然而，一幅图像中有数百万个像素，对所有像素对进行比较需要巨大的计算成本。相反，我们的目标是从支持图像中获得一个全局的表示，以便进行比较。在这里，为了只关注指定的类别，我们使用前景区域的全局平均池化来过滤掉不相关的信息。然后将全局特征与查询分支中的每个位置进行比较，这可以被看作是一种密集形式的度量学习方法。==</p><p>在小样本的设置下，网络应该能够处理在训练期间从未见过的新类别。因此，我们旨在从CNN中挖掘可转移的表征进行比较。正如在特征可视化文献[39, 38]中所观察到的，较低层的特征与低层次的线索有关，例如边缘和颜色，而较高层的特征则与物体层次的概念有关，例如类别。我们关注的是中间层的特征，这些特征可能构成未见过的类别所共享的对象部分。例如，如果CNN在对汽车类进行训练时学习了与车轮有关的特征，那么这种特征也可能对新的车辆类（如卡车和公共汽车）的特征比较有用。我们在CNN中提取多层次的表征来进行密集的比较。</p><p>由于同一类别中存在着外观上的差异，同一类别的物体可能只具有少数相似的特征。密集的特征比较并不足以指导整个物体区域的分割。尽管如此，这也提供了一个重要的线索，说明物体的位置。在半自动分割的文献中，给出了对类别无关的分割的弱注释，例如，用点击或涂鸦注释的交互式分割[36，14]和用边界盒或极点先验的实例分割[10，21]。定位物体区域的可转移知识是在训练过程中学习的。==受半自动分割任务的启发，我们希望通过密集的比较结果作为先验因素，逐步将物体与背景区分开来。我们提出了一个<strong>迭代优化模块</strong>（IOM），它可以学习迭代地完善预测结果。完善是以循环的形式进行的，密集比较的结果和预测的掩码被发送到一个IOM进行优化，输出结果被循环地发送到下一个IOM。经过几次迭代完善，我们的密集比较模块能够生成细粒度的分割图。在每个IOM内部，我们采用剩余连接来有效地将预测的掩码纳入最后的迭代步骤中。图1显示了我们的一次性分割网络的概况。==</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241500066.png" alt="图1" /></p><p>以前的k-shot分割方法是基于1-shot模型的。他们使用不可学习的融合方法来融合单个的1张照片的结果，例如，平均1张照片的预测或中间特征。相反，我们采用一种注意力机制来有效地融合来自多个支持实例的信息。</p><p>为了进一步减少小样本分割的标注工作，我们探索了一个新的测试环境：我们的模型使用边界盒注释的支持集来执行查询图像的分割。我们在PASCAL VOC 2012数据集和COCO数据集上进行了综合实验，以验证我们网络的有效性。本文的主要贡献总结如下。</p><ul><li>我们开发了一个新颖的双分支密集比较模块，它有效地利用了CNN的多层次特征表示，进行密集的特征比较。</li><li>我们提出了一个迭代优化模块，以迭代的方式完善预测结果。迭代细化的能力可以被推广到未见过的类中，用小样本的学习来生成精细的图。</li><li><strong>我们采用了一种注意力机制，在kshot设置中有效地融合了来自多个支持实例的信息，其性能优于1-shot结果的不可学习的融合方法。</strong></li><li>我们证明了使用弱注释的支持集，即边界框，我们的模型仍然可以达到与昂贵的像素级注释支持集的结果相媲美的性能，这进一步大大减少了对小样本分割的新类的标注工作。</li><li>在PASCAL VOC 2012数据集上的实验表明，我们的方法在1张照片分割和5张照片分割上分别取得了55.4%和57.1%的miou联合得分，分别比最先进的结果高出14.6%和13.2%。</li></ul><h2 id="2-相关工作"><a class="markdownIt-Anchor" href="#2-相关工作"></a> 2、相关工作</h2><p><strong>小样本学习</strong></p><p>小样本学习的目的是学习可转移的知识，这些知识可以用稀少的标记训练数据概括到新的类别。目前有许多关于小样本分类的表述，包括带记忆的递归神经网络[28, 23]，学习微调模型[6, 25]，网络参数预测[1, 35]，以及公因子学习[31, 37, 11]。基于度量学习的方法在少许分类任务中取得了最先进的性能，它们具有快速和以前馈方式进行预测的特点。我们的工作与关系网络[37]最为相关。关系网络元学习了一个深度距离指标来比较图像，并计算出分类的相似度分数。该网络由一个生成图像表示的嵌入模块和一个比较嵌入并输出相似度分数的关系模块组成。这两个模块都是卷积运算的形式。我们网络中的密集比较模块可以被看作是关系网络在密集形式下的扩展，以解决分割的任务。</p><p><strong>小样本语义分割</strong></p><p>完全监督下的语义分割是将图像中的每个像素分类到一组预先定义的类别中的任务[16, 2, 20, 15, 17]。另一方面，小样本语义分割的目的是将分割能力推广到任何新的类别，只用少数注释的例子。以前关于小样本语义分割的工作采用了双分支结构。Shaban等人[29]首先在语义分割上采用了小样本学习。支持分支直接预测查询分支中最后一层的权重来进行分割。在[24]中，支持分支产生了一个嵌入，它被融合到查询分支中作为额外的特征。我们的网络也采用了双分支设计。然而，与以往工作中两个分支有不同的结构不同，我们网络中的两个分支共享同一个骨干网络。以前的方法中的模型集中在1-shot设置上，当把1-shot扩展到k-shot时，他们对每个支持实例独立应用1-shot方法，并使用不可学习的融合方法在图像层面或特征层面融合单个预测结果。例如，Shaban等人[29]提出使用逻辑OR操作来融合单个预测掩码，Rakelly等人[24]对不同支持例产生的支持分支中的嵌入进行平均。相反，我们采用了一种通过注意力机制的可学习方法来有效地融合来自多个支持实例的信息。</p><h2 id="3-任务描述"><a class="markdownIt-Anchor" href="#3-任务描述"></a> 3、任务描述</h2><p>==假设我们的模型是在一个有类集Ctrain的数据集上训练的，我们的目标是用训练好的模型在一个有新类Ctest的不同数据集上进行预测，在这个数据集上只有少数有注释的例子。直观地说，我们训练模型的能力是，对于一个新的类c 6∈Ctrain，我们的模型能够在只看到该类的几张图片时将该类从图片中分割出来。一旦模型训练完成，参数就固定了，在新的数据集上测试时不需要优化。==</p><p>我们将训练和测试与e范式[33]相统一，以处理小样本的情况。具体来说，给定一个k-shot学习任务，每个情节都是通过采样来构建的：1）支持（训练）集S = {(xis, yi s©)}ik =1，其中xis∈RHi×Wi×3是一个RGB图像，yi s© ∈RHi×Wi是支持图像中c类的二进制掩码。2）查询（测试）集Q = {xq, yq©}，其中xq是查询图像，yq©是查询图像中c类的基础真实掩码。该模型的输入是支持集S和查询图像xq，输出是查询图像中c类的预测掩码ˆyq©。由于一个查询图像xq中可能有多个类别，当分配了不同的标签c时，地面真相查询掩码是不同的。图1显示了k=1时的任务说明。</p><h2 id="4-方法"><a class="markdownIt-Anchor" href="#4-方法"></a> 4、方法</h2><p>==我们提出了一个新的框架，以解决小样本的语义分割问题。我们首先在不失一般性的前提下，在单次拍摄的环境下说明我们的模型。我们的网络由两个模块组成：密集比较模块（DCM）和迭代优化模块（IOM）。DCM在支持的例子和查询的例子之间进行密集的特征比较，而IOM则对预测结果进行迭代细化。图2（a）显示了我们框架的概况。为了将我们的网络从单次学习推广到k次学习，我们采用了一种注意力机制来融合来自不同支持实例的信息。此外，我们提出了一个新的测试环境，即使用带有边界框注释的支持图像来进行小样本的分割，这一点将在后面描述。==</p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241509212.png" style="zoom:150%;" /><h3 id="41-密集比较模块"><a class="markdownIt-Anchor" href="#41-密集比较模块"></a> 4.1、密集比较模块</h3><p>我们开发了一个双分支密集比较模块，将查询图像中的每个位置与支持实例进行密集比较，如图2（b）所示。该模块由两个子模块组成：<strong>一个是提取表征的特征提取器，一个是进行特征比较的比较模块。</strong></p><p><strong>特征提取</strong></p><p>特征提取器旨在从CNN中获取不同层次的表征，用于特征匹配。我们使用ResNet-50[9]作为特征提取器的骨干。如同以前的小样本分割工作一样，骨干模型是在Imagenet[4]上预训练的。正如在CNN特征可视化文献[39, 38]中所观察到的，较低层的特征往往与低层次的线索有关，例如边缘和颜色，而较高层的特征则与对象层次的概念有关，例如对象类别。在小样本的情况下，我们的模型应该适应任何未见过的类别。<strong>因此，我们不能假设在训练过程中学习了与未见过的类别相对应的特征。相反，我们关注的是可能构成未见过的类别所共享的物体部分的中间层特征。ResNet中的各层根据空间分辨率分为4个块，自然对应于4个不同的表示层次。我们选择由块2和块3产生的特征进行特征比较，并在块3之后放弃各层。我们在块2之后的层中使用扩张卷积[2]来保持特征图的空间分辨率。块2之后的所有特征图都有一个固定的尺寸，为输入图像的1/8。块2和块3之后的特征被串联起来，并通过3×3卷积编码为256维。我们在第5.1.3节中研究了用于比较的特征的选择。支持分支和查询分支都使用相同的特征提取器。在训练过程中，我们保持ResNet中的权重固定。</strong></p><p><strong>密集比较</strong></p><p>由于支持图像中可能有多个物体类别和杂乱的背景，我们希望获得一个只对应于目标类别的嵌入来进行比较。在这里，我们使用前景区域的全局平均池化化，将特征图挤压成一个特征向量。全局图像特征在分割任务中变得非常有用[19, 40, 3]，这可以通过全局平均池化化轻松实现。在我们的网络中，我们只对前景区域的特征进行平均，以过滤掉不相关的区域。在我们从支持集获得全局特征向量后，我们将该向量与查询分支生成的特征图中的所有空间位置连接起来。这一操作的目的是将查询分支中的所有空间位置与支持分支中的全局特征向量进行比较。然后，串联的特征图再经过另一个卷积块与256个3×3卷积滤波器进行比较。</p><p>为了有效实施，我们首先对二元支持掩码进行双线性下采样，使其与特征图的空间大小相同，然后对特征图进行逐元乘法。因此，属于背景区域的特征层为零。然后，我们采用全局池化，将得到的向量除以前景区域，得到平均特征向量。我们将该向量向上取样到与查询特征相同的空间大小，并将它们连接起来进行密集比较。</p><h3 id="42-迭代优化模块"><a class="markdownIt-Anchor" href="#42-迭代优化模块"></a> 4.2. 迭代优化模块</h3><p>由于同一类别中存在着外观上的差异，密集比较只能匹配物体的一部分，这可能不足以准确地分割图像中的整个物体。我们观察到，初始预测是关于物体粗略位置的一个重要线索。我们提出一个迭代优化模块，对预测结果进行迭代优化。其结构如图2（c）<strong>所示。该模块的输入是由密集比较模块生成的特征图和上一次迭代的预测掩码。直接将带有预测掩码的特征图作为附加通道连接起来会导致特征分布的不匹配，因为在第一次前向传递中没有预测掩码。相反，我们建议将预测的掩码以残差形式纳入。</strong></p><p>其中x是密集比较模块的输出特征；yt-1是上一个迭代步骤的预测掩码，Mt是残差块的输出。函数F（-）是特征x和预测掩码yt-1的连接，然后是两个3×3的卷积块，有256个滤波器。然后，我们添加两个具有相同数量卷积滤波器的虚化残差块。在此基础上，我们使用Deeplab V3[3]中提出的Atrous Spatial Pyramid Pooling模块（ASPP）来捕捉多尺度信息。该模块由四个平行分支组成，包括三个3×3的卷积，其阿特拉斯率分别为6、12和18，以及一个1×1的卷积。1×1卷积是在图像级别的特征上操作的，这是通过全局平均池化化实现的。然后将得到的向量双线性上采样到原始空间大小。来自4个分支的输出特征被串联起来，并通过另一个带有256个过滤器的1×1卷积进行融合。最后，我们使用1×1卷积来生成最终的掩码，包括一个背景掩码和一个前景掩码。我们使用softmax函数对每个位置的分数进行归一化处理，从而输出前景和背景的置信度图。然后，这些置信图被送入下一个IOM进行优化。我们的最终结果是通过对置信度图进行双线性上样，使其与查询图像的空间大小相同，并根据置信度图对每个位置进行分类。在训练时，为了避免迭代优化模块过度拟合预测mask，我们交替使用上一个epoch的预测mask和空mask作为IOM的输入。预测掩码yt-1被重置为空掩码，其概率为pr。这可以看作是整个掩码的丢弃，是标准丢弃的延伸[32]。与以往分割文献中的迭代细化方法相比[14, 34, 22]，我们的方法将细化方案整合到具有剩余连接的模型中，这样整个模型可以以前馈的方式运行，并且是端到端的训练。</p><h3 id="43-k-shot-分割的注意机制"><a class="markdownIt-Anchor" href="#43-k-shot-分割的注意机制"></a> 4.3. k-shot 分割的注意机制</h3><p>为了在k-shot设置中有效地合并信息，我们使用一个注意力机制来融合不同支持实例产生的比较结果。具体来说，我们在DCM中增加了一个与密集比较卷积平行的注意模块（见图3）。注意力分支由两个卷积块组成。第一个有256个3×3滤波器，然后是3×3最大集合。第二个有一个3×3卷积，然后是全局平均池化。注意力分支的结果作为权重λ。然后，所有支持实例的权重通过softmax函数进行归一化。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241557121.png" alt="" /></p><p>最终的输出是由不同支持样本产生的特征的加权和。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241539954.png" alt="" /></p><h3 id="44-bbox注释"><a class="markdownIt-Anchor" href="#44-bbox注释"></a> 4.4. bbox注释</h3><p>由于我们的密集比较模块的本质是将查询图像中的每个位置与支持实例提供的全局表示进行密集比较，我们探索了一种新的支持集注释形式，即使用边界盒。与像素级注释相比，边界盒注释使用一个矩形框来表示物体区域，这在物体检测任务中经常使用。标注边界盒比像素化标注要便宜得多。我们通过将整个边框区域视为前景来放松支持集。我们在这种设置下测试我们的模型，以评估我们框架的能力。两种测试设置的比较如图4所示。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241554933.png" alt="图4" /></p><h2 id="5-实验"><a class="markdownIt-Anchor" href="#5-实验"></a> 5、实验</h2><p>为了评估我们提出的方法的性能，我们在PASCAL VOC 2012数据集和COCO数据集上进行了广泛的实验。我们的网络是端到端的训练。损失函数是输出地图中所有空间位置上交叉熵损失的平均值。我们的网络是用SGD在Nvidia Tesla P100 GPU上用PyTorch库训练了200个epochs。我们将学习率设置为0.0025，将概率pr设置为0.7。我们在PASCAL-5i上使用4个事件的迷你批处理进行训练，在COCO上使用8个事件。在推理时间，我们在初始预测后对预测结果进行了4次迭代优化。</p><p><strong>评价指标</strong></p><p>在以前的工作中，评价指标有一个微小的差异。Shaban等人[29]测量每个类别的前景交叉-联合（IoU）并使用所有类别的平均IoU（meanIoU）来报告结果。而在[24，5]中，他们忽略了图像类别，并计算所有测试图像的前景IoU和背景IoU的平均值（FB-IoU）。由于以下原因，我们在分析实验中选择了MeanIoU评价指标。</p><p>1）不同类别的测试样本的数量并不平衡（例如，49个羊类与378个人类）。忽略图像类别可能会导致对有更多图像的类别产生偏颇的结果。另外，我们可以通过meanIoU评价指标观察我们的模型在不同类别中的有效性。</p><p>2）由于大多数物体相对于整个图像来说是很小的，即使模型未能分割任何物体，背景IU仍然可以很高，因此不能反映模型的能力。</p><p>3）在二元分割的文献中（如视频分割和交互式分割），前景IU更经常被使用。尽管如此，我们仍然在这两个评价指标下将我们的结果与以前的工作进行比较。</p><h3 id="51-pascal-5i"><a class="markdownIt-Anchor" href="#51-pascal-5i"></a> 5.1. PASCAL-5i</h3><p>PASCAL-5i是在[29]中提出的一个用于小样本语义分割的数据集。它是建立在PASCAL VOC 2012的图像和SDS[7]的额外注释上。来自PASCAL VOC的20个物体类别被均匀地分为4个部分，其中3个部分用于训练，1个部分用于测试。在测试时，在测试部分随机抽出1000个支持-查询对。关于PASCAL-5i的更多细节可以在[29]中找到。</p><h4 id="511-comparison-with-the-state-of-the-art-methods"><a class="markdownIt-Anchor" href="#511-comparison-with-the-state-of-the-art-methods"></a> 5.1.1 Comparison with the State-of-the-art Methods</h4><p>我们在表1中把我们的模型与最先进的方法进行了比较。表1（a）显示了在meanIoU评估指标下的评估结果，表1（b）显示了在FB-IoU指标下的结果。对于[29]在FB-IoU指标下的表现，我们引用[24]中转载的结果。我们的模型在两个评价指标下都明显优于现有的方法。特别是，我们的平均IoU得分在1次拍摄任务中比最先进的结果高出14.6%，在5次拍摄任务中高出13.2%。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241603785.png" alt="" /></p><blockquote><p>Table 1 – Results on the PASCAL-5i dataset. Our proposed method outperforms all previous methods under both evaluation metrics and sets a new state-of-the-art performance (bold).</p></blockquote><p><strong>定性结果</strong></p><p>图5显示了我们分割结果的一些定性的例子。请注意，在给定相同的查询图像时，我们的模型能够在不同的支持例子中划分出不同的类别（见图5中的第5和第6个例子）。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241607257.png" alt="" /></p><blockquote><p>Figure 5 – Qualitative examples of 1-shot segmentation on the PASCAL-5i dataset. The first row is query images and support images (right bottom) with ground-truth annotations. The second row is our predicted results. Note that the 5th and the 6th examples have the same query images and our model is able to segment different classes when different support examples are presented.</p></blockquote><p><strong>“5.1.2 Experiments on Bounding Box Annotations”</strong> (<a href="zotero://select/library/items/3AR39Q4N">Chi Zhang 等。, 2019, p. 5222</a>) (<a href="zotero://open-pdf/library/items/BDTNTTDB?page=6">pdf</a>)</p><p>我们在测试时用边界盒注释的支持集来评估CANet。我们从PASCAL VOC 2012数据集和SDS[7]中获取边界盒注释。支持掩码是指支持图像中一个实例的边界框内的区域，而不是所有实例。该实例是随机选择的。如表2所示，使用边界框注释支持集的性能与使用昂贵的像素级注释支持集的结果相当，这意味着我们的密集比较模块能够抵御边界框内背景区域引入的噪声。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241609499.png" alt="" /></p><p><strong>“5.1.3 Ablation Study”</strong> (<a href="zotero://select/library/items/3AR39Q4N">Chi Zhang 等。, 2019, p. 5222</a>) (<a href="zotero://open-pdf/library/items/BDTNTTDB?page=6">pdf</a>)</p><p>我们在PASCAL-5i数据集上进行了广泛的消融实验，以检查我们网络中不同组件的有效性。所有的结果都是在PASCAL-5i数据集上进行的4次分割的平均IoU。</p><p><strong>特征比较</strong></p><p>在表3中，我们比较了在ResNet-50中使用不同级别特征进行特征比较的模型变体。在所有情况下，我们在比较前将特征编码为256维，并且不采用迭代优化。我们用单块和多块进行特征比较实验。当使用单块进行比较时，块3表现最好。当使用多个块进行比较时，块2和块3的组合取得了最好的结果。原因是区块2对应的是相对低级的线索，单靠它不足以匹配物体的部分。而block4对应的是高层次的特征，例如类别，并且包含了大量的参数（2048个通道），这使得它很难在几率设置下进行优化。块2和块3的组合对于匹配类别无关的对象部分是最好的。我们还用VGG16作为特征提取器来实施实验。我们选择阶段2、3和4（共5个）的特征。以VGG为骨干的最终多尺度测试结果是54.3%。与ResNet50版本（55.4%）相比，性能只下降了1.1%，仍然明显优于最先进的结果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241610586.png" alt="" /></p><p><strong>迭代优化模块。</strong></p><p>为了验证我们提出的迭代优化模块的有效性，我们将我们的网络与不采用额外的IOM进行优化的基线模型，即来自CANet(CANet-Init)的初始预测进行比较。我们还将我们的迭代优化方案与DenseCRF[12]进行了比较，DenseCRF是一种在分割文献中广泛使用的后处理方法，用于细化分割图。表4显示了不同模型变体的结果。如图所示，迭代优化比初始预测产生了2.8%的改进。DenseCRF并没有明显改善小样本的分割预测。我们将结果可视化，发现对于成功定位大部分物体区域的预测面具，DenseCRF可以有效地改善分割结果，特别是在物体边界区域。然而，对于失败的面具，例如错误的物体定位，DenseCRF会扩大假阳性区域，从而恶化了IoU得分。另一方面，我们的IOM可以有效地填充物体区域，并以可学习的方式去除不相关的区域。我们在图6中可视化了我们迭代优化过程的中间结果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210241608574.png" alt="" /></p><p><strong>注意力vs.特征融合vs.掩码融合。</strong></p><p>在k-shot设置中，我们将我们的注意力机制与以前工作中的几种解决方案进行比较。</p><ol><li>特征级平均融合。我们实验了[24]中的方法，也就是对不同支持实例产生的特征进行平均。</li></ol><ol start="2"><li>掩码的逻辑OR融合。Shaban等人[29]使用1-shot模型对每个支持实例进行预测，并使用逻辑OR操作来融合各个预测的掩码。逻辑OR操作意味着，如果有任何支持实例将其预测为前景，则该位置将被预测为前景。</li><li>mask的平均融合。此外，我们还尝试用平均操作来融合单个1次预测的置信度图。我们在表5中报告了CANet与不同融合方案的结果。我们的注意力机制表现最好，并且比1次拍摄的基线带来了最大的增量。这表明，在融合来自不同支持实例的信息时，学习到的注意力模块比特征层面或图像层面的非学习性融合方法更有效。使用逻辑OR操作来融合预测的掩码并没有显示出比1次拍摄结果的改进。</li></ol><p><strong>多规模评价。</strong></p><p>我们还实验了多尺度评估，这在分割文献中是很常见的。具体来说，我们通过[0.7, 1, 1.3]对查询图像进行重新缩放，并对其预测结果进行平均。在1次拍摄和5次拍摄的设置中，多尺度评估分别带来1.4%和1.3%的平均IoU改进。</p><h2 id="6-结论"><a class="markdownIt-Anchor" href="#6-结论"></a> 6、结论</h2><p>我们提出了CANet，一个新颖的具有少许学习功能的类诊断分割网络。密集比较模块利用CNN中的多层次特征来进行密集特征比较，迭代优化模块学习迭代完善预测结果。我们解决k-shot问题的注意机制证明比不可学习的方法更有效。综合实验表明我们的框架是有效的，其性能明显优于以前的所有工作。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CBL</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CBL/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CBL/</url>
      
        <content type="html"><![CDATA[<h2 id="3-effective-number-of-samples"><a class="markdownIt-Anchor" href="#3-effective-number-of-samples"></a> 3. Effective Number of Samples</h2><p>We formulate the data sampling process as a simplified version of random covering. The key idea is to associate each sample with a small neighboring region instead of a single point. We present our theoretical framework and the formulation of calculating effective number of samples.</p><h3 id="31-data-sampling-as-random-covering"><a class="markdownIt-Anchor" href="#31-data-sampling-as-random-covering"></a> 3.1. Data Sampling as Random Covering</h3><p>Given a class, denote the set of all possible data in the feature space of this class as S. We assume the volume of S is N and N ≥ 1. Denote each sample as a subset of S that has the unit volume of 1 and may overlap with other samples. Consider the data sampling process as a random covering problem where each subset is randomly sampled from S to cover the entire set of S. The more data is being sampled, the better the coverage of S is. The expected total volume of sampled data increases as the number of samples increases and is bounded by N . Therefore, we define:</p><p>Definition 1 (Effective Number). The effective number of samples is the expected volume of samples.</p><p>The calculation of the expected volume of samples is a very difficult problem that depends on the shape of the sample and the dimensionality of the feature space [18]. To make the problem tamable, we simplify the problem by not considering the situation of partial overlapping. That is, we assume a newly sampled data point can only interact with previously sampled data in two ways: either entirely inside the set of previously sampled data with the probability of p or entirely outside with the probability of 1 − p, as illustrated in Figure 2. As the number of sampled data points increases, the probability p will be higher.</p><p>Before we dive into the mathematical formulations, we discuss the connection between our definition of effective number of samples and real-world visual data. Our idea is to capture the diminishing marginal benefits by using more data points of a class. Due to intrinsic similarities among real-world data, as the number of samples grows, it is highly possible that a newly added sample is a near-duplicate of existing samples. In addition, CNNs are trained with heavy data augmentations, where simple transformations such as random cropping, re-scaling and horizontal flipping will be applied to the input data. In this case, all augmented examples are also considered as same with the original example. Presumably, the stronger the data augmentation is, the smaller the N will be. The small neighboring region of a sample is a way to capture all near-duplicates and instances that can be obtained by data augmentation. For a class, N can be viewed as the number of unique prototypes.</p><h3 id="32-mathematical-formulation"><a class="markdownIt-Anchor" href="#32-mathematical-formulation"></a> 3.2. Mathematical Formulation</h3><p>Denote the effective number (expected volume) of samples as En, where n ∈ Z&gt;0 is the number of samples.</p><p>Proposition 1 (Effective Number). En = (1−βn)/(1−β), where β = (N − 1)/N .</p><p>Proof. We prove the proposition by induction. It is obvious that E1 = 1 because there is no overlapping. So E 1 = (1−β1)/(1−β) = 1 holds. Now let’s consider a general case where we have previously sampled n−1 examples and are about to sample the nth example. Now the expected volume of previously sampled data is En−1 and the newly sampled data point has the probability of p = En−1/N to be overlapped with previous samples. Therefore, the expected volume after sampling nth example is:</p><p>The above proposition shows that the effective number of samples is an exponential function of n. The hyperparameter β ∈ [0, 1) controls how fast En grows as n increases.</p><p>This means that the jth sample contributes βj−1 to the effective number. The expected total volume N for all possible data in the class can then be calculated as:</p><p>This is consistent with our definition of β in the proposition.</p><p>Implication 1 (Asymptotic Properties). En = 1 if β = 0 (N = 1). En → n as β → 1 (N → ∞).</p><p>Proof. If β = 0, then En = (1 − 0n)/(1 − 0) = 1. In the case of β → 1, denote f (β) = 1 − βn and g(β) = 1 − β. Since limβ→1 f (β) = limβ→1 g(β) = 0, g′(β) = −1 6= 0 and limβ→1 f ′(β)/g′(β) = limβ→1(−nβn−1)/(−1) = n exists, using L’Hˆ opital’s rule, we have:</p><p>The asymptotic property of En shows that when N is large, the effective number of samples is same as the number of samples n. In this scenario, we think the number of unique prototypes N is large, thus there is no data overlap and every sample is unique. On the other extreme, if N = 1, this means that we believe there exist a single prototype so that all the data in this class can be represented by this prototype via data augmentation, transformations, etc.</p><h2 id="4-class-balanced-loss"><a class="markdownIt-Anchor" href="#4-class-balanced-loss"></a> 4. Class-Balanced Loss</h2><p>类平衡损失项旨在通过引入一个与有效样本数量成反比的加权因子，解决从不平衡性数据中进行训练的问题。类平衡损失项可以应用于多种深度网络和损失函数。</p><p>对于标签为 y∈ {1, 2, . , C} 1，其中 C 是类的总数，假设模型估计的类概率为 p = [p1, p2, … , pC ]⊤，其中 pi∈ [0, 1] ∀ i，我们将损失表示为 L(p，y)。假设第 i 类的样本数为 ni，根据公式 2，建议的第 i 类有效样本数为 Eni = (1 - βni i )/(1 - βi)，其中 βi = (Ni - 1)/Ni 。如果不进一步了解每个类别的数据信息，就很难根据经验为所有类别找到一组好的超参数 Ni。因此，在实践中，我们假定 Ni 只与数据集有关，并为数据集中的所有类别设置 Ni = N , βi = β = (N - 1)/N 。</p><p>为了平衡损失，我们引入了一个加权因子 αi，它与第 i 类的有效样本数成反比：αi ∝ 1/Eni 。为了使应用 αi 时的总损失大致相同，我们对 αi 进行了归一化处理，使 ∑C i=1 αi = C。为了简单起见，我们在本文的其余部分滥用 1/Eni 来表示归一化加权因子。</p><p>从形式上讲，给定 i 类样本中总共包含 ni 个样本，我们建议在损失函数中加入加权因子 (1 - β)/(1 - βni )，超参数 β∈ [0, 1]。类平衡（CB）损失可写成</p><p>图 3 是不同 β 条件下类平衡损失与 ny 的函数关系图，其中 β = 0 表示没有重新加权，而 β → 1 表示通过反类频率重新加权。有效样本数的新概念使我们能够使用超参数 β 在无重新加权和按逆类频重新加权之间平滑地调整类平衡项。</p><p>为了证明所提出的分类平衡损失是通用的，我们展示了如何将分类平衡项应用于三种常用的损失函数：softmax 交叉熵损失、sigmoid 交叉熵损失和焦点损失。</p><h3 id="41-class-balanced-softmax-cross-entropy-loss"><a class="markdownIt-Anchor" href="#41-class-balanced-softmax-cross-entropy-loss"></a> 4.1. Class-Balanced Softmax Cross-Entropy Loss</h3><p>假设模型对所有类别的预测输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="bold">z</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>z</mi><mi>C</mi></msub><msup><mo stretchy="false">]</mo><mi mathvariant="normal">⊤</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathbf{z}=[z_1,z_2,\ldots,z_C]^\top\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5591080000000002em;vertical-align:-0.529554em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.029554em;"><span style="top:-3.130446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.529554em;"><span></span></span></span></span></span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 为类别总数。softmax 函数认为每个类别都是互斥的，计算所有类别的概率分布为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}p_i=\exp(z_i)/\sum_{j=1}^C\exp(z_j),\forall i\in\{1,2,\ldots,C\}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.5421130000000005em;vertical-align:-1.5210565000000003em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0210565000000003em;"><span style="top:-4.0210565em;"><span class="pstrut" style="height:3.8283360000000006em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5210565000000003em;"><span></span></span></span></span></span></span></span></span></span></span>. 给定一个带有类别标签 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>​ 的样本，该样本的软最大交叉熵（CE）损失可以写成这样：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">E</mi></mrow><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>z</mi><mi>y</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathrm{CE}_{\mathrm{softmax}}(\mathbf{z},y)=-\log\left(\frac{\exp(z_y)}{\sum_{j=1}^C\exp(z_j)}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">C</span><span class="mord mathrm">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight" style="margin-right:0.07778em;">f</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">z</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.057049em;vertical-align:-1.3070490000000001em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3070490000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p><p>假设类 y 有 ny 个训练样本，则类平衡（CB）软最大交叉熵损失为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">B</mi></mrow><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><msub><mi>n</mi><mi>y</mi></msub></msup></mrow></mfrac><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>z</mi><mi>y</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathrm{CB}_{\mathrm{softmax}}(\mathbf{z},y)=-\frac{1-\beta}{1-\beta^{n_y}}\log\left(\frac{\exp(z_y)}{\sum_{j=1}^C\exp(z_j)}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">C</span><span class="mord mathrm">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight" style="margin-right:0.07778em;">f</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">z</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.057049em;vertical-align:-1.3070490000000001em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6064620000000001em;"><span style="top:-3.0050700000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3070490000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p><h3 id="42-class-balanced-sigmoid-cross-entropy-loss"><a class="markdownIt-Anchor" href="#42-class-balanced-sigmoid-cross-entropy-loss"></a> 4.2. Class-Balanced Sigmoid Cross-Entropy Loss</h3><p>与 softmax 不同的是，用 sigmoid 函数计算的类别概率假定每个类别都是独立的，并不相互排斥。在使用 sigmoid 函数时，我们将多类视觉识别视为多个二元分类任务，其中网络的每个输出节点都在进行 &quot;一元对全元 &quot;分类，以预测目标类别在其他类别中的概率。与 softmax 相比，sigmoid 假设在实际数据集中有两个优势：（1）Sigmoid 不假设类之间的互斥性，这与实际数据非常吻合，在实际数据中，少数几个类之间可能非常相似，尤其是在有大量细粒度类的情况下。(2) 由于每个类别都被认为是独立的，并有自己的预测器，因此 sigmoid 将单标签分类与多标签预测统一起来。这是一个很好的特性，因为现实世界的数据往往有不止一个语义标签。</p><p>使用与 softmax 交叉熵相同的符号，为简单起见，我们将 zt i 定义为：</p><p>那么 sigmoid 交叉熵（CE）损失可以写成</p><p>类平衡（CB）西格玛交叉熵损失为</p><h3 id="43-class-balanced-focal-loss"><a class="markdownIt-Anchor" href="#43-class-balanced-focal-loss"></a> 4.3. Class-Balanced Focal Loss</h3><p>最近提出的焦点损失（FL）[27] 在 sigmoid 交叉熵损失的基础上增加了一个调节因子，以减少分类良好样本的相对损失，并将重点放在困难样本上。表示 pit = sigmoid(zt i ) = 1/(1 + exp(-zt i )) ，焦点损失可写成</p><p>类平衡（CB）焦点损耗为：</p><p>原始焦点损失有一个 α 平衡变体。当 αt = (1-β)/(1-βny ) 时，类平衡焦点损耗与 α 平衡焦点损耗相同。因此，类平衡项可以看作是根据有效样本数在焦点损耗中设置 αt 的明确方法。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CLIP</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CLIP/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CLIP/</url>
      
        <content type="html"><![CDATA[<h1 id="clip"><a class="markdownIt-Anchor" href="#clip"></a> CLIP</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>最先进的计算机视觉系统经过训练，可以预测一组固定的预定物体类别。这种受限的监督形式限制了其通用性和可用性，因为要指定任何其他视觉概念都需要额外的标记数据。直接从图像原始文本中学习是一种很有前途的替代方法，它可以利用更广泛的监督来源。我们证明，预测哪张图片配哪条标题这一简单的预训练任务，是在从互联网上收集的 4 亿对（图片、文本）数据集上从头开始学习 SOTA 图像表征的高效且可扩展的方法。经过预训练后，自然语言被用来引用已学过的视觉概念（或描述新的概念），从而实现了模型向下游任务的零转移。我们在 30 多个不同的现有计算机视觉数据集上进行了基准测试，研究了这种方法的性能，这些数据集涵盖了 OCR、视频中的动作识别、地理定位以及多种类型的细粒度对象分类等任务。该模型可无缝转移到大多数任务中，无需任何特定的数据集训练，通常就能与完全有监督的基线模型相媲美。例如，我们在 ImageNet zero-shot 上的准确率与原始 ResNet-50 不相上下，而无需使用它所训练的 128 万个训练示例中的任何一个。</p><h2 id="1-introduction-and-motivating-work"><a class="markdownIt-Anchor" href="#1-introduction-and-motivating-work"></a> 1 Introduction and Motivating Work</h2><p>过去几年中，直接从原始文本中学习的预训练方法彻底改变了 NLP（Dai &amp; Le，2015；Peters 等人，2018；Howard &amp; Ruder，2018；Radford 等人，2018；Devlin 等人，2018；Raffel 等人，2019）。自回归和掩码语言建模等与任务无关的目标在计算、模型容量和数据方面已经跨越了许多数量级，能力稳步提高。作为标准化输入输出接口的 “文本到文本”（McCann 等人，2018 年；Radford 等人，2019 年；Raffel 等人，2019 年）的发展，使任务无关架构能够零距离传输到下游数据集，无需专门的输出头或数据集特定定制。像 GPT-3 这样的旗舰系统（Brown 等人，2020 年）现在在许多任务中都具有定制模型的竞争力，同时几乎不需要特定数据集的训练数据。</p><p>这些结果表明，在网络规模的文本集合中，现代预训练方法可获得的监督总量超过了高质量的人群标签 NLP 数据集。然而，在计算机视觉等其他领域，在人群标签数据集（如 ImageNet）上预训练模型仍然是标准做法（Deng 等人，2009 年）。直接从网络文本中学习的可扩展预训练方法能否在计算机视觉领域带来类似的突破？先前的工作令人鼓舞。</p><p>20 多年前，Mori 等人（1999 年）通过训练一个模型来预测与图像配对的文本文档中的名词和形容词，探索改进基于内容的图像检索。Quattoni 等人（2007 年）证明，通过在分类器的权重空间中进行流形学习，可以学习到更多数据高效的图像表征，而这些分类器是为预测与图像相关的标题中的单词而训练的。Srivastava &amp; Salakhutdinov（2012 年）通过在低级图像和文本标签特征之上训练多模态深度玻尔兹曼机，探索了深度表征学习。Joulin 等人（2016 年）对这一研究方向进行了更新，证明了为预测图像标题中的单词而训练的 CNN 可以学习有用的图像表征。他们将 YFCC100M 数据集（Thomee 等人，2016 年）中图像的标题、描述和标签元数据转换为词袋多标签分类任务，并证明预训练 AlexNet（Krizhevsky 等人，2012 年）来预测这些标签所学习到的表征在转移任务中的表现与基于 ImageNet 的预训练类似。Li 等人（2017 年）随后将这种方法扩展到了预测短语 n-grams（除单个单词外），并展示了他们的系统通过根据所学视觉 n-grams（视觉 n-grams）字典对目标类别进行评分，并预测得分最高的类别，从而实现向其他图像分类数据集的零转移的能力。VirTex (Desai &amp; Johnson, 2020)、ICMLM (Bulent Sariyildiz 等人, 2020)和 ConVIRT (Zhang 等人, 2020)采用了更新颖的架构和预训练方法，最近展示了基于转换器的语言建模、遮蔽语言建模和对比目标从文本中学习图像表征的潜力。</p><p>使用自然语言监督进行图像表征学习虽然是令人兴奋的概念证明，但仍然很少见。这可能是因为在常见基准上的表现远低于其他方法。例如，Li 等人（2017 年）在零镜头设置下的 ImageNet 上仅达到 11.5% 的准确率。这远远低于当前技术水平的 88.4% 的准确率（Xie 等人，2020 年）。它甚至低于经典计算机视觉方法 50% 的准确率（Deng 等人，2012 年）。相反，范围更窄但目标更明确的弱监督使用却提高了性能。Mahajan 等人（2018 年）的研究表明，预测 Instagram 图像上的 ImageNet 相关标签是一项有效的预训练任务。当针对 ImageNet 进行微调时，这些预训练模型的准确率提高了 5%以上，并改善了当时的整体技术水平。Kolesnikov 等人（2019 年）和 Dosovitskiy 等人（2020 年）也通过预训练模型来预测噪声标签 JFT-300M 数据集的类别，在更广泛的传输基准集上取得了巨大的收益。</p><p>这一研究方向代表了当前从有限的有监督 &quot;金标签 &quot;中学习和从几乎无限量的原始文本中学习的实用中间路线。然而，这并不是没有妥协。这两项研究都经过了精心设计，并在此过程中将其监督范围分别限制在 1000 类和 18291 类。自然语言具有通用性，能够表达更广泛的视觉概念，因此也能监督更广泛的视觉概念。这两种方法都使用静态软最大分类器进行预测，缺乏动态输出机制。这严重削弱了它们的灵活性，也限制了它们的 &quot;零点 &quot;能力。</p><p>这些弱监督模型与最近直接从自然语言学习图像表征的探索之间的一个关键区别在于规模。Mahajan 等人（2018 年）和 Kolesnikov 等人（2019 年）在数百万到数十亿张图像上对其模型进行了长达数年的加速训练，而 VirTex、ICMLM 和 ConVIRT 则在一到二十万张图像上进行了为期数天的加速训练。在这项工作中，我们缩小了这一差距，研究了在大规模自然语言监督下训练的图像分类器的行为。借助互联网上大量公开可用的这种形式的数据，我们创建了一个包含 4 亿对（图像、文本）数据的新数据集，并证明了从头开始训练的简化版 ConVIRT（我们称之为 CLIP，即对比语言-图像预训练）是一种高效的自然语言监督学习方法。我们通过训练一系列八个模型来研究 CLIP 的可扩展性，这些模型的计算量几乎跨越了两个数量级，并观察到转移性能是计算量的一个平稳可预测函数（Hestness 等人，2017 年；Kaplan 等人，2020 年）。我们发现，CLIP 与 GPT 系列类似，能在预训练期间学会执行一系列任务，包括 OCR、地理定位、动作识别等。我们在 30 多个现有数据集上对 CLIP 的零点转移性能进行了基准测试，发现它可以与之前的特定任务监督模型相媲美。我们还通过线性探针表示学习分析证实了这些发现，并表明 CLIP 的性能优于最佳的公开 ImageNet 模型，同时计算效率也更高。此外，我们还发现，CLIP 模型的零点测试比同等精度的 ImageNet 监督模型要稳健得多，这表明对任务无关模型的零点测试评估更能代表模型的能力。这些结果具有重要的政策和伦理意义，我们将在第 7 节对此进行探讨。</p><h2 id="2-approach"><a class="markdownIt-Anchor" href="#2-approach"></a> 2 Approach</h2><h3 id="21-natural-language-supervision"><a class="markdownIt-Anchor" href="#21-natural-language-supervision"></a> 2.1 Natural Language Supervision</h3><p>我们的方法的核心是通过自然语言中的监督来学习感知。正如导言中所讨论的，这根本不是什么新想法，但是用于描述这一领域工作的术语多种多样，甚至似乎相互矛盾，而且所述动机也各不相同。Zhang等人（2020年）、Gomez等人（2017年）、Joulin等人（2016年）以及Desai和Johnson（2020年）都介绍了从与图像配对的文本中学习视觉表征的方法，但他们将自己的方法分别描述为无监督、自监督、弱监督和监督。</p><p>我们要强调的是，这些方法的共同点不在于所使用的特定方法的任何细节，而在于将自然语言作为一种训练信号。所有这些方法都是从自然语言监督中学习的。虽然早期的工作在使用主题模型和 n-gram 表示时与自然语言的复杂性进行了斗争，但深度上下文表示学习的改进表明，我们现在拥有了有效利用这一丰富监督来源的工具（McCann 等人，2017 年）。</p><p>与其他训练方法相比，从自然语言中学习有几个潜在的优势。与用于图像分类的标准众包标签相比，自然语言监督更容易扩展，因为它不要求注释采用经典的 “机器学习兼容格式”，如典型的1-of-N多数票 “黄金标签”。相反，基于自然语言的方法可以被动地学习互联网上大量文本中包含的监督信息。与大多数无监督或自监督学习方法相比，从自然语言中学习还有一个重要优势，即它 &quot;不仅仅 &quot;学习一种表征，而且还将该表征与语言联系起来，从而实现灵活的零点转移。在下面的小节中，我们将详细介绍我们所采用的具体方法。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CWDLoss</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CWDloss/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CWDloss/</url>
      
        <content type="html"><![CDATA[<h1 id="channel-wise-knowledge-distillation-for-dense-prediction"><a class="markdownIt-Anchor" href="#channel-wise-knowledge-distillation-for-dense-prediction"></a> Channel-wise Knowledge Distillation for Dense Prediction</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>知识蒸馏（KD）已被证明是训练紧凑型密集预测模型的一种简单而有效的工具。轻量级学生网络是通过从大型教师网络转移过来的额外监督来训练的。之前用于密集预测任务的大多数 KD 变体都是通过对每个空间位置上的激活值进行归一化，并最大限度地减少点和/或对的差异，从而在空间域中对学生网络和教师网络的激活图进行对齐。与之前的方法不同，我们在此建议对每个通道的激活图进行归一化处理，以获得软概率图。通过简单地最小化两个网络的通道概率图之间的库尔巴克-莱伯勒（KL）分歧，蒸馏过程将更多地关注每个通道中最突出的区域，这对密集预测任务非常有价值。</p><p>我们对一些密集预测任务进行了实验，包括语义分割和物体检测。实验证明，我们提出的方法大大优于最先进的蒸馏方法，而且在训练过程中所需的计算成本更低。特别是，在 COCO 数据集上，我们将 RetinaNet 检测器（ResNet50 主干网）的 mAP 提高了 3.4%；在 Cityscapes 数据集上，我们将 PSPNet（ResNet18 主干网）的 mIoU 提高了 5.81%。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>密集预测任务是计算机视觉领域的一组基本任务，包括语义分割 [48, 6] 和物体检测 [21, 30]。这些任务需要学习强大的特征表征，以便在像素级理解复杂场景。因此，最先进的模型通常需要很高的计算成本，这使得它们在移动设备上的部署非常麻烦。因此，专为密集预测任务设计的紧凑型网络备受关注。此外，以前的研究还利用知识提炼（KD）技术对有效训练轻量级网络进行了研究。紧凑型网络在大型教师网络的监督下进行训练，可以获得更好的性能。开创性的工作[16, 2]被提出并得到了深入研究，主要是针对图像分类任务。</p><p>密集预测任务是每像素预测问题，比图像级分类更具挑战性。以往的研究 [25, 20] 发现，直接将分类中的 KD 方法 [16, 2] 移植到语义分割中可能无法获得令人满意的结果。严格对齐教师和学生网络之间的按点分类得分或特征图可能会强制执行过于严格的约束，从而导致次优解决方案。</p><p><img src="images/image-20240218095125852.png" alt="image-20240218095125852" /></p><blockquote><p>图 2 空间知识蒸馏（左上）通过在空间域中对齐特征图来工作。相反，我们的通道分布蒸馏（右上）通过最小化 KL 散度，将学生特征图的每个通道与教师网络的通道对齐。下图显示每个通道的激活值倾向于对场景类别的显着性进行编码。</p></blockquote><p>最近的研究[25, 24, 18]关注不同空间位置之间的相关性。如图 2(a)所示，每个空间位置上的激活值1 都进行了归一化处理。然后，通过聚合不同空间位置的子集来处理某些任务的特定关系，如成对关系 [25, 35] 和类间关系 [18]。在捕捉空间结构信息和提高学生网络性能方面，这些方法可能比按点排列更有效。然而，激活图谱中的每个空间位置对知识转移的贡献是均等的，这可能会带来来自教师网络的冗余信息。</p><p>在这项工作中，我们提出了一种新颖的通道知识提炼方法，即对密集预测任务中每个通道的激活图进行归一化处理，如图 2(b) 所示。然后，我们最小化归一化通道激活图的不对称库尔巴克-莱伯勒（KL）发散，并将其转换为教师和学生网络之间每个通道的分布。我们在图 2（c）中展示了通道分布的一个示例。每个通道的激活都倾向于编码场景类别的显著性。对于每个通道，学生网络都会被引导去模仿激活值显著的区域，从而在密集预测任务中获得更准确的定位。例如，在物体检测中，学生网络会更加关注学习前景物体的激活。</p><p>最近的一些研究利用了通道中包含的知识。通道蒸馏法[50] 建议将每个通道中的激活度转换为一个聚合标量，这可能有助于图像级分类，但空间聚合会丢失所有空间信息，因此不适合密集预测。其他研究，如 MGD [41]、Channel exchanging [33] 和 CSC [26]，都显示了通道信息的重要性。MGD 将教师信道与学生信道相匹配，并将其作为一个分配问题来解决。Channel exchanging [33] 使用融合模块在不同模式的子网络之间动态交换信道。</p><p>我们的研究表明，对每个信道进行简单的归一化操作，就能大大改进基线空间蒸馏法。所提出的信道蒸馏方法非常简单，易于应用于各种任务和网络结构。我们将主要贡献总结如下。</p><ul><li>与现有的空间蒸馏方法不同，我们为密集预测任务提出了一种新颖的信道蒸馏范式。我们的方法简单而有效。</li><li>在语义分割和物体检测方面，我们提出的信道式蒸馏方法明显优于最先进的 KD 方法。</li><li>我们在四个具有不同网络结构的基准数据集上展示了我们在语义分割和物体检测任务上的持续改进，证明了我们的方法具有通用性。鉴于其简单性和有效性，我们相信我们的方法可以作为高密度预测任务的强大基准 KD 方法。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>大多数关于知识提炼的工作都集中在分类任务上 [11, 12, 16, 27, 36, 38, 45]。我们在这里的工作旨在研究用于密集预测的高效和有效的提炼方法，而不是像在分类中那样天真地应用像素提炼法。</p><p><strong>Knowledge distillation for semantic segmentation.</strong> 在[35]中，为了最小化教师和学生网络之间分割边界信息的差异，构建了局部相似性图，其中中心像素与 8 邻近像素之间的欧氏距离被用作转移知识。Liu 等人[24, 25]提出了两种捕捉像素间结构信息的方法，包括像素间的成对相似性和由判别器捕捉的整体相关性。He 等人[34]的研究侧重于具有相同标签的像素之间的类内特征变化，通过构建每个像素的特征与其对应的类内原型之间的余弦距离集来传递结构知识。He 等人[14]使用特征适配器来缓解教师网络和学生网络之间的特征不匹配问题。</p><p><strong>Knowledge distillation for object detection.</strong> 许多方法发现，在物体检测的蒸馏过程中，区分前景和背景区域非常重要。MIMIC [20] 通过 L2 损失强制学生网络 RPN 内的特征图与教师网络的特征图相似，并发现直接应用像素损失可能会损害物体检测的性能。Wang 等人[32]提出在物体锚点附近提炼细粒度特征。Zhang 和 Ma[43]在生成掩码时注意区分前景和背景，取得了不错的效果。而我们则通过软对齐通道激活来区分前景和背景区域。</p><p><strong>Channel-wise knowledge.</strong> 最近的几项研究[50]也关注了每个通道所包含的知识。Zhou 等人计算了每个通道激活的平均值，并在分类时对每个通道的加权差值进行了调整。CSC [26] 计算了所有空间位置和所有通道之间的成对关系，以传递知识。通道交换[33]提出，每个通道所包含的信息都是通用的，可以在不同模态之间共享。</p><h2 id="3-our-method"><a class="markdownIt-Anchor" href="#3-our-method"></a> 3. Our Method</h2><p>我们首先回顾了文献中相关的空间知识提炼方法。</p><h3 id="31-spatial-distillation"><a class="markdownIt-Anchor" href="#31-spatial-distillation"></a> 3.1. Spatial Distillation</h3><p><img src="images/image-20240218095614062.png" alt="image-20240218095614062" /></p><blockquote><p>表 1 – 当前的空间蒸馏方法。 i和j表示像素索引。 D(·)是鉴别器，N(i)表示像素i的8个邻域。 Si 是与像素 i 和 |Si| 具有相同标签的像素集代表集合Si的大小。</p></blockquote><p>现有的 KD 方法通常采用点对齐或空间位置间的结构化信息对齐，可表述为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msup><mi>y</mi><mi>S</mi></msup><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><mo>⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mi>S</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\ell(y,y^S)+\alpha\cdot\varphi(\phi(y^T),\phi(y^S)).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p><p>这里仍采用任务损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 为地面实况标签。例如，在语义分割中通常采用交叉熵损失。通过略微滥用符号，这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mi>S</mi></msup></mrow><annotation encoding="application/x-tex">y^S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">y^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 分别代表学生和教师网络的对数或内激活。这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 是一个超参数，用于平衡损失项。下标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mo>⋅</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\cdot^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mbin">⋅</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mo>⋅</mo><mi>S</mi></msup></mrow><annotation encoding="application/x-tex">\cdot^S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mbin">⋅</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span> 分别表示教师和学生网络。表 1 列出了具有代表性的空间蒸馏方法。</p><p>这些方法的简要概述如下。注意力转移法（Attention Transfer，AT）[42] 使用注意力掩码将特征图挤压到单通道中进行蒸馏。像素损失法[17]直接调整点类概率。局部亲和度[35]由中心像素与其 8 个邻近像素之间的距离计算得出。成对亲和度 [25, 14, 24] 用于传递像素对之间的相似性。计算每个像素特征与其对应的分类原型之间的相似性，以传递结构知识[34]。25, 24]中的整体损失使用对抗方案来调整两个网络中特征图之间的高阶关系。需要注意的是，后四项考虑了像素之间的相关性。表 1 所示的现有 KD 方法都是空间蒸馏方法。所有这些方法都将空间位置的 N 个信道激活值作为特征向量进行处理。</p><h3 id="32-channel-wise-distillation"><a class="markdownIt-Anchor" href="#32-channel-wise-distillation"></a> 3.2. Channel-wise Distillation</h3><p>为了更好地利用每个通道中的知识，我们建议对教师网络和学生网络之间相应通道的激活度进行软对齐。为此，我们首先将通道的激活度转换为概率分布，这样就可以使用 KL 发散等概率距离度量差异。如图 2© 所示，不同通道的激活往往会编码输入图像中场景类别的显著性。此外，如图 1 右侧所示，一个训练有素的教师网络在进行语义分割时，每个通道都会显示出清晰的特定类别掩码激活图，这也是意料之中的。在此，我们提出了一种新颖的通道提炼范式，引导学生从训练有素的教师那里学习知识。</p><p>我们将教师网络和学生网络分别记为 T 和 S，T 和 S 的激活图分别为 yT 和 yS。通道式蒸馏损失可以用一般形式表示：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mi>S</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mi>c</mi><mi>T</mi></msubsup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mi>c</mi><mi>S</mi></msubsup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\varphi(\phi(y^T),\phi(y^S))=\varphi(\phi(y_c^T),\phi(y_c^S)).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p><p>在我们的例子中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> 用于将激活值转换为概率分布，如下所示：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><msub><mi>y</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mi mathvariant="script">T</mi></mfrac><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>W</mi><mo>⋅</mo><mi>H</mi></mrow></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><msub><mi>y</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mi mathvariant="script">T</mi></mfrac><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\phi(y_c)=\frac{\exp(\frac{y_{c,i}}{\mathcal{T}})}{\sum_{i=1}^{W\cdot H}\exp(\frac{y_{c,i}}{\mathcal{T}})},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.7599430000000003em;vertical-align:-1.216231em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5437120000000002em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.808712em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.25417em;">T</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7350000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.808712em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.25417em;">T</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.216231em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中 c = 1, 2, …, C 表示通道；i 表示通道的空间位置。T 是一个超参数（温度）。如果我们使用较大的 T，概率会变得更柔和，这意味着我们会关注每个信道更宽的空间区域。通过应用 softmax 归一化，我们可以消除大型网络和紧凑型网络之间的量级影响。正如文献[31]所指出的那样，这种归一化在 KD 中很有帮助。φ(-)评估教师网络和学生网络的通道分布之间的差异。我们使用 KL 发散：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mi>T</mi></msup><mo separator="true">,</mo><msup><mi>y</mi><mi>S</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi mathvariant="script">T</mi><mn>2</mn></msup><mi>C</mi></mfrac><munderover><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>W</mi><mo>⋅</mo><mi>H</mi></mrow></munderover><mi>ϕ</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow><mi>T</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>log</mi><mo>⁡</mo><mo fence="true">[</mo><mfrac><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow><mi>T</mi></msubsup><mo stretchy="false">)</mo></mrow><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow><mi>S</mi></msubsup><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">]</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\varphi(y^T,y^S)=\frac{\mathcal{T}^2}C\sum_{c=1}^C\sum_{i=1}^{W\cdot H}\phi(y_{c,i}^T)\cdot\log\Bigl[\frac{\phi(y_{c,i}^T)}{\phi(y_{c,i}^S)}\Bigr].</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.752206em;vertical-align:-1.1261029999999999em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.626103em;"><span style="top:-2.2868690000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.823131em;"><span style="top:-2.4231360000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1261029999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing size2">]</span></span><span class="mord">.</span></span></span></span></span></p><p>KL 发散是一个非对称度量。从等式（4）可以看出，如果φ(yT c,i) 较大，则φ(yS c,i) 应与φ(yT c,i) 一样大，以最小化 KL 分歧。否则，如果φ(yT c,i) 非常小，KL 发散对最小化φ(yS c,i) 的关注就会减少。因此，学生网络倾向于在前景显著性中产生相似的激活分布，而教师网络中对应于背景区域的激活对学习的影响较小。我们假设，KL 的这种非对称特性有利于密集预测任务的 KD 学习。</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><h3 id="44-semantic-segmentation"><a class="markdownIt-Anchor" href="#44-semantic-segmentation"></a> 4.4. Semantic Segmentation</h3><p><img src="images/image-20240218112628806.png" alt="image-20240218112628806" /></p><blockquote><p>表 5 – 学生变体与 Cityscapes 数据集上最先进的蒸馏方法的比较。意味着模型是从头开始训练的，并且？表示模型由 ImageNet 上预训练的权重初始化。 R18代表Resnet18。</p></blockquote><p>我们证明，在不同的学生网络下，我们提出的信道明智蒸馏方法可以与之前的语义分割蒸馏方法相结合，即用于分割/密集预测的结构知识蒸馏（SKDS [24] 和 SKDD [25]）和类内特征变化蒸馏（IFVD [34]）。</p><p>我们在对数图（Ours-logits）和特征图（Oursfeature）上都使用了所提出的通道式蒸馏法。根据以前的方法[25, 18]，我们还在对数图上采用了像素化蒸馏（PI）和整体蒸馏（HO）。</p><p>我们首先在城市景观数据集上评估了我们方法的性能。我们使用不同编码器和解码器的各种学生网络来验证我们方法的有效性。编码器包括 ResNet18（带或不带在 ImageNet 上预先训练的权重进行初始化，以及 ResNet18 的通道校验变体 [13]），解码器包括 PSPhead [48] 和 ASPPhead [6]。表 5 显示了在城市景观上的结果。Pascal VOC [10] 和 ADE20K [49] 的实验结果见补充材料。</p><p>在五个学生网络和三个基准测试中，我们的方法优于 SKD 和 IFVD，这进一步说明了信道提炼法对语义分割是有效的。</p><p>对于与教师具有相同结构类型的学生，即 PSPNet-R18(0.5)、PSPNet-R18 和 PSPNet-R18? 至于与教师具有不同架构类型的学生，即 Deeplab-R18(0.5) 和 Deeplab-R18?，我们的方法与 SKDS 和 IFVD 相比取得了一致的改进。因此，我们的方法在不同的教师和学生网络中都能很好地发挥作用。</p><p>模型容量较小的学生网络（PSPNet-R18(0.5)）与容量较大的学生网络（PSPNet-R18? 这可能是因为与教师网络相比，小型网络的能力有限，无法充分吸收当前任务的知识。对于 PSPNet-R18，用在 ImageNet 上训练的权重初始化的学生获得了最好的蒸馏性能（从 70.09% 提高到 75.90%），进一步证明了初始化良好的参数有助于蒸馏。因此，更好的学生会带来更好的蒸馏性能，但由于教师网络和学生网络之间的差距较小，因此改进效果并不显著。</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h2><p>在本文中，我们为密集预测任务提出了一种新颖的通道蒸馏法。与以往的空间蒸馏方法不同，我们将每个通道的激活度归一化为概率图。然后，应用不对称 KL 发散来最小化教师和学生网络之间的差异。实验结果表明，在四个具有不同网络骨干的公共基准数据集上，所提出的蒸馏方法在语义分割和对象检测方面始终优于最先进的蒸馏方法。</p><p>此外，我们的消融实验证明了我们的信道蒸馏法的效率和有效性，它可以进一步补充空间蒸馏法的不足。我们希望所提出的简单有效的蒸馏方法可以作为一个强有力的基线，有效地训练紧凑型网络，用于许多其他密集预测任务，包括实例分割、深度估计和全景分割。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CBL权重设置</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CBL%E6%9D%83%E9%87%8D%E8%AE%BE%E7%BD%AE/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CBL%E6%9D%83%E9%87%8D%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3><p>Class Balanced Loss（CB Loss）是一种用于处理类别不平衡问题的损失函数，可以在训练深度学习模型时有效地解决由于训练数据中类别分布不均衡所导致的问题。其基本思想是为数据集中出现频率较低的类别分配更大的权重，以使得训练过程中每个类别的贡献相对均衡。</p><p>CB Loss的权重设置方式可以通过以下步骤实现：</p><ol><li>统计每个类别在训练数据中的样本数量。</li><li>计算每个类别的权重，常用的权重计算方式包括：<ul><li>Inverse frequency weighting（IF）：将每个类别的权重设置为类别出现次数的倒数。</li><li>Effective number of samples（ENS）：将每个类别的权重设置为每个类别的有效样本数，计算方式为：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><msub><mi>n</mi><mi>c</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_c = \frac{1-\beta}{1-\beta^{n_c}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">w_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>个类别的权重，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>是一个可调参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">n_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>个类别的样本数量。</li><li>Beta weighting（BW）：将每个类别的权重设置为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><mfrac><mn>1</mn><msub><mi>n</mi><mi>c</mi></msub></mfrac></msup></mrow><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1-\beta^{\frac{1}{n_c}}}{1-\beta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8843610000000002em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.403253em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.36735em;"><span style="top:-3.6306071428571434em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03144em;"><span style="top:-2.468em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.732em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>是一个可调参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">n_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>个类别的样本数量。</li></ul></li><li>将每个类别的权重作为损失函数中对应类别的权重，计算损失函数。</li></ol><p>需要注意的是，CB Loss的权重设置方式可以根据具体的问题和数据集进行调整。如果有先验知识或其他信息可以用于指导权重设置，也可以在计算权重时加以考虑。</p><h3 id="举例"><a class="markdownIt-Anchor" href="#举例"></a> 举例</h3><p>假设有一个二分类问题，数据集中正样本数量为1000，负样本数量为10000，类别不平衡比率为10:1。这时可以使用Class Balanced Loss来解决类别不平衡问题，具体权重设置方式如下：</p><ol><li><p>统计每个类别在训练数据中的样本数量：</p><p>正样本数量为1000，负样本数量为10000。</p></li><li><p>计算每个类别的权重，常用的权重计算方式包括：</p><ul><li><p>Inverse frequency weighting（IF）：将每个类别的权重设置为类别出现次数的倒数。</p><p>正样本权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>10000</mn><mn>1000</mn></mfrac><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">\frac{10000}{1000}=10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>，负样本权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1000</mn><mn>10000</mn></mfrac><mo>=</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">\frac{1000}{10000}=0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span></span></span></span>。</p></li><li><p>Effective number of samples（）：将每个类别的权重设置为每个类别的有效样本数，计算方式为：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><msub><mi>n</mi><mi>c</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_c = \frac{1-\beta}{1-\beta^{n_c}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>假设设置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.999</mn></mrow><annotation encoding="application/x-tex">\beta=0.999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span>，正样本权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mn>1000</mn></msup></mrow></mfrac><mo>=</mo><mn>11.082</mn></mrow><annotation encoding="application/x-tex">w_{pos}=\frac{1-0.999}{1-0.999^{1000}}=11.082</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">8</span><span class="mord">2</span></span></span></span>，负样本权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mn>10000</mn></msup></mrow></mfrac><mo>=</mo><mn>0.1108</mn></mrow><annotation encoding="application/x-tex">w_{neg}=\frac{1-0.999}{1-0.999^{10000}}=0.1108</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">8</span></span></span></span>。</p></li><li><p>Beta weighting（BW）：将每个类别的权重设置为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><mfrac><mn>1</mn><msub><mi>n</mi><mi>c</mi></msub></mfrac></msup></mrow><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1-\beta^{\frac{1}{n_c}}}{1-\beta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8843610000000002em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.403253em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.36735em;"><span style="top:-3.6306071428571434em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03144em;"><span style="top:-2.468em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.732em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>是一个可调参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">n_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>个类别的样本数量。</p><p>假设设置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.999</mn></mrow><annotation encoding="application/x-tex">\beta=0.999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span>，正样本权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mfrac><mn>1</mn><mn>1000</mn></mfrac></msup></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow></mfrac><mo>=</mo><mn>10.728</mn></mrow><annotation encoding="application/x-tex">w_{pos}=\frac{1-0.999^{\frac{1}{1000}}}{1-0.999}=10.728</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6544759999999998em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.251145em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.224492857142857em;"><span style="top:-3.48775em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03144em;"><span style="top:-2.468em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.532em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">2</span><span class="mord">8</span></span></span></span>，负样本权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mfrac><mn>1</mn><mn>10000</mn></mfrac></msup></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow></mfrac><mo>=</mo><mn>0.1073</mn></mrow><annotation encoding="application/x-tex">w_{neg}=\frac{1-0.999^{\frac{1}{10000}}}{1-0.999}=0.1073</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6544759999999998em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.251145em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.224492857142857em;"><span style="top:-3.48775em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03144em;"><span style="top:-2.468em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.532em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">0</span><span class="mord">7</span><span class="mord">3</span></span></span></span>。</p></li></ul></li><li><p>将每个类别的权重作为损失函数中对应类别的权重，计算损失函数。</p></li></ol><p>可以将计算得到的正样本权重和负样本权重分别作为损失函数中对应类别的权重，计算Class Balanced Loss。在训练过程中，Class Balanced Loss可以使得每个类别的贡献相对均衡，从而提高模型的准确性和泛化能力。</p><h3 id="effective-number-of-samplesens中的beta如何设置"><a class="markdownIt-Anchor" href="#effective-number-of-samplesens中的beta如何设置"></a> Effective number of samples（ENS）中的beta如何设置</h3><p>在Effective number of samples（ENS）中，权重的计算方式是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><msub><mi>n</mi><mi>c</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_c = \frac{1-\beta}{1-\beta^{n_c}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">w_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 个类别的权重，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">n_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 个类别的样本数量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 是一个可调参数。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的值控制了类别之间的权重差异程度，通常需要通过交叉验证等方式进行调参。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 可以取在 0 到 1 之间的任意值，一般情况下越接近 1，类别之间的权重差异越小。一些研究表明，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的最优值取决于类别之间的分布情况和数据集的规模，通常需要进行实验或者通过网格搜索等方式进行调参。</p><p>一些常用的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 取值包括：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.999</mn></mrow><annotation encoding="application/x-tex">\beta=0.999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.9</mn></mrow><annotation encoding="application/x-tex">\beta=0.9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.8</mn></mrow><annotation encoding="application/x-tex">\beta=0.8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span></span></span></span>等。其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.999</mn></mrow><annotation encoding="application/x-tex">\beta=0.999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span> 对应于如果所有类别的样本数量相等时，权重是均匀分布的情况。如果样本数量之间存在较大的差异，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的取值应该向 1 靠近，以便更好地对样本数量较少的类别进行加权。</p><p>需要注意的是，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的取值需要根据具体的问题和数据集进行调整。如果有先验知识或其他信息可以用于指导权重设置，也可以在计算权重时加以考虑。</p><h3 id="类别平衡损失-class-balanced-loss"><a class="markdownIt-Anchor" href="#类别平衡损失-class-balanced-loss"></a> 类别平衡损失 (Class Balanced Loss)</h3><p>对于不平衡类别分布的数据集，您也许可以改变每个类别的损失权重。这里以 cityscapes 数据集为例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_base_ = <span class="string">&#x27;./pspnet_r50-d8_512x1024_40k_cityscapes.py&#x27;</span></span><br><span class="line">model=<span class="built_in">dict</span>(</span><br><span class="line">    decode_head=<span class="built_in">dict</span>(</span><br><span class="line">        loss_decode=<span class="built_in">dict</span>(</span><br><span class="line">            <span class="built_in">type</span>=<span class="string">&#x27;CrossEntropyLoss&#x27;</span>, use_sigmoid=<span class="literal">False</span>, loss_weight=<span class="number">1.0</span>,</span><br><span class="line">            <span class="comment"># DeepLab 对 cityscapes 使用这种权重</span></span><br><span class="line">            class_weight=[<span class="number">0.8373</span>, <span class="number">0.9180</span>, <span class="number">0.8660</span>, <span class="number">1.0345</span>, <span class="number">1.0166</span>, <span class="number">0.9969</span>, <span class="number">0.9754</span>,</span><br><span class="line">                        <span class="number">1.0489</span>, <span class="number">0.8786</span>, <span class="number">1.0023</span>, <span class="number">0.9539</span>, <span class="number">0.9843</span>, <span class="number">1.1116</span>, <span class="number">0.9037</span>,</span><br><span class="line">                        <span class="number">1.0865</span>, <span class="number">1.0955</span>, <span class="number">1.0865</span>, <span class="number">1.1529</span>, <span class="number">1.0507</span>])))</span><br></pre></td></tr></table></figure><p><code>class_weight</code> 将被作为 <code>weight</code> 参数，传递给 <code>CrossEntropyLoss</code>。详细信息请参照 <a href="https://pytorch.org/docs/stable/nn.html?highlight=crossentropy#torch.nn.CrossEntropyLoss">PyTorch 文档</a> 。</p><p>在Class Balanced Loss中，权重的计算方式为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><msub><mi>n</mi><mi>c</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_c=\frac{1-\beta}{1-\beta^{n_c}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">w_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 个类别的权重，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">n_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 个类别的样本数量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 是一个可调参数。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的值控制了类别之间的权重差异程度，通常需要通过交叉验证等方式进行调参。</p><p>以下是一个举例说明如何设置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的过程：</p><p>假设有一个三分类问题，数据集中三个类别的样本数量分别为 1000、2000、5000，类别不平衡比率为 1:2:5。</p><ol><li>首先，我们可以计算每个类别的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 权重。通常，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 权重的选择可以根据先验知识、数据分布以及实验效果等因素综合考虑。</li></ol><p>假设我们希望每个类别的权重比例尽可能均衡，可以选择 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mn>0.999</mn></mrow><annotation encoding="application/x-tex">\beta=0.999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span>，这个值对应于样本数量相等时，权重是均匀分布的情况。</p><ol><li>接下来，我们可以根据公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>β</mi><msub><mi>n</mi><mi>c</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_c=\frac{1-\beta}{1-\beta^{n_c}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4133239999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 计算每个类别的权重。</li></ol><p>类别 1 的权重为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mn>1000</mn></msup></mrow></mfrac><mo>=</mo><mn>16.36</mn></mrow><annotation encoding="application/x-tex">w_1=\frac{1-0.999}{1-0.999^{1000}}=16.36</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">.</span><span class="mord">3</span><span class="mord">6</span></span></span></span>。</p><p>类别 2 的权重为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mn>2000</mn></msup></mrow></mfrac><mo>=</mo><mn>9.71</mn></mrow><annotation encoding="application/x-tex">w_2=\frac{1-0.999}{1-0.999^{2000}}=9.71</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord">.</span><span class="mord">7</span><span class="mord">1</span></span></span></span>。</p><p>类别 3 的权重为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>3</mn></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mn>0.999</mn></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.99</mn><msup><mn>9</mn><mn>5000</mn></msup></mrow></mfrac><mo>=</mo><mn>4.27</mn></mrow><annotation encoding="application/x-tex">w_3=\frac{1-0.999}{1-0.999^{5000}}=4.27</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mtight">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord">2</span><span class="mord">7</span></span></span></span>。</p><p>可以看出，类别 1 的样本数量最少，所以它的权重最大，而类别 3 的样本数量最多，所以它的权重最小。</p><ol><li>最后，我们可以将每个类别的权重作为损失函数中对应类别的权重，计算 Class Balanced Loss。</li></ol><p>在训练过程中，Class Balanced Loss 可以使得每个类别的贡献相对均衡，从而提高模型的准确性和泛化能力。</p><h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">y_train = <span class="number">166</span></span><br><span class="line">classes = <span class="number">4</span></span><br><span class="line">y_index = np.array([<span class="number">188</span>,<span class="number">155</span>,<span class="number">136</span>,<span class="number">58</span>])</span><br><span class="line">recip_freq = y_train / (classes * y_index.astype(np.float64))</span><br><span class="line">recip_freq</span><br><span class="line"><span class="comment">#######out#######</span></span><br><span class="line"><span class="comment">#[0.22074468, 0.26774194, 0.30514706, 0.71551724]</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_39653948/article/details/106042555">文章链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CariesNet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CariesNet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/CariesNet/</url>
      
        <content type="html"><![CDATA[<h1 id="cariesnet-a-deep-learning-approach-for-segmentation-of-multi-stage-caries-lesion-from-oral-panoramic-x-ray-image"><a class="markdownIt-Anchor" href="#cariesnet-a-deep-learning-approach-for-segmentation-of-multi-stage-caries-lesion-from-oral-panoramic-x-ray-image"></a> CariesNet: a deep learning approach for segmentation of multi-stage caries lesion from oral panoramic X-ray image</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>龋齿一直是世界各地常见的健康问题，它甚至可以最终导致牙髓和根尖炎症。及时有效地治疗龋齿对患者减少痛苦至关重要。传统的龋齿疾病诊断方法，如肉眼检测和全景X光片检查，依赖于有经验的医生，这可能会导致误诊和高耗时。为此，我们提出了一种新型的深度学习架构，即CariesNet，以从全景射线照片中划分出不同的龋齿程度。我们首先收集了一个高质量的全景射线照片数据集，其中有3127个划线清晰的龋齿病变，包括浅度龋齿、中度龋齿和深度龋齿。然后，我们将CariesNet构建为一个U型网络，并增加了全尺寸轴向关注模块，以从口腔全景图像中分割这三种龋齿类型。此外，我们测试了CariesNet和其他基线方法的分割性能。实验表明，我们的方法在对三种不同程度的龋齿进行分割时，可以达到平均93.64%的Dice系数和93.61%的准确率。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>龋齿被定义为一种由牙菌斑中的微生物引起的影响牙齿硬组织的局部疾病[1]。它是最常见的口腔疾病之一。</p><p>根据2015年第四次中国全国口腔健康流行病学调查，3-5岁儿童原牙的龋齿患病率高达70.81%。随着年龄的增长，龋齿的发病率也逐步攀升。65-74岁年龄组的龋齿发病率为80.7%[2]。同时，龋齿造成了巨大的社会和经济负担。一项全球疾病负担研究显示，全球约有35亿人患有口腔疾病，治疗这些疾病的直接费用为2980亿美元[3]。</p><p>同时，龋齿的诊断取决于诊所医生的主观性。传统的龋齿诊断方法主要是由主治医生通过目测和探针探查发现，具有一定的主观性。鉴于早期龋齿和隐性龋齿难以被发现，误诊率很高。如果不及时治疗，龋齿可能会逐渐扩大，侵入牙髓，引发牙根炎、牙根脓肿等牙病，最终牙齿可能脱落。</p><p>口腔全景X光片（X射线）在诊断龋齿等牙科疾病方面发挥着关键作用。作为一种预防性的诊断工具，牙医可以利用口腔全景射线照片这一预防性的诊断工具来发现隐藏的牙齿结构、骨质流失、恶性或良性肿块以及目视检查下无法检查的龋齿。当牙齿结构有足够的脱钙时，龋齿的腐烂可以通过射线反映出来[1]。龋齿的X射线图像在不同的发展阶段显示不同的灰度值。根据[4]，浅龋是指釉质或牙本质外三分之一处的龋齿放射线；中度龋是指牙本质中间三分之一处的龋齿放射线；深龋是指牙本质内三分之一处的龋齿放射线，有或无明显牙髓受累。图1显示了一个全景X光片图像的例子。方框A、B和C分别对应于浅龋、中度龋和深龋。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230305194654743.png" alt="image-20230305194654743" /></p><blockquote><p>图1 全景射线照片中不同等级的龋齿病变实例：方框（a）中的浅龋，方框（b）中的中度龋和方框（c)中的深龋。</p></blockquote><p>计算机辅助诊断系统为解决上述问题提供了一种更有效的方法。通过计算机的分析和计算能力，建立了一个疾病诊断的数学模型。此外，对这类疾病的病变进行分类、预测和定位，可以大大减轻临床医生的负担，降低难度。近年来，随着人工智能的快速发展，这项技术在医学影像领域也得到了普及，而深度学习是在人工智能领域应用最多的，基于医学影像大数据集的自动学习，其手段是引入卷积神经网络（CNN）来提取图像特征。</p><p>在本文中，为了达到对龋齿病变的精确分割，我们提出了一个新的深度学习网络，称为CariesNet。受U-Net[5]结构的启发，我们建立了一个用于口腔全景图像分割的U型神经网络。特别是，我们使用了全面的轴向注意力模块以及部分编码器模块来提高分割性能。总而言之，这项工作的主要贡献有三个方面。</p><p>(1) 我们提出了一个新的深度架构CariesNet，用于分割全景射线照片中的龋齿病变。</p><p>(2) 我们提出了全尺寸轴向注意（FSSA）模块，以提高小尺寸病变分割的稳健性。</p><p>(3) 提出的CariesNet达到了93.64%的平均Dice相似性系数（DSC），并在收集的数据集上显示出有效的结果。</p><p>本文的其余部分组织如下。第2节简要回顾了相关工作。我们提出的CariesNet方法在第3节中描述。3. 第4节报告了实验结果。最后，第5节总结了这项工作。</p><h2 id="2-related-works"><a class="markdownIt-Anchor" href="#2-related-works"></a> 2 Related works</h2><h3 id="21-computer-aided-diagnosis-methods-for-dental-caries"><a class="markdownIt-Anchor" href="#21-computer-aided-diagnosis-methods-for-dental-caries"></a> 2.1 Computer-aided diagnosis methods for dental caries</h3><p>该计算机系统可用于量化图像中灰度值的变化，实现临床诊断。近年来，深度学习也被应用于识别和诊断龋齿。2016年，Anias等通过阈值分割从口腔全景X射线图像中提取48个感兴趣的区域，利用神经网络结合BP反向传播来诊断龋齿[6]。Ali等人使用三个堆叠的稀疏自动编码器来提取牙尖的特征，并应用Softmax分类器来判断牙齿是否有龋齿[7]。2017年，引入线性自适应粒子群优化（LA-PSO）算法，对120幅蛀牙全景图像生成l-rate，并通过反向传播神经模型对所提LA-PSO的分类性能进行评估[8]。Prajapati等人引入迁移技术，构建了基于卷积神经网络的龋齿诊断模型，使用VGG-16检测251张X射线图像中的龋齿[9]；Zhang等人构建了基于CBCT图像的计算机辅助评估系统，以提高龋齿诊断的准确性[10]。2020年，Lin等人构建了基于深度学习模型的计算机辅助龋齿诊断系统，结果表明深度学习在检测根尖X射线图像中的龋齿方面具有良好的性能，可以检测根尖X射线图像中恒牙的邻面龋齿，为邻面龋齿的早期诊断提供参考[11]。Haghanifar等人收集了480张口腔全景X射线图像，提出了牙齿分割和龋齿检测工作流程，达到了90.52%的龋齿检测准确率[12]。然而，收集高质量的龋齿数据集和建立一个高效的深度学习架构仍然是巨大的挑战。</p><h3 id="22-deep-learning-methods-for-image-segmentation"><a class="markdownIt-Anchor" href="#22-deep-learning-methods-for-image-segmentation"></a> 2.2 Deep learning methods for image segmentation</h3><p>在口腔医学中，已经提出了许多计算机辅助图像分割的方法（见[13，14]对此类方法的全面回顾）。与自然图像中的处理类似，深度学习已被广泛地应用于计算机视觉任务，如图像分类和物体检测[15]。最近，越来越多的基于深度学习的方法被开发用于图像分割。其中一个典型的方法是全连接网络（FCN）可以进行端到端的分割，并在不同的图像应用中有效（例如，语义分割[16，17]，视频对象检测[18，19]，多模式分类[20]）。然而，由于其完全连接的结构，FCN使用了大量的参数，因此在模型训练中产生了障碍。SegNet[21]提出了一个编码器-解码器结构，以加速训练过程。在FCN和SegNet的基础上，一个改进的网络U-Net[5]采用了编码器-解码器结构，并在上采样层和下采样层之间使用跳过连接，将高分辨率的特征与上采样的输出相结合。为了提高性能，人们还提出了一些U-Net的变体，如3D U-Net[22]、V-Net[23]、UNet? [24]、SE-ResUnet[25]和注意U-Net[26]。特别是Fan等人[27]提出了高效网络PraNet来平衡推理速度和分割性能。</p><p>除了上述已知的一般图像分割框架，一些专门的深度学习模型也被开发出来。具体来说，对于X射线图像的分割，已经设计了多个基于深度学习的模型。Al-Antari等人直接使用DeepLab进行现场分割[28]。Blain等人提出了一个改良的U-Net网络来检测胸部X光图像中的COVID-19感染[29]。Moeskops等人利用不同的图像模式来训练一个多任务分割模型[30]。Trullo等人将条件随机场模块的结构作为RNN引入FCN[31]。此外，深度学习方法在其他医学图像分割任务中也取得了明显的成功，如细胞[32]、头颈部（HaN）[33]、肝脏[34]、大脑[35]和视盘[36]的分割。</p><h2 id="3-materials-and-methods"><a class="markdownIt-Anchor" href="#3-materials-and-methods"></a> 3 Materials and methods</h2><h3 id="31-overview"><a class="markdownIt-Anchor" href="#31-overview"></a> 3.1 Overview</h3><p>在本节中，我们展示了拟议中的龋齿网络的工作流程。我们首先解释了收集全面的口腔全景X射线图像数据集的过程。接着，我们介绍了CariesNet的架构以及全尺度轴向关注（FSSA）模块。最后我们解释损失函数和模型训练的细节。</p><h3 id="32-dataset-preparation"><a class="markdownIt-Anchor" href="#32-dataset-preparation"></a> 3.2 Dataset preparation</h3><p>在使用X射线的牙齿问题检测领域的大多数相关研究在他们的数据集中缺乏足够数量的图像。大型数据集让模型拥有更复杂的架构，包括更多的参数。因此，开发的模型可以处理更复杂的特征，并检测牙齿纹理中出现的细微异常，如早期阶段的龋齿。注释是一个重要但耗时的部分，需要由现场专家（如牙医或放射科医生）来完成。</p><p>为了解决数据缺乏的问题，我们试图建立一个高质量的口腔全景数据集。浙江大学医学院附属口腔医院从2015年至2020年收集了一组源于牙科治疗和常规护理的1159幅全景图像。数据收集得到了中华口腔医学会伦理委员会的伦理批准。数据集中只包括恒牙的全景图像。原生牙的全景图像或那些被认为不可能进行任何评估的图像被排除在外。大部分数据都是使用制造商Dentsply Sirona（德国Bensheim）的放射机产生的，主要是Orthophos XG。在所有的全景图像上，每颗牙齿都由三位牙医使用FDI方案进行分割和标记，并由第四位牙医检查。从1159张口腔全景图像中，3217个龋齿区域被标记为浅度龋齿、中度龋齿或深度龋齿。我们的龋齿数据集的详情见表1。</p><p><img src="images/image-20230709130710956.png" alt="image-20230709130710956" /></p><h3 id="33-cariesnet-overall-architecture"><a class="markdownIt-Anchor" href="#33-cariesnet-overall-architecture"></a> 3.3 CariesNet overall architecture</h3><p>一般来说，口腔全景照片的尺寸很大，而目标龋齿区域很小。如图2所示，找到并划定网络的整体架构是一个挑战。我们设计CariesNet的灵感来自于PraNet[27]的整体架构，它是基于反向注意机制的[37]。如图2所示，CariesNet是一个通用的U型编码器-解码器框架，它可以聚合从多级卷积网络中提取的特征。传统的U型网络只是简单地将特征传递给每个解码器层，而一些高层次的上下文信息可能会在解码器中丢失。与文献[27]中的介绍类似，我们使用部分解码器来聚合CariesNet中更多的高层特征。在本文中，我们利用Res2Net[38]作为一个有效的骨干网。我们将骨干网中的三个高级特征图串联到部分解码器中，它可以预测出龋齿的初始显著性图，在图2中被标记为全局图。然后，骨干特征和部分解码器特征都被串联到注意力模块中。在CariesNet中，我们用全尺寸轴向注意（FSAA）模块取代了反向注意（RA）模块，FSAA的细节在第3.4节中描述。3.4. 接下来，特征图通过1 1卷积层并与之前的FSAA全局图相加。此外，在每个高层中，前一层的FSAA得到的特征图和骨干的特征图也被串联起来作为FSAA的输入。我们使用三个后续的FSAA来计算高层的显著性地图。最后，使用带有sigmoid函数的4次双线性上采样变换来获得全局特征图的最终输出。</p><p>龋齿网络能有效地从口腔全景X光图像中分割出轻微的龋齿区域。通过在部分解码器中聚合三个高层的特征，可以有效地从全局图中提取上下文信息，这意味着可以将目标龋齿病变置于初始指导区域（全局图）。全面的轴向注意力模块可以进一步挖掘输出分割结果的边界线索。综上所述，整体架构显示，Res2Net骨干特征被转发到部分解码器以生成初始全局图，而全面的轴向注意力模块可以重建准确的龋齿分割结果。</p><p><img src="images/image-20230305223539742.png" alt="image-20230305223539742" /></p><blockquote><p>图2 龋齿的结构示意图，它由三个全尺寸的轴向注意模块和一个部分解码器组成</p></blockquote><h3 id="34-full-scale-axial-attention-module"><a class="markdownIt-Anchor" href="#34-full-scale-axial-attention-module"></a> 3.4 Full-scale axial attention module</h3><p>一般来说，对于有经验的医生来说，目标龋齿病变的划定包括两个步骤。首先，对可能包含目标病变的粗略区域进行定位。而第二步是注释出目标区域的准确边界。由于粗略的显著性图是由部分解码器得到的，我们提出了可以挖掘边界线索的FSSA模块。上述模块可以提取细粒度的特征图，其中既有高层次的语义信息，又有低层次的细节信息。</p><p>如图3所示，输入的高层次骨干特征图和上采样的位置图首先被连接起来。与普通的轴向注意模块不同，为了使该模块能够整合更多层次的特征信息，我们同时考虑了平均池化和最大池化。提取的通道域特征通过全连接层再次映射到与原始特征图像通道数相同的维度上，而空间域特征则通过逐元卷积核的卷积层进行映射，得到与空间特征相同大小的单通道特征。我们从通道域和空间域平行提取注意力特征，然后让网络通过元素-明智卷积层将这两个特征聚合起来。为了得到一个更平滑的注意力特征图，我们在融合层之后利用一个sigmoid层。FSAA最终输出了一个注意力特征图，从全局角度代表了上下文信息。</p><p><img src="images/image-20230709130742715.png" alt="image-20230709130742715" /></p><h3 id="35-learning-process-and-implementation-details"><a class="markdownIt-Anchor" href="#35-learning-process-and-implementation-details"></a> 3.5 Learning process and implementation details</h3><p><strong>损失函数</strong> 通常采用二元交叉熵（BCE）作为损失函数，可以表述如下。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230306003635570.png" alt="image-20230306003635570" /></p><p>其中f是像素数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">m_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">n_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>分别表示预测值和其对应的groundtruth值。然而，由于交叉熵损失函数对类别不平衡的敏感性很高，由此产生的低效率优化需要自适应损失函数。因此，在我们的模型中使用Dice损失作为损失函数，具体如下：</p><p><img src="images/image-20230709130905039.png" alt="image-20230709130905039" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">m_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是预测值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">n_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是相应的GroundTruth。</p><p>我们在CariesNet中结合BCE损失和Dice损失，最终的损失函数可以表示为：：</p><p><img src="images/image-20230709130912853.png" alt="image-20230709130912853" /></p><p><strong>实施细节</strong> 我们在训练数据中所有512 512大小的口腔全景图像上用200个epochs训练龋齿网络。我们使用Adam作为优化器，初始学习率为1e-4，在80、120和150个历时中衰减。我们的实验是在配备英特尔（R）至强（R）CPU E5-2630 v4 @ 2.20GHz、256GB内存和8x NVIDIA GeForce 2080TiGPU与12GB GPU内存的工作站平台上进行。该代码是在Ubuntu 18.04中用PyTorch 1.3.1实现的。</p><h2 id="4-experiments-and-discussion"><a class="markdownIt-Anchor" href="#4-experiments-and-discussion"></a> 4 Experiments and discussion</h2><h3 id="41-evaluation-metrics"><a class="markdownIt-Anchor" href="#41-evaluation-metrics"></a> 4.1 Evaluation metrics</h3><p>采用一些评价指标，包括Dice系数、准确性、精确性和召回率，来比较CariesNet和其他方法的表现，以比较不同方法的表现。Dice系数衡量龋齿自动分割和人工分割之间的重叠像素，其计算方法如下：</p><p><img src="images/image-20230625230316441.png" alt="image-20230625230316441" /></p><p>其中TP、FP、TN和FN分别代表真阳性、假阳性、真阴性和假阴性预测。准确度是指龋齿类型和背景分割的全部准确度，其描述如下：</p><p><img src="images/image-20230625230300234.png" alt="image-20230625230300234" /></p><p>精确率是指在自动分割的龋齿病变的所有像素中，被划分为真阳性区域的比例，其定义如下：</p><p><img src="images/image-20230625230337194.png" alt="image-20230625230337194" /></p><p>召回率是指通过自动分割分类的龋齿区域的真阳性像素与通过手工分割分类的龋齿病变像素的比例，计算如下：</p><p><img src="images/image-20230625230346823.png" alt="image-20230625230346823" /></p><p>F1分值用于量化龋齿病变在精确率和召回率之间的加权平均值，其值在[0，1]，计算公式如下：</p><p><img src="images/image-20230625230405029.png" alt="image-20230625230405029" /></p><h3 id="42-comparative-experiments"><a class="markdownIt-Anchor" href="#42-comparative-experiments"></a> 4.2 Comparative experiments</h3><p>表2中报告了从龋齿数据集中获得的结果。在每个测试案例中，我们将口腔全景图像分成两部分，即左边和右边。关于测试结果的评估，两部分的联合分割结果被合并了。DeepLab是一个被广泛使用的像素级分割工具[39]，它也使用了一个编码器-解码器结构。这里，我们使用U-Net和DeepLabV3+作为基线模型。我们使用Res-Unet[40]中的Res2Net作为骨干，它也作为骨干方法实现了消融实验。所有的深度学习模型都在相同的验证集上进行测试，DSC、准确率、F1得分、精度和召回率的结果分别见表2。很明显，PraNet和CariesNet模型在使用部分解码模块定位目标病变方面表现良好，而CariesNet以较大的幅度提高了整体性能。普通U-Net和DeepLabv3的表现与骨干方法Res-Unet相似。Attention-UNet的分割结果要好得多，它证明了注意力机制可以显著提高模型的性能。同时，CariesNet的表现优于最先进的方法PraNet，因为全面的轴向注意力模块可以捕获广泛而有效的上下文信息。CariesNet最终取得了93.64%的DSC。</p><p><img src="images/image-20230709124516321.png" alt="image-20230709124516321" /></p><h3 id="43-ablation-study"><a class="markdownIt-Anchor" href="#43-ablation-study"></a> 4.3 Ablation study</h3><p>除了上述与最先进的方法的比较，我们还进行了大量的消融实验来验证我们的方法的有效性，包括部分编码器模块，全面的轴向注意力模块，BCE/Dice损失函数和深度监督策略。如表3所示，在对三种类型的龋齿进行分割时，报告了每个模型的Dice系数。很明显，FSAA可以显著提高模型的性能。此外，我们注意到在中度龋齿的划分上性能相对较低，因为无论是深龋和中度龋齿的边界还是浅龋和中度龋齿的边界都相对模糊，模型容易将中度龋齿误判为浅龋或深龋。尽管CariesNet在中度龋上显示出的性能比骨架有限，但它有助于改善深龋上约11.1%的DSC和浅龋上12.4%的DSC。</p><p><img src="images/image-20230709124226180.png" alt="image-20230709124226180" /></p><h3 id="44-results-visualization"><a class="markdownIt-Anchor" href="#44-results-visualization"></a> 4.4 Results visualization</h3><p>图2显示了分割的结果。CariesNet可以很好地从口腔全景射线照片中找到小的龋齿病灶。在图4中，我们将深龋病灶标记为黄色部分。中度龋坏和浅度龋坏区域分别被标记为蓝色和绿色部分。为了清楚地比较两种方法之间的性能，我们选择一个部分来放大显示。CariesNet、PraNet、U-Net、DeepLabv3和Res-U-Net的分割结果显示在图4。与其他方法相比，CariesNet的边界更平滑、更准确。</p><p><img src="images/image-20230709124425696.png" alt="image-20230709124425696" /></p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 Conclusion</h2><p>总之，我们开发了一个自动化的龋齿诊断系统。实验证明，深度学习模型可以有效地从口腔全景X光图像中分割出龋齿病变。特别是，我们开发了一个最先进的分割网络CariesNet，将部分编码器模块和全面的轴向注意力模块实现为共同的编码器-解码器U型结构。我们在数据集上进行了实验，验证和测试研究显示了我们的新方法在这个分割任务中的能力。比较和消融实验也表明，我们的新龋齿网络结构在从大的X射线图像中分割轻微病变方面产生了非常好的性能。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dual Attention Network for Scene Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Danet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Danet/</url>
      
        <content type="html"><![CDATA[<h1 id="dual-attention-network-for-scene-segmentation"><a class="markdownIt-Anchor" href="#dual-attention-network-for-scene-segmentation"></a> Dual Attention Network for Scene Segmentation</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>在本文中，我们通过捕捉基于自我注意机制的丰富的上下文依赖来解决场景分割任务。与之前通过多尺度特征融合来捕捉上下文的工作不同，我们提出了一个双注意网络（DANet）来适应性地整合局部特征和它们的全局依赖关系。具体来说，我们在扩张的FCN之上附加了两种注意力模块，它们分别在空间和通道维度上模拟语义的相互依赖性。位置注意模块通过所有位置上的特征的加权和，选择性地聚合每个位置上的特征。类似的特征会相互关联，而不考虑它们的距离。同时，通道注意模块通过整合所有通道图中的相关特征，选择性地强调相互依赖的通道图。我们将两个注意力模块的输出相加，进一步改善特征表示，这有助于获得更精确的分割结果。我们在三个具有挑战性的场景分割数据集，即Cityscapes、PASCAL Context和COCO Stuff数据集上实现了新的最先进的分割性能。特别是，在不使用粗略数据的情况下，在Cityscapes测试集上取得了81.5%的平均IoU得分。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>场景分割是一个基本的、具有挑战性的问题，其目标是将场景图像分割并解析为与语义类别相关的不同图像区域，包括东西（如天空、道路、草地）和离散物体（如人、汽车、自行车）。对这项任务的研究可以应用于潜在的应用，如自动驾驶、机器人感应和图像编辑。为了有效地完成场景分割的任务，我们需要区分一些混乱的类别，并考虑到具有不同外观的物体。例如，&quot;田野 &quot;和 &quot;草地 &quot;的区域往往是无法区分的，而 &quot;汽车 &quot;的对象可能经常受到尺度、遮挡和光照的影响。因此，有必要提高像素级识别的特征表示的鉴别能力。</p><p>最近，人们提出了基于全卷积网络（FCN）[13]的最先进的方法来解决上述问题。一种方法是利用多尺度背景融合。例如，一些工作[3，4，29]通过结合不同的扩张卷积和池化操作产生的特征图来聚合多尺度的上下文。还有一些作品[15, 27]通过扩大具有分解结构的内核大小或在网络顶部引入有效的编码层来捕获更丰富的全局语境信息。此外，还提出了编码器-解码器结构[6，10，16]来融合中层和高层语义特征。虽然上下文融合有助于捕捉不同尺度的物体，但它不能利用全局视图中物体或东西之间的关系，这对场景分割也是至关重要的。</p><p>另一类方法是采用递归神经网络来利用长距离的依赖关系，从而提高场景分割的准确性。基于二维LSTM网络的方法[1]被提出来捕捉标签上复杂的空间依赖关系。工作[18]建立了一个带有有向无环图的递归神经网络来捕捉局部特征上丰富的上下文依赖关系。然而，这些方法用递归神经网络隐含地捕捉全局关系，其有效性在很大程度上依赖于长期记忆的学习结果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20241210232535582-1733845060787-3.png" alt="场景分割的目标" /></p><blockquote><p>图1：场景分割的目标是识别每个像素，包括东西和不同的物体。物体/物品的各种尺度、遮挡和光照变化使得解析每个像素成为挑战。</p></blockquote><p>为了解决上述问题，我们提出了一个新的框架，称为双注意网络（DANet），用于自然场景图像分割，如图所示。2. 它引入了一种自我注意机制，分别在空间和通道维度上捕捉特征的依赖性。具体来说，我们在扩张的FCN上面附加了两个平行的注意力模块。一个是位置注意模块，另一个是通道注意模块。对于位置注意模块，我们引入了自我注意机制来捕捉特征图中任意两个位置之间的空间依赖关系。对于某个位置的特征，它是通过将所有位置的特征加权求和来更新的，其中权重是由相应的两个位置之间的特征相似度决定的。也就是说，任何两个具有相似特征的位置都可以促进相互改进，而不管它们在空间维度上的距离如何。对于通道注意模块，我们使用类似的自我注意机制来捕捉任何两个通道图之间的通道依赖性，并以所有通道图的加权和来更新每个通道图。最后，这两个注意力模块的输出被融合以进一步增强特征表示。</p><p>应该指出，在处理复杂多样的场景时，我们的方法比以前的方法[4, 29]更加有效和灵活。以图中的街道场景为例。1为例。首先，第一行的一些 &quot;人 &quot;和 &quot;红绿灯 &quot;由于光线和视野的原因，是不明显的或不完整的物体。如果探索简单的上下文嵌入，来自被支配的突出物体（如汽车、建筑）的上下文会损害这些不明显的物体标签。相比之下，我们的注意力模型选择性地聚集了不显眼物体的相似特征，以突出它们的特征表征，避免显眼物体的影响。第二，&quot;车 &quot;和 &quot;人 &quot;的尺度是多样的，识别这种多样的物体需要不同尺度的背景信息。也就是说，不同尺度的特征应该被同等对待，以代表相同的语义。我们的模型与注意力机制只是为了从全局角度自适应地整合任何尺度的相似特征，这在一定程度上可以解决上述问题。第三，我们明确地将空间和通道关系考虑在内，这样场景理解就可以从长距离的依赖关系中受益。</p><p>我们的主要贡献可以概括为以下几点：</p><ul><li><p>我们提出了一种新颖的具有自我注意机制的双注意网络（DANet），以增强特征表征对场景分割的判别能力。</p></li><li><p>提出了一个位置注意模块来学习特征的空间相互依赖性，并设计了一个通道注意模块来模拟通道相互依赖性。它通过对局部特征的丰富的上下文依赖关系进行建模，大大改善了分割结果。</p></li><li><p>我们在三个流行的基准上取得了新的最先进的结果，包括Cityscapes数据集[5]、PASCAL Context数据集[14]和COCO Stuff数据集[2]。</p></li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>语义分割。基于完全卷积网络（FCN）的方法在语义分割方面取得了很大进展。有几个模型变体被提出来以加强上下文的聚合。首先，Deeplabv2[3]和Deeplabv3[4]采用直角空间金字塔池来嵌入上下文信息，它由不同扩张率的平行扩张卷积组成。PSPNet[29]设计了一个金字塔池模块来收集有效的语境先验，包含不同尺度的信息。编码器-解码器结构[? ，6，8，9]融合了中级和高级语义特征，以获得不同尺度的上下文。其次，学习局部特征的上下文依赖关系也有助于特征表征的形成。DAG-RNN[18]用递归神经网络对有向无环图进行建模，以捕捉丰富的上下文依赖关系。PSANet[30]通过卷积层和空间维度的相对位置信息来捕捉像素级的关系。此外，EncNet[27]引入了一个通道注意机制来捕捉全局背景。</p><p>自我注意模块。注意力模块可以对长距离的依赖关系进行建模，并在许多任务中得到了广泛的应用[11, 12, 17, 19-21]。特别是，工作[21]是第一个提出自我注意机制来绘制输入的全局依赖关系，并将其应用于机器翻译。同时，注意力模块在图像视觉中的应用也越来越多。作品[28]引入了自我注意机制来学习更好的图像生成器。与自我注意模块相关的工作[23]，主要探索了视频和图像在时空维度上的非局部操作的有效性。</p><p>与以往的工作不同，我们在场景分割任务中扩展了自我注意机制，并精心设计了两类注意模块来捕捉丰富的上下文关系，以获得具有类内紧凑性的更好的特征表示。全面的实证结果验证了我们提出的方法的有效性。</p><h2 id="3-dual-attention-network"><a class="markdownIt-Anchor" href="#3-dual-attention-network"></a> 3. Dual Attention Network</h2><p>在这一节中，我们首先介绍了我们网络的总体框架，然后介绍了两个注意力模块，它们分别在空间和通道维度上捕捉长距离的背景信息。最后，我们描述了如何将它们聚集在一起进行进一步的细化。</p><h3 id="31-overview"><a class="markdownIt-Anchor" href="#31-overview"></a> 3.1. Overview</h3><p>给出一张场景分割的图片，东西或物体在尺度、光照和视野上是不同的。由于卷积操作会导致局部接受场，与具有相同标签的像素对应的特征可能有一些差异。这些差异会带来类内的不一致，影响识别的准确性。为了解决这个问题，我们通过在注意力机制下建立特征间的关联来探索全局性的上下文信息。我们的方法可以自适应地聚合长范围的上下文信息，从而改善场景分割的特征表示。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20241210232555352-1733845060788-4.png" alt="双重注意网络的概述" /></p><blockquote><p>图2：双重注意网络的概述。(最好以彩色观看)</p></blockquote><p>如图所示。如图2所示，我们设计了两种类型的注意力模块，在扩张的残差网络产生的局部特征上绘制全局背景，从而获得更好的像素级预测的特征表示。我们采用预训练的残差网络，以扩张的策略[3]为骨干。值得注意的是，我们去掉了下采样操作，在最后两个ResNet块中采用了扩张卷积，从而将最终的特征图大小扩大到输入图像的1/8。它保留了更多的细节，而没有增加额外的参数。然后，来自扩张的残差网络的特征将被送入两个平行的注意力模块。以图中上部的空间注意模块为例。2为例，我们首先应用一个卷积层来获得降维的特征。然后，我们将这些特征送入位置注意模块，并通过以下三个步骤生成新的空间长距离背景信息的特征。第一步是生成一个空间注意力矩阵，该矩阵对特征的任何两个像素之间的空间关系进行建模。接下来，我们在注意力矩阵和原始特征之间进行矩阵乘法。第三，我们对上述相乘的结果矩阵和原始特征进行元素相加运算，以获得反映长距离背景的最终表征。同时，通道维度上的长程上下文信息被通道关注模块所捕获。除了第一步，捕捉通道关系的过程与位置注意模块相似，在这一步中，通道注意矩阵是以通道维度计算的。最后，我们将两个注意模块的输出汇总，以获得更好的特征表示，用于像素级预测。</p><h3 id="32-position-attention-module"><a class="markdownIt-Anchor" href="#32-position-attention-module"></a> 3.2. Position Attention Module</h3><p>鉴别性的特征表示对于场景理解至关重要，这可以通过捕捉长距离的上下文信息获得。然而，许多工作[15, 29]表明，由传统的FCNs产生的局部特征可能会导致对物体和东西的错误分类。为了在局部特征上建立丰富的上下文关系模型，我们引入了一个位置注意模块。位置注意模块将更广泛的上下文信息编码到局部特征中，从而提高了它们的表示能力。接下来，我们详细说明了自适应聚合空间背景的过程。</p><p>如图3(A)所示，给定一个局部特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∈</mo><mi>R</mi><mi>C</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">A\in RC \times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，我们首先将其输入卷积层，分别生成两个新的特征图B和C，其中{B，C}∈RC×H×W。然后我们将它们重塑为RC×N，其中N=H×W是像素的数量。之后，我们在C和B的转置之间进行矩阵乘法，并应用softmax层来计算空间注意图S∈RN×N：</p><p>其中sji衡量第i个位置对第j个位置的影响。两个位置的特征表示越相似，就越有助于它们之间的关联性。</p><p>同时，我们将特征A送入卷积层，生成一个新的特征图D∈RC×H×W并将其重塑为RC×N。然后，我们在D和S的转置之间进行矩阵乘法，将结果重塑为RC×H×W。最后，我们将其乘以一个比例参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>，并与特征A进行元素相加运算，得到最终输出E∈RC×H×W，如下所示：</p><p>其中α初始化为0，并逐渐学习分配更多的权重[28]。从公式2中可以推断出，每个位置的结果特征E是所有位置的特征和原始特征的加权和。因此，它有一个全局的语境观，并根据空间注意图选择性地聚合语境。相似的语义特征实现了相互增益，从而加强了类内的紧凑性和语义的一致性。</p><h3 id="33-channel-attention-module"><a class="markdownIt-Anchor" href="#33-channel-attention-module"></a> 3.3. Channel Attention Module</h3><p>高层特征的每个通道图都可以被看作是一个特定类别的反应，而不同的语义反应是相互关联的。通过利用通道图之间的相互依存关系，我们可以强调相互依存的特征图，改善特定语义的特征表示。因此，我们建立了一个通道注意模块来明确地模拟通道之间的相互依赖关系。</p><p>图3(B)说明了通道注意模块的结构。与位置注意模块不同的是，我们直接从原始特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>C</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">A\in R^{C×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>计算出通道注意图X∈RC×H×W。具体来说，我们将A重塑为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mrow><mi>C</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">R^{C×N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span>，然后在A和A的转置之间进行矩阵乘法。最后，我们应用softmax层来获得通道注意图X∈RC×C：</p><p>其中xji衡量第i个通道对第j个通道的影响。此外，我们在X和A的转置之间进行矩阵乘法，将其结果重塑为RC×H×W。然后，我们将结果乘以一个比例参数β，并与A进行逐元相加运算，得到最终输出E∈RC×H×W：</p><p>公式4显示，每个通道的最终特征是所有通道的特征和原始特征的加权和，它是特征图之间长程语义依赖的模型。它有助于提高特征的可辨识性。</p><p>值得注意的是，在计算两个通道的关系图之前，我们没有采用卷积层来嵌入特征，因为它可以保持不同通道图之间的关系。此外，与最近的工作[27]不同的是，我们利用所有相应位置的空间信息来建立通道相关性模型，通过全局汇集或编码层来探索通道关系。</p><h3 id="34-attention-module-embedding-with-networks"><a class="markdownIt-Anchor" href="#34-attention-module-embedding-with-networks"></a> 3.4. Attention Module Embedding with Networks</h3><p>为了充分利用长距离的上下文信息，我们将这两个注意力模块的特征集合起来。具体来说，我们通过卷积层对两个注意力模块的输出进行转换，并进行元素求和来完成特征融合。最后，再通过卷积层来生成最终的预测图。我们没有采用级联操作，因为它需要更多的GPU内存。我们注意到，我们的注意力模块很简单，可以直接插入现有的FCN管道中。它们没有增加太多的参数，但却能有效地加强特征表示。</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>为了评估所提出的方法，我们在Cityscapes数据集[5]、PASCAL VOC2012[7]、PASCAL Context数据集[14]和COCO Stuff数据集[2]上进行了综合实验。实验结果表明，DANet在三个数据集上实现了最先进的性能。在接下来的几个小节中，我们首先介绍了数据集和实现细节，然后我们在Cityscapes数据集上进行了一系列的消融实验。最后，我们报告了我们在PASCAL VOC 2012、PASCAL Context和COCO Stuff上的结果。</p><h3 id="41-datasets-and-implementation-details"><a class="markdownIt-Anchor" href="#41-datasets-and-implementation-details"></a> 4.1. Datasets and Implementation Details</h3><p>城市景观 该数据集有5000张从50个不同城市拍摄的图像。每张图片有2048×1024像素，有19个语义类别的高质量的像素级标签。训练集有2979张图片，验证集有500张图片，测试集有1525张图片。我们在实验中不使用粗略的数据。</p><p>PASCAL VOC 2012 该数据集有10,582张图片用于训练，1,449张图片用于验证，1,456张图片用于测试，其中涉及20个前景物体类别和一个背景类别。PASCAL Context 该数据集为整个场景提供了详细的语义标签，其中包含4,998张训练用图像和5,105张测试用图像。按照[10, 27]，我们对最频繁的59个类别和一个背景类别（共60个类别）进行评估。</p><p>COCO Stuff 该数据集包含9,000张用于训练的图像和1,000张用于测试的图像。按照[6, 10]，我们报告了我们在171个类别上的结果，包括80个物体和91个标注在每个像素上的东西。</p><h4 id="411-implementation-details"><a class="markdownIt-Anchor" href="#411-implementation-details"></a> 4.1.1 Implementation Details</h4><p>我们的方法基于 Pytorch 实现。按照文献[4,27]，我们采用了多学习率策略，即初始学习率在每次迭代后乘以（1- iter total iter ）0.9。城市景观数据集的基本学习率设定为 0.01。动量和权重衰减系数分别设置为 0.9 和 0.0001。我们使用同步 BN [27] 训练模型。在采用多尺度增强时，我们将 COCO Stuff 的训练时间设置为 180 epochs，将其他数据集的训练时间设置为 240 epochs。根据文献[3]，当使用两个注意力模块时，我们在网络末端采用多损失。在数据增强方面，我们在对城市景观数据集进行消融研究的训练过程中采用了随机裁剪（裁剪尺寸为 768）和随机左右翻转。</p><h3 id="42-results-on-cityscapes-dataset"><a class="markdownIt-Anchor" href="#42-results-on-cityscapes-dataset"></a> 4.2. Results on Cityscapes Dataset</h3><h4 id="421-ablation-study-for-attention-modules"><a class="markdownIt-Anchor" href="#421-ablation-study-for-attention-modules"></a> 4.2.1 Ablation Study for Attention Modules</h4><p>我们在扩张网络的基础上采用了双重注意模块，以捕捉长距离的依赖关系，从而更好地理解场景。为了验证注意力模块的性能，我们用表1中的不同设置进行了实验。</p><p>如表1所示，注意力模块明显提高了性能。与基线FCN（ResNet-50）相比，采用位置注意力模块在平均IoU方面产生了75.74%的结果，这带来了5.71%的改善。同时，单独采用通道上下文模块比基线要好4.25%。当我们把这两个注意力模块整合在一起时，性能进一步提高到76.34%。此外，当我们采用一个更深的预训练网络（ResNet-101）时，带有两个注意力模块的网络比基线模型的分割性能显著提高了5.03%。结果表明，注意力模块为场景分割带来了巨大的好处。</p><p>位置注意模块的效果可以在图4中得到体现。 一些细节和物体的边界在位置注意模块的作用下更加清晰，例如第一行的 &quot;杆 &quot;和第二行的 “人行道”。对局部特征的选择性融合增强了对细节的识别。同时，图5显示，通过我们的通道注意模块，一些错误分类的类别现在被正确分类，如第一行和第三行的 “公共汽车”。通道图之间的选择性整合有助于捕捉上下文信息。语义的一致性得到了明显的改善。</p><h4 id="422-ablation-study-for-improvement-strategies"><a class="markdownIt-Anchor" href="#422-ablation-study-for-improvement-strategies"></a> 4.2.2 Ablation Study for Improvement Strategies</h4><p>按照[4]，我们采用同样的策略来进一步提高性能。(1) DA：用随机缩放法进行数据扩充。(2) 多网格：我们在最后一个ResNet块中采用了不同大小的网格层次结构（4,8,16）。(3) MS：我们对来自8个图像尺度{0.5 0.75 1 1.25 1.5 1.75 2 2.2}的分割概率图进行平均，以进行推理。</p><p>实验结果显示在表2中。通过随机缩放的数据增强，性能提高了近1.26%，这表明网络从丰富训练数据的尺度多样性中获益。我们采用MultiGrid来获得预训练网络的更好的特征表示，这进一步实现了1.11%的改进。最后，分割图的融合进一步提高了性能，达到81.50%，比著名的Deeplabv3[4]方法（在Cityscape val set上为79.30%）高出2.20%。</p><h4 id="423-visualization-of-attention-module"><a class="markdownIt-Anchor" href="#423-visualization-of-attention-module"></a> 4.2.3 Visualization of Attention Module</h4><p>对于位置注意，整体的自我注意图的大小为（H×W）×（H×W），这意味着对于图像中的每一个具体的点，都有一个相应的子注意图，其大小为（H×W）。在图6中，对于每个输入图像，我们选择两个点（标记为#1和#2），并在第2列和第3列分别显示它们相应的子注意图。我们观察到，位置注意力模块可以捕捉到清晰的语义相似性和远距离关系。例如，在第一行中，红色的1号点被标记在一栋建筑上，它的注意力图（在第二列）突出了建筑所在的大部分区域。此外，在子注意图中，尽管有些点离1号点很远，但其边界却非常清晰。至于2号点，它的注意力图集中在大部分标为 &quot;汽车 &quot;的位置。在第二行中，全局区域的 &quot;交通标志 &quot;和 &quot;人 &quot;也是如此，尽管对应的像素数量较少。第三行是针对 &quot;植被 &quot;类和 &quot;人 &quot;类。特别是，2号点对附近的 &quot;骑手 &quot;类没有反应，但它对远处的 &quot;人 &quot;有反应。</p><p>对于通道注意，很难直接给出关于注意图的可理解的视觉化。相反，我们展示了一些被关注的频道，看它们是否突出了清晰的语义区域。在图6中，我们在第4列和第5列显示了第11个和第4个被关注的通道。我们发现，在通道注意模块增强后，特定语义的反应是明显的。例如，在所有三个例子中，第11个通道图对 &quot;汽车 &quot;类有反应，而第4个通道图对 &quot;植被 &quot;类有反应，这有利于两个场景类别的分割。总而言之，这些可视化的数据进一步证明了捕捉长距离的依赖关系对于改善场景分割中的特征表示的必要性。</p><h4 id="424-comparing-with-state-of-the-art"><a class="markdownIt-Anchor" href="#424-comparing-with-state-of-the-art"></a> 4.2.4 Comparing with State-of-the-art</h4><p>我们在Cityscapes测试集上进一步比较了我们的方法和现有的方法。具体来说，我们只用精细注释的数据训练我们的DANet101，并将测试结果提交给官方评估服务器。结果显示在表3中。DANet以明显的优势胜过了现有的方法。特别是，我们的模型在相同的骨干网ResNet-101的情况下，以很大的优势超过了PSANet[30]。此外，它也超过了DenseASPP[25]，后者使用了比我们更强大的预训练模型。</p><h3 id="43-results-on-pascal-voc-2012-dataset"><a class="markdownIt-Anchor" href="#43-results-on-pascal-voc-2012-dataset"></a> 4.3. Results on PASCAL VOC 2012 Dataset</h3><p>我们在PASCAL VOC 2012数据集上进行了实验，以进一步评估我们方法的有效性。PASCAL VOC 2012数据集的定量结果见表。4. 我们的注意力模块明显提高了性能，其中DANet-50比基线高出3.3%。当我们采用一个更深的网络ResNet-101时，该模型进一步达到了80.4%的平均IoU。继[4, 27, 29]之后，我们采用了PASCAL VOC 2012训练值集，进一步微调我们的最佳模型。PASCAL VOC2012在测试集上的结果如表5所示。</p><h3 id="44-results-on-pascal-context-dataset"><a class="markdownIt-Anchor" href="#44-results-on-pascal-context-dataset"></a> 4.4. Results on PASCAL Context Dataset</h3><p>在本小节中，我们对PASCAL Context数据集进行了实验，以进一步评估我们方法的有效性。我们在PASCAL VOC 2012数据集上采用相同的训练和测试设置。PASCAL Context的定量结果显示在表。6. 基线（Dilated FCN-50）产生的平均IoU为44.3%。DANet-50将性能提高到50.1%。此外，通过深度预训练网络ResNet101，我们的模型结果达到了Mean IoU 52.6%，以很大的优势超过了以前的方法。在以前的工作中，Deeplab-v2和RefineNet通过不同的卷积或不同阶段的编码器采用多尺度特征融合。此外，他们用额外的COCO数据训练他们的模型，或者采用更深的模型（ResNet152）来提高他们的分割结果。与之前的方法不同的是，我们引入了注意力模块来明确捕获全局依赖关系，所提出的方法可以实现更好的性能。</p><h3 id="45-results-on-coco-stuff-dataset"><a class="markdownIt-Anchor" href="#45-results-on-coco-stuff-dataset"></a> 4.5. Results on COCO Stuff Dataset</h3><p>我们还对COCO Stuff数据集进行了实验，以验证我们提出的网络的通用性。与以前最先进的方法的比较见表。7. 结果显示，我们的模型在Mean IoU方面取得了39.7%的成绩，以很大的幅度超过了这些方法。在比较的方法中，DAG-RNN[18]利用二维图像的链式RNN来模拟丰富的空间依赖关系，Ding等人[6]在解码器阶段采用了门控机制来改善不明显物体和背景东西的分割。</p><h3 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h3><p>在本文中，我们提出了一个用于场景分割的双注意网络（DANet），它利用自我注意机制自适应地整合局部语义特征。具体来说，我们引入了一个位置注意模块和一个通道注意模块，分别捕捉空间和通道维度上的全局依赖关系。消融实验表明，双注意模块能有效地捕捉长距离的上下文信息，并给出更精确的分割结果。我们的注意力网络在四个场景分割数据集上持续取得了出色的表现，即Cityscapes、Pascal VOC 2012、Pascal Context和COCO Stuff。此外，降低计算复杂性和增强模型的鲁棒性也很重要，这将在未来的工作中进行研究。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dental Lesion Segmentation Using an Improved ICNet Network with Attention</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Dental%20Lesion%20Segmentation%20Using%20an%20Improved%20ICNet%20Network%20with%20Attention/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Dental%20Lesion%20Segmentation%20Using%20an%20Improved%20ICNet%20Network%20with%20Attention/</url>
      
        <content type="html"><![CDATA[<h1 id="dental-lesion-segmentation-using-an-improved-icnet-network-with-attention"><a class="markdownIt-Anchor" href="#dental-lesion-segmentation-using-an-improved-icnet-network-with-attention"></a> Dental Lesion Segmentation Using an Improved ICNet Network with Attention</h1><p><a href="zotero://open-pdf/library/items/QFRTXXGG">文章链接</a></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>牙齿病变的精确分割是建立智能牙齿病变检测系统的关键。为了解决牙齿病变与正常牙齿组织相似而难以分割的问题，我们提出了一种改进的图像级联网络（ICNet）网络分割方法来分割各种病变类型，如牙结石、牙龈炎和牙石。首先，利用ICNet网络模型实现对病变的实时分割。其次，将卷积块注意模块（CBAM）整合到ICNet网络结构中，将空间注意模块中的大尺寸卷积替换为分层扩张卷积，在增强相关特征的同时抑制无用特征，解决病变分割不准确的问题。最后，网络模型中的部分卷积被替换为不对称卷积，以减少注意力模块所增加的计算量。实验结果表明，与全卷积网络（FCN）、U-Net、SegNet等分割算法相比，我们的方法在分割效果上有明显改善，而且图像处理频率更高，满足了对牙齿病变分割精度的实时要求。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>计算机视觉领域的不断进步，推动了在线智能诊断和治疗系统的研究。随着人类生活条件的改善，人们对牙齿病变的关注度越来越高，加之疫情的影响，医院的诊断也变得很不方便。 在临床上出现了以下问题：（1）有些病变与牙齿结构相似，医生容易漏诊或误诊。(2)随着就诊人数的增加，复查众多片子增加了医生的工作量，导致复查时间变慢，无法及时反馈给患者。由于医疗资源分配不均，偏远地区的患者缺乏获得深入治疗的机会。因此，在线诊所行业不断涌现，以满足额外的需求。牙科病变鉴定系统可以发挥预诊和辅助诊断的作用，使病情较轻的患者可以节省看病时间，而病情严重的患者可以得到彻底的诊断，并可以随时随地获得牙科病变诊断结果。这就减少了疫情发生时必要的现场诊断次数，防止了COVID-19病毒的传播。对牙齿病变的实时分割算法的研究已成为开发智能牙齿病变检测系统的关键。</p><p>牙科诊断技术主要是对X光片和光学相干断层扫描（OCT）图像进行增强或分割，以协助医生进行诊断。Lee等人[1]提出了垂直强度变换函数（VIFT）来解决减少基于光照的牙齿灰度差异的问题，然后使用K-means算法和Markov随机场来指定检测范围，最后分割出牙结石的候选块。然而，这些传统方法对于特定的牙科诊断任务的准确性仍有改进的余地，对于有多个病变的单一图像，传统方法无法识别和分割多个类别。</p><p>目前，许多学者也在尝试将深度学习方法用于牙科诊断。Kreis [<a href="#_bookmark2">2</a>] 使用卷积神经网络（CNN）来检测全景牙科X射线上的牙周骨质流失（PBL）。Casalegno等人[<a href="#_bookmark3">3</a>]使用近红外光透射（NILT）图像进行龋齿分割。 Jae-Hong Lee [<a href="#_bookmark4">4</a>] 评估了深度CNN算法在根尖周的X射线上检测和诊断龋齿的有效性。Yu[<a href="#_bookmark5">5</a>]等人也评估了CNN在通过侧头测量对骨骼进行分类的性能。最近，Wen等人[<a href="#_bookmark6">6</a>]使用深度学习方法来检测牙齿病变。他们建立了一个多任务网络结构，该模型由三个子网组成。FNet（特征提取子网），LNet（位置子网）和CNet（分类子网）。 这项工作主要是检测牙结石、牙龈炎和软沉积物。他们用不同颜色的候选帧来识别牙结石和牙龈炎，而对于软沉积物，只进行了图像级别的分类。这项工作的问题是，牙齿病变的形状是不规则的。矩形标签法通过网络学习周围正常组织的特征，检测结果范围大于病变的实际像素范围。此外，网络模型中的LNet子网是一个两级定位网络，所以模型的实时性是一个问题。与以往工作不同的是，我们使用口内摄像头采集牙齿病变的RGB图像，并使用深度学习方法在像素层面对多个病变进行分割，以更准确地检测病变的范围。</p><p>许多诊断方法都是基于目前流行的三维成像技术，如CT、3DMD等[7]。因此，三维点云数据分割也是热点研究课题之一。Karatas等人介绍了基本的三维图像分割方法，并总结了三维成像技术的现状，评估了它们在正畸中的应用。 为了解决点云数据的稀疏性问题，Graham等人提出了新的稀疏卷积运算SSCNs[<a href="#bookmark8">8</a>]，以更有效地处理稀疏数据。Liu等人提出了一个卷积BEACon网络[<a href="#_bookmark9">9</a>]，该网络具有嵌入式注意力边界，用于点云实例分割，该网络基于人类对几何和颜色的感知，将几何和颜色结合到注意力权重中，用于物体识别动机。 SMU-Net[<a href="#_bookmark10">10</a>]使用显著性映射引导主网络和次网络分别学习前景显著性和背景显著性表征，获得良好的分割结果，但其在小规模数据集上对模糊病变的边缘分割的有效性有待提高。</p><p>深度学习使用端到端的训练来预测复杂的模型，能够完成复杂场景下的病变分割。Long等人[<a href="#_bookmark11">11</a>]提出了一个基于CNN的全卷积网络，首次实现了像素级分类。他们巧妙地用卷积层取代了包含复杂计算的全连接层，并在卷积后使用解旋来恢复原始尺寸。随后，编码器-解码器被广泛用于语义分割中。所提出的SegNet[<a href="#_bookmark12">12</a>]网络与FCN类似，不同的是在解码操作中的最大池化操作中记录了最大值的位置，然后在解码时通过相应的池化指数实现非线性上采样。上采样后得到一个稀疏的特征图，然后通过普通卷积得到一个密集的特征图，再重复上采样的过程。这就减少了编码阶段的计算量。Ronneberger等人提出的U-Net[<a href="#_bookmark13">13</a>]是对编码器-解码器结构的改进，它通过连接编码器和解码器的相应层，将低级和高级特征合并起来，以消除差距。</p><p>在实际的分割场景中，我们要在保证精度的前提下追求实时性能。ENet[14]认为，解码结构只用于上采样编码的输出，只用于细化边缘细节，所以不需要特别深。此外，全卷积过程非常耗时，所以ENet只使用一层全卷积，并利用更少的参数，获得更快的速度。 然而，ENet在保证实时性的同时，放弃了一定的准确率，导致分割精度较低。ICNet[15]使用PSPNet[16]的金字塔池模块来融合多尺度的上下文信息，将网络结构分为三个分支：低分辨率、中分辨率和高分辨率。它使用低分辨率来完成语义分割，用高分辨率策略来重新确定分割结果，提高了模型的分割精度。此外，它使用级联标签来指导每个分支的训练，加快了模型的收敛和预测，并提高了实时性能。</p><p>上述分割网络在遥感图像[<a href="#_bookmark17">17</a>]、街景图像[<a href="#_bookmark18">18</a>]、病变图像[<a href="#_bookmark19">19</a>]的分割中表现良好，但到目前为止还没有在牙齿病变中应用。我们发现在用FCN、SegNet、ENet等分割算法测试时，存在分割过度和分割不足的情况。分析认为，牙齿病变和正常的牙齿组织在纹理和颜色上相似，具有相似的特征，这使得正确分割牙齿病变及其边缘变得困难。此外，牙齿病变的分割需要在合理的时间内保证准确性，从而满足诊断设备和海量数据的需要。在这篇文章中，我们提出将注意力机制整合到ICNet网络中，以解决上述两个问题。本文的突出观点和贡献如下。</p><ol><li>自建的牙齿病变数据集包括四种类型的病变：牙结石、牙龈炎、牙垢和磨损的表面，并用ACE色彩均衡算法对光源造成的过曝图像进行预处理。</li><li>轻量级的卷积块注意模块（CBAM）注意模块被整合到图像级联网络（ICNet）网络的中低层分支中，这样高分辨率的分支可以更好地引导中低层分支的特征，空间注意的大尺寸卷积使用堆叠的空心体积进行产品替换。</li><li>低分辨率和中分辨率分支中的常规卷积被替换为非对称卷积，以减少计算量。</li></ol><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>在本节中，我们将介绍与我们的方法相关的语义分割架构和模型。 这些架构和模型在图像分割任务中被广泛使用。</p><h3 id="21-encoderdecoder-network"><a class="markdownIt-Anchor" href="#21-encoderdecoder-network"></a> 2.1 Encoder–Decoder Network</h3><p>我们的分割网络是基于编码器-解码器的网络结构。2015年，Long等人提出的FCN使用了一个卷积层来代替整个网络的完整卷积层，并使用去卷积层进行上采样来还原分割结果。这种完全卷积网络被称为编码器-解码器网络 。此后，大多数图像分割网络都采用了编解码网络的形式。在FCN的基础上，U-Net建立了一个更复杂的去编码器，在相应的层次上增加补偿，以补偿局部信息。SegNet是U-Net的进一步扩展，它在编码器模型中实现了最大像素池操作，减少了解码阶段的计算量。ICNet首先将输入图像的大小改为原始图像的二分之一和四分之一，并将原始图像组合成输入图像，输入到低、中、高像素分支。在低、中分辨率下有许多网络层，但图像分辨率很低，这就节省了计算时间。虽然高分辨率分支的图像较大，但输入的网络层数量较少，导致时间开销相对较小，从而实现了实时目标。通过CFF模块对各分支提取的特征图进行融合，最后通过解码得到分割结果。</p><h3 id="22-attention-mechanism"><a class="markdownIt-Anchor" href="#22-attention-mechanism"></a> 2.2 Attention Mechanism</h3><p>CNN的一个局限性是它很难有效地学习全局信息，而且对图像细节的分割也不完美。近年来，研究人员将特征融合和注意力机制整合到网络模型中，以提高网络学习全局特征的能力，更好地分割细节。PspNet是通过金字塔池模块提出的，它根据不同的区域聚合上下文信息，并将像素级特征扩展到专门设计的全局金字塔池。 局部和全局的线索共同作用，使最终的预测更加可靠。 近年来，大量的研究证明，在网络模型中引入注意力模块可以有效提高性能。SA-UNet[<a href="#_bookmark23">26</a>]引入了空间注意模块SE[<a href="#_bookmark24">27</a>]，可以沿空间维度推断出注意图，并将注意图与输入特征图相乘，进行自适应特征重构。 这项工作对视网膜血管分割的影响超过了Ronneberger等人的原始U-Net[<a href="#_bookmark25">24</a>]提出了一个注意力门结构。AG模块连接到每一跳连接的末端，并对提取的特征实施注意机制。在我们提出的模型中，我们使用了卷积块注意力模块CBAM，它将输入图像和注意力序列应用于通道，然后应用于空间维度。CBAM的结果是一个加权的特征图，它考虑到了输入图像的通道和空间区域。</p><h3 id="23-multiple-forms-of-convolution"><a class="markdownIt-Anchor" href="#23-multiple-forms-of-convolution"></a> 2.3 Multiple Forms of Convolution</h3><p>许多研究提出了各种形式的卷积来提高分割网络的性能。Szegedy等人[<a href="#_bookmark26">28</a>]首先提出了1×1卷积的概念，其主要功能是降低维度和节省计算成本。就卷积方法而言，1×1卷积与传统的卷积没有区别，主要区别在于应用场景和功能。他们还提出了一种非对称卷积；也就是说，n*n的卷积可以被1×n后的n×1的卷积所取代，这样得到的效果与传统卷积相同，计算量也减少了。深度可分离卷积[<a href="#_bookmark27">29</a>]是基于1×1卷积的创新，它包括两个部分，深度卷积和1×1卷积。卷积的目的是使用卷积核对每个输入进行单独卷积；也就是说，通道被分离，然后合并。Koltun等人[<a href="#_bookmark28">30</a>]首次将扩张卷积用于图像分割。扩张卷积是通过在卷积核的元素之间增加一些空间来扩大卷积核的过程，这在不增加参数数量的情况下增加了感受场。Papandreou等人提出的DeepLabV2算法[<a href="#_bookmark29">31</a>]使用扩张卷积来提取特征。许多研究已经使用扩张卷积[<a href="#_bookmark29">31</a>,<a href="#_bookmark30">32</a>]来取代传统卷积。</p><h2 id="3-methods"><a class="markdownIt-Anchor" href="#3-methods"></a> 3. Methods</h2><h3 id="31-adding-the-cbam-attention-module-to-low-and-medium-resolution-branches"><a class="markdownIt-Anchor" href="#31-adding-the-cbam-attention-module-to-low-and-medium-resolution-branches"></a> 3.1 Adding the CBAM Attention Module to Low- and Medium-Resolution Branches</h3><p>本文的网络框架主要是一个ICNet网络，它由三个网络分支组成：低、中、高分辨率分支，如图1所示。在我们设计的网络中，低分辨率网络是根据Resnet50的前11个卷积块设计的，使用扩张卷积来增强特征感知场，使用非对称卷积来减少计算量。中分辨率分支是根据Resnet50的前5个卷积块设计的，在最后两个卷积中使用非对称卷积，两个分支网络头都包括一个7×7卷积和最大平均池。高分辨率分支被设计为轻量级网络，由三个卷积块组成，包括3×3卷积、Relu激活函数、BN层、1×1卷积和Relu激活函数，依次进行。</p><p><img src="images/202306142019089.png" alt="" /></p><p>牙齿病变和正常牙齿之间存在着形态上的相似性，边缘难以区分。 此外，虽然ICNet在低分辨率分支中进行特征提取时保留了大部分语义信息，但会损失细节和边缘信息，导致分割精度不理想。在本文中，CBAM模块被添加到低分辨率分支中，如图1所示。通过通道和空间注意力的串行组合，重要的特征可以被增强，不重要的特征可以被抑制，从而改善网络的性能，提高模型学习细节的能力。</p><p>CBAM将注意力应用于通道和空间两个维度，如图2所示。CBAM和SE模块一样，可以嵌入到目前大多数主流网络中。它可以提高网络模型的特征提取能力，而不会明显增加计算和参数的数量。</p><p><img src="images/image-20230624152747420.png" alt="image-20230624152747420" /></p><p>CBAM包括两块内容，通道注意力模块和空间注意力模块；也就是通道注意力CAM和空间注意力SAM。</p><p>嵌入CBAM机制的网络首先使用通道注意力映射对构成生成的特征图F进行全局汇集和最大汇集。汇总结果被连接到多层感知器进行加法运算，通道权重系数Mc是通过sigmoid激活函数生成的。最后，该权重系数与原始特征图F相乘，得到通道权重调整后的特征图F\，如图3所示。通道注意力映射过程如公式（1）所示。</p><p><img src="images/image-20230624152729494.png" alt="image-20230624152729494" /></p><p>方程（1）中，MLP代表多层感知器；6是激活函数。之后，由通道注意产生的特征图被送到空间注意进行处理。空间注意映射对加权特征图F/进行全局最大池化和平均池化的串联，用卷积法将维度降低为单通道特征图，用sigmoid函数激活空间特征矩阵Ms，对权重矩阵和特征图F进行点乘运算，得到最终需要的空间特征图F，空间注意映射过程如公式（2）。</p><p><img src="images/image-20230624152221722.png" alt="image-20230624152221722" /></p><p>式中，f7x7表示卷积核为7x7的卷积层；δ为激活函数；表示串联。</p><p>在本文中，我们将空间注意模块中的7×7大卷积核改为两个3×3的扩张卷积，扩张率为2，减少了空间注意模块中的参数数量。修改后的CBAM模型如图4所示，其中X和Y分别代表输入和输出特征矩阵，C、W和H以及Cl、Wl和Hl分别代表X和Y的三维信息。</p><p>为了抑制无用特征对模型的影响，CBAM注意力模型与四分之一分辨率分支的最后三个卷积块和二分之一分辨率的最后两个卷积块的外部卷积相连，以提高分割精度。 低分辨率和中分辨率分支前面的卷积块主要是提取图像特征，然后用注意力层来增强特征提取，使得到的特征更加准确，高分辨率分支可以更好地指导我们在低分辨率和中分辨率下更好地达到分割效果。</p><p>最后，通过CFF模块将三个分支产生的特征图进行融合，如图5所示。</p><p><img src="images/image-20230624152306265.png" alt="image-20230624152306265" /></p><p>CFF模块有三个输入，即特征图F1、F2和标签。对于F1，它被放大两倍，使其与F2的大小相同，然后F1的特征通过卷积3×3大小的孔和2的扩张率进行重构。对于F2，它被1×1卷积，使其与F1的通道数相同，然后使用BN层将特征归一化。然后将其加入到上面得到的F1特征中，得到F2\。为了加强对特征F1的学习，对1的上采样特征使用辅助标签进行引导，优化损失。其中，对于第一个CFF模块，F1和F2分别是由低分辨率和中分辨率分支得到的特征。</p><h3 id="32-asymmetric-convolution-replaces-regular-convolution"><a class="markdownIt-Anchor" href="#32-asymmetric-convolution-replaces-regular-convolution"></a> 3.2 Asymmetric Convolution Replaces Regular Convolution</h3><p>一个大的卷积核可以创造一个更大的接受场，但这也意味着有更多的参数。非对称卷积可以大大减少卷积阶段的计算量而不降低精度，从而减少模型的大小，提高模型的实时分割能力。本文用非对称卷积取代了部分常规卷积，进一步减少了ICNet的计算数量。</p><p>在ICNet网络中加入CBAM注意力模块，使模型的计算量略有增加。与传统卷积相比，非对称卷积可以大大减少卷积阶段的计算量而不损失精度。 首先进行n×1卷积，然后进行1×n卷积，如图6所示，这与直接进行n×n卷积的结果一致，但乘法运算的规模从n×n变为2×n；所以，n越大，非对称卷积减少计算量的效果越明显。在本文中，二分之一和四分之一分辨率分支用3×1卷积代替3×3卷积，然后再加入1×3卷积，如图6所示，从而减少了计算量。</p><h2 id="4-experiment"><a class="markdownIt-Anchor" href="#4-experiment"></a> 4. Experiment</h2><h3 id="41-datasets"><a class="markdownIt-Anchor" href="#41-datasets"></a> 4.1. Datasets</h3><h4 id="411-data-collection"><a class="markdownIt-Anchor" href="#411-data-collection"></a> 4.1.1 Data Collection</h4><p>使用口内照相机收集牙结石、牙龈炎、牙石和磨损表面的图像。通过从外部、内部和顶部三个角度拍摄，获得了200张牙齿病变的图像。表<a href="#_bookmark38">1</a>显示了所收集图像中各种病变的出现次数。</p><p><img src="images/image-20230624235320775.png" alt="image-20230624235320775" /></p><h4 id="412-data-augmentation"><a class="markdownIt-Anchor" href="#412-data-augmentation"></a> 4.1.2. Data Augmentation</h4><p>为了扩大样本之间的差异，保证后期模型训练的泛化能力，对收集到的牙齿病变图片进行随机裁剪，恢复原始尺寸并翻拍，然后调整对比度、亮度、饱和度等。然后，根据比例不变的原则，将原始牙齿病变图片缩放为512×512像素，通过人工筛选去除扭曲的图片，选取400张牙齿病变图片作为原始数据集。图<a href="#_bookmark39">7</a>为该数据集实例，图<a href="#_bookmark40">8</a>为数据增强前后的各种病变数量。最后，使用Label Me标签工具模仿PASCAL VOC2012数据集的格式，对病变图像中的牙结石、牙龈炎、牙石和磨损面四类进行手工标注，并将数据集按7:2:1的比例分为训练集、验证集和测试集。</p><p><img src="images/image-20230624235356270.png" alt="image-20230624235356270" /></p><p><img src="images/image-20230624235408783.png" alt="image-20230624235408783" /></p><p>牙垢数据很小，但它有更突出的特征，如颜色和纹理。为了应对少量的牙垢数据，我们在训练过程中加入了一些训练技术，如对牙垢数据集进行预训练以初始化权重，然后用预训练的模型来训练我们的多类病变分割模型。在训练过程中，我们还通过随机复制对牙垢数据进行过量取样，以便对少量的牙垢进行更准确的预测，我们还在网络中加入了dropout，以防止牙垢数据的过度过滤。</p><p><strong>此外，牙齿病变数据集被过度曝光，导致病变图像的边缘不清晰，细节不明确。 正常牙齿图像的直方图比较平衡，而曝光过度的牙齿图像有太多的高亮度像素，这导致直方图向右移动，如图9所示。</strong></p><p><img src="images/image-20230624235419209.png" alt="image-20230624235419209" /></p><p><strong>本文使用ACE自动色彩均衡算法对数据集中的不清晰图像进行色彩平衡。 该算法考虑了图像中颜色和亮度之间的空间位置关系，对局部特征进行自适应调整，对图像亮度和颜色进行调整，对局部和非线性特征进行对比度调整，并满足灰色世界理论假说和白斑假说。ACE算法包括两个步骤。第一步是调整图像的颜色/空间域，完成图像的色差校正，得到空间重建的图像，如公式（3）所示。</strong></p><p><img src="images/image-20230624235431061.png" alt="image-20230624235431061" /></p><p>式中，Rc是中间结果，Ic(p入_Ic(j入是两个不同点的亮度差，d(p，j)是距离度函数，r()是度性能函数，必须是奇数函数。这一步可以适应局部图像的对比度，r可以放大小差异，丰富大差异，根据局部内容扩大或压缩动态范围。</p><p><img src="images/image-20230624235440899.png" alt="image-20230624235440899" /></p><h3 id="42-metrics"><a class="markdownIt-Anchor" href="#42-metrics"></a> 4.2 Metrics</h3><p>为了比较我们方法的性能，我们使用训练模型对测试集进行分割，并将分割后的图像与屏蔽后的标签进行比较。在分割精度方面，我们的指标主要包括像素精度（Acc）、平均交互比（mIoU）和F1得分。在实时性能方面，我们主要比较单张图片的计算量和推理时间。我们对牙齿病变进行语义分割，这是一个像素级的分割。在计算机视觉的深度学习图像分割领域，mIoU值是衡量图像分割准确性的一个重要指标。假设有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个类别，$ p_{ij} $代表实际类别为i类但预测结果为j类的像素数。 mIoU的计算公式如公式（5）所示。</p><p><img src="images/image-20230624235453766.png" alt="image-20230624235453766" /></p><h3 id="43-loss-function"><a class="markdownIt-Anchor" href="#43-loss-function"></a> 4.3. Loss Function</h3><p>ICNet在每个分支训练中加入损失权重，并对加权SoftMax交叉熵进行优化，其损失函数L可表示为：</p><p><img src="images/image-20230624235551996.png" alt="image-20230624235551996" /></p><p>其中L1、L2和L3分别为低、中、高分辨率分支的损失，W1、W2和W3分别为低、中、高分辨率分支的损失函数的权重。通常情况下，如果高分辨率分支的权重W1设置为1，中分辨率和低分辨率分支的权重W2和W3分别为0.4和0.16。</p><h3 id="44-experimental-details"><a class="markdownIt-Anchor" href="#44-experimental-details"></a> 4.4. Experimental Details</h3><p>我们在一个自建的牙齿病变数据集上评估了我们的方法。在训练过程中，我们使用Resnet50作为骨干网络，当验证集的损失在20个epochs内没有减少时，我们使用SGD优化方法进行训练。训练过程中损失和acc的数据转换情况如图10所示。我们的方法具有更快的收敛率。我们替换了CBAM中空间注意模块中的大尺寸卷积，并进行消融实验。最后，我们增强和降低了原始图像的亮度，测试了不同亮度下我们模型的分割结果。</p><p><img src="images/image-20230624235650149.png" alt="image-20230624235650149" /></p><p>本文的实验都是基于TensorFlow深度学习框架，在Bit hub云服务器上完成，显卡信息为gtx1080。</p><h2 id="5-results"><a class="markdownIt-Anchor" href="#5-results"></a> 5. Results</h2><h3 id="51-contrast-test-with-other-segmentation-algorithms"><a class="markdownIt-Anchor" href="#51-contrast-test-with-other-segmentation-algorithms"></a> 5.1. Contrast Test with Other Segmentation Algorithms</h3><p>目前，随着卷积神经网络的发展，越来越多的深度学习方法被用于语义图像分割。然而，不同的任务和方法的分割性能是显著不同的。为了进一步检验该方法在牙列图像实时语义分割中的利弊，上述四个模型的训练参数与改进后的ICNet的参数相同。它们都是根据自动保存最优模型的策略进行训练，然后在验证集上进行测试。测试指标主要从分割精度和时间性能两方面入手，包括Acc、mloUthe F1 score和单张图片的推理时间。从表2可以看出，我们的方法具有最高的Acc、mloU和F1得分，得分分别为0.8897、78.67%和0.8890。与ICNet相比，改进后的ICNet分割精度、mIoU和F1得分分别高出0.0384、3.91%和0.0397。</p><p><img src="images/image-20230627001646694.png" alt="image-20230627001646694" /></p><p>此外，从图11的可视化结果来看，U-Net和SegNet有过度分割的现象。也就是说，没有病变的部分被分割了，而ENet和ICNet则存在分割不足的问题，这使得我们很难正确识别正常的牙齿组织和病变。改进后的ICNet大大改善了过度分割的情况，结果更接近标签。</p><p><img src="images/image-20230627001729756.png" alt="image-20230627001729756" /></p><p>在实时分割方面，ENet、UNet、SegNet、ICNet和改进的ICNet对一张图像的分割分别需要833毫秒、696毫秒、739毫秒、805毫秒、307毫秒和395毫秒。与ENet、U-Net和SegNet相比，改进后的ICNet分别缩短了34.63%、38.43%和43.47%的时间，与FCN相比缩短了近一半的时间，与ICNet相比增加的时间更少。从表3可以看出，改进后的ICNet比ICNet的计算成本略高。</p><p>从以上评价指标可以看出，我们的方法具有最好的分割效果，当分割时间接近ICNet时，我们方法的三个指标都有不同程度的提高。这些指标都有不同程度的提高。在所有方法的可视化结果中，我们的分割效果是最接近真实标签的。图12的横轴是分割的频率，纵轴是MIOU，图的右上角是最佳方法。图12显示，我们的方法在准确性和时间上都是最优的。</p><p><img src="images/image-20230627001820716.png" alt="image-20230627001820716" /></p><p>在四种病变类型中，牙结石和磨损面与正常牙齿组织特征最相似。图13显示了我们的方法和其他算法对牙结石和磨损面的分割可视化结果。FCNU-Net和SegNet对牙结石进行了分割。ENet和ICNet有一定的分割不足问题。我们的方法的可视化效果最接近于标签。在穿戴表面分割的可视化结果中，ENet分割的e最差。</p><p><img src="images/image-20230627001833245.png" alt="image-20230627001833245" /></p><h3 id="52-segmentation-under-different-brightness"><a class="markdownIt-Anchor" href="#52-segmentation-under-different-brightness"></a> 5.2. Segmentation under Different Brightness</h3><p>在采集口腔图像时，每张图像的亮度很难保持，亮度成为影响分割质量的重要因素之一。因此，本文对不同亮度下的分割和牙齿病变图像进行了比较。我们将原始图像的亮度设置为P，将图像亮度降低到原始图像的0.7倍，并将其提高到原始图像的1.3倍进行图像分割。</p><p>从表4可以看出，当亮度被调整到0.7P或1.3P时，分割的准确性会降低。分析认为，在太亮和太暗的图像中识别病变的特征是比较困难的，ICNet的分割精度分别下降了2.33%和4.5%，而我们方法的分割精度分别下降了2.68%和5.34%。根据可视化的结果，在图14中，ICNet在0.7P的时候有一个分割不足的问题，在1.3P的时候有一个分割过度的问题，我们的方法在0.7和1.3P的时候更接近真实标签。</p><h3 id="53-ablation-experiment-of-cbam"><a class="markdownIt-Anchor" href="#53-ablation-experiment-of-cbam"></a> 5.3. Ablation Experiment of CBAM</h3><p>我们用大小为3×3、稀释率为2的卷积核代替CBAM中空间注意中的7×7大尺寸卷积核，如表4所示，卷积核大小为7×7的标准卷积用ICnet+CBAM7×7表示；卷积核大小为3×3，空隙率为2的空隙卷积，用ICNet+CBAM3×3表示。我们使用扩张卷积，卷积核大小为3×3，扩张率为2倍，用CBAM2×3×3表示。与作为基准的ICNet+CBAM3×3的参数量相比，我们将ICNet+CBAM3×3的参数增量设为0。</p><p>从表5可以看出，用两个3×3的卷积代替空间注意中的7×7卷积后，参数数量减少后，mIoU增加了0.55%。实验表明，稀释率为2的3×3稀释卷积与7×7的标准卷积具有相同的知觉领域，两者的效果是近似的。此外，对比第三组实验结果，发现用稀释层堆叠多个卷积层也能提高空间注意模块的特征表达能力。</p><p><img src="images/image-20230831003939313.png" alt="image-20230831003939313" /></p><h2 id="6-conclusions"><a class="markdownIt-Anchor" href="#6-conclusions"></a> 6. Conclusions</h2><p>在本文中，对于一小部分牙科病变数据集，通过随机裁剪和ﬂipping对数据进行了扩充。ACE自动色彩均衡算法解决了由光源引起的病变图像模糊的问题。将增强后的数据和处理后的图像与原始数据集结合成一个新的数据集，使所得到的模型更具有通用性。</p><p>牙齿病变的边缘与正常牙齿高度相似，边缘难以细分。此外，虽然ICNet在低、中分辨率分支进行特征提取时获得了大部分语义信息，但细节容易丢失，导致病变分割不准确。因此，本文在特征提取阶段增加了一个轻量级的CBAM模块，它可以更好地获取图像的语义信息，使高分辨率分支可以更好地指导低分辨率生成的特征图，从而提高分割的准确性。</p><p>在低、中分辨率卷积阶段，我们用非对称卷积代替了3×3卷积，这进一步降低了模型的计算复杂性。我们还确保提高模型精度所需的时间不会明显增加。</p><p>尽管我们的方法极大地提高了各种牙齿病变的分割效果，但光照强度对分割效果有很大影响。此外，病变图像的标注也需要大量的努力。在未来的研究中，我们将建立一个高度通用的弱监督网络，以解决标注困难和光线影响大的问题。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deep Dual-resolution Networks for Real-time and Accurate Semantic Segmentation of Road Scenes</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/DAPPM(DDRNet)/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/DAPPM(DDRNet)/</url>
      
        <content type="html"><![CDATA[<h1 id="用于实时和准确道路场景语义分割的深度双分辨率网络"><a class="markdownIt-Anchor" href="#用于实时和准确道路场景语义分割的深度双分辨率网络"></a> 用于实时和准确道路场景语义分割的深度双分辨率网络</h1><p><a href="zotero://open-pdf/library/items/QYYI4WG2">Deep Dual-resolution Networks for Real-time and Accurate Semantic Segmentation of Road Scenes</a></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>语义分割是自动驾驶汽车理解周围场景的关键技术。当代模型的迷人性能通常是以繁重的计算和漫长的推理时间为代价的，这对于自动驾驶来说是无法忍受的。利用轻量级架构（编码器-解码器或双通道）或在低分辨率图像上进行推理，最近的方法实现了非常快速的场景解析，甚至可以在单个1080Ti GPU上以超过100 FPS的速度运行。然而，这些实时方法与基于扩张骨架的模型在性能上仍有很大差距。为了解决这个问题，我们提出了一系列专为实时语义分割设计的高效骨干网络。所提出的深度双分辨率网络（DDRNets）由两个深度分支组成，在这两个分支之间执行多个双边融合。此外，我们还设计了一种名为深度聚合金字塔池化模块（DAPPM）的新型上下文信息提取器，以扩大有效感受野，并基于低分辨率特征图进行多尺度上下文融合。在Cityscapes和CamVid数据集上，我们的方法在准确性和速度之间实现了一种新的先进权衡。特别是，在单个2080Ti GPU上，DDRNet-23-slim在Cityscapes测试集上以102 FPS获得77.4%的mIoU，在CamVid测试集上以230 FPS获得74.7%的mIoU。在广泛使用测试增强的情况下，我们的方法优于大多数最先进的模型，而且所需的计算量更少。代码和训练模型可在线获取。</p><h2 id="i-introduction"><a class="markdownIt-Anchor" href="#i-introduction"></a> I. INTRODUCTION</h2><p>语义分割是一项基本任务，在这项任务中，输入图像的每个像素都应被赋予相应的标签[1]-[3]。它在许多实际应用中发挥着重要作用，例如医学图像分割、自动驾驶汽车和机器人导航[4], [5]。随着深度学习技术的兴起，卷积神经网络被应用于图像分割，并大大优于传统的基于手工特征的方法。自全卷积网络（FCN）[6]被提出用于处理语义分割问题以来，一系列新型网络被提出。DeepLab[7]取消了ResNet中的部分下采样以保持高分辨率，并利用大扩张卷积[8]来扩大感受野。从那时起，基于扩张卷积和上下文提取模块的骨干网络成为标准布局，广泛应用于多种方法中，包括DeepLabV2[9]、DeepLabV3[10]、PSPNet[11]和DenseASPP[12]。</p><p>由于语义分割是一种密集预测任务，神经网络需要输出大感受野的高分辨率特征图才能产生令人满意的结果，这在计算上是非常昂贵的。这个问题对于自动驾驶的场景解析尤为关键，因为自动驾驶需要在非常大的图像上执行，以覆盖宽广的视野。因此，上述方法在推理阶段非常耗时，无法直接部署在实际的自动驾驶车辆上。由于需要利用多尺度测试来提高准确性，它们甚至无法在一秒钟内处理一幅图像。</p><p>随着移动设备部署需求的不断增长，实时分割算法[13]-[17]越来越受到关注。DFANet[18]采用深度多尺度特征聚合和轻量级深度可分离卷积，在100 FPS下实现了71.3%的测试mIoU。与编码器-解码器模式不同，作者在[19]中提出了一种由空间路径和上下文路径组成的新型双边网络。具体而言，空间路径利用三个相对较宽的3×3卷积层来捕捉空间细节，而上下文路径是一个紧凑的预训练骨干层，用于提取上下文信息。这种双边方法包括[20]，其推理速度高于当时的编码器-解码器结构。</p><p>最近，提出了一些具有竞争力的实时方法，旨在对道路场景进行语义分割。这些方法可分为两类。一种是利用GPU高效骨干网，特别是ResNet-18[21]-[23]。其中，BiSeNetV2[24]在实时性能方面达到了一个新的峰值，在Cityscapes上以156 FPS实现了72.6%的测试mIoU。然而，除了使用额外训练数据的[23]之外，这些最新研究并未显示出获得更高质量结果的潜力。其中一些作品由于刻意设计的架构和调整的超参数而缺乏可扩展性。此外，鉴于更强大的骨干网的繁荣，ResNet-18的优势不大。</p><p>在本文中，我们提出了具有深度高分辨率表示的双分辨率网络，用于高分辨率图像的实时语义分割，尤其是道路驾驶图像。我们的DDR网络从一个主干开始，然后分成两个不同分辨率的并行深度分支。一个深度分支生成相对高分辨率的特征图，另一个深度分支通过多次降采样操作提取丰富的语义信息。两个分支之间通过多个双边连接实现高效的信息融合。此外，我们还提出了一个名为DAPPM的新模块，该模块输入低分辨率特征图，提取多尺度上下文信息，并以级联方式进行融合。在对语义分割数据集进行训练之前，双分辨率网络按照通用范式在ImageNet上进行训练。</p><p>根据在三个流行基准（即Cityscapes、CamVid和COCOStuff）上的大量实验结果，DDR网络在分割精度和推理速度之间达到了极佳的平衡。与其他实时算法相比，我们的方法在Cityscapes和CamVid上都达到了最新的准确度，而且不需要注意机制和额外的功能。通过标准测试增强，DDRNet可与最先进的模型相媲美，而且所需的计算资源更少。我们还报告了统计相关性能，并进行了消融实验，以分析架构改进和标准训练技巧的效果。</p><p>主要贡献总结如下</p><ul><li>为实时语义分割提出了一系列具有深度双分辨率分支和多双边融合的新型双边网络，作为高效的骨干网络。</li><li>设计了一个新模块，通过将特征聚合与金字塔池相结合来获取丰富的上下文信息。当在低分辨率特征图上执行时，推理时间几乎不会增加。</li><li>使用2080Ti，我们的方法在准确性和速度之间实现了新的先进权衡，在Cityscapes测试集上以102 FPS的速度实现了77.4%的mIoU，在CamVid测试集上以230 FPS的速度实现了74.7%的mIoU。据我们所知，我们是首家仅在Cityscapes测试集上使用精细注释以几乎实时的速度（22 FPS）达到80.4% mIoU的公司。</li></ul><h2 id="ii-related-work"><a class="markdownIt-Anchor" href="#ii-related-work"></a> II. RELATED WORK</h2><p>近年来，基于扩张卷积的方法提升了许多挑战性场景下的语义分割的性能。而且，开创性的工作为轻量级架构探索了更多的可能性，如编码器-解码器和双路径。此外，上下文信息被证明对场景解析任务非常关键。在本节中，我们将相关工作分为三类，即高性能语义分割、实时语义分割和上下文提取模块。</p><h3 id="a-high-performance-semantic-segmentation"><a class="markdownIt-Anchor" href="#a-high-performance-semantic-segmentation"></a> A. High-performance Semantic Segmentation</h3><p>由于缺乏空间细节，普通编码器的最后一层的输出不能直接用于预测分割掩码。而且，如果只是摆脱分类骨干的下采样，有效的感受野会太小，无法学习高级语义信息。一个可以接受的策略是利用扩张卷积来建立像素间的长距离连接，同时去除最后两个下采样层[10]，[11]，如图2（a）所示。然而，由于高分辨率特征图维度的指数级增长和稀释卷积实现的不充分优化，它也给实时推理带来了新的挑战。有一个事实是，大多数先进的模型都是建立在扩张骨架上的，因此基本上没有资格用于自驾车的场景解析。</p><p>一些作品试图探索标准扩张骨架的替代物。DeepLabv3plus[25]的作者提出了一个简单的解码器，将上采样的特征图与低层次的特征图融合起来。它减轻了对直接由扩张卷积产生的高分辨率特征图的要求。DeepLabv3plus可以取得有竞争力的结果，尽管编码器的输出跨度被设置为16。HRNet[26]突出了深层的高分辨率表征，体现了比扩张骨干更高的效率。我们发现，HRNet更高的计算效率和推理速度归功于其更薄的高分辨率信息流。以HRNetV2-W48为例，1/4分辨率和1/8分辨率特征的尺寸分别为48和96，这比预训练的ResNets[27]的扩张卷积小得多。尽管HRNet的高分辨率分支要薄得多，但通过平行的低分辨率分支和重复的多尺度融合，可以大大增强它们。</p><p>我们的工作从深、薄、高分辨率的表征开始，提出了更紧凑的架构。他们通过两个简明的主干保持高分辨率的表征并同时提取高层次的上下文信息。</p><h3 id="b-real-time-semantic-segmentation"><a class="markdownIt-Anchor" href="#b-real-time-semantic-segmentation"></a> B. Real-time Semantic Segmentation</h3><p>几乎所有的实时语义分割模型都采用两种基本方法：编码器-解码器方法和双路径方法。本文还讨论了在这两种方法中发挥重要作用的轻量级编码器。</p><p><img src="images/image-20230709204751733.png" alt="image-20230709204751733" /></p><h4 id="encoder-decoder-architecture"><a class="markdownIt-Anchor" href="#encoder-decoder-architecture"></a> Encoder-decoder Architecture</h4><p>与基于扩张卷积的模型相比，编码器-解码器架构直观地花费了较少的计算和推理时间。编码器通常是一个深度网络，通过反复的空间还原来提取上下文信息，解码器通过插值或转置卷积[28]来恢复分辨率，完成密集的预测，如图2（b）所示。特别是，编码器可以是在ImageNet上预先训练的轻量级骨干，也可以是像ERFNet[5]和ESPNet[16]那样从头训练的高效变体。SwiftNet[21]捍卫了在ImageNet上预训练编码器的优势，并利用轻量级的横向连接来协助进行上采样。[29]中的作者提出了一个多重空间融合和类边界监督的策略。FANNet[22]通过快速注意力模块和整个网络的额外下采样，在速度和准确性之间实现了良好的权衡。SFNet[23]提供了一个Flow Alignment Module (FAM)，用于对齐相邻层次的特征图以实现更好的融合。</p><h4 id="two-pathway-architecture"><a class="markdownIt-Anchor" href="#two-pathway-architecture"></a> Two-pathway Architecture</h4><p>编码器-解码器架构减少了计算量，但由于在反复下采样过程中损失了一些信息，不能通过解采样完全恢复，这就损害了语义分割的准确性。为了缓解这个问题，提出了双路径结构[19]，如图2（c）所示。除了一条提取语义信息的途径外，另一条高分辨率的浅层途径提供丰富的空间细节作为补充。为了进一步提高准确性，BiSeNetV2[24]使用全局平均池进行语境嵌入，并提出基于注意力的特征融合。BiSeNetV1&amp;V2中的两个路径最初是独立的，而Fast-SCNN[20]中的两个分支共享学习降样模块。CABiNet[30]采用了Fast-SCNN的整体架构，但使用MobileNetV3[31]作为上下文分支。</p><p>与现有的双路径方法相比，DDRNets的深而薄的高分辨率分支能够实现多种特征融合和充分的ImageNet预训练，同时保证了推理效率。我们的方法可以很容易地进行扩展，以达到更高的精度（在Cityscapes上超过80%的mIoU）。</p><h4 id="lightweight-encoders"><a class="markdownIt-Anchor" href="#lightweight-encoders"></a> Lightweight Encoders</h4><p>有许多计算效率高的骨干网可以用作编码器，如MobileNet[32]、ShuffleNet[33]和小版本的Xception[34]。MobileNet用深度可分离卷积代替了标准卷积，以减少参数和计算量。在MobileNetV2[35]中，深度可分离卷积的强正则化效应被倒置的剩余块所缓解。ShuffleNet利用了分组卷积的紧凑性，并提出了一个通道洗牌操作来促进不同组之间的信息融合。然而，这些网络包含了许多深度可分离的卷积，无法用现有的GPU架构有效实现。因此，尽管ResNet-18[27]的FLOPs约为MobileNetV2 1.0×的6倍，但在单台1080Ti GPU上，前者的推理速度要高于后者[21]。然而，现有的轻量级骨干网对于语义分割来说可能是次优的，因为它们通常为图像分类进行了过度的调整。</p><h3 id="c-context-extraction-modules"><a class="markdownIt-Anchor" href="#c-context-extraction-modules"></a> C. Context Extraction Modules</h3><p>语义分割的另一个关键是如何捕捉更丰富的上下文信息。Atrous Spatial Pyramid Pooling（ASPP）[9]由具有不同速率的平行Atrous卷积层组成，可以关注多尺度的上下文信息。PSPNet中的金字塔池化模块（PPM）[11]通过在卷积层之前实现金字塔池化，在计算上比ASPP更有效率。与卷积核的局部性不同，自我注意机制善于捕捉全局的依赖性。这样一来，双注意网络（DANet）[36]就利用了位置注意和通道注意的优势来进一步改善特征表示。物体背景网络（OCNet）[37]利用自我注意机制来探索物体背景，它被定义为属于同一物体类别的像素集合。CCNet[38]的作者提出了纵横交错的注意力来提高内存使用和计算的效率。然而，这些上下文提取模块是针对高分辨率的特征图设计和执行的，对于轻量级的模型来说太耗时了。以低分辨率的特征图为输入，我们用更多的尺度和深度特征聚合来加强PPM模块。当附加到低分辨率分支的末端时，所提出的模块在OCNet中的表现优于PPM和Base-OC模块。</p><h2 id="iii-method"><a class="markdownIt-Anchor" href="#iii-method"></a> III. METHOD</h2><p>在本节中，将介绍整个管道，它由两个主要部分组成：深度双分辨率网络和深度聚合金字塔池模块。</p><h3 id="a-deep-dual-resolution-network"><a class="markdownIt-Anchor" href="#a-deep-dual-resolution-network"></a> A. Deep Dual-resolution Network</h3><p>为了方便起见，我们可以在广泛使用的分类骨干网（如ResNets）上增加一个高分辨率分支。为了在分辨率和推理速度之间取得平衡，我们让高分辨率分支创建分辨率为输入图像分辨率1/8的特征图。因此，高分辨率分支被附加到conv3阶段的末尾。注意，高分辨率分支不包含任何降采样操作，与低分辨率分支一一对应，形成深度高分辨率表示。然后可以在不同阶段进行多个双边特征融合，以充分融合空间信息和语义信息。</p><p><img src="images/image-20230710202209286.png" alt="image-20230710202209286" /></p><p>DDRNet-23-slim和DDRNet-39的具体架构如表I所示。我们修改了原始ResNet的输入干，用两个连续的3×3卷积层替换了一个7×7卷积层。剩余的基本块被用来构建主干和随后的两个分支。为了扩展输出维度，在每个分支的末端添加了一个瓶颈块。双边融合包括将高分辨率分支融合到低分辨率分支（高到低融合）和将低分辨率融合到高分辨率分支（低到高融合）。在高分辨率到低分辨率的融合中，高分辨率特征图在进行点式求和之前通过3×3卷积序列进行降采样，步长为2。对于低分辨率到高分辨率的融合，低分辨率特征图首先通过1×1卷积进行压缩，然后通过双线性插值进行上采样。图3显示了双边融合是如何实现的。第i个高分辨率特征图XHi和低分辨率特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>L</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{Li}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可以写为</p><p><img src="images/image-20230710201652803.png" alt="image-20230710201652803" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>H</mi></msub></mrow><annotation encoding="application/x-tex">F_H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">F_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别代表高分辨率和低分辨率的残差基本块序列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>L</mi><mo>−</mo><mi>H</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{L-H}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>H</mi><mo>−</mo><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{H-L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>分别代表低分辨率到高分辨率和高分辨率到低分辨率的变换器，R代表ReLU函数。</p><p>我们构建了四个不同深度和宽度的双分辨率网络。DDRNet-23的宽度是DDRNet-23-slim的两倍，DDRNet-39 1.5×也是DDRNet-39的加宽版本。</p><p><img src="images/image-20230710201717108.png" alt="image-20230710201717108" /></p><h3 id="b-deep-aggregation-pyramid-pooling-module"><a class="markdownIt-Anchor" href="#b-deep-aggregation-pyramid-pooling-module"></a> B. Deep Aggregation Pyramid Pooling Module</h3><p><img src="images/image-20230710202635003.png" alt="image-20230710202635003" /></p><blockquote><p>图 5. 深度聚合金字塔池化模块的具体结构。多尺度分支的数量可根据输入分辨率进行调整。</p></blockquote><p>在此，我们提出一个新的模块，进一步从低分辨率特征图中提取上下文信息。图5显示了DAPPM的内部结构。以图像分辨率为1/64的特征图为输入，执行指数级跨度的大池核，生成图像分辨率为1/128、1/256、1/512的特征图。输入特征图和全局平均池生成的图像级信息也被利用。我们认为，通过单一的3×3或1×1卷积来混合所有多尺度上下文信息是不够的。受Res2Net[39]的启发，我们首先对特征图进行上采样，然后使用更多的3×3卷积以分层-残差的方式融合不同尺度的上下文信息。考虑到输入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，每个尺度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可以写为</p><p><img src="images/image-20230710201754583.png" alt="image-20230710201754583" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{1×1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1×1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>卷积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{3×3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3×3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>卷积，U表示上采样操作，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{j,k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示核大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>、步长为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>的池层，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>g</mi><mi>l</mi><mi>o</mi><mi>b</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{global}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示全局平均池化。最后，所有特征图通过1×1卷积进行合并和压缩。此外，为了便于优化，还添加了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1×1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>投影快捷方式。与SwiftNet[21]中的SPP类似，DAPPM是通过BN-ReLU-Conv序列实现的。</p><p>在DAPPM内部，通过较大的池核提取的上下文与较深的信息流进行整合，通过不同大小的池核整合不同深度的上下文，形成多尺度性。表2显示，DAPPM能够提供比PPM更丰富的上下文。虽然DAPPM包含更多的卷积层和更复杂的融合策略，但由于输入分辨率仅为图像分辨率的1/64，因此几乎不会影响推理速度。例如，对于1024×1024的图像，特征图的最大分辨率为16×16。</p><p><img src="images/image-20230710203053915.png" alt="image-20230710203053915" /></p><h3 id="c-overall-architecture-for-semantic-segmentation"><a class="markdownIt-Anchor" href="#c-overall-architecture-for-semantic-segmentation"></a> C. Overall Architecture for Semantic Segmentation</h3><p><img src="images/image-20230710202533252.png" alt="image-20230710202533252" /></p><blockquote><p>图 4. 语义分割DDRNets概览。&quot;RB &quot;表示连续的残余基本区块。&quot;RBB &quot;表示单个残余瓶颈块。&quot;DAPPM &quot;表示深度聚合金字塔池化模块。&quot;Seg. 头 &quot;表示分割头。黑色实线表示带数据处理（包括上采样和下采样）的信息路径，黑色虚线表示不带数据处理的信息路径。&quot;sum &quot;表示点求和。虚线框表示在推理阶段丢弃的成分。</p></blockquote><p>我们的方法概览见图4。为了适应语义分割任务，我们对双分辨率网络做了一些改动。首先，将低分辨率分支RBB中3×3卷积的步长设为2，以进一步降低采样率。然后，在低分辨率分支的输出中加入DAPPM，从1/64图像分辨率的高层特征图中提取丰富的上下文信息。此外，通过双线性插值和求和融合实现的低到高融合取代了最后的高到低融合。最后，我们设计了一个由3×3卷积层和1×1卷积层组成的简单分割头。分割头的计算负荷可以通过改变3×3卷积层的输出维度来调整。我们为DDRNet-23-slim设置了64维，为DDRNet-23设置了128维，为DDRNet39设置了256维。请注意，除了分割头和DAPPM模块外，所有模块都在ImageNet上进行了预训练。</p><h3 id="d-deep-supervision"><a class="markdownIt-Anchor" href="#d-deep-supervision"></a> D. Deep Supervision</h3><p>训练阶段的额外监督可以简化深度卷积神经网络（DCNN）的优化。在PSPNet中，根据实验结果[11]，增加了一个辅助损失来监督ResNet-101的res4 22块的输出，并将相应的权重设置为0.4。BiSeNetV2[24]提出了一种助推训练策略，即在语义分支的每个阶段末尾添加额外的分割头。然而，这种方法需要进行大量实验才能找到平衡每种损失的最佳权重，并导致训练内存不可忽略地增加。为了获得更好的结果，SFNet[23]采用了一种类似的策略，即级联深度监督学习（Cascaded Deeply Supervised Learning）。在本文中，为了与大多数方法进行公平比较，我们只采用了简单的额外监督。如图4所示，我们添加了辅助损失，并按照PSPNet将权重设置为0.4。辅助分割头在测试阶段被丢弃。最终损失是交叉熵损失的加权和，可以表示为</p><p><img src="images/image-20230710201851340.png" alt="image-20230710201851340" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>f</mi></msub><mo separator="true">,</mo><msub><mi>L</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>L</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">L_f,L_n,L_{\alpha}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别表示最终损失、正常损失和辅助损失，α表示辅助损失的权重，本文中为0.4。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EANet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/EA/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/EA/</url>
      
        <content type="html"><![CDATA[<h1 id="ea"><a class="markdownIt-Anchor" href="#ea"></a> EA</h1><p><a href="zotero://open-pdf/library/items/FVICTQUK">文章链接</a></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>注意机制，特别是自我注意，在视觉任务的深度特征表示中发挥了越来越重要的作用。自我注意通过计算特征的加权和来更新每个位置的特征，使用所有位置的成对亲和力来捕捉单个样本内的长程依赖性。然而，自我注意具有二次复杂性，并且忽略了不同样本之间的潜在相关性。本文提出了一种新的注意机制，我们称之为外部注意，它基于两个外部的、小的、可学习的、共享的记忆，可以通过简单地使用两个级联的线性层和两个规范化层来实现；它方便地取代了现有流行架构中的自我注意。外部注意力具有线性复杂性，并隐含地考虑了所有数据样本之间的相关性。我们进一步将多头机制纳入外部注意力，以提供一个全MLP架构，即外部注意力MLP（EAMLP），用于图像分类。在图像分类、物体检测、语义分割、实例分割、图像生成和点云分析方面的大量实验表明，我们的方法提供了与自我注意机制及其某些变体相当或更高的结果，而且计算和内存成本低得多。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. INTRODUCTION</h2><p>由于其捕捉长距离依赖关系的能力，自我注意机制有助于提高各种自然语言处理[1], [2]和计算机视觉[3], [4]任务的性能。自我关注的工作方式是通过聚合单个样本中所有其他位置的特征来完善每个位置的表示，这导致了样本中位置数量的二次计算复杂性。因此，一些变种试图以较低的计算成本接近自我注意[5]，[6]，[7]，[8]。</p><p>此外，自我注意集中在单个样本内不同位置之间的自我亲和力，而忽略了与其他样本的潜在关联性。不难看出，纳入不同样本之间的关联性有助于促进更好的特征表示。例如，在语义分割任务中，属于同一类别但分布在不同样本中的特征应该被一致对待，类似的观察也适用于图像分类和其他各种视觉任务。</p><p>本文提出了一种新颖的轻量级注意力机制，我们称之为外部注意力（见图1c））。如图1a）所示，计算自我注意力需要首先通过计算自我查询向量和自我关键向量之间的亲和力来计算一个注意力图，然后通过用这个注意力图对自我价值向量加权来生成一个新的特征图。外部注意的工作方式不同。我们首先通过计算自我查询向量和外部可学习的关键记忆之间的亲和力来计算注意图，然后通过将这个注意图乘以另一个外部可学习的价值记忆来产生一个精炼的特征图。</p><p>在实践中，这两个存储器是用线性层实现的，因此可以通过反向传播以端到端的方式进行优化。它们独立于单个样本，并在整个数据集中共享，这起到了强大的正则化作用，提高了注意力机制的泛化能力。外部注意的轻量级性质的关键是，记忆中的元素数量远远小于输入特征中的数量，产生的计算复杂性与输入中的元素数量成线性关系。外部记忆的设计是为了学习整个数据集中最具辨别力的特征，捕捉信息量最大的部分，同时排除其他样本的干扰信息。类似的想法可以在稀疏编码[9]或字典学习[10]中找到。然而，与这些方法不同的是，我们既不试图重构输入特征，也不对注意力图谱应用任何明确的稀疏正则化。</p><p>尽管提出的外部注意方法很简单，但它对各种视觉任务都很有效。由于它的简单性，它可以很容易地被纳入现有的基于自我注意的流行架构，如DANet[4]、SAGAN[11]和T2T-Transformer[12]。图3展示了一个典型的架构，在图像语义分割任务中用我们的外部注意力取代了自我注意力。我们对诸如分类、物体检测、语义分割、实例分割和生成等基本视觉任务进行了广泛的实验，并采用了不同的输入模式（图像和点云）。结果显示，我们的方法以更低的计算成本取得了与原始自我注意机制及其一些变体相当或更好的结果。</p><p>为了学习同一输入的不同方面的注意力，我们将多头机制纳入外部注意力，提高其能力。受益于所提出的多头外部注意力，我们设计了一个新的全MLP架构，名为EAMLP，它在图像分类任务中可以与CNN和原始变形器相媲美。</p><p>本文的主要贡献总结如下：</p><ul><li>一种新的注意机制，即外部注意，具有O(n)的复杂性；它可以取代现有架构中的自我注意。它可以在整个数据集上挖掘潜在的关系，提供一个强大的规范化作用，并提高注意力机制的泛化能力。</li><li>多头外部关注，这有利于我们建立一个全MLP架构；它在ImageNet-1K数据集上达到了79.4%的top1准确率。</li><li>利用外部注意力进行图像分类、物体检测、语义分割、实例分割、图像生成、点云分类和点云分割的大量实验。在必须保持低计算量的情况下，它比原始的自我注意机制和它的一些变种取得了更好的结果。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. RELATED WORK</h2><p>由于对注意力机制的全面回顾超出了本文的范围，我们只讨论视觉领域中最密切相关的文献。</p><h3 id="21-the-attention-mechanism-in-visual-tasks"><a class="markdownIt-Anchor" href="#21-the-attention-mechanism-in-visual-tasks"></a> 2.1 The attention mechanism in visual tasks</h3><p>注意机制可以被看作是一种根据激活的重要性重新分配资源的机制。它在人类视觉系统中起着重要的作用。在过去的十年中，这一领域有了蓬勃的发展[3]，[13]，[14]，[15]，[16]，[17]，[18]。Hu等人提出了SENet[15]，表明注意力机制可以减少噪声并提高分类性能。随后，许多其他论文将其应用于视觉任务。Wang等人提出了用于视频理解的非局部网络[3]，Hu等人[19]将注意力用于物体检测，Fu等人提出了用于语义分割的DANet[4]，Zhang等人[11]证明了注意力机制在图像生成中的有效性，Xie等人提出了用于点云处理的A-SCN[20]。</p><h3 id="22-self-attention-in-visual-tasks"><a class="markdownIt-Anchor" href="#22-self-attention-in-visual-tasks"></a> 2.2 Self-attention in visual tasks</h3><p>自我注意是注意力的一个特例，许多论文[3]、[4]、[11]、[17]、[21]，都考虑了视觉的自我注意机制。自我注意的核心思想是计算特征之间的亲和力以捕捉长距离的依赖关系。然而，随着特征图大小的增加，计算和内存的开销也呈四级增长。为了降低计算和内存成本，Huang等人[5]提出了纵横交错的注意力，即依次考虑行注意力和列注意力来捕捉全局环境。Li等人[6]采用期望最大化（EM）聚类法来优化自我注意。Yuan等人[7]提出使用对象-上下文向量来处理注意力；然而，它依赖于语义标签。Geng等人[8]表明矩阵分解是在语义分割和图像生成中对全局环境进行建模的更好方法。其他作品[22]，[23]也探索了通过使用自我注意机制来提取局部信息。</p><p>与自我注意不同的是，自我注意是通过计算自我查询和自我键之间的亲和力来获得注意图，而我们的外部注意则是计算自我查询和一个小得多的可学习的键存储器之间的关系，它捕捉了数据集的全局背景。外部注意力不依赖于语义信息，可以通过反向传播算法以端到端的方式进行优化，而不需要迭代算法。</p><h3 id="23-transformer-in-visual-tasks"><a class="markdownIt-Anchor" href="#23-transformer-in-visual-tasks"></a> 2.3 Transformer in visual tasks</h3><p>基于变换器的模型在自然语言处理方面取得了巨大的成功[1]、[2]、[16]、[24]、[25]、[26]、[27]。最近，它们在视觉任务方面也表现出巨大的潜力。Carion等人[28]提出了一个端到端的检测转化器，它将CNN的特征作为输入，并用转化器生成边界框。Dosovitskiy[18]提出了基于补丁编码和变换器的ViT，表明在有足够训练数据的情况下，变换器能提供比传统CNN更好的性能。Chen等人[29]提出了基于使用变换器的图像生成的iGPT。</p><p>随后，变换器方法被成功地应用于许多视觉任务，包括图像分类[12]、[30]、[31]、[32]、物体检测[33]、低层次视觉[34]、语义分割[35]、跟踪[36]、视频实例分割[37]、图像生成[38]、多模态学习[39]、物体重新识别[40]、图像标题[41]、点云学习[42]和自监督学习[43]。读者可以参考最近的调查报告[44], [45]，以更全面地回顾在视觉任务中使用变换器方法的情况。</p><h2 id="3-methodology"><a class="markdownIt-Anchor" href="#3-methodology"></a> 3. METHODOLOGY</h2><p>在本节中，我们首先分析了原始的自我注意机制。然后我们详细介绍了我们定义注意力的新方法：外部注意力。它只需使用两个线性层和两个归一化层就可以轻松实现，如后面算法1所示。</p><h3 id="31-self-attention-and-external-attention"><a class="markdownIt-Anchor" href="#31-self-attention-and-external-attention"></a> 3.1 Self-Attention and External Attention</h3><p>我们首先重温一下自我注意的机制（见图1a））。给定一个输入特征图F∈RN×d，其中N是元素数（或图像中的像素），d是特征维数，自我关注将输入线性地投射到一个查询矩阵Q∈RN×d′，一个关键矩阵K∈RN×d′，和一个值矩阵V∈RN×d[16]。那么，自我关注可以被表述为：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202301191250297.png" alt="" /></p><p>其中，A∈RN×N是注意力矩阵，αi,j是第i个和第j个元素之间（相似性）的成对亲和力。</p><p>一个常见的简化变体（图1b））的自我注意直接从输入特征F中计算出一个注意图，使用：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202301191252238.png" alt="" /></p><p>在这里，注意力图是通过计算特征空间中的像素级相似度得到的，而输出是输入的精炼特征表示。</p><p>然而，即使在简化的情况下，O(dN 2)的高计算复杂性也给自我关注的使用带来了很大的缺陷。输入像素数的二次复杂度使自我关注直接应用于图像是不可行的。因此，以前的工作[18]利用对斑块而不是像素的自我注意来减少计算工作量。</p><p>自我注意可以被看作是使用自我值的线性组合来完善输入特征。然而，远的不说，在这个线性组合中，我们确实需要N×N的自我注意矩阵和N元素的自我值矩阵。此外，自我注意只考虑了一个数据样本内元素之间的关系，而忽略了不同样本内元素之间的潜在关系，这可能限制了自我注意的能力和灵活性。</p><p>因此，我们提出了一个新的注意力模块，名为外部注意力，它通过以下方式计算输入像素和外部记忆单元M∈RS×d之间的注意力：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230119125249365.png" alt="image-20230119125249365" /></p><p>与自我注意力不同，方程（5）中的αi,j是第i个像素与M的第j行之间的相似度，其中M是一个独立于输入的可学习参数，它作为整个训练数据集的记忆。A是由这个学习的数据集级的先验知识推断出的注意力图；它以类似于自我注意力的方式被归一化（见3.2节）。最后，我们通过A的相似性更新M的输入特征。</p><p>在实践中，我们使用两个不同的存储单元Mk和Mv作为键和值，以增加网络的能力。这稍微改变了外部注意力的计算</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230119125315745.png" alt="image-20230119125315745" /></p><p>外部注意力的计算复杂度是O(dsn )；由于d和S是超参数，所提出的算法在像素数上是线性的。事实上，我们发现一个小的S，例如64，在实验中效果很好。因此，外部注意比自我注意有效得多，允许其直接应用于大规模输入。我们还注意到，外部注意的计算负荷大致相当于1×1的卷积。</p><h3 id="32-normalization"><a class="markdownIt-Anchor" href="#32-normalization"></a> 3.2 Normalization</h3><p>在自我注意中采用了Softmax来归一化注意图，使∑ j αi,j = 1。然而，注意图是通过矩阵乘法计算的。与余弦相似性不同，注意力图对输入特征的尺度很敏感。为了避免这个问题，我们选择了[42]中提出的双重规范化，它分别对列和行进行规范化。这种双重规范化的表述是：</p><p>算法1中列出了外部注意力的python风格的伪代码。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230119131721206.png" alt="image-20230119131721206" /></p><h3 id="33-multi-head-external-attention"><a class="markdownIt-Anchor" href="#33-multi-head-external-attention"></a> 3.3 Multi-head external attention</h3><p>在Transformer[16]中，自我注意在不同的输入通道上被多次计算，这被称为多头注意。多头注意可以捕捉到标记之间的不同关系，提高了单头注意的能力。我们对多头外部注意采用了类似的方法，如算法2和图2所示。</p><p>多头外部注意可以写成。</p><p>其中hi是第i个头，H是头的数量，Wo是一个线性变换矩阵，使输入和输出的尺寸一致。Mk∈RS×d和Mv∈RS×d是不同头的共享内存单元。</p><p>这种架构的灵活性使我们能够在共享内存单元中的头数H和元素数S之间取得平衡。例如，我们可以将H乘以k，而将S除以k。</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 EXPERIMENTS</h2><p>我们对图像分类、物体检测、语义分割、实例分割、图像生成、点云分类和点云分割任务进行了实验，以评估我们提出的外部注意力方法的有效性。所有的实验都是用Jittor[86]和/或Pytorch[87]深度学习框架实现的。</p><h3 id="41-ablation-study"><a class="markdownIt-Anchor" href="#41-ablation-study"></a> 4.1 Ablation study</h3><p>为了验证我们完整模型中的建议模块，我们在PASCAL VOC分割数据集[88]上进行了实验。图3描述了用于消融研究的架构，它以FCN[46]为特征骨架。批量大小和迭代总数分别被设定为12和30,000。我们重点关注记忆单元的数量、自我注意与外部注意、骨干、归一化方法和骨干的输出步长。如表1所示，我们可以观察到在Pascal VOC数据集上，外部注意力提供了比自我注意力更好的准确性。选择一个合适的存储单元数量对结果的质量很重要。归一化方法可以对外部注意力产生巨大的积极影响，并对自我注意力有所改善。</p><h3 id="42-visual-analysis"><a class="markdownIt-Anchor" href="#42-visual-analysis"></a> 4.2 Visual analysis</h3><p>使用外部注意力进行分割（见图3）和使用多头外部注意力进行分类（见第4.3节）的注意力图分别显示在图4和图5。我们从一个层的记忆单元Mk中随机选择一行M i k。然后通过计算M i k对输入特征的注意力来描绘注意力图。我们观察到，如图4所示，学习到的注意力图集中在有意义的物体或背景上进行分割任务。图5中的最后两行表明，不同行的Mk对不同的区域给予了关注。如图5所示，多头外部注意的每个头可以在不同程度上激活感兴趣的区域，提高了外部注意的表现能力。</p><h3 id="43-image-classification"><a class="markdownIt-Anchor" href="#43-image-classification"></a> 4.3 Image classification</h3><p>ImageNet-1K[89]是一个广泛使用的图像分类数据集。我们替换了Performer[90]，多头机制对自我注意和外部注意都是必要的。我们还尝试了MoCo V3[43]提出的策略，在T2T-ViT骨干的MLP块（不是外部注意力块）中用BatchNorm(BN)[92]取代LayerNorm(LN) [91]。我们观察到在我们的EAMLP-7上有1%的改进。然而，它在我们的大模型EAMLP-14和EAMLP-19中产生了失败的案例。</p><h3 id="44-object-detection-and-instance-segmentation"><a class="markdownIt-Anchor" href="#44-object-detection-and-instance-segmentation"></a> 4.4 Object detection and instance segmentation</h3><p>MS COCO数据集[93]是一个流行的物体检测和实例分割的基准。它包含了超过200,000张图片和来自80个类别的超过500,000个注释的物体实例。</p><p>MMDetection[47]是一个广泛使用的对象检测和实例分割的工具包。我们使用带有RestNet-50主干的MMDetection进行物体检测和实例分割实验，并应用于COCO数据集。我们只在Resnet第四阶段结束时加入了我们的外部关注。表3和表4中的结果显示，外部注意力给我们带来了很大的帮助。3和4显示，外部注意力给物体检测和实例分割任务的准确性带来了1%的提高。</p><h3 id="45-semantic-segmentation"><a class="markdownIt-Anchor" href="#45-semantic-segmentation"></a> 4.5 Semantic segmentation</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230119131851153.png" alt="image-20230119131851153" /></p><blockquote><p>图3 使用我们提出的外部注意力进行语义分割的EANet。</p></blockquote><p>在本实验中，我们采用了图3中的语义分割架构，将其称为EANet，并将其应用于Pascal VOC[88]、ADE20K[94]和cityscapes[95]数据集。</p><p>Pascal VOC包含10,582张图像用于训练，1,449张图像用于验证，1,456张图像用于测试。它有20个前景物体类别和一个用于分割的背景类别。我们使用输出步长为8的扩张ResNet-101作为骨干，与所有比较的方法一样；它在ImageNet-1K上进行了预训练。在训练过程中，我们采用了多学习率政策。初始学习率、批次大小和输入大小被设定为0.009、16和513×513。我们首先在训练集上训练了45000次迭代，然后在训练集上微调了15000次迭代。最后我们在测试集上使用了多尺度和翻转测试。图4显示了视觉结果，表5给出了定量结果：我们的方法可以达到与最先进方法相当的性能。</p><p>ADE20K是一个更具挑战性的数据集，有150个类，分别有20K、2K和3K的图像用于训练、验证和测试。我们采用输出步长为8的扩张ResNet-101作为骨干。实验配置与mmsegmentation[60]相同，训练ADE20K进行16万次迭代。表6中的结果显示，我们的方法在ADE20K值集上的表现优于其他方法。</p><p>Cityscapes包含5,000个高质量的像素级精细注释的标签，用于城市场景理解的19个语义类别。每张图片是1024×2048像素。它分为2975、500和1525幅图像，用于训练、验证和测试。(它还包含20000张粗略标注的图像，我们在实验中没有使用这些图像）。我们采用输出步长为8的扩张ResNet-101作为所有方法的骨干。实验配置也与mmsegmentation相同，用80k次迭代来训练城市景观。表7中的结果显示，我们的方法在城市景观估值集上取得了与最先进的方法，即DANet[4]相当的结果。</p><h3 id="46-image-generation"><a class="markdownIt-Anchor" href="#46-image-generation"></a> 4.6 Image generation</h3><p>自我注意通常被用于图像生成，一个代表性的方法是SAGAN[11]。我们在生成器和判别器中用我们的外部注意方法取代了SAGAN中的自我注意机制，以获得我们的EAGAN模型。所有的实验都是基于流行的PyTorch-StudioGAN repo[96]。超参数使用SAGAN的默认配置。我们使用Frechet Inception Distance（FID）[97]和Inception Score（IS）[98]作为我们的评价指标。一些生成的图像显示在图6中，定量结果在表8和表9中给出。8和9：外部关注提供了比SAGAN和其他一些GANs更好的结果。</p><h3 id="47-point-cloud-classification"><a class="markdownIt-Anchor" href="#47-point-cloud-classification"></a> 4.7 Point cloud classification</h3><p>ModelNet40[99]是一个流行的三维形状分类的基准，包含40个类别的12,311个CAD模型。它有9,843个训练样本和2,468个测试样本。我们的EAT模型取代了PCT[42]中所有的自我注意模块。我们在每个形状上取样1024个点，并按照PCT[42]的方法，用随机平移、各向异性缩放和放弃来增强输入。表11表明，我们的方法优于其他所有的方法，包括其他基于注意力的方法，如PCT。我们提出的方法为二维和三维视觉提供了一个杰出的骨干。</p><h3 id="48-point-cloud-segmentation"><a class="markdownIt-Anchor" href="#48-point-cloud-segmentation"></a> 4.8 Point cloud segmentation</h3><p>我们在ShapeNet零件数据集[100]上进行了点云分割的实验。它在训练集中有14,006个三维模型，在评估集中有2,874个。每个形状都被分割成部分，共有16个对象类别和50个部分标签。我们沿用了PCT[42]中的实验设置。如表10所示，EAT在这个数据集上取得了最好的结果。</p><h3 id="49-computational-requirements"><a class="markdownIt-Anchor" href="#49-computational-requirements"></a> 4.9 Computational requirements</h3><p>相对于输入的大小，线性复杂度带来了效率上的显著优势。我们将外部注意（EA）模块与标准的自我注意（SA）[16]及其几个变体在参数数量和推理操作方面进行了比较，输入大小为1×512×128×128，给出的结果见表12。外部注意只需要自我注意所需参数的一半，速度快32倍。与最佳变体相比，外部注意的速度仍然是其两倍左右。</p><h2 id="5-conclusions"><a class="markdownIt-Anchor" href="#5-conclusions"></a> 5 CONCLUSIONS</h2><p>本文提出了外部注意力，这是一种新颖的轻量级但有效的注意力机制，对各种视觉任务都有用。外部注意中采用的两个外部记忆单元可以被看作是整个数据集的字典，并且能够为输入学习更多有代表性的特征，同时降低计算成本。我们希望外部注意力能够激发其在其他领域（如NLP）的实际应用和研究。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data augmentation using learned transformations for one-shot medical image segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Data-augmentation-using-learned-transformations-for-one-shot-medical-image-segmentation/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Data-augmentation-using-learned-transformations-for-one-shot-medical-image-segmentation/</url>
      
        <content type="html"><![CDATA[<h1 id="data-augmentation-using-learned-transformations-for-one-shot-medical-image-segmentation"><a class="markdownIt-Anchor" href="#data-augmentation-using-learned-transformations-for-one-shot-medical-image-segmentation"></a> Data augmentation using learned transformations for one-shot medical image segmentation</h1><blockquote><p><a href="zotero://open-pdf/library/items/6D4WUB9T">文章链接</a></p></blockquote><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> <a href="zotero://open-pdf/library/items/6D4WUB9T?page=1">Abstract</a></h2><p>图像分割是许多医疗应用中的一项重要任务。基于卷积神经网络的方法达到了最先进的精确度；然而，它们通常依赖于有监督的训练，并有大量的标记数据集。给医学图像贴标签需要大量的专业知识和时间，典型的手工调整的数据增强方法不能捕捉到此类图像的复杂变化。</p><p>我们提出了一种用于合成有标签的医学图像的自动数据增强方法。我们在磁共振成像（MRI）脑部扫描的分割任务上展示了我们的方法。我们的方法只需要一个单一的分割扫描，并以半监督的方式利用其他未标记的扫描。我们从图像中学习一个转换模型，并将该模型与标记的例子一起用来合成额外的标记例子。每个变换都是由空间变形场和强度变化组成的，能够合成复杂的效果，如解剖学和图像采集程序的变化。我们表明，用这些新的例子训练一个有监督的分割器，比最先进的单次生物医学图像分割方法有显著的改进。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> <a href="zotero://open-pdf/library/items/6D4WUB9T?page=1">1. Introduction</a></h2><p>语义图像分割对许多生物医学成像应用至关重要，例如进行群体分析、诊断疾病和规划治疗。当有足够的标记数据时，基于深度学习的监督性分割方法可以产生最先进的结果。然而，获取医学图像的人工分割标签需要相当多的专业知识和时间。在大多数临床图像数据集中，手动标注的图像非常少。不同机器和机构的图像采集程序的差异加剧了有限标签数据的问题，这可能在分辨率、图像噪声和组织外观方面产生很大的差异[45]。</p><p>为了克服这些挑战，许多有监督的生物医学分割方法侧重于手工设计的预处理步骤和架构[53, 57]。使用手工调整的数据增强来增加训练实例的数量也很常见[2, 55, 57, 63, 65]。数据增强功能，如随机图像旋转或随机非线性变形，很容易实现，并且在某些情况下能有效提高分割精度[55, 57, 63, 65]。然而，这些函数模拟真实变化的能力有限[26]，而且对参数的选择高度敏感[25]。</p><p><strong>我们通过学习合成不同的、现实的、有标签的例子来解决有限的有标签数据的挑战。我们的新方法是利用未标记的图像来增加数据。使用基于学习的注册方法，我们对数据集中的图像之间的空间和外观转换集进行建模。这些模型捕捉到了未标记图像中的解剖和成像多样性。我们通过对转换进行抽样并将其应用于单个标记的例子来合成新的例子。</strong></p><p>我们在大脑磁共振成像（MRI）扫描的一次性分割任务上证明了我们方法的实用性。我们使用我们的方法来合成新的有标签的训练实例，从而能够训练一个有监督的分割网络。这一策略优于最先进的一次性生物医学分割方法，包括单图象分割和带有手工调整的数据增强的监督分割。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210311948675.png" alt="" /></p><blockquote><p>图1：生物医学图像往往在解剖学、对比度和纹理方面有很大的差异（上排）。与其他一次性分割方法相比，我们的方法能够对解剖结构进行更精确的分割（下排）。</p></blockquote><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related work</h2><h3 id="21-medical-image-segmentation"><a class="markdownIt-Anchor" href="#21-medical-image-segmentation"></a> 2.1 Medical image segmentation</h3><p>我们专注于脑部核磁共振图像的分割，这具有挑战性，原因有几个。首先，人的大脑表现出大量的解剖学变化[28, 59, 76]。其次，由于受试者的特定噪声、扫描仪协议和质量以及其他成像参数的影响，核磁共振图像的强度可能会有所不同[45]。这意味着一个组织类别可以在不同的图像中出现不同的强度，即使是同一MRI模式的图像。</p><p>许多现有的分割方法依靠扫描预处理来缓解这些强度相关的挑战。预处理方法的运行成本很高，为现实的数据集开发技术是一个活跃的研究领域[14, 73]。我们的增强方法从另一个角度解决这些强度相关的挑战：它不是消除强度变化，而是使分割方法对MRI扫描的自然变化具有鲁棒性。</p><p>大量的经典分割方法使用基于图谱或图谱引导的分割，其中一个标记的参考体积，或图谱，使用变形模型与目标体积对齐，并使用相同的变形传播标签[6, 13, 22, 32] 。当有多个图集时，它们分别与目标体积对齐，并将变形的图集标签进行融合[36, 41, 68, 78]。在基于图集的方法中，受试者之间的解剖变化被变形模型所捕获，强度变化的挑战被使用预处理的扫描或强度稳健的指标（如归一化交叉相关）来缓解。然而，组织外观的模糊性（例如，不明确的组织边界，图像噪声）仍然会导致不准确的登记和分割。我们通过对不同的现实例子进行分割模型的训练来解决这一局限性，使分割器对这种模糊性更加强大。我们专注于有一个单一的图集，但如果有一个以上的分割实例，我们的方法可以利用它们。</p><p>近年来，用于生物医学分割的监督学习方法已经得到了普及。为了减轻对大型标记训练数据集的需求，这些方法经常使用数据增强以及手工设计的预处理步骤和架构[2, 40, 53, 57, 63, 65, 82]。</p><p>半监督和无监督的方法也被提出来以应对小训练数据集的挑战。这些方法不需要成对的图像和分割数据。相反，它们利用分割的集合来建立解剖学先验[21]，训练对抗性网络[39]，或训练一个新的语义约束[29]。在实践中，图像集比分割图更容易获得。我们的方法不是依赖分割，而是利用一组未标记的图像。</p><h3 id="22-spatial-and-appearance-transform-models"><a class="markdownIt-Anchor" href="#22-spatial-and-appearance-transform-models"></a> 2.2 Spatial and appearance transform models</h3><p>形状和外观的模型已被用于各种图像分析中。参数空间变换模型已被用于对齐和分类手写数字[31, 44, 50]。在医学图像注册中，空间变形模型被用来建立图像之间的语义对应关系。这个成熟的领域包括基于优化的方法[4, 7, 67, 70]，以及最近基于学习的方法[8, 9, 20, 42, 62, 72, 80]。</p><p>许多医学图像配准方法集中在强度归一化的图像或与强度无关的目标函数上，而没有明确考虑图像强度的变化。对于未归一化的图像，强度变换的模型被用来消除MRI的偏场效应[44, 79]。空间和外观变换模型已被一起用于注册形状和纹理不同的物体。许多工作建立在可变形模型[38]或主动外观模型（AAMs）[15, 16]的框架之上，在该框架中，形状和纹理的统计模型被构建。AAMs已经被用来定位解剖标志[17, 58]和执行分割[52, 56, 77]。我们在这些概念的基础上，使用卷积神经网络来学习无约束的空间和强度转换的模型。我们不是为了注册或分割的最终目标而学习变换模型，而是从这些模型中取样来合成新的训练实例。正如我们在实验中所显示的，以这种方式增强分割器的训练集可以产生比直接使用变换模型进行分割更强大的分割。</p><h3 id="23-few-shot-segmentation-of-natural-images"><a class="markdownIt-Anchor" href="#23-few-shot-segmentation-of-natural-images"></a> 2.3 Few-shot segmentation of natural images</h3><p>小样本分割是语义分割和视频物体分割中的一项挑战性任务。现有的方法主要集中在自然图像上。小样本的语义分割方法结合了要分割的类别的原型例子的信息[24, 69]。小样本的视频分割经常通过将每一帧的物体与标记的参考帧对齐来实现[37, 75]。其他的方法是利用大的标记的补充信息的数据集，如物体的外观[11]，或结合额外的信息，如人类的输入[60]。医学图像呈现出与自然图像不同的挑战；例如，与自然图像中物体之间的差异相比，组织类别之间的视觉差异非常微妙。</p><h3 id="24-data-augmentation"><a class="markdownIt-Anchor" href="#24-data-augmentation"></a> 2.4 Data augmentation</h3><p>在基于图像的监督学习任务中，数据增强通常使用简单的参数化转换，如旋转和缩放来进行。对于医学图像，随机平滑流场已被用于模拟解剖学变化[51, 63, 64]。这些参数化的变换可以减少过拟合，提高测试性能[34, 43, 51, 63, 64]。然而，这些变换所带来的性能提升随着变换函数和参数设置的选择而变化[25]。</p><p>最近的工作提出了从数据中学习数据增强的变换。Hauberg等人[31]着重研究了用于MNIST数字分类的数据增强。他们学习特定数字的空间变换，并对训练图像和变换进行采样，以创造新的例子，旨在提高分类性能。我们除了学习空间模型外，还学习了一个外观模型，并且我们专注于MRI分割的问题。</p><p>最近的其他工作侧重于学习简单的变换函数的组合（如旋转和对比度增强），以执行自然图像的数据增强[18, 61]。这些简单的变换不足以捕捉到MRI数据中的许多微妙变化。</p><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> 3. Method</h2><p>我们建议通过在半监督学习框架内合成真实的训练实例来改进一次性生物医学图像分割。</p><p>让{y(i)}是一组生物医学图像体积，让一对(x, lx)代表一个标记的参考体积，或图集，以及其相应的分割图。在脑部MRI分割中，每个x和y是一个灰度的三维体积。我们专注于只有一个标记的图集的挑战性情况，因为在实践中往往很难获得许多分割的体积。我们的方法可以很容易地扩展到利用额外的分割体。</p><p>我们首先学习独立的空间和外观变换模型，以捕捉已标记图集和每个未标记容积之间的解剖学和外观差异的分布。利用这两个学习的模型，我们通过对图集体积进行空间变换和外观变换，并利用空间变换对图集标签图进行扭曲，从而合成标签体积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(\hat{y}^{(k)}, \hat{l}^{(k)}_{y})\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2974999999999999em;vertical-align:-0.2526999999999999em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2526999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>。与单图集分割相比，单图集分割会受到空间变换模型的不确定性或误差的影响，我们使用相同的空间变换来合成图集和标签图，确保新合成的图集有正确的标签。这些合成的例子形成了一个标记的数据集，描述了未标记的数据集的解剖和外观变化。与地图集一起，这个新的训练集使我们能够训练一个有监督的分割网络。这个过程在图2中概述。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210311952062.png" alt="" /></p><blockquote><p>图2 所提方法的概述。我们学习独立的空间和外观变换模型来捕捉我们图像数据集中的变化。然后，我们使用这些模型来合成一个有标记的例子的数据集。这个合成的数据集被用来训练一个有监督的分割网络。</p></blockquote><h3 id="31-spatial-and-appearance-transform-models"><a class="markdownIt-Anchor" href="#31-spatial-and-appearance-transform-models"></a> 3.1 Spatial and appearance transform models</h3><p>我们使用空间和强度变换的组合来描述扫描之间的差异。具体来说，我们将一个容积到另一个容积的变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>定义为空间变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau_{s}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>和强度或外观变换τa(-)的组合，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mo>=</mo><msub><mi>τ</mi><mi>s</mi></msub><mo stretchy="false">(</mo><msub><mi>τ</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau(\cdot) = \tau_{s}(\tau_{a}(\cdot))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>。</p><p>我们假设空间变换的形式是一个平滑的体素级位移场<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>。根据医学登记文献，我们定义变形函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo>=</mo><mrow><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi></mrow><mo>+</mo><mi>u</mi></mrow><annotation encoding="application/x-tex">\phi=\mathrm{id}+u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathrm">i</span><span class="mord mathrm">d</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span>是身份函数。我们用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∘</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">x \circ \phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span>表示变形<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的应用。为了对我们数据集中的空间变换分布进行建模，我们用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>ϕ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>g</mi><msub><mi>θ</mi><mi>s</mi></msub></msub><mrow><mo fence="true">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\phi^{(i)}=g_{\theta_{s}}\left(x, y^{(i)}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2380099999999998em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>)计算将图集x翘曲到每个体积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>的变形，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><msub><mi>θ</mi><mi>s</mi></msub></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_{θ_s} (\cdot, \cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>是一个参数函数，我们在后面描述。我们把y(i)对x的近似反变形写成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>ϕ</mi><mrow><mo>−</mo><msup><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></msup><mo>=</mo><msub><mi>g</mi><msub><mi>θ</mi><mi>s</mi></msub></msub><mrow><mo fence="true">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi>x</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\phi^{-1^{(i)}}=g_{\theta_{s}}\left(y^{(i)}, x\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2341399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0396999999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2380099999999998em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>。</p><p>我们对外观变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau_{a}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>进行建模，即在图集的空间框架内对各体素进行添加。我们使用函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>ψ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>h</mi><msub><mi>θ</mi><mi>a</mi></msub></msub><mrow><mo fence="true">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>∘</mo><msup><mi>ϕ</mi><mrow><mo>−</mo><msup><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\psi^{(i)}=h_{\theta_{a}}\left(x, y^{(i)} \circ \phi^{-1^{(i)}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0396999999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span>来计算每个体素的体积，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mtext>◦</mtext><mi>ϕ</mi><mo>−</mo><mn>1</mn><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(i) ◦ \phi-1(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord">◦</span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>是使用我们学习的空间模型注册到图册空间的体积。</p><p>总之，我们的空间和外观变换是：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>τ</mi><mi>s</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>∘</mo><msup><mi>ϕ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mspace width="1em"/><mi>ϕ</mi><mo>=</mo><msub><mi>g</mi><msub><mi>θ</mi><mi>s</mi></msub></msub><mrow><mo fence="true">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\tau_{s}^{(i)}(x)=x \circ \phi^{(i)}, \quad \phi=g_{\theta_{s}}\left(x, y^{(i)}\right)\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.13244em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span><span class="mspace newline"></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>τ</mi><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><msup><mi>ψ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mspace width="1em"/><msup><mi>ψ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>h</mi><msub><mi>θ</mi><mi>a</mi></msub></msub><mrow><mo fence="true">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>∘</mo><msup><mi>ϕ</mi><mrow><mo>−</mo><msup><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\tau_{a}^{(i)}(x)=x+\psi^{(i)}, \quad \psi^{(i)}=h_{\theta_{a}}\left(x, y^{(i)} \circ \phi^{-1^{(i)}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.13244em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0897000000000001em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></span></p><h3 id="32-learning"><a class="markdownIt-Anchor" href="#32-learning"></a> 3.2 Learning</h3><p>我们的目标是捕捉图谱和未标记的体积之间的变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\tau_{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">\tau_{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的分布。我们使用独立的卷积神经网络来估计公式（1）和（2）中的函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><msub><mi>θ</mi><mi>s</mi></msub></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_{θ_s} (\cdot, \cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><msub><mi>θ</mi><mi>s</mi></msub></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_{θ_s} (\cdot, \cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>，每个网络都使用图3中概述的一般架构。借鉴Morphable Models[38]和Active Appearance Models[16, 17]的见解，我们独立优化空间和外观模型。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210312021569.png" alt="" /></p><blockquote><p>图3：我们使用基于U-Net架构的卷积神经网络[63]来学习每个变换模型。变换的应用对空间模型来说是一个空间翘曲，对外观模型来说是一个体素加法。每个卷积使用3×3×3核，之后是LeakyReLU激活层。编码器使用最大池化层来降低空间分辨率，而解码器则使用上采样层。</p></blockquote><h3 id="33-synthesizing-new-examples"><a class="markdownIt-Anchor" href="#33-synthesizing-new-examples"></a> 3.3 Synthesizing new examples</h3><p>公式（1）和（2）中描述的模型使我们能够通过从未标记的数据集中对目标体积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i)}, y^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>进行抽样，对空间和外观的变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>τ</mi><mi>s</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>τ</mi><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">\tau_{s}^{(i)}, \tau_{a}^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>进行采样。由于空间和外观目标可以是不同的主体，我们的方法可以将一个主体的空间变化与另一个主体的强度结合起来，形成一个单一的合成体积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>。我们通过将从目标体积中计算出的变换应用于已标记的图集来创建一个已标记的合成例子：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>τ</mi><mi>s</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mrow><mo fence="true">(</mo><msubsup><mi>τ</mi><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msubsup><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>τ</mi><mi>s</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mrow><mo fence="true">(</mo><msub><mi>l</mi><mi>x</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \hat{y}^{(i, j)} &amp;=\tau_{s}^{(i)}\left(\tau_{a}^{(j)}(x)\right) \\ \hat{l}_{y}^{(i, j)} &amp;=\tau_{s}^{(i)}\left(l_{x}\right) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.7410079999999994em;vertical-align:-1.620504em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1205039999999995em;"><span style="top:-4.120504em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.212604em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.620504em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1205039999999995em;"><span style="top:-4.120504em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-2.212604em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.620504em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>这个过程在图2的第3和第4步中得到了直观的体现。然后，这些新的有标签的训练实例被包括在有监督的分割网络的有标签的训练集中。</p><h3 id="34-segmentation-network"><a class="markdownIt-Anchor" href="#34-segmentation-network"></a> 3.4 Segmentation network</h3><p>新合成的例子对于提高有监督的分割网络的性能非常有用。我们使用一个基于[66]中描述的最新架构的网络来证明这一点。为了考虑到GPU的内存限制，该网络被设计为一次分割一个片断。我们在增强的训练集中的随机切片上训练网络。我们使用验证集上的早期停止来选择训练周期的数量。我们强调，确切的分割网络结构不是这项工作的重点，因为我们的方法可以与任何有监督的分割网络一起使用。</p><h3 id="35-implementation"><a class="markdownIt-Anchor" href="#35-implementation"></a> 3.5 Implementation</h3><p>我们使用Keras[12]和Tensorflow[1]实现了所有模型。对图像的空间变换的应用是通过一个可微分的三维空间变换器层[8]来实现的；一个类似的使用近邻插值的层被用来变换分割图。为了简单起见，我们使用两个相同的神经网络来捕捉第3.1节中描述的正向和反向空间变换。对于外观变换模型，我们使用超参数设置λa = 0.02。我们用每批中的一对体积来训练我们的变换模型，用16个切片的批次大小来训练分割模型。所有模型都以5e-4的学习率进行训练。 Our code is available at <a href="https://github.com/xamyzhao/brainstorm">https://github.com/xamyzhao/brainstorm</a>.</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>我们证明了我们的自动增强方法可以用来改善大脑MRI的分割。我们专注于未归一化扫描的一次性分割–这是一个具有挑战性但实际的场景。强度归一化方法，如偏置场校正[27, 71, 74]，在现实情况下（例如，临床质量的扫描，或有中风[73]或脑外伤的扫描）可能效果不佳。</p><h3 id="41-data"><a class="markdownIt-Anchor" href="#41-data"></a> 4.1 Data</h3><p>我们使用[8]中描述的公开可用的T1加权MRI脑部扫描数据集。这些扫描是由八个数据库汇编而成的。ADNI [54], OASIS [46], ABIDE [48], ADHD200 [49], MCIC [30], PPMI [47], HABS [19], 和Harvard GSP [33]；分割标签是用FreeSurfer [27]计算的。与[8]一样，我们将大脑重新取样为256×256×256，各向同性的体素为1毫米，并对图像进行平移和裁剪为160×192×224。我们不应用任何强度校正，并通过将没有解剖学标签的体素清零来进行头骨剥离。为了评估，我们使用了[8]中描述的30个解剖学标签的分割图。</p><p>我们专注于使用单一标签的例子进行分割的任务。我们随机选择101张大脑扫描图在训练时可用。在实践中，图集通常被选择为接近人群的解剖学平均值。我们选择我们的图集作为与[8]中计算的解剖学平均值最相似的训练实例。这个图集是用于训练我们的转换模型的单一标签例子；其他100个训练大脑的分割标签没有被使用。我们使用另外50张扫描图作为验证集，以及另外100张扫描图作为保留的测试集。</p><h3 id="42-segmentation-baselines"><a class="markdownIt-Anchor" href="#42-segmentation-baselines"></a> 4.2 Segmentation baselines</h3><p><strong>Single-atlas segmentation (SAS)</strong></p><p>我们使用与我们在单图集分割框架中为我们的方法的空间变换模型训练的相同的先进的注册模型[8]。我们将图集注册到每个测试卷，并使用计算出的变形场对图集标签进行扭曲[6, 13, 22, 32, 41]。也就是说，对于每个测试图像y(i)，我们计算φ(i) = gθs (x, y(i)) 并预测标签l ˆ(i) y = lx ◦φ(i)。</p><p><strong>Data augmentation using single-atlas segmentation (SAS-aug)</strong></p><p>我们使用SAS的结果作为未注释的训练大脑的标签，然后我们将其作为监督分割的训练实例。这为分割器的训练集增加了100个新的训练例子。</p><p><strong>Hand-tuned random data augmentation (rand-aug)</strong></p><p>与[51, 63, 64]类似，我们通过在稀疏网格上对随机矢量进行采样，然后应用双线性插值和空间模糊来创建随机平滑变形场。我们评估了变形场的振幅和平滑度的几种设置，包括[63]中描述的设置，并选择了在验证集上产生最佳分割性能的设置。我们使用一个从[0.5, 1.5]范围内均匀采样的全局强度乘法因子来合成成像强度的变化，与[35, 40]类似。我们选择这个范围来匹配数据集中的强度变化；这代表了在实践中调整增强参数的方式。这种增强方法在每次训练迭代中都会合成一个新的随机变换的大脑。</p><p><strong>Supervised</strong></p><p>我们训练一个完全监督的分割网络，它使用训练数据集中所有101个例子的地面真实标签。除了图集标签外，这些标签对其他任何方法都是不可用的。这种方法可以作为一个上界。</p><h3 id="43-variants-of-our-method"><a class="markdownIt-Anchor" href="#43-variants-of-our-method"></a> 4.3 Variants of our method</h3><p><strong>Independent sampling (ours-indep)</strong></p><p>如第3.3节所述，我们对空间和外观目标图像进行独立采样，以计算τ (i) s , τ (j) a。 通过100个未标记的目标，我们得到100个空间和100个外观变换，从而能够合成10,000个不同的标记例子。由于内存的限制，我们在每次训练迭代中随机合成一个有标签的例子，而不是将所有10,000个新的例子加入训练集。</p><p><strong>Coupled sampling (ours-coupled)</strong></p><p>为了突出我们的独立变换模型的功效，我们将我们的独立变换模型与我们的方法的一个变体进行了比较，在这个变体中，我们对同一目标图像的空间和外观变换进行了采样。这就产生了100个可能的合成例子。和我们的indep一样，我们在每次训练迭代中合成一个随机例子。</p><p><strong>Ours-indep + rand-aug</strong></p><p>在训练分割器时，我们在使用我们的-indep合成的例子和使用rand-aug合成的例子之间交替进行。在我们的合成增量中加入手工调整的增量，可以引入额外的方差，即使在未标记的集合中也是看不到的，从而提高分割器的鲁棒性。</p><h3 id="44-evaluation-metrics"><a class="markdownIt-Anchor" href="#44-evaluation-metrics"></a> 4.4 Evaluation metrics</h3><p>我们用Dice评分[23]来评估每种分割方法的准确性，Dice评分可以量化两个解剖区域之间的重叠程度。Dice分数为1表示完全重叠的区域，而0表示没有重叠。预测的分割标签是相对于用FreeSurfer[27]生成的解剖标签进行评估的。</p><h3 id="45-results"><a class="markdownIt-Anchor" href="#45-results"></a> 4.5 Results</h3><h4 id="451-segmentation-performance"><a class="markdownIt-Anchor" href="#451-segmentation-performance"></a> 4.5.1 Segmentation performance</h4><p>表1显示了每种方法达到的分割精度。我们的方法在所有30个评估标签中的平均Dice得分超过了所有的基线，显示出比下一个最好的基线rand-aug（使用配对t检验，p&lt;1e-15）和SAS-aug（p&lt;1e-20）的显著改善。在图4和图5中，我们将每种方法与singleatlas分割基线进行比较。图4显示，我们的方法平均获得了最大的改进，而且比手工调整的随机增强更一致。图5显示，我们的-indep + rand-aug在每个测试对象上都一直比每个基线好。Ours-indep本身总是优于SAS-aug和SAS，并且在100个测试扫描中的95个上优于rand-aug。</p><p>图6显示，在大的解剖结构上，Rand-aug比SAS改善了Dice，但对较小的解剖结构是不利的。相比之下，我们的方法在所有结构上都比SAS和SAS-aug产生了一致的改进。我们在图7中展示了几个分割海马的例子。</p><h4 id="452-synthesized-images"><a class="markdownIt-Anchor" href="#452-synthesized-images"></a> 4.5.2 Synthesized images</h4><p>我们独立的空间和外观模型能够合成各种各样的大脑外观。图8显示了一些例子，在这些例子中，结合变换产生了具有准确标签的现实结果。</p><h2 id="5-discussion"><a class="markdownIt-Anchor" href="#5-discussion"></a> 5. Discussion</h2><p><strong>Why do we outperform single-atlas segmentation?</strong></p><p>我们的方法依赖于用于SAS和SAS-aug的相同空间注册模型。我们的耦合和SAS-aug都用100张新的图像来增强分割器的训练集。</p><p>为了理解为什么我们的方法能产生更好的分割结果，我们检查了增强的图像。我们的方法以与标签相同的方式对图像进行扭曲，确保扭曲的标签与转换后的图像相匹配。另一方面，SAS-aug将扭曲的标签应用于原始图像，因此，注册中的任何错误或噪音都会导致分割器出现错误的标签，成为新的训练实例。图9强调了一些例子，我们的方法在海马体标签内合成的图像纹理与地面真相海马体的纹理更加一致，从而产生了一个更有用的合成训练实例。</p><p><strong>Extensions</strong></p><p>我们的框架可以在未来进行一些合理的扩展。在第3.1节中，我们讨论了使用一个近似的反变形函数来学习图集参考框架中的外观变换。在未来，我们将利用现有的差分形态登记工作[3, 5, 10, 20, 81]，而不是学习一个单独的反空间变换模型。</p><p>我们从一个离散的空间和外观变换的集合中抽取变换。这可以扩展到更丰富的变换空间，例如，通过变换之间的插值，或使用变换的组合。</p><p>我们在大脑核磁共振成像上演示了我们的方法。由于该方法没有使用大脑或核磁共振的特定信息，因此将其扩展到其他解剖学或成像模式，如CT，是可行的。</p><h2 id="6-conclusion"><a class="markdownIt-Anchor" href="#6-conclusion"></a> 6. Conclusion</h2><p>我们提出了一种基于学习的数据增强方法，并在一次性医学图像分割上进行了演示。</p><p>我们从一张有标签的图像和一组无标签的例子开始。使用基于学习的注册方法，我们对已标记的和未标记的例子之间的空间和外观转换集进行建模。这些转换可以捕捉到诸如非线性变形和成像强度变化的影响。我们通过对转换进行抽样并将其应用于有标签的例子来合成新的有标签的例子，产生各种各样的真实的新图像。</p><p>我们使用这些合成的例子来训练一个监督下的分割模型。该分割器在我们测试集中的每一个例子上的表现都优于现有的一次性分割方法，接近于完全监督模型的表现。这个框架可以在许多应用中进行分割，例如在时间有限的情况下，只允许对少数扫描进行人工注释的临床环境。</p><p>综上所述，这项工作表明。</p><ul><li>从无标签的图像中学习独立的空间和外观转换模型，可以合成多样的、真实的有标签的例子，并且</li><li>这些合成的例子可以用来训练一个分割模型，在一次性的情况下比现有的方法更出色。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Generalized Few-shot Semantic Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Generalized-Few-shot-Semantic-Segmentation/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Generalized-Few-shot-Semantic-Segmentation/</url>
      
        <content type="html"><![CDATA[<h1 id="generalized-few-shot-semantic-segmentation"><a class="markdownIt-Anchor" href="#generalized-few-shot-semantic-segmentation"></a> Generalized Few-shot Semantic Segmentation</h1><h1 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h1><p>训练语义分割模型需要大量精细注释的数据，因此很难快速适应不满足这一条件的新类。FewShot Segmentation（FS-Seg）在处理这个问题时有很多限制。在本文中，我们引入了一个新的基准，称为广义的Few-Shot语义分割（GFSSeg），以分析同时对具有极少例子的新类别和具有足够例子的基础类别进行分割的泛化能力。这是第一项研究，表明以前具有代表性的最先进的FS-Seg方法在GFS-Seg中的不足，其性能差异主要来自FS-Seg的限制性设置。为了使GFS-Seg具有可操作性，我们建立了一个GFS-Seg基线，在不改变原始模型的结构的情况下取得了良好的性能。然后，由于上下文对语义分割至关重要，我们提出了上下文感知原型学习（CAPL），通过1）利用支持样本的共生先验知识，以及2）根据每个查询图像的内容，动态地丰富分类器的上下文信息，来显著提高性能。这两个贡献在实验中都体现了其实质性的实用价值。在Pascal-VOC和COCO上的广泛实验也表明，CAPL在FS-Seg上有很好的通用性，实现了有竞争力的性能。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>深度学习的发展已经为语义分割任务带来了显著的性能提升。有代表性的语义分割方法[5, 64]使机器人、自动驾驶、医学成像等广泛的应用受益。然而，一旦这些框架被训练出来，如果没有足够的完全标记的数据，它们就无法处理新应用中未见过的类别。即使所需的新类数据已经准备好，微调也要花费额外的时间和资源。深度学习的发展已经为语义分割任务带来了显著的性能提升。有代表性的语义分割方法[5, 64]使机器人、自动驾驶、医学成像等广泛的应用受益。然而，一旦这些框架被训练出来，如果没有足够的完全标记的数据，它们就无法处理新应用中未见过的类别。即使所需的新类数据已经准备好，微调也要花费额外的时间和资源。</p><p>为了快速适应只有有限的标记数据的新类，几率分割（表示为FSSeg）[31]模型在标记良好的基础类上进行训练，并在先前未见过的新类上进行测试。在训练期间，FS-Seg将数据分为支持集和查询集。支持集的样本旨在为FS-Seg模型提供目标分类信息，以识别查询样本中的目标区域，目的是模仿只有少数标记的新类数据的情况。训练结束后，支持集和查询集的样本都被送到FS-Seg模型中，根据支持集的信息产生对以前未见过的类的查询预测。</p><p><strong>Limitations of FS-Seg.</strong> 然而，FS-Seg要求支持样本包含查询样本中存在的类。在许多情况下，拥有这种先验知识可能过于强大，因为提供相同类别的支持样本需要繁琐的人工选择。此外，FS-Seg只评估新的类，而正常语义分割中的测试样本也可能包含基础类。实验表明，由于这些限制，示范性的FS-Seg模型不能很好地解决对基础类和新颖类进行评估的实际情况。</p><p><strong>New benchmark and our solution.</strong> 基于这些事实，我们设立了一个新的任务，命名为广义少数镜头语义分割（GFS-Seg）。如图1所示，一个典型的GFS-Seg方法有三个阶段。1）基础类的学习阶段，2）包含新颖类的少数支持样本的新颖类注册阶段，以及3）对基础类和新颖类的评估阶段。GFS-Seg与FS-Seg的区别在于，在评估阶段，GFS-Seg不需要转发测试（查询）样本中包含相同目标类的支持样本来进行预测，因为GFS-Seg在基类学习阶段和新类注册阶段应该已经分别获得了基类和新类的信息。GFS-Seg在事先不知道查询图像中包含哪些类的情况下，同时对新类进行预测时，在不牺牲基类的准确性的情况下表现良好，实现了在更具挑战性的情况下实际使用语义分割的基本步骤。</p><p>受[12, 26]的启发，我们为GFS-Seg设计了一个具有良好性能的基线。考虑到上下文关系对语义分割至关重要，我们提出了上下文感知原型学习（CAPL），通过用适应的特征更新基本原型的权重，为基线提供了显著的性能增益。CAPL不仅利用了支持样本的基本共现信息，而且还使模型适应了查询图像的各种语境。基线方法和提议的CAPL可以应用于普通的语义分割模型，例如FCN[32]、PSPNet[64]和DeepLab[5]。同时，CAPL在FS-Seg的设置中，通过对基线的大幅改进，达到最先进的性能，证明了其有效性。</p><p>我们的总体贡献如下。</p><ul><li>我们扩展了经典的FSSeg（Few-Shot Segmentation），并提出了一个更实用的设置–通用Few-Shot Semantic Segmentation（GFS-Seg）。</li><li>基于我们的实验结果，我们分析了FS-Seg和GFS-Seg之间现有的性能差距，以及最近流行的FS-Seg模型不能很好处理的情况。</li><li>我们提出了上下文感知原型学习（CAPL），在GFS-Seg和FS-Seg这两种设置下，对基线模型产生了显著的性能提升。它被应用于各种没有特定结构约束的正常语义分割模型.</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p><strong>Semantic segmentation.</strong> 语义分割是一项基本的同时又具有挑战性的任务，要准确预测每个像素的标签。FCN[32]是第一个为语义分割设计的框架，它用卷积层取代了分类网络中最后一个全连接层。为了得到每个像素的预测，采用了编码器-解码器式的方法[1, 25, 29]，以帮助分步细化输出。感受野对于语义分割至关重要–引入扩张卷积[5, 53]来扩大感受野。语境信息对语义分割起着重要作用，因此引入了语境建模架构，包括全局集合[19]和金字塔集合[5, 50, 63, 64]。同时，注意力模型[10, 16, 36, 42, 54, 59, 65]也被证明对于捕捉场景内部的长距离关系是有效的。尽管这些强大的分割框架取得了成功，但如果不对足够的注释数据进行微调，它们就不容易适应未见过的类别。</p><p><strong>Few-shot learning.</strong> 少量学习的目的是对只有少数标记的例子的新类进行预测。流行的解决方案包括基于元学习的方法[4, 9, 30]和度量学习方法[35, 37, 40, 56]。数据增强还有助于模型通过对抗过拟合来实现更好的性能。因此，基于少数标记数据合成新的训练样本或特征，也是解决几率问题的一个可行方案[13, 44, 60]。[13]中提出了广义的几张图片学习，其中查询的图片可以来自基本类别或新的类别。</p><p>尽管在低照度视觉识别中探索了监督模型（针对基础类）和基于原型的方法（针对新颖类）的结合[12, 26]，但语义分割中密集的像素标签与图像级分类不同，后者不包含每个目标的上下文信息。</p><p><strong>Few-shot segmentation.</strong> FSSeg（Few-Shot Segmentation）将语义分割置于几张照片的情况下[2, 8, 11, 15, 18, 20, 21, 24, 27, 28, 33, 34, 38, 41, 48, 51, 52, 57, 61, 62, 66, 67]，其中密集的像素标签是在只有几个支持样本的新类上进行的。OSLSM[31]在分割中引入了这种设置，并通过在评估过程中对每个查询-支持对产生最终分类器的权重来提供解决方案。原型的想法被用于PL[7]中，其中预测是基于像素和原型之间的余弦相似度。另外，PANet[43]中也引入了原型对齐正则化。预测也可以通过卷积产生。PFENet[39]使用预先训练好的骨干的先验知识来帮助寻找感兴趣的区域，查询和支持样本之间的空间不一致性由特征丰富模块（FEM）来缓解。</p><p>虽然FS-Seg模型在给定相应的支持样本时表现良好，如第5节所示，如果没有查询图像中包含的目标类别的预先知识，即使是最先进的FS-Seg模型也不能很好地解决涉及基础类和新类的实际设置。</p><h2 id="3-generalized-few-shot-semantic-segmentation"><a class="markdownIt-Anchor" href="#3-generalized-few-shot-semantic-segmentation"></a> 3. Generalized Few-shot Semantic Segmentation</h2><p><strong>Revisit the classic setting.</strong> 在经典的 “少数镜头分割”（FS-Seg）[31]中，数据被分成支持S和查询Q两组。FS-Seg模型需要根据S提供的类别信息对Q进行预测。为了处理新的类，在[40]中提出了插曲范式来训练和评估少量模型。在一个K-shot任务中，支持集S包含K个样本S={S1, S2, …, SK }，每个支持样本Si是一对{si, mi}，其中si和mi是c类的支持图像和掩码。</p><p>对于查询集，Q={q，y}，其中q是输入的查询图像，y是c类的地真掩码。用于模型训练的输入数据批是查询-支持对{q；S}={q；s1，m1，…，sk，mk}。q的地面真实掩码y是不能访问的，因为它是用来评估每个情节中的查询图像的预测的。更多关于FS-Seg中情节训练范式的细节包括在[31]中。</p><p>总之，在经典的FewShot分割任务中，有两个关键标准。(1)测试类Cn的样本在训练期间没有被模型看到。(2)模型要求其支持样本包含查询样本中存在的目标类，以做出相应的预测。</p><p><strong>Our generalized setting.</strong> 经典的几张照片分割的标准（1）是评估模型对新的类别的概括能力，只提供几个样本。标准（2）使这种设置在许多情况下不实用，因为用户可能不知道每张测试图像中到底包含多少个和哪些类别。因此，很难将包含与查询样本相同类别的支持样本送入模型。</p><p>此外，即使用户已经知道测试图像中包含N个类别，FS-Seg模型[3, 17, 23, 39, 55, 57, 58]也可能需要处理N K个额外的手动选择的支持图像/标签来对测试图像的所有可能类别进行预测。这在实际应用中是不够的，在实际应用中，模型应该直接输出对测试图像中所有可能的类别的预测，而不需要处理包含查询图像中类别的先验知识的N K个额外的支持图像/标签。</p><p>在GFS-Seg中，基类Cb有足够的标记训练数据，而每个新类Cn i∈Cn只有有限的K个标记样本（例如，K=1，5，10）。与FSSeg类似，GFS-Seg中的模型首先在基类Cb上进行训练，以学习好的表征，这是GFS-Seg的第一个基类学习阶段。然后，当第一阶段完成后，模型从有限的N K支持样本中获得N个新类的信息，并在新类注册阶段形成一个新的分类器。在最后的评估阶段，GFS-Seg模型在测试集的图像上进行评估，以预测来自基类和新类Cb∪Cn的标签，而不是像FS-Seg那样只评估新类Cn。</p><p>GFS-Seg中的查询图像可能包含新类、基类或两者，而查询图像中包含哪些类是没有先验知识的。因此，GFS-Seg的主要评价指标是所有类别的平均总mIoU，而不是FS-Seg中使用的新型mIoU。偶发训练范式可能不是GFS-Seg的好选择，因为评估阶段的输入数据不再是FS-Seg中使用的查询-支持对{q; S}。相反，它只是作为测试普通语义分割模型的查询图像IQ。</p><p>为了更好地区分FS-Seg和GFS-Seg，我们在图2中说明了FS-Seg的2路K-shot任务和GFSSeg的一个案例，其中牛和摩托车是新类，人和车是基类。FS-Seg模型（图2(a)）只限于预测支持集中包含的类的二进制分割掩码。右边的人和上面的车在预测中缺失，因为支持集没有提供这些类的信息，即使模型在这些基础类上训练了足够的步骤。</p><p>此外，如果(a)的支持集提供了没有出现在查询图像中的多余的新类（如飞机），它们可能会对性能产生不利影响，因为FS-Seg有一个先决条件，即查询图像必须包含支持样本提供的类。</p><p>如第5.1节所示，FS-Seg模型只学习预测给定的新类别的前景遮罩。因此，在我们广义的GFS-Seg设置中，它们的性能会严重下降，因为所有可能的基础类和新类都需要预测。不同的是，GFS-Seg（图2(b)）在不事先了解查询图像中包含的类别的情况下，同时识别基础类和新类。额外的支持类（如图2(b)左上角的飞机）应该不会对模型有太大影响。</p><h2 id="4-our-method"><a class="markdownIt-Anchor" href="#4-our-method"></a> 4. Our Method</h2><h3 id="41-prototype-learning"><a class="markdownIt-Anchor" href="#41-prototype-learning"></a> 4.1. Prototype Learning</h3><p>FS-Seg中的原型学习。在Few-Shot Segmentation (FS-Seg)框架[7, 43]中，一个N路K-shot FS-Seg任务（有N个新的类，每个类有K个支持样本），所有支持样本si j（i∈{1, 2, …, N }, j∈{1, 2, …, K}）首先被一个特征提取器F和掩码平均池处理。然后，它们在K次拍摄中被平均化，形成N个原型pi（i∈{1，2，…，N }），作为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>p</mi><mi>i</mi></msup><mo>=</mo><mfrac><mn>1</mn><mi>K</mi></mfrac><mo>∗</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mfrac><mrow><munder><mo>∑</mo><mrow><mi>h</mi><mo separator="true">,</mo><mi>w</mi></mrow></munder><msub><mrow><mo fence="true">[</mo><msubsup><mi mathvariant="bold-italic">m</mi><mi>j</mi><mi>i</mi></msubsup><mo>∘</mo><mi mathvariant="script">F</mi><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold-italic">s</mi><mi>j</mi><mi>i</mi></msubsup><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow><mrow><mi>h</mi><mo separator="true">,</mo><mi>w</mi></mrow></msub></mrow><mrow><munder><mo>∑</mo><mrow><mi>h</mi><mo separator="true">,</mo><mi>w</mi></mrow></munder><msub><mrow><mo fence="true">[</mo><msubsup><mi mathvariant="bold-italic">m</mi><mi>j</mi><mi>i</mi></msubsup><mo fence="true">]</mo></mrow><mrow><mi>h</mi><mo separator="true">,</mo><mi>w</mi></mrow></msub></mrow></mfrac><mo separator="true">,</mo><mspace width="1em"/><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">p^{i}=\frac{1}{K} * \sum_{j=1}^{K} \frac{\sum_{h, w}\left[\boldsymbol{m}_{j}^{i} \circ \mathcal{F}\left(\boldsymbol{s}_{j}^{i}\right)\right]_{h, w}}{\sum_{h, w}\left[\boldsymbol{m}_{j}^{i}\right]_{h, w}}, \quad i \in\{1,2, \ldots, N\} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0691039999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.82058em;"><span style="top:-2.26em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">m</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.806464em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.023436000000000012em;"><span style="top:-2.2373280000000006em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5987799999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.97058em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">m</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">s</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.041635999999999895em;"><span style="top:-2.2555280000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.58058em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3387799999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span></span></p><p>其中mi j∈Rh,w,1是类ci在F(si j )∈Rh,w,<a href="http://d.si">d.si</a> j上的类掩码，代表类ci的第j个支持图像，◦是Hadamard积。在获得N个原型后，对于查询特征F(q)，通过最相似的原型的类标签来分配预测结果。</p><p><strong>Baseline for GFS-Seg.</strong> FS-Seg只需要从新的类别中识别目标。但是我们在GFS-Seg中的广义设置需要对基类和新类都进行预测。对于FS-Seg模型来说，通过公式(1)将所有基础类的样本转发给特征提取器来形成基础类的原型是很难的，而且效率也很低，特别是当训练集很大的时候。</p><p>常见的语义分割框架可以被分解为特征提取器和分类器部分。特征提取器将输入图像投射到d维潜在空间，大小为N b × d的分类器对N b个基类进行预测。大小为N b × d的分类器可以被看作是N b个基础原型（P b∈RNb,d）。由于转发所有基数样本以形成基数原型是不切实际的，受低速学习的启发[12, 26]，我们在基数类的训练中通过反向传播学习分类器。</p><p>具体来说，我们的GFS-Seg的基线是在基础类上进行训练，就像正常的分割框架一样。训练后，N n个新类的原型P n∈RNn,d在公式（1）中形成了N n×K支持样本。P n和P b被串联起来形成P all∈RNb+Nn,d，即新的分类器，以同时预测基类和新类。</p><p>由于普通语义分割框架的分类器所使用的点积会产生不同的F(si j)规范尺度，对公式(1)中的平均运算产生负面影响，按照[43]，我们采用余弦相似度作为距离度量φ，对查询样本q∈Rh,w,3中的像素产生输出O为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathsize="1.2em"><msub><mi mathvariant="bold-italic">O</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo>=</mo><mi><munder><mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo></mo><mi>i</mi></munder></mi><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>α</mi><mi>ϕ</mi><mrow><mo fence="true">(</mo><mi mathvariant="script">F</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">q</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">p</mi><mi>i</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><mrow><munder><mo>∑</mo><mrow><msup><mi>p</mi><mi>i</mi></msup><mo>∈</mo><msup><mi mathvariant="bold-italic">P</mi><mrow><mi>a</mi><mi>l</mi><mi>l</mi></mrow></msup></mrow></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>α</mi><mi>ϕ</mi><mrow><mo fence="true">(</mo><mi mathvariant="script">F</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">q</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">p</mi><mi>i</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\large \boldsymbol{O}_{x, y}=\underset{i}{\arg \max } \frac{\exp \left(\alpha \phi\left(\mathcal{F}\left(\boldsymbol{q}_{x, y}\right), \boldsymbol{p}^{i}\right)\right)}{\sum_{p^{i} \in \boldsymbol{P}^{a l l}} \exp \left(\alpha \phi\left(\mathcal{F}\left(\boldsymbol{q}_{x, y}\right), \boldsymbol{p}^{i}\right)\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.158884em;vertical-align:-0.335552em;"></span><span class="mord sizing reset-size6 size7"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">O</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000005em;"><span style="top:-2.65em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.93604em;vertical-align:-1.66802em;"></span><span class="mord sizing reset-size6 size7"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.39988em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop"><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9001200000000001em;"><span></span></span></span></span></span></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8900166666666667em;"><span style="top:-2.3016666666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2602833333333332em;"><span style="top:-2.5026566666666668em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7806399999999999em;"><span style="top:-2.886em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.15972em;">P</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8364399999999999em;"><span style="top:-2.91561em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42697000000000007em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">q</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.04526666666666668em;"><span style="top:-2.5582266666666666em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.37140000000000006em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.72868em;"><span style="top:-3.089em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">)</span></span></span><span class="mclose sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.081683333333333em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">q</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.04526666666666668em;"><span style="top:-2.5582266666666666em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.37140000000000006em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8026800000000001em;"><span style="top:-3.163em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">)</span></span></span><span class="mclose sizing reset-size7 size6 delimcenter" style="top:-0.04999999999999999em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3900166666666667em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ECA-Net Efficient Channel Attention for Deep Convolutional Neural Networks</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ECA/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ECA/</url>
      
        <content type="html"><![CDATA[<h1 id="eca-net"><a class="markdownIt-Anchor" href="#eca-net"></a> ECA-Net</h1><p>ECA-Net: Efficient Channel Attention for Deep Convolutional Neural Networks</p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>最近，通道注意机制被证明在提高深度卷积神经网络（CNN）的性能方面具有巨大的潜力。然而，大多数现有的方法致力于开发更复杂的注意力模块以实现更好的性能，这不可避免地增加了模型的复杂性。为了克服性能和复杂性之间的矛盾，本文提出了一个高效通道注意（ECA）模块，它只涉及少数几个参数，同时带来明显的性能增益。**通过剖析SENet中的通道注意模块，我们实证表明避免降维对学习通道注意很重要，而适当的跨通道交互可以保持性能，同时显著降低模型的复杂性。因此，我们提出了一种无需降维的局部跨通道交互策略，它可以通过一维卷积有效地实现。**此外，我们开发了一种自适应选择一维卷积核大小的方法，以确定局部跨通道交互的覆盖范围。我们提出的ECA模块是高效的，例如，我们的模块对ResNet50骨干的参数和计算量分别是80对24.37M和4.7e-4 GFLOPs对3.86 GFLOPs，在Top-1的准确性方面，性能提升超过了2%。我们对我们的ECA模块进行了广泛的评估，包括图像分类、物体检测和实例分割，并以ResNets和MobileNetV2为骨架。实验结果表明，我们的模块效率更高，同时在性能上优于同类产品。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>深度卷积神经网络（CNN）在计算机视觉界得到了广泛的应用，并在图像分类、物体检测和语义分割等广泛的任务中取得了巨大的进展。从开创性的AlexNet[17]开始，许多研究都在不断研究以进一步提高深度CNN的性能[29, 30, 11, 15, 19, 20, 32]。最近，将通道注意力纳入卷积块引起了很多人的兴趣，在性能改进方面显示出巨大的潜力[14, 33, 13, 4, 9, 18, 7]。其中一个代表性的方法是挤压和激发网络（SENet）[14]，它为每个卷积块学习通道注意力，为各种深度CNN架构带来明显的性能增益。</p><p>在SENet[14]中设置了挤压（即特征聚集）和激发（即特征重新校准）后，一些研究通过捕捉更复杂的通道依赖性[33, 4, 9, 7]或与额外的空间注意力相结合来改进SE块[33, 13, 7]。尽管这些方法取得了更高的精度，但它们往往带来了更高的模型复杂性，并承受着更重的计算负担。与上述以较高的模型复杂度为代价获得较好性能的方法不同，本文反而关注一个问题： 能否以一种更有效的方式学习有效的通道注意？</p><p>为了回答这个问题，我们首先重新审视SENet中的通道注意模块。具体来说，给定输入特征后，SE模块首先对每个通道独立采用全局平均池，然后用两个全连接（FC）层，用非线性函数和Sigmoid函数生成通道权重。这两个FC层的设计是为了捕捉非线性的跨通道互动，这涉及到控制模型复杂性的降维。虽然这种策略在后续的通道注意力模块中被广泛使用[33, 13, 9]，但我们的经验研究表明，降维会给通道注意力预测带来副作用，而且捕捉所有通道的依赖关系是低效和不必要的。</p><p>因此，本文提出了一个用于深度CNN的高效通道关注（ECA）模块，它避免了降维，并以有效的方式捕获跨通道的互动。如图2所示，在不降维的情况下进行通道全局平均池化后，我们的ECA通过考虑每个通道和它的k个邻居来捕获局部的跨通道互动。这种方法被证明可以保证效率和效果。请注意，我们的ECA可以通过大小为k的快速一维卷积来有效实现，其中内核大小k代表本地跨通道交互的覆盖率，即有多少邻居参与了一个通道的注意力预测。为了避免通过交叉验证手动调整k，我们开发了一种方法来适应性地确定k，其中互动的覆盖率（即内核大小k）与通道维度成正比。如图1和表3所示，与骨干模型[11]相比，带有我们的ECA模块（称为ECA-Net）的深度CNN引入的额外参数很少，计算量可以忽略不计，同时带来明显的性能提升。例如，对于具有24.37M参数和3.86GFLOPs的ResNet-50来说，ECA-Net50的额外参数和计算量分别为80和4.7e4 GFLOPs；同时，ECA-Net50在Top-1的准确度方面比ResNet-50高出2.28%。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202306142327674.png" alt="" /></p><blockquote><p>图2. 我们的高效信道关注（ECA）模块的示意图。考虑到通过全局平均池（GAP）获得的聚合特征，ECA通过执行大小为k的快速一维卷积来生成通道权重，其中k是通过通道维度C的映射自适应确定的。</p></blockquote><p>表1总结了现有的注意力模块是否进行了通道降维（DR）、跨通道交互和轻量级模型，我们可以看到我们的ECA模块通过避免通道降维来学习有效的通道注意力，同时以极轻量级的方式捕捉跨通道交互。为了评估我们的方法，我们在ImageNet-1K[6]和MS COCO[23]的各种任务中使用不同的深度CNN架构进行了实验。</p><p><img src="images/image-20230614233146383.png" alt="image-20230614233146383" /></p><blockquote><p>表1. 现有的注意力模块在是否没有通道降维（No DR）、跨通道互动和比SE更少的参数（用轻量级表示）方面的比较。</p></blockquote><p>本文的贡献总结如下。</p><p>(1) 我们对SE块进行了剖析，并通过经验证明避免降维和适当的跨通道交互对学习有效和高效的通道注意力分别很重要。</p><p>(2) 基于以上分析，我们尝试为深度CNN开发一个极其轻量级的通道注意模块，提出了高效通道注意（ECA），在带来明显改进的同时，增加了很少的模型复杂性。</p><p>(3) 在ImageNet-1K和MS COCO上的实验结果表明，我们的方法比最先进的方法具有更低的模型复杂性，同时取得了非常有竞争力的性能。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>事实证明，注意力机制是增强深度CNN的一个潜在手段。SE-Net[14]首次提出了一种学习通道注意力的有效机制，并取得了可喜的成绩。随后，注意力模块的发展大致可以分为两个方向：（1）增强特征聚合；（2）结合通道和空间注意力。具体来说，CBAM[33]同时采用了平均和最大集合来聚合特征。GSoP[9]引入了二阶池化以实现更有效的特征聚合。GE[13]使用深度卷积[5]来聚合特征，探索空间扩展。CBAM[33]和scSE[27]使用内核大小为k×k的二维卷积计算空间注意力，然后将其与通道注意力相结合。GCNet[2]与非本地（NL）神经网络[32]有着相似的理念，开发了一个简化的NL网络，并与SE块集成，形成了一个轻量级的模块来模拟长距离的依赖性。双重注意网络（A2-Nets）[4]为NL块引入了一个新颖的关系函数，用于图像或视频识别。双重注意力网络（DAN）[7]同时考虑基于NL的通道和空间注意力，用于语义分割。然而，上述大多数基于NL的注意力模块由于其较高的模型复杂性，只能用于单个或几个卷积块。显然，上述所有的方法都侧重于开发复杂的注意力模块以获得更好的性能。与它们不同的是，我们的ECA旨在以低模型复杂度学习有效的通道注意。</p><p>我们的工作也与高效卷积有关，它是为轻型CNN设计的。两个广泛使用的高效卷积是分组卷积[36, 34, 16]和深度可分离卷积[5, 28, 37, 24]。如表2所示，尽管这些高效的卷积涉及的参数较少，但它们在注意力模块中显示出的效果不大。我们的ECA模块旨在捕捉局部跨通道的交互作用，这与通道局部卷积[35]和通道明智卷积[8]有一些相似之处；与它们不同的是，我们的方法研究了一个具有自适应核大小的一维卷积来代替通道注意模块中的FC层。与分组和深度可分离卷积相比，我们的方法以较低的模型复杂度实现了更好的性能。</p><h2 id="3-proposed-method"><a class="markdownIt-Anchor" href="#3-proposed-method"></a> 3. Proposed Method</h2><p>在这一节中，我们首先重温了SENet[14]中的通道关注模块（即SE块）。然后，我们通过分析降维和跨通道交互的影响，对SE模块进行经验诊断。这促使我们提出我们的ECA模块。此外，我们开发了一种自适应确定ECA参数的方法，并最终展示了如何将其用于深度CNN。</p><h3 id="31-revisiting-channel-attention-in-se-block"><a class="markdownIt-Anchor" href="#31-revisiting-channel-attention-in-se-block"></a> 3.1. Revisiting Channel Attention in SE Block</h3><p>让一个卷积块的输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>W</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X∈R^{W×H×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，其中W、H和C是宽度、高度和通道尺寸（即滤波器的数量）。因此，SE块中通道的权重可以计算为</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515201147442.png" alt="image-20230515201147442" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>W</mi><mi>H</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>W</mi><mo separator="true">,</mo><mi>H</mi></mrow></msubsup><msub><mi>X</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">g(X)=\frac{1}{WH}\sum^{W,H}_{i=1,j=1}X_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是通道元素的全局平均池（GAP），σ是一个Sigmoid函数。设</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515201135318.png" alt="image-20230515201135318" /></p><p>其中ReLU表示整流线性单元[25]。为了避免模型的高复杂性，W1和W2的大小分别被设定为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mo stretchy="false">(</mo><mfrac><mi>C</mi><mi>r</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C×( \frac{C}{r} )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mfrac><mi>C</mi><mi>r</mi></mfrac><mo stretchy="false">)</mo><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">( \frac{C}{r} )×C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>。我们可以看到，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">{</mo><msub><mi>W</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>W</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">f\{W_1,W_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>涉及通道注意块的所有参数。虽然公式（2）中的降维可以降低模型的复杂性，但它破坏了通道和其权重之间的直接对应关系。例如，一个单一的FC层使用所有通道的线性组合来预测每个通道的权重。但公式（2）首先将通道特征投射到一个低维空间，然后再将其映射回来，使得通道和其权重之间的对应关系是间接的。</p><h3 id="32-efficient-channel-attention-eca-module"><a class="markdownIt-Anchor" href="#32-efficient-channel-attention-eca-module"></a> 3.2. Efficient Channel Attention (ECA) Module</h3><p>在重新审视了SE块之后，我们进行了经验比较，以分析通道降维和跨通道互动对通道注意力学习的影响。根据这些分析，我们提出了我们的高效通道注意（ECA）模块。</p><h4 id="321-avoiding-dimensionality-reduction"><a class="markdownIt-Anchor" href="#321-avoiding-dimensionality-reduction"></a> 3.2.1 Avoiding Dimensionality Reduction</h4><p>如上所述，公式（2）中的降维使得通道和其权重之间的对应关系是间接的。为了验证其效果，我们将原始的SE块与它的三个变体（即SE-Var1、SE-Var2和SEVar3）进行比较，它们都不进行降维。如表2所示，没有参数的SE-Var1仍然优于原始网络，表明通道注意力有能力提高深度CNN的性能。同时，SE-Var2独立学习每个通道的权重，在涉及较少参数的情况下，略优于SE块。这可能表明，通道和它的权重需要直接对应，同时避免降维比考虑非线性通道依赖性更重要。此外，SEVar3采用一个单一的FC层比两个FC层在SE块中的降维表现更好。所有上述结果清楚地表明，避免降维有助于学习有效的通道注意力。因此，我们开发了没有通道降维的ECA模块。</p><p><img src="images/image-20230624163758165.png" alt="image-20230624163758165" /></p><blockquote><p>表2.使用ResNet-50作为骨干模型在ImageNet上对各种通道注意模块的比较。#.Param.表示通道注意模块的参数数；⊙表示元素的乘积；GC和C1D分别表示分组卷积和一维卷积；k是C1D的核大小。</p></blockquote><h4 id="322-local-cross-channel-interaction"><a class="markdownIt-Anchor" href="#322-local-cross-channel-interaction"></a> 3.2.2 Local Cross-Channel Interaction</h4><p>鉴于聚合的特征y∈RC没有降维，通道注意力可以通过以下方式学习</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202002481.png" alt="image-20230515201725149" /></p><p>其中W是一个C×C的参数矩阵。特别是，对于SE-Var2和SE-Var3，我们有</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515201737276.png" alt="image-20230515201737276" /></p><p>其中SE-Var2的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>v</mi><mi>a</mi><mi>r</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">W_{var2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个对角线矩阵，涉及C个参数；SE-Var3的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>v</mi><mi>a</mi><mi>r</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">W_{var2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个全矩阵，涉及C×C参数。如公式（4）所示，关键的区别是SE-Var3考虑了跨通道的互动，而SEVar2没有，因此SE-Var3取得了更好的性能。这一结果表明，跨通道互动有利于学习通道注意力。然而，SEVar3需要大量的参数，导致模型的复杂性很高，特别是对于大的通道数量。</p><p>SE-Var2和SE-Var3之间一个可能的折衷办法是将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>v</mi><mi>a</mi><mi>r</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">W_{var2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>扩展为一个块状对角线矩阵，即</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515201535213.png" alt="image-20230515202002481" /></p><p>其中公式（5）将通道分为G组，每组包括C/G通道，并在每组中独立学习通道注意力，以局部方式捕捉跨通道的互动。因此，它涉及C2/G参数。从卷积的角度来看，SE-Var2、SEVar3和公式（5）可以分别被视为深度可分离卷积、FC层和组卷积。这里，带有分组卷积的SE块（SE-GC）由σ(GCG(y)) = σ(WGy)表示。然而，如[24]所示，过多的分组卷积会增加内存访问成本，从而降低计算效率。此外，如表2所示，不同分组的SE-GC与SE-Var2相比没有带来任何收益，表明它不是一个有效的捕捉局部跨通道交互的方案。原因可能是SE-GC完全抛弃了不同组间的依赖关系。</p><p>在本文中，我们探索了另一种捕捉局部跨通道交互的方法，目的是保证效率和效果。具体来说，我们采用一个带状矩阵Wk来学习通道注意力，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">W_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>具有</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202234267.png" alt="image-20230515202234267" /></p><p>显然，公式（6）中的Wk涉及k×C的参数，通常比公式（5）的参数要少。此外，公式（6）避免了公式（5）中不同组之间的完全独立。如表2所示，公式（6）中的方法（即ECA-NS）优于公式（5）的SE-GC。对于公式（6），计算yi的权重时只考虑yi和它的k个邻居之间的相互作用，即</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202343253.png" alt="image-20230515202300247" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="normal">Ω</mi><mi>i</mi><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">Ω_{i}^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的k个相邻通道的集合。</p><p>一个更有效的方法是使所有通道共享相同的学习参数，即</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202300247.png" alt="image-20230515202343253" /></p><p>请注意，这种策略可以很容易地通过内核大小为k的快速一维卷积来实现，即</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202354277.png" alt="image-20230515202354277" /></p><p>其中C1D表示一维卷积。这里，公式（9）中的方法被称为高效通道关注（ECA）模块，它只涉及k个参数。如表2所示，我们的ECA模块在k=3的情况下取得了与SE-var3相似的结果，同时模型的复杂度要低得多，通过适当地捕捉局部跨通道的互动，保证了效率和效果。</p><h4 id="323-coverage-of-local-cross-channel-interaction"><a class="markdownIt-Anchor" href="#323-coverage-of-local-cross-channel-interaction"></a> 3.2.3 Coverage of Local Cross-Channel Interaction</h4><p>由于我们的ECA模块（9）旨在适当地捕捉局部的跨通道交互，所以需要确定交互的覆盖范围（即1D卷积的核大小k）。对于各种CNN结构中具有不同通道数的卷积块，可以手动调整优化的交互覆盖率。然而，通过交叉验证进行手动调整将花费大量的计算资源。分组卷积已经成功地采用来改进CNN架构[36, 34, 16]，其中高维（低维）通道涉及长距离（短距离）的卷积，给定固定的组数。分享类似的理念，互动的覆盖率（即一维卷积的核大小）与通道维度C成正比是合理的。 换句话说，在k和C之间可能存在一个映射φ：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202558836.png" alt="image-20230515202542215" /></p><p>最简单的映射是一个线性函数，即φ(k) = γ ∗ k - b。然而，线性函数所描述的关系太有限了。另一方面，众所周知，信道维度C（即滤波器的数量）通常被设定为2的幂。因此，我们引入一个可能的解决方案，将线性函数φ（k）=γ ∗ k - b扩展为非线性函数，即：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202611641.png" alt="image-20230515202558836" /></p><p>然后，给定信道维度C，内核大小k可以通过以下方式自适应确定</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202542215.png" alt="image-20230515202611641" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>t</mi><msub><mi mathvariant="normal">∣</mi><mrow><mi>o</mi><mi>d</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">|t|_{odd}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示最接近的t的奇数。在本文中，我们在所有的实验中都将γ和b分别设置为2和1。显然，通过映射ψ，高维信道有更长的范围互动，而低维信道通过使用非线性映射进行更短的范围互动。</p><h3 id="33-eca-module-for-deep-cnns"><a class="markdownIt-Anchor" href="#33-eca-module-for-deep-cnns"></a> 3.3. ECA Module for Deep CNNs</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515203243699.png" alt="image-20230515202730373" /></p><blockquote><p>图2.我们的高效信道关注（ECA）模块的示意图。考虑到通过全局平均池（GAP）获得的聚合特征，ECA通过执行大小为k的快速一维卷积来生成通道权重，其中k是通过通道维度C的映射自适应确定的。</p></blockquote><p>图2说明了我们ECA模块的概况。在使用GAP聚合卷积特征而不降维后，ECA模块首先自适应地确定核大小k，然后执行一维卷积，接着使用Sigmoid函数来学习通道注意力。为了将我们的ECA应用于深度CNN，我们按照[14]中的相同配置，用我们的ECA模块取代SE块。由此产生的网络被命名为ECA-Net。图3给出了我们ECA的PyTorch代码。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515202833461.png" alt="image-20230515202833461" /></p><blockquote><p>图3.我们ECA模块的PyTorch代码。</p></blockquote><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>在这一节中，我们分别使用ImageNet[6]和MS COCO[23]对所提出的方法在大规模图像分类、物体检测和实例分割上进行评估。具体来说，我们首先评估了内核大小对我们ECA模块的影响，并与ImageNet上最先进的对应模块进行比较。然后，我们使用Faster R-CNN[26]、Mask R-CNN[10]和RetinaNet[22]验证我们的ECA-Net在MS COCO上的有效性。</p><h3 id="41-implementation-details"><a class="markdownIt-Anchor" href="#41-implementation-details"></a> 4.1. Implementation Details</h3><p>为了评估我们在ImageNet分类上的ECA-Net，我们采用了四个广泛使用的CNN作为骨干模型，包括ResNet-50[11]、ResNet-101[11]、ResNet-512[11]和MobileNetV2[28]。为了用我们的ECA训练ResNets，我们采用了与[11, 14]中完全相同的数据增强和超参数设置。具体来说，输入图像被随机裁剪为224×224，并随机进行水平翻转。网络的参数通过随机梯度下降法（SGD）进行优化，权重衰减为1e-4，动量为0.9，迷你批次大小为256。所有的模型都是在100个历时内通过设置初始学习率为0.1来训练的，每30个历时减少10倍。对于用我们的ECA训练MobileNetV2，我们遵循[28]中的设置，在400个历时内用SGD训练网络，权重衰减为4e-5，动量为0.9，小批量大小为96。初始学习率被设定为0.045，并通过0.98的线性衰减率来降低。为了在验证集上进行测试，输入图像的短边首先被调整为256，并使用224×224的中心裁剪进行评估。所有的模型都由PyTorch工具箱1实现。</p><p>我们使用Faster R-CNN[26]、Mask R-CNN[10]和RetinaNet[22]在MS COCO上进一步评估我们的方法，其中ResNet-50和ResNet-101以及FPN[21]被作为骨干模型。我们通过使用MMDetection工具包[3]实现所有检测器，并采用默认设置。具体来说，输入图像的短边被调整为800，然后使用SGD优化所有模型，权重衰减为1e-4，动量为0.9，小批量大小为8（4个GPU，每个GPU有2幅图像）。学习率初始化为0.01，并在8和11个历时后分别减少10倍。我们在COCO的train2017上的12个历时内训练所有的检测器，并在val2017上报告结果以进行比较。所有程序都在配备有四个RTX 2080Ti GPU和一个Intel® Xeon Silver 4112 CPU@2.60GHz 的PC上运行。</p><h3 id="42-image-classification-on-imagenet-1k"><a class="markdownIt-Anchor" href="#42-image-classification-on-imagenet-1k"></a> 4.2. Image Classification on ImageNet-1K</h3><p>在这里，我们首先评估了核大小对我们ECA模块的影响，并验证了我们自适应确定核大小的方法的有效性，然后我们用ResNet-50、ResNet-101、ResNet-152和MobileNetV2与最先进的同行和CNN模型进行比较。</p><h4 id="421-effect-of-kernel-size-k-on-eca-module"><a class="markdownIt-Anchor" href="#421-effect-of-kernel-size-k-on-eca-module"></a> 4.2.1 Effect of Kernel Size (k) on ECA Module</h4><p>As shown in Eq. (9), our ECA module involves a parameter k, i.e., kernel 1D卷积的大小。在这一部分，我们评估了它对ECA模块的影响，并验证了我们自适应选择核大小的方法的有效性。为此，我们采用ResNet-50和ResNet-101作为骨干模型，通过设置k为3到9，用我们的ECA模块训练它们。结果如图4所示，从中我们可以看出以下几点。</p><p>首先，当k在所有卷积块中固定时，ECA模块对ResNet-50和ResNet-101分别在k=9和k=5时获得了最佳结果。由于ResNet101有更多的中间层，主导了ResNet-101的性能，它可能更倾向于小核大小。此外，这些结果表明，不同的深度CNN有不同的最佳k，而k对ECA-Net的性能有明显影响。此外，ResNet-101的精度波动（0.5%）比ResNet50的精度波动（0.15%）大，我们猜测原因是深层网络比浅层网络对固定核大小更敏感。此外，由公式（12）自适应确定的核大小通常优于固定核大小，同时它可以避免通过交叉验证手动调整参数k。以上结果证明了我们的自适应核大小选择在获得更好和稳定的结果方面的有效性。最后，不同k数的ECA模块一直优于SE块，验证了避免降维和局部跨通道交互对学习通道注意力的积极影响。</p><h4 id="422-comparisons-using-different-deep-cnns"><a class="markdownIt-Anchor" href="#422-comparisons-using-different-deep-cnns"></a> 4.2.2 Comparisons Using Different Deep CNNs</h4><p>ResNet-50 我们使用ResNet-50在ImageNet上比较了我们的ECA模块和几种最先进的注意力方法，包括SENet[14]、CBAM[33]、A2-Nets[4]、AA-Net[1]、GSoP-Net1[9]和GCNet[2]。评价指标包括效率（即网络参数、每秒浮点运算（FLOPs）和训练/推理速度）和有效性（即Top-1/Top5的准确性）。为了进行比较，我们复制了ResNet和SENet的结果[14]，并在其原始论文中报告了其他比较方法的结果。为了测试各种模型的训练/推理速度，我们采用了公开的被比较的CNN的模型，并在同一计算平台上运行它们。结果见表3，我们可以看到我们的ECA-Net与原始的ResNet-50有着几乎相同的模型复杂度（即网络参数、FLOPs和速度），而在Top-1的准确度上取得了2.28%的提高。与最先进的同行（即SENet、CBAM、A2-Nets、AA-Net、GSoP-Net1和GCNet）相比，ECA-Net获得了更好或有竞争力的结果，同时受益于较低的模型复杂性。</p><p>ResNet-101 以ResNet-101为骨干模型，我们将ECA-Net与SENet[14]、CBAM[33]和AA-Net[1]进行比较。从表3中我们可以看出，ECA-Net在模型复杂度几乎相同的情况下比原来的ResNet-101高出1.8%。在ResNet-50上也有同样的趋势，ECA-Net优于SENet和CBAM，而它在较低的模型复杂度下对AA-Net非常有竞争力。请注意，AA-Net是通过Inception数据增强和不同的学习率设置进行训练的。</p><p>ResNet-152 使用ResNet-152作为骨干模型，我们将ECA-Net与SENet[14]进行比较。从表3可以看出，ECA-Net在模型复杂度几乎相同的情况下，比原来的ResNet-152提高了约1.3%的准确率。与SENet相比，ECANet在模型复杂度较低的情况下实现了0.5%的Top-1收益。关于ResNet-50、ResNet101和ResNet-152的结果表明了我们的ECA模块在广泛使用的ResNet架构上的有效性。</p><p>MobileNetV2 除了ResNet架构，我们还验证了我们的ECA模块在轻量级CNN架构上的有效性。为此，我们采用MobileNetV2[28]作为骨干模型，并将我们的ECA模块与SE块进行比较。特别是，在MobileNetV2的每个 &quot;瓶颈 &quot;的残余连接之前，我们将SE块和ECA模块集成到卷积层，SE块的参数r被设置为8。所有的模型都使用完全相同的设置进行训练。表3中的结果显示，我们的ECA-Net在Top-1的准确率方面比原来的MobileNetV2和SENet分别提高了约0.9%和0.14%。此外，我们的ECA-Net比SENet具有更小的模型尺寸和更快的训练/推理速度。以上结果再次验证了我们ECA模块的效率和效果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515203526654.png" alt="image-20230515203445888" /></p><blockquote><p>表3.ImageNet上不同注意力方法在网络参数（#.Param.）、每秒浮点运算（FLOPs）、训练或推理速度（每秒一帧，FPS）以及Top-1/Top-5准确性（%）方面的比较。†:由于A2-Net和AA-Net的源代码和模型是公开的，我们没有比较它们的运行时间。♦:AA-Net是通过Inception数据增强和不同的学习率设置进行训练的。</p></blockquote><h4 id="423-comparisons-with-other-cnn-models"><a class="markdownIt-Anchor" href="#423-comparisons-with-other-cnn-models"></a> 4.2.3 Comparisons with Other CNN Models</h4><p>在这一部分的最后，我们将我们的ECA-Net50和ECA-Net101与其他最先进的CNN模型进行比较，包括ResNet-200[12]、Inception-v3[31]、ResNeXt[34]、DenseNet[15]。这些CNN模型具有更深更广的架构，其结果都是从原始论文中复制出来的。如表4所示，ECA-Net101优于ResNet-200，表明我们的ECA-Net可以用更少的计算成本提高深度CNN的性能。同时，我们的ECA-Net101对ResNeXt-101非常有竞争力，而后者采用了更多的卷积滤波器和昂贵的分组卷积。此外，ECA-Net50与DenseNet-264（k=32）、DenseNet-161（k=48）和Inception-v3相当，但它的模型复杂性较低。所有上述结果表明，我们的ECA-Net与最先进的CNN相比表现良好，同时受益于更低的模型复杂度。请注意，我们的ECA也有很大的潜力来进一步提高所比较的CNN模型的性能。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515203721673.png" alt="image-20230515203526654" /></p><blockquote><p>表4.与ImageNet上最先进的CNN的比较。</p></blockquote><h3 id="43-object-detection-on-ms-coco"><a class="markdownIt-Anchor" href="#43-object-detection-on-ms-coco"></a> 4.3. Object Detection on MS COCO</h3><p>在本小节中，我们使用Faster R-CNN[26]、Mask R-CNN[10]和RetinaNet[22]对我们的ECA-Net在物体检测任务上进行评估。我们主要将ECA-Net与ResNet和SENet进行比较。所有的CNN模型都在ImageNet上进行了预训练，然后通过微调转移到MS COCO。</p><h4 id="431-comparisons-using-faster-r-cnn"><a class="markdownIt-Anchor" href="#431-comparisons-using-faster-r-cnn"></a> 4.3.1 Comparisons Using Faster R-CNN</h4><p>使用Faster R-CNN作为基本检测器，我们采用50层和101层的ResNets以及FPN[21]作为骨干模型。如表5所示，整合SE块或我们的ECA模块可以以明显的幅度提高物体检测的性能。同时，我们的ECA在使用ResNet-50和ResNet-101的AP方面分别优于SE块0.3%和0.7%。</p><h4 id="432-comparisons-using-mask-r-cnn"><a class="markdownIt-Anchor" href="#432-comparisons-using-mask-r-cnn"></a> 4.3.2 Comparisons Using Mask R-CNN</h4><p>使用Faster R-CNN作为基本检测器，我们采用50层和101层的ResNets以及FPN[21]作为骨干模型。如表5所示，整合SE块或我们的ECA模块可以以明显的幅度提高物体检测的性能。同时，我们的ECA在使用ResNet-50和ResNet-101的AP方面分别优于SE块0.3%和0.7%。我们进一步利用Mask R-CNN来验证我们的ECA-Net在物体检测任务上的有效性。如表5所示，在50层和101层的设置下，我们的ECA模块在AP方面分别比原始ResNet高出1.8%和1.9%。同时，使用ResNet-50和ResNet-101作为骨干模型，ECA模块比SE块分别取得了0.3%和0.6%的收益。使用ResNet-50，ECA优于一个NL[32]，使用较低的模型复杂度可与GC块[2]媲美。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515203445888.png" alt="image-20230515203643092" /></p><blockquote><p>表5.不同方法对COCO val2017的物体检测结果。</p></blockquote><h4 id="433-comparisons-using-retinanet"><a class="markdownIt-Anchor" href="#433-comparisons-using-retinanet"></a> 4.3.3 Comparisons Using RetinaNet</h4><p>此外，我们还验证了我们的ECA-Net在使用单级检测器（即RetinaNet）进行物体检测的有效性。如表5所示，在50层和101层的网络中，我们的ECA-Net在AP方面分别比原始的ResNet高出1.8%和1.4%。同时，ECANet对ResNet-50和ResNet-101的SE-Net的改进分别超过0.2%和0.4%。综上所述，表5中的结果表明，我们的ECA-Net可以很好地适用于物体检测任务。具体来说，ECA模块比原来的ResNet有明显的改进，同时在使用较低的模型复杂度的情况下优于SE块。特别是，我们的ECA模块对于通常更难检测的小物体取得了更多的收益。</p><h3 id="44-instance-segmentation-on-ms-coco"><a class="markdownIt-Anchor" href="#44-instance-segmentation-on-ms-coco"></a> 4.4. Instance Segmentation on MS COCO</h3><p>此外，我们还验证了我们的ECA-Net在使用单级检测器（即RetinaNet）进行物体检测的有效性。如表5所示，在50层和101层的网络中，我们的ECA-Net在AP方面分别比原始的ResNet高出1.8%和1.4%。同时，ECANet对ResNet-50和ResNet-101的SE-Net的改进分别超过0.2%和0.4%。综上所述，表5中的结果表明，我们的ECA-Net可以很好地适用于物体检测任务。具体来说，ECA模块比原来的ResNet有明显的改进，同时在使用较低的模型复杂度时胜过了SE块。特别是，我们的ECA模块对于通常更难检测的小物体取得了更多的收益。然后，我们给出了在MS COCO上使用Mask R-CNN的ECA模块的实例分割结果。如表6所示，ECA模块比原始的ResNet取得了明显的收益，同时在模型复杂度较低的情况下比SE块表现更好。对于作为骨干网的ResNet-50，具有较低模型复杂度的ECA优于NL[32]，并与GC块[2]相当。这些结果验证了我们的ECA模块对各种任务具有良好的泛化能力。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230515203643092.png" alt="image-20230515203721673" /></p><blockquote><p>表6.在COCO val2017上使用Mask R-CNN的不同方法的实例分割结果。</p></blockquote><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h2><p>在本文中，我们专注于为低模型复杂度的深度CNN学习有效的通道注意力。为此，我们提出了一个高效的通道关注（ECA）模块，它通过快速的一维卷积产生通道关注，其内核大小可以通过通道维度的非线性映射自适应地确定。实验结果表明，我们的ECA是一个极其轻量级的即插即用模块，可以提高各种深度CNN架构的性能，包括广泛使用的ResNets和轻量级MobileNetV2。此外，我们的ECA-Net在物体检测和实例分割任务中表现出良好的泛化能力。在未来，我们将把我们的ECA模块应用于更多的CNN架构（如ResNeXt和Inception[31]），并进一步研究ECA与空间注意力模块的结合。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hierarchical Dense Correlation Distillation for Few-Shot Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/HDMNet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/HDMNet/</url>
      
        <content type="html"><![CDATA[<h1 id="hierarchical-dense-correlation-distillation-for-few-shot-segmentation"><a class="markdownIt-Anchor" href="#hierarchical-dense-correlation-distillation-for-few-shot-segmentation"></a> Hierarchical Dense Correlation Distillation for Few-Shot Segmentation</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>小样本语义分割（FSS）旨在通过小样本形成与类无关的模型，对未见类别进行分割。以往局限于语义特征和原型表示的方法存在分割粒度过粗和训练集过拟合的问题。在这项工作中，我们设计了基于transformer架构的分层去耦匹配网络（HDMNet），以挖掘像素级支持相关性。自关注模块用于协助建立分层密集特征，以此完成查询和支持特征之间的级联匹配。此外，我们还提出了一个匹配模块，以减少训练集的过拟合，并引入相关性提炼，利用粗分辨率的语义对应关系来促进细粒度分割。我们的方法在实验中表现出色。我们在 COCO-20i 数据集的一次拍摄设置和五次拍摄分割中分别获得了 50.0% 和 56.0% 的 mIoU。</p><h2 id="1introduction"><a class="markdownIt-Anchor" href="#1introduction"></a> 1.Introduction</h2><p><img src="images/image-20240119004856944.png" alt="image-20240119004856944" /></p><blockquote><p>图 1. PASCAL-5i [33] 和 COCO-20i [30] 上相关值的激活图。基线容易给训练过程中充分见证的类别（如 &quot;人 &quot;类）提供高激活值，即使有其他支持注释也是如此。于是，我们将其转换为分层解耦匹配结构，并采用相关图提炼法挖掘内类相关性。</p></blockquote><p>近年来，得益于深度学习的快速发展[2, 4, 14, 19, 36]，语义分割任务[26, 42, 44, 56, 60]取得了巨大进步。然而，大多数现有的深度网络无法扩展到以前未见过的类别，需要依赖注释数据集才能达到令人满意的性能。数据收集和注释需要耗费大量时间和资源，尤其是对于密集预测任务而言 [3, 16, 18]。</p><p>语义分割[6, 45]中引入了少拍学习[38, 46, 50]，以建立快速适应新类别的类无关模型。通常情况下，少数拍摄分割（FSS）按照情节范式[48]将输入分为查询集和支持集[6, 53, 55, 59]。它以支持注释中的语义线索为条件，通过金属学习 [38, 46] 或特征匹配 [29, 48, 57] 对查询目标进行分割。以往的小样本学习方法仍可能存在分割粒度过粗和训练集过拟合[45]的问题。如图 1 所示，&quot;人 &quot;是在训练过程中被充分见证的基础类别。但模型仍容易对 &quot;人 &quot;产生高激活，而不是对与支持样本更相关的新类别产生高激活，从而产生较差的结果。这个问题源于框架设计，如图 2 所示。具体来说，基于原型的方法[45, 49]和自适应分类器方法[1, 27]旨在区分具有全局类别特征的不同类别。在密集预测任务中，计算查询对象和支持对象之间不同成分的对应关系具有挑战性。相比之下，基于匹配的方法 [57] 可挖掘像素级的相关性，但可能会严重依赖于特定类别的特征，从而导致过度拟合和泛化能力弱。为了解决这些问题，我们提出了分层去耦匹配网络（HDMNet）和相关图提炼法，以更好地挖掘像素级支持对应关系。HDMNet 扩展了变压器架构 [7, 47, 51] 来构建特征金字塔并执行密集匹配。之前基于transformer的方法 [39, 57] 采用自注意层解析特征，然后将查询和支持特征输入交叉注意层进行模式匹配，如图 2© 所示。这一过程将自关注层和交叉关注层多次堆叠，混合了分离的嵌入特征，意外地造成了不必要的信息干扰。在本文中，我们在分层范例中解耦了特征解析和匹配过程，并设计了基于相关性和提炼的新匹配模块。这种相关机制无需直接依赖特定语义特征即可计算像素级对应关系，从而缓解了训练集过拟合问题。此外，我们还引入了相关图蒸馏法[15, 58]，鼓励浅层逼近深层的语义相关性，使前者更了解语境，从而实现高质量预测。我们的贡献如下。</p><ol><li>我们将transformer扩展到分层解析和特征匹配，以进行小样本语义分割，并通过新的匹配模块减少过拟合。</li><li>我们提出了在多层次和多尺度结构下利用软对应关系进行相关图提炼的方法。</li><li>我们在不降低效率的情况下，在 COCO-20i 和 PASCAL-5i 标准基准上取得了最新成果。</li></ol><h2 id="2related-work"><a class="markdownIt-Anchor" href="#2related-work"></a> 2.Related Work</h2><p><img src="images/image-20240119004936663.png" alt="image-20240119004936663" /></p><blockquote><p>图 2. 不同的少拍分割框架示意图。(a) 基于原型的方法。(b) 自适应分类器方法。© 采用变压器架构的特征匹配。(d) 我们的分层去耦匹配网络（HDMNet）与相关图提炼法。</p></blockquote><p><strong>小样本语义分割</strong> 小样本语义分割（FSS）[6, 10, 11, 45]只需小样本就能预测新类别的密集掩码。以往采用度量学习 [6, 40, 45, 49] 的方法可分为基于原型的方法和基于匹配的方法。受原型网络（PrototypicalNet）[38] 用于小样本学习的启发，流行的 FSS 模型[6, 9, 28, 43, 49] 利用原型进行特定类别表示。最近的研究[22, 54, 57]指出，单一原型无法覆盖物体的所有区域，尤其是在像素密集分割任务中。为了解决这个问题，[22，54] 的方法使用 EM 和聚类算法为物体的不同部分生成多个原型。与基于原型的方法相比，基于匹配的方法 [27, 29, 48, 57] 基于直觉来挖掘查询图像与支持注释之间的密集对应关系。它们利用像素级特征并补充更详细的支持上下文。</p><p><strong>Transformer</strong> transformer最早出现在自然语言处理（NLP）领域[5, 47]。在计算机视觉领域，ViT [7] 将图像视为补丁序列，并证明纯transformer架构可以实现最先进的图像分类。最近的研究工作探索了如何将小样本语义分割与transformer架构相结合 [23,39]。在 [27] 中，分类器权重transformer调整了分类器的权重，以解决类内变异问题。CyCTR [57] 是一种循环一致性transformer，它分别从查询集和支持集生成查询序列和关键序列。transformer架构有助于 FSS 超越语义级原型的限制，并充分利用像素对齐。以往基于transformer的方法仍然难以处理噪声干扰和过拟合问题。本文提出了一种新的transformer结构，将下采样和匹配过程解耦，并设计了基于相关机制和蒸馏的匹配模块。</p><p>**知识蒸馏。**知识蒸馏（KD）[15] 被广泛用于模型压缩。大型模型通常具有更高的知识容量。相比之下，小模型参数更少、效率更高、成本更低。KD 试图将所学知识从大型模型（又称教师）转移到另一个轻型模型（又称学生），但性能损失可容忍。[58]的方法采用自蒸馏框架，在自身内部提炼知识，以提高模型的准确性。自蒸馏法将模型分为多个部分，并将知识从较深的部分转移到较浅的部分。知识蒸馏还可用于提取语义信息和挖掘内在关联。STEGO [12] 表明，即使是无监督的深度网络特征也具有与真实标签一致的相关模式。STEGO 框架应用特征相关图蒸馏技术挖掘像素级的内在语义相关性。APD [41] 利用蒸馏技术解决语义分割问题。受无监督语义分割法[12]的启发，我们设计了用于类无关特征匹配的相关机制，并提出了多层次多尺度相关图蒸馏法，将查询和支持集之间的关系从深层部分转移到浅层部分。</p><h2 id="3task-definition-and-our-method"><a class="markdownIt-Anchor" href="#3task-definition-and-our-method"></a> 3.Task Definition and Our Method</h2><p>小样本分割是指只用几张有注释的支持图像来训练新物体的分割。根据定义，模型在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 上进行训练，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 上进行评估。假设  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的类别集分别为  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。训练集和测试集之间没有交集，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∩</mo><msub><mi>C</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>=</mo><mi mathvariant="normal">∅</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">C_{train}\cap C_{test}=\emptyset.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span><span class="mord">.</span></span></span></span>。按照以前的工作[34, 45, 49, 55]，对训练集  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和测试集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都应用了集。</p><p>每集由具有相同类别 c 的查询集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">I</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">M</mi><mi>q</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Q = \{(\boldsymbol{I}^q,\boldsymbol{M}^q)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">M</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>  和支持集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold-italic">I</mi><mi>i</mi><mi>s</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold-italic">M</mi><mi>i</mi><mi>s</mi></msubsup><mo stretchy="false">)</mo><msubsup><mo stretchy="false">}</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup></mrow><annotation encoding="application/x-tex">S=\{(\boldsymbol{I}_i^s,\boldsymbol{M}_i^s)\}_{i=1}^K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0999949999999998em;vertical-align:-0.258664em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">M</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span> 组成，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold-italic">I</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">I</mi><mi>s</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>3</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol{I}^q,\boldsymbol{I}^s\in\mathbb{R}^{H\times W\times3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.934842em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span> 表示 RGB 图像，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi>M</mi><mi>s</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">M^q,M^s\in\mathbb{R}^{H\times W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>表示它们的二进制掩码。在训练过程中，查询掩码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>q</mi></msup></mrow><annotation encoding="application/x-tex">M^q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span> 和支持掩码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">M^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span> 都会被使用，而在测试过程中，只有支持掩码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">M^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span>可以使用。由于模型参数是固定的，在测试过程中无需对新类别进行优化，因此训练模型时会利用支持集提供的语义线索来定位查询图像上的感兴趣区域。</p><h3 id="31-分层解耦匹配网络"><a class="markdownIt-Anchor" href="#31-分层解耦匹配网络"></a> 3.1. 分层解耦匹配网络</h3><p><img src="images/image-20240118225215566.png" alt="image-20240118225215566" /></p><blockquote><p>图 3. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mi>l</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msubsup><mo>=</mo><mfrac><msup><mi>H</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msup><msup><mn>2</mn><mrow><mi>l</mi><mo>+</mo><mn>2</mn></mrow></msup></mfrac><mo separator="true">,</mo><msubsup><mi>w</mi><mi>l</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msubsup><mo>=</mo><mfrac><msup><mi>W</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msup><msup><mn>2</mn><mrow><mi>l</mi><mo>+</mo><mn>2</mn></mrow></msup></mfrac></mrow><annotation encoding="application/x-tex">h_l^{q/s}=\frac{H^{q/s}}{2^{l+2}},w_l^{q/s}=\frac{W^{q/s}}{2^{l+2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.30130799999999996em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4281199999999998em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0707em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285714em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4281199999999998em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0707em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285714em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>表示第 l 阶段特征的高度和宽度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H^{q/s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W^{q/s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 是输入查询图像和支持图像的高度和宽度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">c_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示通道，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><msub><mi>c</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">c_{l+1} &gt; c_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747431em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></blockquote><p>给定查询集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">I</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">M</mi><mi>q</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Q = \{(\boldsymbol{I}^q,\boldsymbol{M}^q)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">M</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span> 和支持集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold-italic">I</mi><mi>i</mi><mi>s</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold-italic">M</mi><mi>i</mi><mi>s</mi></msubsup><mo stretchy="false">)</mo><msubsup><mo stretchy="false">}</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup></mrow><annotation encoding="application/x-tex">S=\{(\boldsymbol{I}_i^s,\boldsymbol{M}_i^s)\}_{i=1}^K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0999949999999998em;vertical-align:-0.258664em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">M</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>，HDMNet 采用参数固定的编码器来提取查询图像和支持图像的丰富特征，这与文献[45, 55]相同。不同之处在于设计了新的解码器，通过合理利用查询集和支持集之间的像素级特征匹配，对查询图像进行预测。</p><p>图 3 显示了pipeline概览。下面，我们首先在第 3.2 节中介绍 HDMNet 的基本结构，然后在第 3.3 节中介绍所提出的相关性计算策略。然后，在第 3.4 节中介绍阶段间相关图提炼。最后，在第 3.5 节中，我们实例化了扩展到 K-shot 设置的方法。</p><h3 id="32-overview-of-the-architecture"><a class="markdownIt-Anchor" href="#32-overview-of-the-architecture"></a> 3.2. Overview of the Architecture</h3><p><img src="images/image-20240118225506032.png" alt="image-20240118225506032" /></p><blockquote><p>图 4. 直接堆叠交叉注意层和自注意层的特征匹配。我们可以直观地发现，交叉注意层混合了查询和支持特征，破坏了解析和匹配一致性的纯粹性。</p></blockquote><p><strong>动机</strong> 如图 4 所示，在以往采用transformer架构的基于匹配的方法中，自注意层和交叉注意层多次交错，分别用于特征解析和模式匹配[39, 57]。我们注意到，交叉注意层完成了查询和支持特征之间的相互信息交换。查询样本背景中的物体也可能与支持样本中的目标相关。因此，可以用支持信息来丰富它们。有了这一发现，必要的支持信息可能会通过多个堆叠的交叉注意层和自我注意层积累到分心子中，从而使解码器更难区分它们。</p><p>为了确保序列特征的纯度和模式匹配的一致性，我们提出了一种新的分层匹配结构，将下采样和匹配过程解耦，只采用独立的自层来构建分层特征。</p><p>**解耦下采样和匹配。**首先，从骨干网中提取的查询和支持特征被独立地发送到只有自注意层的顺序transformer块，以充分利用支持和查询特征内部的自相关性。我们注意到，在区块之间插入下采样层是为了建立一个分层结构，以帮助挖掘尺度间的相关性。</p><p>然后，收集 L 个阶段的中间特征图，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold-italic">F</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{F}_l^q\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.142639em;vertical-align:-0.3013079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3986920000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold-italic">F</mi><mi>l</mi><mi>s</mi></msubsup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{F}_l^s\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>。为简单起见，假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold-italic">F</mi><mi>l</mi><mi>q</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\boldsymbol{F}_l^q\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.083608em;vertical-align:-0.3013079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3986920000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold-italic">F</mi><mi>l</mi><mi>s</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\boldsymbol{F}_l^s\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>的空间大小相同 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>c</mi><mi>l</mi></msub><mo>×</mo><msubsup><mi>h</mi><mi>l</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msubsup><mo>×</mo><msubsup><mi>w</mi><mi>l</mi><mrow><mi>q</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[c_l\times h_l^{q/s}\times w_l^{q/s}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.30130799999999996em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.30130799999999996em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。</p><p>​                                                   $$ h_l<sup>{q/s}=\frac{H</sup>{q/s}}{2^{l+2}},\quad w_l<sup>{q/s}=\frac{W</sup>{q/s}}{2^{l+2}}, $$</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 是阶段索引，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">c_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示特征通道编号。最后，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold-italic">F</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{F}_l^q\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.142639em;vertical-align:-0.3013079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3986920000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold-italic">F</mi><mi>l</mi><mi>s</mi></msubsup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{F}_l^s\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 被用于产生相关性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">C</mi><mi>l</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup><mo>×</mo><msubsup><mi>h</mi><mi>l</mi><mi>s</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>s</mi></msubsup></mrow></msup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{C}_{l}\in\mathbb{R}^{h_{l}^{q}w_{l}^{q}\times h_{l}^{s}w_{l}^{s}}\}_{l=1}^{L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199968em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.91686em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 和丰富查询特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">X</mi><mi>l</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>c</mi><mi>l</mi></msub><mo>×</mo><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><mo>×</mo><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></msup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{X}_l\in\mathbb{R}^{c_l\times h_l^q\times w_l^q}\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199968em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.91686em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>。详细公式将在第 3.3 节的公式 (4) 和 (6) 中详细阐述。</p><p><strong>粗粒度到细粒度解码器</strong>。HDMNet 包含一个简单的解码器，以粗粒度到细粒度的方式预测查询图像的最终掩码，其层次丰富的特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">X</mi><mi>l</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>c</mi><mi>l</mi></msub><mo>×</mo><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><mo>×</mo><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></msup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\boldsymbol{X}_l\in\mathbb{R}^{c_l\times h_l^q\times w_l^q}\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199968em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.91686em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 。具体来说，粗粒度特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>X</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">X_{l+1}^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.093331em;vertical-align:-0.34143899999999994em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34143899999999994em;"><span></span></span></span></span></span></span></span></span></span>被放大到与细粒度特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>X</mi><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">X_{l}^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>具有相同的空间大小。然后采用 MLP 层将它们与残差连接融合在一起，记为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold-italic">X</mi><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mtext>ReLU(MLP</mtext><mo stretchy="false">(</mo><msub><mi mathvariant="bold-italic">X</mi><mi>l</mi></msub><mo>+</mo><msub><mi>ζ</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold-italic">X</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><msub><mi>ζ</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold-italic">X</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\boldsymbol{X}_l^{\prime}=\text{ReLU(MLP}(\boldsymbol{X}_l+\zeta_l(\boldsymbol{X}_{l+1}^{\prime})))+\zeta_l(\boldsymbol{X}_{l+1}^{\prime}),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.074902em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.827902em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">ReLU(MLP</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1332330000000002em;vertical-align:-0.305331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.827902em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1332330000000002em;vertical-align:-0.305331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.827902em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 表示分层阶段，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ζ</mi><mi>l</mi></msub><mo>:</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup><mo>↦</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>h</mi><mi>l</mi></msub><mo>×</mo><msub><mi>w</mi><mi>l</mi></msub></mrow></msup></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\zeta_l:\mathbb{R}^{H\times W}\mapsto\begin{array}{c}\mathbb{R}^{h_l\times w_l}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.852331em;vertical-align:-0.011em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↦</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2091079999999998em;vertical-align:-0.354554em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8545539999999998em;"><span style="top:-3.005446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.354554em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span>表示拟合输入与输出大小的双线性插值调整函数。最后，我们对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>X</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">X_{1}^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span> 应用核大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 × 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的卷积层，然后应用双线性上采样层来预测查询掩码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">M^{out}\in\mathbb{R}^{H\times W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.832656em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>。</p><h3 id="33-matching-module"><a class="markdownIt-Anchor" href="#33-matching-module"></a> 3.3. Matching Module</h3><p><img src="images/image-20240119002729385.png" alt="image-20240119002729385" /></p><blockquote><p>图 5. 我们提出的基于关联机制和蒸馏法的匹配模块示意图。</p></blockquote><p><strong>Motivation.</strong> 以往基于匹配的方法 [27, 57] 直接采用交叉注意作为匹配模块，分别从查询集和支持集生成查询和关键特征。然而，我们发现这会导致过拟合和泛化能力弱。这个问题可能是由于模型更有可能依赖于特定类别的特征来优化训练目标。为了缓解这一问题，我们提出了一个匹配模块，如图 5 所示。</p><p><strong>Attention.</strong> 按照一般的形式[47, 51]，transformer模块的关键要素是点积注意层，表述为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Attn</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="bold-italic">Q</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">K</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">V</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">softmax</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><msup><mi><mrow><mi mathvariant="bold-italic">Q</mi><mi mathvariant="bold-italic">K</mi></mrow></mi><mi>T</mi></msup><msqrt><mi>d</mi></msqrt></mfrac><mo stretchy="false">)</mo><mi mathvariant="bold-italic">V</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\operatorname{Attn}(\boldsymbol{Q},\boldsymbol{K},\boldsymbol{V})=\operatorname{softmax}(\frac{\boldsymbol{QK}^T}{\sqrt{d}})\boldsymbol{V},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">A</span><span class="mord mathrm">t</span><span class="mord mathrm">t</span><span class="mord mathrm">n</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">Q</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">K</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.524341em;vertical-align:-0.93em;"></span><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.594341em;"><span style="top:-2.17778em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">d</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">Q</span><span class="mord boldsymbol" style="margin-right:0.06979em;">K</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi mathvariant="bold-italic">Q</mi><mo separator="true">;</mo><mi mathvariant="bold-italic">K</mi><mo separator="true">;</mo><mi mathvariant="bold-italic">V</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi mathvariant="bold-italic">W</mi><mi>q</mi></msup><msup><mi mathvariant="bold-italic">F</mi><mi>q</mi></msup><mo separator="true">;</mo><msup><mi mathvariant="bold-italic">W</mi><mi>k</mi></msup><msup><mi mathvariant="bold-italic">F</mi><mi>s</mi></msup><mo separator="true">;</mo><msup><mi mathvariant="bold-italic">W</mi><mi>v</mi></msup><msup><mi mathvariant="bold-italic">F</mi><mi>s</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\boldsymbol{Q};\boldsymbol{K};\boldsymbol{V}]=[\boldsymbol{W}^q\boldsymbol{F}^q;\boldsymbol{W}^k\boldsymbol{F}^s;\boldsymbol{W}^v\boldsymbol{F}^s]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord boldsymbol">Q</span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">K</span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1751179999999999em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>q</mi></msup></mrow><annotation encoding="application/x-tex">F^q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">F^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span> 分别表示查询和支持特征，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold-italic">W</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">W</mi><mi>k</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">W</mi><mi>v</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol{W}^q,\boldsymbol{W}^k,\boldsymbol{W}^v\in\mathbb{R}^{d\times d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1195579999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>为可学习参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 为隐藏维度。</p><p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>q</mi></msup><mo>=</mo><msup><mi>F</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">F^q = F^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span> 时，它将作为自注意层发挥作用，将支持或查询输入特征中的不同位置联系起来。</p><p><strong>Our correlation mechanism.</strong> 我们设计的匹配模块基于相关性机制，能检索出具有高余弦相似性的最相关区域，并融合如 [45] 中生成的高级先验掩码。给定查询特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">F_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和支持特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，我们首先对输入特征进行以下转换</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>q</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>φ</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">F</mi><mi>q</mi></msup><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>s</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>φ</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">F</mi><mi>s</mi></msup><mo>⊙</mo><msup><mi mathvariant="bold-italic">M</mi><mi>s</mi></msup><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\hat{\boldsymbol{F}}^q&amp;=\varphi(\boldsymbol{F}^q),\\\hat{\boldsymbol{F}}^s&amp;=\varphi(\boldsymbol{F}^s\odot\boldsymbol{M}^s),\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.327684em;vertical-align:-1.413842em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.913842em;"><span style="top:-3.913842em;"><span class="pstrut" style="height:3.0038419999999997em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.0038419999999997em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413842em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.913842em;"><span style="top:-3.913842em;"><span class="pstrut" style="height:3.0038419999999997em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.0038419999999997em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">M</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413842em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊙</span></span></span></span> 为 Hadamard 积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mtext> </mtext><mo>:</mo><mtext> </mtext><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mi>h</mi><mo>×</mo><mi>w</mi></mrow></msup><mtext> </mtext><mo>↦</mo><mtext> </mtext><msup><mi mathvariant="double-struck">R</mi><mrow><mi>h</mi><mi>w</mi><mo>×</mo><mi>c</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\varphi~:~\mathbb{R}^{c\times h\times w}~\mapsto~\mathbb{R}^{hw\times c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">φ</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↦</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span></span>指的是重塑函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">M^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span> 表示支持掩码。为了降低特征规范带来的类别特定信息过拟合的风险，我们测量内积角的余弦相似度，而不是进行点积，计算相关图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>h</mi><mi>q</mi></msup><msup><mi>w</mi><mi>q</mi></msup><mo>×</mo><msup><mi>h</mi><mi>s</mi></msup><msup><mi>w</mi><mi>s</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">C\in\mathbb{R}^{h^qw^q\times h^sw^s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">⟨</mo><msup><mi mathvariant="bold-italic">W</mi><mi>q</mi></msup><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>q</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">W</mi><mi>k</mi></msup><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>s</mi></msup><mo stretchy="false">⟩</mo></mrow><mrow><mrow><mo fence="true">∥</mo><msup><mi mathvariant="bold-italic">W</mi><mi>q</mi></msup><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>q</mi></msup><mo fence="true">∥</mo></mrow><mrow><mo fence="true">∥</mo><msup><mi mathvariant="bold-italic">W</mi><mi>k</mi></msup><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>s</mi></msup><mo fence="true">∥</mo></mrow><mi>t</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">C=\frac{\langle\boldsymbol{W}^q\hat{\boldsymbol{F}}^q,\boldsymbol{W}^k\hat{\boldsymbol{F}}^s\rangle}{\left\|\boldsymbol{W}^q\hat{\boldsymbol{F}}^q\right\|\left\|\boldsymbol{W}^k\hat{\boldsymbol{F}}^s\right\|t},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.394832em;vertical-align:-1.71399em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.680842em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.173975em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span></span></span><span style="top:-3.403975em;"><span class="pstrut" style="height:3.173975em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.850975em;"><span class="pstrut" style="height:3.173975em;"></span><span class="mord"><span class="mopen">⟨</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose">⟩</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.71399em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold-italic">W</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">W</mi><mi>k</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mi>c</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol{W}^q,\boldsymbol{W}^k\in\mathbb{R}^{c\times c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1195579999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span></span> 表示可学习参数， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∥</mi><mo>⋅</mo><mi mathvariant="normal">∥</mi></mrow><annotation encoding="application/x-tex">\|\cdot\|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∥</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∥</span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> norm, 而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 是一个控制分布范围的超参数，根据经验设定为 0.1 在所有实验中都是如此。受文献[32,37]的启发，我们提出了反向软最大层，该层沿查询轴对相关矩阵进行归一化处理，因为我们只检索查询集中感兴趣的区域，即</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi mathvariant="bold-italic">C</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="bold-italic">C</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="bold-italic">C</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\hat{\boldsymbol{C}}(i,j)=\frac{\exp(\boldsymbol{C}(i,j))}{\sum_{k=1}^{h_l^qw_l^q}\exp(\boldsymbol{C}(k,j))}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19955em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.760028em;vertical-align:-1.3330279999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.14172em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1417199999999998em;"><span style="top:-2.3986920000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2878600000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-3.37172em;"><span class="pstrut" style="height:3.14172em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.81872em;"><span class="pstrut" style="height:3.14172em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3330279999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">.</span></span></span></span></span></p><p>最后，我们引入先验掩码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>i</mi></mrow></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>h</mi><mi>q</mi></msup><mo>×</mo><msup><mi>w</mi><mi>q</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">M^{pri}\in\mathbb{R}^{h^q\times w^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.863764em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 计算方法与 [45] 相同，将其与信道维度上的对应分数串联，生成</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold-italic">X</mi><mo>=</mo><msup><mi mathvariant="bold-italic">W</mi><mi>o</mi></msup><mo stretchy="false">(</mo><mo stretchy="false">[</mo><mi>ψ</mi><mo stretchy="false">(</mo><mover accent="true"><mi mathvariant="bold-italic">C</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">W</mi><mi>v</mi></msup><msup><mover accent="true"><mi mathvariant="bold-italic">F</mi><mo>^</mo></mover><mi>s</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">M</mi><mrow><mi>p</mi><mi>r</mi><mi mathvariant="bold-italic">i</mi></mrow></msup><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\boldsymbol{X}=\boldsymbol{W}^o([\psi(\hat{\boldsymbol{C}}(\boldsymbol{W}^v\hat{\boldsymbol{F}}^s)),\boldsymbol{M}^{pr\boldsymbol{i}}]),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253842em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740402em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">F</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.003842em;"><span style="top:-3.40245em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">M</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9242919999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">i</span></span></span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}6\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span> 其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mi>v</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mi>c</mi></mrow></msup><mo separator="true">,</mo><msup><mi>W</mi><mi>o</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><mo stretchy="false">(</mo><mi>c</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">W^v\in\mathbb{R}^{c\times c},W^o\in\mathbb{R}^{c\times(c+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9657709999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">c</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 表示可学习参数, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>s</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>h</mi><mi>s</mi></msup><msup><mi>w</mi><mi>s</mi></msup><mo>×</mo><mi>c</mi></mrow></msup><mo separator="true">,</mo><mi>X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msup><mi>h</mi><mi>q</mi></msup><mo>×</mo><msup><mi>w</mi><mi>q</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">F^s\in\mathbb{R}^{h^sw^s\times c},X\in\mathbb{R}^{c\times h^q\times w^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07442em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 是扁平化的支持特征和匹配输出，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi><mo>:</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>h</mi><mi>q</mi></msup><msup><mi>w</mi><mi>q</mi></msup><mo>×</mo><mi>c</mi></mrow></msup><mo>↦</mo></mrow><annotation encoding="application/x-tex">\psi:\mathbb{R}^{h^qw^q\times c}\mapsto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.89098em;vertical-align:-0.011em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↦</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msup><mi>h</mi><mi>q</mi></msup><mo>×</mo><msup><mi>w</mi><mi>q</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbb{R}^{c\times h^q\times w^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 是重塑函数。</p><h3 id="34-correlation-map-distillation"><a class="markdownIt-Anchor" href="#34-correlation-map-distillation"></a> 3.4. Correlation Map Distillation</h3><p><strong>Motivation.</strong> 查询和支持特征以分层结构构建，用于生成多层次多尺度密集相关图。高层对应通常具有更多的信息语义线索。受限于粗略的分辨率，它只能提供粗略的定位，而低层次则包含更多局部细节特征。我们建议对相关图进行提炼，以鼓励早期阶段的相关图保留细粒度分割的质量，而不丢弃上下文提示。</p><p>此外，与地面实况标注中的单点标签相比，蒸馏过程中采用的软目标可以揭示所有类别之间的分布情况，提供有关类别间关系的额外语义线索。这有助于较浅的目标捕捉到更广泛的上下文信息。相反，地面实况注释可能无法提供此类信息，甚至会让模型过度拟合单点标签中包含的噪声。</p><p><strong>Distillation formulation.</strong> 公式（4）计算出相关图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>C</mi><mi>l</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup><mo>×</mo><msubsup><mi>h</mi><mi>l</mi><mi>s</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>s</mi></msubsup></mrow></msup><msubsup><mo stretchy="false">}</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup></mrow><annotation encoding="application/x-tex">\{C_l\in\mathbb{R}^{h_l^qw_l^q\times h_l^sw_l^s}\}_{l=1}^L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199968em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.91686em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 查询和支持功能。我们重组了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">C_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 平均值，并通过支持掩码过滤无关信息 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">M^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span> 作为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>C</mi><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><msubsup><mi>h</mi><mi>l</mi><mi>s</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>s</mi></msubsup></mrow></munderover><msub><mi>C</mi><mi>l</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">[</mo><mi>φ</mi><mo>∘</mo><msub><mi>ζ</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msup><mi>M</mi><mi>s</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><msubsup><mi>h</mi><mi>l</mi><mi>s</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>s</mi></msubsup></mrow></munderover><mo stretchy="false">[</mo><mi>φ</mi><mo>∘</mo><msub><mi>ζ</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msup><mi>M</mi><mi>s</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">C_l^{\prime}(i)=\frac{\sum_{j=1}^{h_l^sw_l^s}C_l(i,j)\cdot[\varphi\circ\zeta_l(M^s)(j)&gt;0]}{\sum_{j=1}^{h_l^sw_l^s}[\varphi\circ\zeta_l(M^s)(j)&gt;0]},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.241892em;vertical-align:-1.3769399999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8649520000000002em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.073968em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0739679999999998em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2878600000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523428571428572em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523428571428572em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-3.303968em;"><span class="pstrut" style="height:3.073968em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.87694em;"><span class="pstrut" style="height:3.073968em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.06198em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2450000000000006em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3769399999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}7\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span> 其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 表示阶段, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></msup></mrow><annotation encoding="application/x-tex">C_l^{\prime}\in\mathbb{R}^{h_l^qw_l^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.91686em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.91686em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>, 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ζ</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">\zeta_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是调整大小函数。给定扁平化的相关图后，我们应用软最大层对所有位置进行空间归一化，即</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mover accent="true"><mi>C</mi><mo>^</mo></mover><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msubsup><mi>C</mi><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msubsup><mi>C</mi><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>T</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{C}_l^{\prime}(i)=\frac{\exp(C_l^{\prime}(i)/T)}{\sum_{j=1}^{h_l^qw_l^q}\exp(C_l^{\prime}(j)/T)},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.873584em;vertical-align:-1.4446919999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.14172em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1417199999999998em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2878600000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.733692em;"><span style="top:-2.398692em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span><span style="top:-3.37172em;"><span class="pstrut" style="height:3.14172em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.81872em;"><span class="pstrut" style="height:3.14172em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4446919999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 表示阶段，T 表示蒸馏温度[15]，设为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。此外，有关温度 T 的结果见补充文件。</p><p>然后利用 KL（库尔贝克-莱布勒）发散损耗作为教师对学生的监督，其输出为软最大值。相邻阶段的相关图分别充当教师和学生，其公式为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi mathvariant="script">L</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi mathvariant="script">X</mi></mrow></munder><msub><mi>ϕ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>log</mtext><mo stretchy="false">(</mo><mfrac><mrow><msub><mi>ϕ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>ϕ</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></munderover><msub><mi>ζ</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mover accent="true"><mi mathvariant="bold-italic">C</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mrow><msub><mi>ζ</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mover accent="true"><mi mathvariant="bold-italic">C</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mover accent="true"><mi mathvariant="bold-italic">C</mi><mo>^</mo></mover><mi>l</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathcal{L}_{KL}&amp; =\sum_{x\in\mathcal{X}}\phi_t(x)\text{log}(\frac{\phi_t(x)}{\phi_s(x)})  \\&amp;=\sum_{i=1}^{h_l^qw_l^q}\zeta_l(\hat{\boldsymbol{C}}_{l+1})(i)\cdot\log(\frac{\zeta_l(\hat{\boldsymbol{C}}_{l+1})(i)}{\hat{\boldsymbol{C}}_l(i)}),\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.6843em;vertical-align:-3.09215em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.59215em;"><span style="top:-6.2230750000000015em;"><span class="pstrut" style="height:4.057925000000001em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.543444000000001em;"><span class="pstrut" style="height:4.057925000000001em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.09215em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.59215em;"><span style="top:-6.2230750000000015em;"><span class="pstrut" style="height:4.057925000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.14643em;">X</span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord text"><span class="mord">log</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-2.543444000000001em;"><span class="pstrut" style="height:4.057925000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0579250000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.454065em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.62655em;"><span style="top:-2.16045em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.08955em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.09215em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 表示阶段, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ϕ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\phi_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是教师模型，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ϕ</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\phi_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是学生模型，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ζ</mi><mi>l</mi></msub><mo>:</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msubsup><mi>h</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mi>q</mi></msubsup><msubsup><mi>w</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mrow></msup><mo>↦</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msubsup><mi>h</mi><mi>l</mi><mi>q</mi></msubsup><msubsup><mi>w</mi><mi>l</mi><mi>q</mi></msubsup></mrow></msup></mrow><annotation encoding="application/x-tex">\zeta_l:\mathbb{R}^{h_{l+1}^qw_{l+1}^q}\mapsto\mathbb{R}^{h_l^qw_l^q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9573349999999999em;vertical-align:-0.011em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9463349999999999em;"><span style="top:-3.0924750000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285714em;"><span style="top:-2.152771428571429em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40674999999999994em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285714em;"><span style="top:-2.152771428571429em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40674999999999994em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↦</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.91686em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.91686em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912285714285715em;"><span style="top:-2.1527714285714286em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472285714285714em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 表示调整大小。特别是对于最后一个没有后继者的相关图，我们直接利用地面实况作为其教师。</p><h3 id="35-extension-to-k-shot-setting"><a class="markdownIt-Anchor" href="#35-extension-to-k-shot-setting"></a> 3.5. Extension to K-shot Setting</h3><p>延伸至 K-shot (K&gt;1) 设置, K 支持带注释掩码的图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msubsup><mi>I</mi><mi>k</mi><mi>s</mi></msubsup><mo separator="true">,</mo><msubsup><mi>M</mi><mi>k</mi><mi>s</mi></msubsup><mo stretchy="false">)</mo><msubsup><mo stretchy="false">}</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup></mrow><annotation encoding="application/x-tex">S=\{(I_k^s,M_k^s)\}_{k=1}^K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 和查询集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>I</mi><mi>q</mi></msup><mo separator="true">,</mo><msup><mi>M</mi><mi>q</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(I^q,M^q)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span> 给出。基于匹配机制，HDMNet 可以快速、轻松地扩展到新的环境中。</p><p>如第 3.3 和 3.4 节所述，特征匹配和提炼过程与支持特征的具体大小无关，受益于相关机制和相关图的预处理。为了防止信息丢失并确保不同设置下的一致性，我们将支持特征连接起来 $F_l^s= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>O</mi><mi>N</mi><mi>C</mi><mi>A</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">CONCAT</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>( [ F_{l, 1}^s, F_{l, 2}^s, \cdots , F_{l, K}^s] ) $ 以及相应的掩码。解码器的处理过程与单发设置相同。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HRFormer</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/HRFormer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/HRFormer/</url>
      
        <content type="html"><![CDATA[<h1 id="hrformer"><a class="markdownIt-Anchor" href="#hrformer"></a> HRFormer</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>We present a High-Resolution Transformer (HRFormer) that learns high-resolution representations for dense prediction tasks, in contrast to the original Vision Transformer that produces low-resolution representations and has high memory and computational cost. We take advantage of the multi-resolution parallel design introduced in high-resolution convolutional networks (HRNet [46]), along with local-window self-attention that performs self-attention over small non-overlapping image windows [21], for improving the memory and computation efficiency. In addition, we introduce a convolution into the FFN to exchange information across the disconnected image windows. We demonstrate the effectiveness of the HighResolution Transformer on both human pose estimation and semantic segmentation tasks, e.g., HRFormer outperforms Swin transformer [27] by 1.3 AP on COCO pose estimation with 50% fewer parameters and 30% fewer FLOPs.</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>Vision Transformer (ViT) [13] shows promising performance on ImageNet classification tasks. Many follow-up works boost the classification accuracy through knowledge distillation [42], adopting deeper architecture [43], directly introducing convolution operations [16, 48], redesigning input image tokens [54], and etc. Besides, some studies attempt to extend the transformer to address broader vision tasks such as object detection [4], semantic segmentation [63, 37], pose estimation [51, 23], video understanding [61, 2, 30], and so on. This work focuses on the transformer for dense prediction tasks, including pose estimation and semantic segmentation.</p><p>Vision Transformer splits an image into a sequence of image patches of size 16 × 16, and extracts the feature representation of each image patch. Thus, the output representations of Vision Transformer lose the fine-grained spatial details that are essential for accurate dense predictions. The Vision Transformer only outputs a single-scale feature representation, and thus lacks the capability to handle multi-scale variation. To mitigate the loss of feature granularity and model the multi-scale variation, we present High-Resolution Transformer (HRFormer) that contains richer spatial information and constructs multi-resolution representations for dense predictions.</p><p>The High-Resolution Transformer is built by following the multi-resolution parallel design that is adopted in HRNet [46]. First, HRFormer adopts convolution in both the stem and the first stage as several concurrent studies [11, 50] also suggest that convolution performs better in the early stages. Second, HRFormer maintains a high-resolution stream through the entire process with parallel medium- and low-resolution streams helping boost high-resolution representations. With feature maps of different resolutions, thus HRFormer is capable to model the multi-scale variation. Third, HRFormer mixes the short-range and long-range attention via exchanging multi-resolution feature information with the multi-scale fusion module.</p><p>At each resolution, the local-window self-attention mechanism is adopted to reduce the memory and computation complexity. We partition the representation maps into a set of non-overlapping small image windows and perform self-attention in each image window separately. This reduces the memory and computation complexity from quadratic to linear with respect to spatial size. We further introduce a 3 × 3 depth-wise convolution into the feed-forward network (FFN) that follows the local-window self-attention, to exchange information between the image windows which are disconnected in the local-window self-attention process. This helps to expand the receptive field and is essential for dense prediction tasks. Figure 1 shows the details of an HRFormer block.</p><p>We conduct experiments on image classification, pose estimation, and semantic segmentation tasks, and achieve competitive performance on various benchmarks. For example, HRFormer-B gains +1.0% top-1 accuracy on ImageNet classification over DeiT-B [42] with 40% fewer parameters and 20% fewer FLOPs. HRFormer-B gains 0.9% AP over HRNet-W48 [41] on COCO val set with with 32% fewer parameters and 19% fewer FLOPs. HRFormer-B + OCR gains +1.2% and +2.0% mIoU over HRNet-W48 + OCR [55] with 25% fewer parameters and slightly more FLOPs on PASCAL-Context test and COCO-Stuff test, respectively.</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 Related work</h2><p><strong>Vision Transformers.</strong> With the success of Vision Transformer (ViT) [13] and the data-efficient image transformer (DeiT) [42], various techniques are proposed to improve the ImageNet classification accuracy of Vision Transformer [12, 43, 48, 16, 54, 17, 5, 27, 22, 40]. Among the very recent advancements, the community has verified several effective improvements such as multi-scale feature hierarchies and incorporating convolutions.</p><p>For example, the concurrent works MViT [14], PVT [47], and Swin [27] introduce the multi-scale feature hierarchies into transformer following the spatial configuration of a typical convolutional architecture such as ResNet-50. Different from them, our HRFormer incorporates the multi-scale feature hierarchies through exploiting the multi-resolution parallel design inspired by HRNet. CvT [48], CeiT [53], and LocalViT [25] propose to enhance the locality of transformer via inserting depth-wise convolutions into either the self-attention or the FFN. The purpose of the inserted convolution within our HRFormer is different, apart from enhancing the locality, it also ensures information exchange across the non-overlapping windows.</p><p>Several previous studies [36, 19] have proposed similar local self-attention schemes for image classification. They construct the overlapped local windows following the strided convolution, resulting in heavy computation cost. Similar to [21, 44, 27], we propose to apply the local-window self-attention scheme to divide the input feature map into non-overlapping windows. Then we apply the self-attention within each window independently so as to improve the efficiency significantly.</p><p>There are several concurrently-developed works [63, 37] use the Vision Transformer to address the dense predict tasks such as semantic segmentation. They have shown that increasing the spatial resolution of the representations output by the Vision Transformer is important for semantic segmentation. Our HRFormer provides a different path to address the low-resolution problem of the Vision Transformer via exploiting the multi-resolution parallel transformer scheme.</p><p><strong>High-Resolution CNN for Dense Prediction.</strong> The high-resolution convolutional schemes have achieved great success on both pose estimation and semantic segmentation tasks. In the development of high-resolution convolutional neural networks, the community has developed three main paths including: (i) applying dilated convolutions to remove some down-sample layers [6, 52], (ii) recovering high-resolution representations from low-resolution representations with decoders [38, 1, 31, 32], and (iii) maintaining high-resolution representations throughout the network [46, 15, 39, 64, 45, 59, 20]. Our HRFormer belongs to the third path, and retains the advantages of both vision transformer and HRNet [46].</p><h2 id="3-high-resolution-transformer"><a class="markdownIt-Anchor" href="#3-high-resolution-transformer"></a> 3 High-Resolution Transformer</h2><p><strong>Multi-resolution parallel transformer.</strong> We follow the HRNet [46] design and start from a highresolution convolution stem as the first stage, gradually adding high-to-low resolution streams one by one as new stages. The multi-resolution streams are connected in parallel. The main body consists of a sequence of stages. In each stage, the feature representation of each resolution stream is updated with multiple transformer blocks independently and the information across resolutions is exchanged repeatedly with the convolutional multi-scale fusion modules.</p><p>Figure 2 illustrates the overall HRFormer architecture. The design of convolutional multi-scale fusion modules exactly follows HRNet. We illustrate the details of the transformer block in the following discussion and more details are presented in Figure 1.</p><p><strong>Local-window self-attention.</strong> We divide the feature maps X ∈ RN×D into a set of non-overlapping small windows: X → {X1, X2, · · · , XP }, where each window is of size K × K. We perform multi-head self-attention (MHSA) within each window independently. The formulation of multi-head self-attention on the p-th window is given as:</p><p>where Wo ∈ RD×D, Wh q ∈ RD H ×D, Wh k ∈ RD H ×D, and Wh v ∈ RD H ×D for h ∈ {1, · · · , H}. H represents the number of heads, D represents the number of channels, N represents the input resolutions, and ̂ Xp represents the output representation of MHSA. We also apply the relative position embedding scheme introduced in the T5 model [35] to incorporate the relative position information into the local-window self-attention. With MHSA aggregates information within each window, we merge them to compute the output XMHSA:</p><p>The left part of Figure 1 illustrates how local-window self-attention updates the 2D input representations, where the multi-head self-attention operates within each window independently.</p><p><strong>FFN with depth-wise convolution.</strong> Local-window self-attention performs self-attention over the non-overlapping windows separately. There is no information exchange across the windows. To handle this issue, we add a 3 × 3 depth-wise convolution between the two point-wise MLPs that form the FFN in Vision transformer: MLP(DW-Conv.(MLP())). The right part of Figure 1 shows an example of how FFN with 3 × 3 depth-wise convolution updates the 2D input representations.</p><p><strong>Representation head designs.</strong> As shown in Figure 2, the output of HRFormer consists of four feature maps of different resolutions. We illustrate the details of the representation head designs for different tasks as following: (i) ImageNet classification, we send the four-resolution feature maps into a bottleneck and the output channels are changed to 128, 256, 512, and 1024 respectively. Then, we apply the strided convolutions to fuse them and output a feature map of the lowest resolution with 2048 channels. Last, we apply a global average pooling operation followed by the final classifier. (ii) pose estimation, we only apply the regression head over the highest resolution feature map. (iii) semantic segmentation, we apply the semantic segmentation head over the concatenated representations, which are computed by first upsampling all the low-resolution representations to the highest resolution and then concatenate them together.</p><p>Instantiation. We illustrate the overall architecture configuration of HRFormer in Table 1. We use (M1, M2, M3, M4) and (B1, B2, B3, B4) to represent the number of modules and the number of blocks of {state1, stage2, stage3, stage4}, respectively. We use (C1, C2, C3, C4), (H1, H2, H3, H4) and (R1, R2, R3, R4) to represent the number of channels, the number of heads and the MLP expansion ratios in transformer block associated with different resolutions. We keep the first stage unchanged following the original HRNet and use the bottleneck as the basic building block. We apply the transformer blocks in the other stages and each transformer block consists of a local-window self-attention followed by an FFN with 3 × 3 depth-wise convolution. We have not included the convolutional multi-scale fusion modules in Table 1 for simplicity. In our implementation, we set the size of the windows on four resolution streams as (7, 7, 7, 7) by default. Table 2 illustrates the configuration details of three different HRFormer instances with increasing complexities, where the MLP expansion ratios (R1, R2, R3, R4) are set as (4, 4, 4, 4) for all models and are not shown.</p><p><strong>Analysis.</strong> The benefits of 3 × 3 depth-wise convolution are twofold: one is enhancing the locality and the other one is enabling the interactions across windows. We illustrate how the FFN with depth-wise convolution is capable to expand the interactions beyond the non-overlapping local windows and model the relations between them in Figure 3. Therefore, based on the combination of the localwindow self-attention and the FFN with 3 × 3 depth-wise convolution, we can build the HRFormer block that improves the memory and computation efficiency significantly.</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 Experiments</h2><h3 id="41-human-pose-estimation"><a class="markdownIt-Anchor" href="#41-human-pose-estimation"></a> 4.1 Human Pose Estimation</h3><p><strong>Training setting.</strong> We study the performance of HRFormer on the COCO [26] human pose estimation benchmark, which contains more than 200K images and 250K person instances labeled with 17 keypoints. We train our model on COCO train 2017 dataset, including 57K images and 150K person instances. We evaluate our approach on the val 2017 set and test-dev 2017, containing 5K images and 20K images, respectively.</p><p>We follow most of the default training and evaluation settings of mmpose [8]2, and change the optimizer from Adam to AdamW. For the training batch size, we choose 256 for HRFormer-T and HRFormer-S and 128 for HRFormer-B due to limited GPU memory. Each HRFormer experiment on COCO pose estimation task takes 8× 32G-V100 GPUs.</p><p><strong>Results.</strong> Table 3 reports the comparisons on COCO val set. We compare HRFormer to the representative convolutional method such as HRNet [41] and several recent transformer methods, including PRTR [23], TransPose-H-A6 [51], and TokenPose-L/D24 [24]. HRFormer-B gains 0.9% with 32% fewer parameters and 19% fewer FLOPs when compared to HRNet-W48 with an input size of 384 × 288. Therefore, our HRFormer-B already achieves 77.2% w/o using any advanced techniques such as UDP [20] and DARK[59]. We believe that our HRFormer-B could achieve better results by exploiting either UDP or DARK scheme. We also report the comparisons on COCO test-dev set in Table 4. Our HRFormer-B outperforms HRNet-W48 by around 0.7% with fewer parameters and FLOPs. Figure 4 shows some example results of human pose estimation on COCO val set.</p><h3 id="42-semantic-segmentation"><a class="markdownIt-Anchor" href="#42-semantic-segmentation"></a> 4.2 Semantic Segmentation</h3><p><strong>Cityscapes.</strong> The Cityscapes dataset [9] is for urban scene understanding. There are a total of 30 classes and only 19 classes are used for parsing evaluation. The dataset contains 5K high-quality pixel-level finely annotated images and 20K coarsely annotated images. The finely annotated 5K images are divided into 2, 975 train images, 500 val images and 1, 525 test images. We set the initial learning rate as 0.0001, weight decay as 0.01, crop size as 1024 × 512, batch size as 8, and training iterations as 80K by default. Each HRFormer + OCR experiment on Cityscapes takes 8× 32G-V100 GPUs.</p><p>Table 5 reports the results on Cityscapes val. We choose to use HRFormer + OCR as our semantic segmentation architecture. We compare our method with several well-known Vision Transformer based methods [63, 37] and CNN based methods [6, 62, 55]. Specifically, SETR-PUP and SETRMLA use the ViT-Large [13] as the backbone. DPT-Hybrid uses the ViT-Hybrid [13] that consists of a ResNet-50 followed by 12 transformer layers. Both ViT-Large and ViT-Hybrid are initialized with the weights pre-trained on ImageNet-21K, where both of them achieve around 85.1% top1 accuracy on ImageNet. DeepLabv3 [6] and PSPNet [62] are based on dilated ResNet-101 with output stride 8. According to the fourth column of Table 5, HRFormer + OCR achieves competitive performance overall. For example, HRFormer-B + OCR achieves comparable performance with SETR-PUP while saving 70% parameters and 50% FLOPs.</p><p><strong>PASCAL-Context.</strong> The PASCAL-Context dataset [29] is a challenging scene parsing dataset that contains 59 semantic classes and 1 background class. The train set and test set consist of 4, 998 and 5, 105 images respectively. We set the initial learning rate as 0.0001, weight decay as 0.01, crop size as 520 × 520, batch size as 16, and training iterations as 60K by default. We report the comparisons on the fifth column of Table 5. Accordingly, HRFormer-B + OCR gains 1.1%, 1.5% over HRNet-W48 + OCR, SETR-MLA with fewer parameters and FLOPs, respectively. Notably, DPT-Hybrid achieves the best performance through extra pre-training the models on ADE20K in advance. Each HRFormer + OCR experiment on PASCAL-Context takes 8× 32G-V100 GPUs.</p><p><strong>COCO-Stuff.</strong> The COCO-Stuff dataset [3] is a challenging scene parsing dataset that contains 171 semantic classes. The train set and test set consist of 9K and 1K images respectively. We set the initial learning rate as 0.0001, weight decay as 0.01, crop size as 520 × 520, batch size as 16, and training iterations as 60K by default. We report the comparisons on the last column of Table 5 and HRFormer-B + OCR outperforms the previous best-performing HRNet-W48 + OCR by nearly 2%. Each HRFormer + OCR experiment on COCO-Stuff takes 8× 32G-V100 GPUs. Figure 5 shows some example results on Cityscapes, PASCAL-Context, and COCO-Stuff.</p><h3 id="43-imagenet-classification"><a class="markdownIt-Anchor" href="#43-imagenet-classification"></a> 4.3 ImageNet Classification</h3><p><strong>Training setting.</strong> We conduct the comparisons on ImageNet-1K, which consists of 1.28M train images and 50K val images with 1000 classes. We train all models with batch size 1024 for 300 epochs with AdamW [28] optimizer, cosine decay learning rate schedule, weight decay as 0.05, and a bag of augmentation policies, including rand augmentation [10], mixup [60], cutmix [58], and so on. HRFormer-T and HRFormer-S require 8 × 32G-V100 GPUs and HRFormer-B requires 32 × 32G-V100 GPUs.</p><p><strong>Results.</strong> We compare HRFormer to some representative CNN methods and vision transformer methods in Table 6, where all methods are trained on ImageNet-1K only. The results of ViT-Large with larger dataset such as ImageNet-21K not included for fairness. According to Table 6, HRFormer achieves competitive performance. For example, HRFormer-B gains 1.0% over DeiT-B while saving nearly 40% parameters and 20% FLOPs.</p><h3 id="44-ablation-experiments"><a class="markdownIt-Anchor" href="#44-ablation-experiments"></a> 4.4 Ablation Experiments</h3><p><strong>Influence of 3 × 3 depth-wise convolution within FFN</strong> We study the influence of the 3 × 3 depthwise convolution within FFN based on HRFormer-T in Table 7. We observe that applying 3 × 3 depth-wise convolution in FFN significantly improves the performance on multiple tasks, including ImageNet classification, PASCAL-Context segmentation, and COCO pose estimation. For example, HRFormer-T + FFN w/ 3× 3 depth-wise convolution outperforms HRFormer-T + FFN w/o 3× 3 depth-wise convolution by 0.65%, 2.9% and 4.04% on ImageNet, PASCAL-Context and COCO, respectively.</p><p><strong>Influence of shifted window scheme &amp; 3×3 depth-wise convolution within FFN based on SwinT.</strong> We compare our method with the shifted windows scheme of Swin transformer [27] in Table 8. For fair comparisons, we construct a Intra-Window transformer architecture following the same architecture configurations of Swin-T [27] except that we do not apply shifted windows scheme. We see that applying 3×3 depth-wise convolution within FFN improves both Swin-T and IntrawinT. Surprisingly, when equipped with 3× 3 depth-wise convolution within FFN, Intrawin-T even outperforms Swin-T.</p><p><strong>Shifted window scheme v.s. 3×3 depth-wise convolution within FFN based on HRFormerT.</strong> In Table 9, we compare the 3 × 3 depth-wise convolution within FFN scheme to the shifted window scheme based on HRFormer-T. According to the results, we see that applying 3×3 depthwise convolution within FFN significantly outperforms applying shifted window scheme across all different tasks.</p><p><strong>Comparison to ViT, DeiT &amp; Swin on pose estimation.</strong> We report the COCO pose estimation results based on the two well-known transformer models, including ViT-Large [13], DeiT-B⚗ [42] and Swin-B [27] in Table 10. Notably, both ViT-Large and Swin-B‡ are pre-trained on ImageNet21K in advance and then finetuned on ImageNet1K and achieve 85.1% and 86.4% top-1 accuracy respectively. DeiT-B⚗ is trained on ImageNet1K for 1000 epochs and achieves 85.2% top-1 accuracy. We apply deconvolution modules to upsample the output representations of the encoder following the SimpleBaseline [49] for three methods. The number of parameters and FLOPs are listed on the fourth and fifth columns of Table 10. According to the results in Table 10, we see that our HRFormer-B achieves better performance than all three methods with fewer parameters and FLOPs.</p><p><strong>Comparison to HRNet.</strong> We compare our HRFormer to the convolutional HRNet with almost the same architecture configurations via replacing all the transformer blocks with the conventional basic block consisting of two 3 × 3 convolutions. Table 11 shows the comparison results on ImageNet, PASCAL-Context, and COCO. We observe that HRFormer significantly outperforms HRNet under various configurations with much less model and computation complexity. For example, HRFormer-T outperforms HRNet-T by 2.0%, 1.5%, and 1.6% on three tasks while requiring only around 50% parameters and FLOPs, respectively. In summary, HRFormer achieves better performance via exploiting the benefits of transformers such as content-dependent dynamic interactions.</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 Conclusion</h2><p>In this work, we present the High-Resolution Transformer (HRFormer), a simple yet effective transformer architecture, for dense prediction tasks, including pose estimation and semantic segmentation. The key insight is to integrate the HRFormer block, which combines local-window self-attention and FFN with depth-wise convolution to improve the memory and computation efficiency, with the multi-resolution parallel design of the convolutional HRNet. Besides, HRFormer also benefits from adopting convolution in the early stages and mixing short-range and long-range attention with multi-scale fusion scheme. We empirically verify the effectiveness of our HRFormer on both pose estimation and semantic segmentation tasks.</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LMF</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/LMF/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/LMF/</url>
      
        <content type="html"><![CDATA[<h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. INTRODUCTION</h2><p>人工智能的最新发展，特别是基于神经网络的计算机视觉技术的发展，使基于医学图像的自动智能诊断工具有可能发挥出人类水平[1]。这种技术需要大量的数据。然而，这类系统大多用于诊断经常发生的疾病，这限制了其有效性。常见的医学影像数据集与常见疾病的样本相比，罕见疾病的样本数量会明显减少。这种类别的不平衡导致神经网络模型变得有偏见，在少数类别上的表现很差，阻碍了它们作为人类专家的辅助技术的使用[2]。本研究旨在解决这种类别不平衡的挑战。</p><p>解决类不平衡问题的文献大致可分为以数据为中心和算法策略。过度取样和不足取样是两种流行的以数据为中心的方法。过度取样试图为少数类别生成人工数据点，而欠取样旨在消除多数类别的样本。然而，各种研究，包括[3，4]，表明这些方法不可能总是可行的。算法层面的策略，特别是在深度学习领域，主要集中在开发损失函数来应对类不平衡问题，而不是操纵数据。其中包括为损失函数设置阶级系数权重的技术，使少数阶级样本的错误分类与多数阶级相比受到更严重的惩罚[5]。另一种方法是为每个训练样本自适应地设置一个独特的权重，使硬样本得到更高的权重[6]。在本文中，我们提出了一个新的损失函数，称为大边际意识到的焦点(LMF)损失，以缓解医学成像中的类不平衡问题。这个损失函数同时动态地考虑了硬样本和类分布。我们在三个含有类不平衡的流行数据集上进行了实验。它们是眼病智能识别（ODIR）[7]、人类对抗机器（HAM）[8]和国际皮肤成像合作组织（ISIC）-2019数据集。在这三个数据集上，与基线相比，所提出的方法在宏观f1得分方面取得了明显的改善。本文的主要贡献如下。</p><ul><li>我们提出了一个新的混合损失函数来缓解类不平衡问题。</li><li>我们在三个流行的医学成像数据集上进行了广泛的实验，并取得了显著的性能改进。我们的损失函数在所有的数据集上都取得了210%的性能改进。</li><li>在HAM数据集的一个特定实例中，所提出的方法在不到90个训练样本的情况下达到了80%的f1分数，与其他方法相比，提高了9%。</li></ul><h2 id="2-methodology"><a class="markdownIt-Anchor" href="#2-methodology"></a> 2. METHODOLOGY</h2><p>在本节中，伴随着我们提出的方法，我们将讨论我们在本研究中使用的一些其他损失函数。</p><h3 id="21-focal-loss"><a class="markdownIt-Anchor" href="#21-focal-loss"></a> 2.1. Focal Loss</h3><p>在不平衡的分类问题中使用交叉熵损失的主要缺点是，它坚持在所有类别中进行平等的学习。这样的学习对分类性能有负面的影响，因为类的分布是高度不平衡的。Focal loss[6]通过降低多数类的权重来缓解这一问题。来自[6]的作者通过降低多数类的权重来修改交叉熵损失函数，从而使模型专注于学习少数类。多类分类中的焦点损失被定义为公式1</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230201225746022.png" alt="image-20230201225746022" /></p><p>这里，pt是模型的预测概率分数，γ是可以调整的聚焦参数。γ的数值越高，就越能降低简单样本的损失，从而使模型能够将注意力转向困难样本。当γ=0时，损失函数成为标准的交叉熵损失。在我们的研究中，我们使用了γ=1.5，这产生了更好的结果。</p><h3 id="22-label-distribution-aware-marginal-lossldam"><a class="markdownIt-Anchor" href="#22-label-distribution-aware-marginal-lossldam"></a> 2.2. Label Distribution aware Marginal Loss(LDAM)</h3><p>另一项缓解类不平衡问题的工作是由作者[9]提出的，称为标签分布意识到的边际（LDAM）损失。他们建议对少数类进行比多数类更强的正则化，以减少其泛化误差。这样，损失函数保持了模型学习多数类的能力，而强调了少数类。LDAM损失着重于每类的最小边际，并获得每类和统一标签测试误差，而不是鼓励决策边界的多数类训练样本的大边际。换句话说，它只鼓励少数类的相对较大的边际。来自[9]的作者提出了对多个类1,…,k获得与类相关的余量的公式为γj = C n1/4 j 。</p><p>这里j∈{1，…，k}是一个特定的类，nj是该类的样本数，C是一个常数。现在，让我们考虑x是一个特定的例子，y是x的相应标签。让，一个例子是（x，y）和一个模型f 。考虑到zy = f (x)y表示模型对该特定样本的输出。让u = ezy-∆y，其中∆j = C n1/4 j，对于j {1, …, k}。因此，定义的LDAM损失为公式2</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230201225733105.png" alt="image-20230201225733105" /></p><h3 id="23-proposed-large-margin-aware-focal-lmf-loss"><a class="markdownIt-Anchor" href="#23-proposed-large-margin-aware-focal-lmf-loss"></a> 2.3. Proposed Large Margin aware Focal (LMF) Loss</h3><p>焦点损失（公式1）创造了一种机制，对模型难以分类的样本给予更多的重视；很多时候，来自少数类的样本会属于这个类别。相反，LDAM（公式2）通过考虑数据集的类别分布来判断权重。我们假设，与单独使用每个特征相比，同时利用这两个特征可以产生有效的结果。因此，我们提出的Large Margin aware Focal（LMF）损失是Focal损失和LDAM的线性组合，由两个超参数加权，如公式3所示。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230201225932452.png" alt="image-20230201225932452" /></p><p>这里，α和β是常数，被认为是可以调整的超参数。因此，我们提出的损失函数在一个单一的框架中联合优化了两个独立的损失函数。通过试验和错误，我们发现对两个部分赋予相同的权重会产生良好的效果。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Interactive Few-shot Learning Limited Supervision, Better Medical Image Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Interactive-Few-shot-Learning-Limited-Supervision,-Better-Medical-Image-Segmentation/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Interactive-Few-shot-Learning-Limited-Supervision,-Better-Medical-Image-Segmentation/</url>
      
        <content type="html"><![CDATA[<h1 id="interactive-few-shot-learning-limited-supervision-better-medical-image-segmentation"><a class="markdownIt-Anchor" href="#interactive-few-shot-learning-limited-supervision-better-medical-image-segmentation"></a> Interactive Few-shot Learning: Limited Supervision, Better Medical Image Segmentation</h1><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>许多已知的用于医学图像分割的有监督的深度学习方法，在模型训练中承受着昂贵的数据注释负担。最近，人们提出了小样本分割方法来减轻这一负担，但这种方法往往对目标任务的适应性很差。通过审慎地将交互式学习引入小样本学习策略，我们开发了一种新的小样本分割方法，称为交互式小样本学习（IFSL），它不仅解决了医学图像分割模型的注释负担，还解决了已知小样本分割方法的共同问题。首先，我们设计了一种新的小样本分割结构，称为基于医学先验的小样本学习网络（MPrNet），它只使用少数注释过的样本（如10个样本）作为支持图像来指导查询图像的分割，而无需任何预训练。然后，我们提出了一个基于交互式学习的测试时间优化算法（IL-TOA），以交互的方式在飞行中加强我们的MPrNet，以完成目标任务。据我们所知，我们的IFSL方法是第一个允许在目标任务上以互动和可控的方式优化和加强小样本分割模型。在四项小样本分割任务上的实验表明，我们的IFSL方法在DSC指标上优于最先进的方法20%以上。具体来说，交互式优化算法（IL-TTOA）对小样本的分割模型的DSC进一步改进贡献了10%。</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>对医学图像中的物体进行分割是医学图像分析中最基本的任务之一，有助于临床诊断和治疗计划。最近，深度学习方法已被证明对器官/组织的分割非常有效[1]。然而，这些方法大多是以完全监督的方式进行的，需要大量的训练数据和详细的注释。为分割任务注释大量的像素级基础事实是很耗时和昂贵的。此外，在实际场景中，医疗任务可能会面临这样的困境：只有很少的图像可用于模型训练（例如，对于一些罕见的疾病）。因此，研究如何减轻深度学习模型沉重的注释负担依赖，解决这些问题非常重要。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251423517.png" alt="" /></p><p>小样本学习是一种从有限的图像和监督中学习任务的机器学习方法[2]，它有助于解决前述的问题。基于小样本学习的分割是一个新兴的研究课题。许多现有的小样本分割模型沿用了第一个工作[3]的网络结构，包括一个支持分支[4]-[7]或一个原型学习器[8]，[9]，和一个查询分支。<strong>图1</strong>说明了这些模型的共同想法：支持分支（或原型学习者）接收支持图像，而查询分支接收查询图像；这两个分支之间的具体连接传达支持信息，以指导特征提取和查询图像的分割。因此，当把这种模型用于小样本的分割任务时，研究人员一般遵循一个特定的机制[3]：通过采用接收注释的支持-查询图像对的模式，在多个任务上训练一个模型；然后把它用于一个未见过的目标任务的查询分割，用很少的注释样本作为支持输入。</p><p>尽管小样本分割模型在减少注释负担和监督方面取得了明显的成功，但它们仍然有相当大的缺点，特别是缺乏对目标任务的进一步优化。如上所述，小样本的分割模型通常是在多个任务中训练的，在这些任务中，模型积累了利用支持图像来指导查询分割的一般能力。这种能力使小样本的分割模型在一个未见过的目标任务上达到一定的性能，即使只有很少的注释样本可用[9]。然而，一个关键的问题是，这种普遍的能力可能不足以处理目标任务的一些独特特征。</p><p>**当模型用于自然图像时，这个问题可能不那么严重，因为它们可以在各种任务（如ImageNet[10]）上进行预训练，以获得大量有用的特征和强大的先验知识。但是，这个问题在医学图像上更为严重，主要有两个原因。1）缺乏专门针对医学图像的预训练模型[11]，以及2）自然图像和医学图像之间的实质性差异（例如，特定的器官定位和医学图像的独特特征[12]）可能会损害简单地将自然图像的知识转移到医学成像任务的有效性[13]，[14]。**面对这样的挑战，作者在[11]中提出了第一个小样本的分割模型，SSENet，用于处理小样本的医学图像分割任务，而不需要任何预训练。这种结构在一些小样本的医学图像分割任务中取得了最先进的性能。然而，其分割性能并不令人满意。此外，这种方法仍然存在上述现有小样本分割模型的共同想法的缺点，即缺乏对目标任务的进一步优化。</p><p>在本文中，我们提出了一种新颖的交互式小样本学习（IFSL）方法，用于医学图像分割（如图2所示），以解决注释负担和上述缺点的挑战。我们的IFSL方法旨在解决以下具体问题。如何获得更强的利用有限的支持信息来指导分割的一般能力；如何在有限的监督支持下加强获得的目标任务的能力。对于前一个问题，我们开发了一个新的小样本分割结构，称为基于医疗先验的小样本学习网络（MPrNet）。对于后一个问题，我们将交互式学习的理念引入到小样本学习策略中，并提出了基于交互式学习的测试时间优化算法（IL-TTOA）。</p><p>我们的MPrNet有一个编码器-解码器结构。在编码器中，两个分支（一个空间分支和一个纹理分支）被构造出来以提取支持图像的特征，一个查询分支被构造用来查询图像。空间分支的设计是为了捕捉目标的更多空间特征，具有大的感受野。然后，这些特征通过引入 “通道挤压和空间激励”（sSE）块被传达给查询分支以获得空间关注。纹理分支关注支持图像的详细纹理特征，并通过分权操作与查询分支建立强大的互动关系。解码器由两个分支（解码器-S和解码器-Q）组成，沿用了[11]中的网络。在这种具有多分支和强交互的结构中，考虑了一些医学图像的两个先验因素（相对固定的器官位置和医学图像的一般纹理性质），以弥补缺乏预训练的缺点，这在以前的研究中很少被探讨。当使用MPrNet来完成目标任务时，我们首先应用我们的IL-TOA来交互式地优化MPrNet（在其他任务上训练的），由极少的额外人类监督和修正来指导。在这个过程中，我们在一个小的目标任务数据集上进行了几个梯度下降步骤，并在一个特定的获得能力感知损失函数（LO）的指导下进行。损失函数的目的是平衡训练期间获得的能力和目标任务的额外监督的影响。</p><p>通过这种方式，一方面，我们的MPrNet可以直接利用极少数注释样本的有限监督，将这些样本作为目标任务的支持输入（就像大多数已知的少数学习模型[11], [15]）。另一方面，我们的IL-TOA可以动态地利用额外的人类监督来加强MPrNet，以便在目标任务上有更好的表现。在临床应用中，我们的IFSL方法可以帮助医生以非常轻的负担来注释/分割物体（只需要少数具有注释完整像素的样本），并通过交互式修正实现动态监督和修正（额外注释少量的像素）。此外，我们的IL-TOA可以适应于增强任何训练有素的模型，以获得更好的性能，并使人类能够被纳入基于深度学习的临床管道，进行分割以获得改进。</p><p>总而言之，我们的工作有四个主要贡献：</p><ul><li>一种新的结构，即MPrNet，由具有强连接的多个分支组成，用于医学图像的少量分割。</li><li>一种新的算法，IL-TTOA，通过人与人之间的互动修正来解决已知的小样本分割方法的不足之处。</li><li>实验表明，我们的IFSL方法在四项小样本分割任务上取得了可喜的成绩。我们的IFSL方法的主要思想（通过IL-TOA在目标任务上交互式地优化小样本的分割模型）进一步产生了明显的改进，并显示出加强任何小样本分割方法的巨大潜力。</li><li>我们的IFSL方法，特别是IL-TOA，具有临床意义：（1）减轻医学专家在注释图像上的负担，（2）使人类能够被纳入基于深度学习的临床管道，以加强目标任务上的模型（不限于少数学习模型）。</li></ul><h2 id="相关工作"><a class="markdownIt-Anchor" href="#相关工作"></a> 相关工作</h2><p>最近，大量的研究工作集中在减轻深度学习方法的数据和注释负担的问题上（例如，如[16]，[17]中的回顾）。这些研究处理了不同的具体问题，并主要在深度学习管道的不同阶段工作（这些阶段，如[18]，[19]中总结的，包括样本采集，数据解释和注释，模型训练等）。在本节中，我们回顾了这些研究，并根据他们所关注的具体问题和主要工作阶段，将其大致分为三组。</p><p><strong>1） 样本获取负担的方法：</strong></p><p>在一些医疗场景中，人们可能会面临这样的困境：只能收集到非常少的目标任务的医疗图像（例如，对于一些罕见的疾病）。一方面，一些方法（如零、一或少数几个镜头的学习，以及元学习方法）主要集中在解决这一困境，并广泛地旨在从少数样本中学习新目标任务的特征。当只能获得很少的样本作为训练样本时，这些方法是可取的，包括极端情况下，标记的例子只有一个或没有。然而，这些方法在医学图像上的表现仍然很差（特别是对于分割任务[11]），尽管它们在自然图像上的表现很好。在[20]中，作者回顾了这种不同的方法，包括零、一和少数的拍摄学习方法。在[21]中，作者回顾了不同的小样本学习方法，并将这些方法分为基于数据的方法、基于模型的方法和基于算法的方法。到目前为止，这种类型的已知方法主要集中在分类（如[15]、[22]、[23]）、分割（如[11]、[24]）和其他任务（如[25]、[26]）。但是，没有一篇评论或调查论文专门涉及医学图像上的这类方法。因此，这是一个值得探索的课题，但要减轻医学图像数据收集的负担，这是个挑战。</p><p>另一方面，一些工作旨在通过数据增强（而不是专家注释）扩大和丰富训练集来解决这一难题。这类方法不仅包括传统的数据增强操作，如高斯模糊[27]、外观增强（如[28]、[29]）、空间变换（如[30]、[31]）等，还包括合成方法，如CycleGANs[32]、条件GANs[33]、SGAN[34]、掩膜引导的GAN[35]等。</p><p><strong>2） 注释获取负担的方法：</strong></p><p>一般来说，在注释阶段给收集到的医学图像样本贴上人工标签（特别是对分割任务的像素级注释）是很耗时的，而且需要专家的努力。为了解决这个问题，一方面，一些方法专注于以更有效的方式选择少数最有价值的样本进行注释和模型训练，称为主动学习[16]。一般来说，主动学习策略会选择最有价值的样本，给它们贴上标签，然后把它们加入训练集进行进一步训练。许多主动学习框架已被提出用于医学图像分割（如[36]-[38]）、分类和检测（如[39]-[41]）。另一方面，一些方法试图以互动的方式附加注释和监督，称为互动学习。它可以通过允许专家注释者交互式地纠正模型产生的预测来加速注释过程[17]，这可能对分割任务产生重大影响（例如，[42]，[43]）。具体来说，[42]中的作者使以完全监督方式训练的CNN能够根据用户的互动（例如，用户提供边界框或涂鸦）进一步适应测试图像。在[44]中，作者回顾了交互式医学图像分割的方法。</p><p><strong>3）模型训练问题的方法：</strong></p><p>在训练阶段，模型性能和训练集规模之间存在着明显的权衡。如果只在少数样本上训练，深度学习模型可能容易过度拟合，而扩大训练集可能会产生更好的性能，但会产生昂贵的时间和专家努力成本。一些研究试图解决这一矛盾，探索更有效地训练深度学习模型的策略，并在训练阶段更好地利用小的或不完善的标注训练集的有限标注数据。在[45]中，作者回顾了医学图像分析中的这种类型的方法。例如，转移学习（包括预训练的操作；如[13]，[46]）和多任务学习方法[47]-[49]等方法提出要利用其他任务的特点或领域知识来完成目标任务。这些方法可以减轻目标任务的数据和注释负担，同时也可以加速训练过程[17]。此外，一些弱监督方法（如[50]，[51]）和半监督方法（如[52]-[55]）被给予利用未标记的数据或不完善的数据与良好标记的数据相结合来训练高性能的分割模型。</p><p>上述方法在减轻医学图像分析中的数据和注释负担方面取得了显著的成就，目的是以较少的数据和注释成本训练出更有效的模型。其中一些方法可以在多种情况下使用，一些方法可以在某些情况下协同工作以获得更好的性能。例如，在[56]中，作者整合了主动学习和迁移学习来减少注释的工作量。在本文中，我们关注的是只有很少的医学图像可用于注释和模型训练的极端情况，以探索一个更高效和有效的医学图像分割的框架。</p><h2 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h2><p>在这一节中，我们介绍了我们的IFSL方法，它由一个新的基于医学先验的少许学习网络（MPrNet）和一个基于互动学习的测试时间优化算法（IL-TOA）组成，如图2所示。</p><h3 id="a-问题设置"><a class="markdownIt-Anchor" href="#a-问题设置"></a> <strong>A. 问题设置</strong></h3><p>我们遵循[3]中关于小样本分割的表述。给定一个支持集S = {(Ii s, Y i s (l))}K i=1，这是一个由目标任务的K个图像和二元遮罩对组成的小集合，其中Ii s是第i个图像，Y i s (l)是目标语义类l∈Ltest的相应二元遮罩，目标是学习一个模型M，以生成一个给定支持集S的查询图像Iq的二元遮罩Mq(l)，表示为Mq(l) = F（M；S，Iq）。为了训练这个模型M，我们可以获得大量的其他语义类别的图像-掩码对来训练这个模型，表示为D = {(Ii d, Y i d )}N i=1，其中Y i d是训练图像Ii d的二进制掩码，N是训练图像的数量。D中也许有多个语义类别（Ltrain），Ltrain ∩Ltest = ∅。在本文中，我们简单地将目标类的分割过程称为测试阶段，而将其他任务的模型训练过程称为训练阶段。表一说明了本节中使用的符号。</p><h3 id="b-基于医学先验的少许学习网络mprnet"><a class="markdownIt-Anchor" href="#b-基于医学先验的少许学习网络mprnet"></a> <strong>B. 基于医学先验的少许学习网络(MPrNet)</strong></h3><p>我们的MPrNet采用编码器-解码器结构[1]，遵循现有的小样本分割模型[11], [15]的共同思路（如图1所示）。在编码器中，我们为支持图像建立一个空间分支和一个纹理分支，并为查询图像建立一个查询分支。在解码器中，我们简单地遵循sSENet[11]的解码器结构，建立两个分支（一个解码器-Q分支和一个解码器-S分支）。此外，在编码器和解码器之间还引入了一个基于余弦相似度的融合（CosF）模块。这种结构是通过采用医学图像的两种强先验知识而精心设计的[12]：（1）医学图像中目标器官的位置通常是相对固定的，（2）医学图像的一般纹理性质与非医学图像是可以区分的。</p><p><strong>1）编码</strong></p><p>在编码器中，我们从两个角度采用上述两个知识先验：针对支持图像的不同特征，采用不同结构的单独分支（空间分支和纹理分支）；两个分支与查询分支的具体信息交互方式。为清晰起见，在图2中，编码器中三个分支（空间分支、纹理分支和查询分支）的数据流分别用灰色、蓝色和黑色的线条表示。</p><p>a) 三个分支</p><p>首先，通过考虑空间信息的第一知识先验，我们建立了具有轻量级结构和大感受野的空间分支。如图2所示，该分支由四个连续的5×5 na-̈ve ConvBlocks组成。大的内核尺寸（5×5）用于大的感受野，使这个分支能够意识到目标的更全面的空间特征，而轻量级的结构减轻了大内核尺寸带来的沉重参数负担。然后，我们建立了纹理分支来捕捉支持图像的更详细的纹理特征。受VGGNet[?]结构的启发，纹理分支由四个重复的卷积块组成，其中有两个小核大小（3×3）的卷积，每个卷积块后面都有一个ReLU和一个2×2的最大池操作来进行下采样（如图2所示）。最后，我们用与纹理分支相同的结构建立查询分支，以捕捉查询图像与支持图像相似的详细特征（因为支持图像和查询图像是针对同一目标器官的，通常表现出相当相似的特征）。在这个结构中，我们选择三个分支有对称的布局（每个有四个块），这有助于把匹配块之间的强互动。</p><p>b) 信息交互时尚</p><p>信息交互在小样本的分割模型中起着重要作用[11]，它决定了支持图像的信息如何能够指导查询图像的特征提取和分割。在编码器中，我们通过三个步骤完成信息交互。首先，我们建立了从空间分支到查询分支的定向连接，将空间分支中的四个ConvBlocks分别与查询分支中的相应块进行桥接（如图2所示）。这些操作是基于这样的先验知识：支持-查询图像对中的特定目标器官通常出现在一个相对固定的位置。因此，这种一对一的连接和互动有助于传达捕获的支持图像的全局空间特征，以指导查询特征提取，从低级到高级。</p><p>接下来，基于纹理知识先验和这两个分支的相同结构，在纹理分支和查询分支之间引入了一个分权操作。这一操作有助于支持图像的提取的纹理特征以更直接和有效的方式指导查询分支。当然，由于不直接的相互作用，查询图像的提取特征也可能影响支持图像的特征提取。</p><p>最后，我们引入了 “通道挤压与空间激发”（sSE）块，以促进空间分支和查询分支之间的特征互动。sSE块是最近提出的一个计算单元[11]，它沿通道挤压特征图以获得空间注意力。在本研究中，我们用它来挤压空间分支的特征图，并激发查询分支的特征图，在第一步中把它加入到定向连接中。sSE块的详细结构见图2中标为sSE块的子图，其中挤压和激发的操作分别用s和σ表示。也就是说，编码器中的第i个sSE块（i∈{1，2，3，4}）从空间分支中的第i个ConvBlock（数据流由灰线̈表示）和查询分支中的第i个基本块（数据流由黑线≠表示）接收特征，并将纳入的特征传递给查询分支的第（i+1）个基本块（数据流由黑线Æ表示）。</p><p><strong>2）基于余弦相似度的融合（CosF）模块。</strong></p><p>为了利用支持掩码作为注意力来指导查询分割，我们提出了一个基于余弦相似度的融合（CosF）模块，并将其放在编码器之后。该模块测量支持图像的特征与查询图像的特征之间的相似性，然后将相似性作为查询特征的注意权重。具体来说，我们首先对ˆMtex进行掩蔽平均池化，这是由直接在ˆMtex上掩蔽Ys（在每个通道）来产生前景和背景特征，如[6]。接下来，我们将前景和背景特征连接起来，形成一个整体图，并计算其与ˆMque的余弦距离。直观地说，我们在图3中说明了屏蔽平均池和计算余弦距离的操作。生成的余弦距离矩阵（大小为1×32×32）然后通过每个通道的点乘作为查询图像特征（ˆ Mque）的注意权重。</p><p>给出支持图像Is、相应的地面真实掩膜Ys和查询图像Iq，CosF模块的计算步骤总结为公式（1）:</p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251323628.png" style="zoom:50%;" /><p>其中，由纹理分支捕获的Is的特征用ˆMtex表示，由查询分支获得的Iq的特征用ˆMque表示。ˆ MD que是CosF模块的输出特征，也是解码器-Q的输入。M AP表示进行屏蔽平均池的操作。</p><p>D表示计算余弦距离的过程，可以用下面的公式（2）来概括（也在图3的黑色虚线框中说明）:</p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251324729.png" style="zoom:50%;" /><p>其中cosij是上述余弦距离矩阵的一个元素，A是一个大小为1024的矢量，通过连接前景和背景特征得到（如图3所示），Bij是查询特征B的一个大小为1024的分量矢量（图3中用黄色立方体表示）。具体来说，B（大小为1024×32×32）是通过沿通道维度复制和串联ˆMtex（大小为512×32×32）得到的。通过这种方式，每个Bij的长度等于A的长度，因此可以计算出这两个向量之间的余弦相似度。为了进一步描述ˆ D的计算细节，我们可以简单地将矢量Bij表示为b，那么，上面的公式（2）可以写成：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251324608.png" alt="" /></p><p>其中Ak和bk分别是向量A和b的元素（即Bij），K是向量A和b的长度（本工作中K=1024）。在这一阶段，我们根据经验采用余弦距离来衡量特征的相似性，遵循[9]中的工作，该工作表明余弦距离与其他距离函数（如平方欧氏距离）相比，有助于获得更稳定和更好的性能。</p><p><strong>3）结构比较和讨论。</strong></p><p>现在我们讨论一下我们的MPrNet和sSENet[11]之间的区别。sSENet被认为是第一个用于医学图像的小样本学习分割模型，我们把它作为我们的强基线。在[11]中，作者证明了支持和查询分支之间的强连接是有效的，并且sSE块是有效的。因此，在我们的MPrNet中，我们继承了sSENet的基本解码器结构，也引入了sSE块。此外，我们构建了一个新的编码器结构，并将CosF模块放在编码器和解码器之间。此外，还有三个明显的区别。(1) 在sSENet中，支持图像直接与相应的地面真实掩码相连接，作为支持/条件分支的单一输入。然而，我们的MPrNet分别接收支持图像和其掩码。更具体地说，空间分支和纹理分支接收支持图像，而CosF模块接收支持掩码。通过这种方式，我们的MPrNet可能会更好地保留图像的原始特征。需要注意的是，这些特征在本质上与二进制掩码的特征不同，简单地将它们连接起来（如在sSENet中）可能会破坏图像的原始特征[9]。(2) 在[11]中，只用了一个轻量级的支持分支（表示为条件分支）来捕捉支持输入的特征，这对于医学图像的复杂特征可能是不够的。与sSENet和其他以前只有一个支持图像分支的网络不同，我们的MPrNet首先为支持图像构建了两个分支。这两个不同结构的分支集中于医学图像的不同特征，并互补地工作（如IVC.3节所示）。(3) 此外，与sSENet的天真的编码器-解码器结构相比，我们在编码器和解码器之间引入CosF模块。这个模块利用支持掩码作为注意力来进行查询分割，其有效性在第四节C中得到了验证。</p><h3 id="c-基于互动学习的测试时间优化算法"><a class="markdownIt-Anchor" href="#c-基于互动学习的测试时间优化算法"></a> C. 基于互动学习的测试时间优化算法</h3><p>如图2所示，我们提出了一种基于交互式学习的测试时间优化算法（IL-TTOA），以加强我们在目标任务上训练的MPrNet，以解决第一节中讨论的已知的小样本分割模型的缺点。首先，我们选择目标任务的几个未注释的样本，形成一个小数据集，Do = {Ii e}N ∗ i=1。样本数量N∗的值可能取决于具体的任务。接下来，我们在Do上用IL-TOA加强训练好的MPrNet（M(θ0)），并得到一个优化的模型M(θ)，用于目标任务的最终使用。在IL-TOA中，我们以交互方式加入人类监督作为指导或修正，并对Do进行多次梯度下降步骤，直到分割达到理想的质量水平或人为中断。在这个过程中，我们面临两个主要问题。(1) 如何更好地利用额外的人类监督，使训练好的模型能够获得更好的能力来捕捉未见过的目标任务的独特特征。(2) 如何使训练后的模型保持在训练过程中获得的一般能力。出于这两方面的考虑，我们设计了一个特定的可获得性感知损失函数（LO）来平衡这两种能力。</p><p><strong>1) IL-TOA的工作流程</strong></p><p>从一个经过训练的MPrNet M (θ0)开始，参数为θ0，我们对每个样本In e∈Do进行基本的循环处理。“预测-修正-修改”，这在算法1中得到了更精确的说明。对于每个样本In e，我们对这个循环进行Iter迭代。图6给出了一个例子，Do中有20个片断，10次迭代。预测是指使用当前模型M来预测In e的二进制掩码Mq。纠正是指要求人类专家通过指出任何错误区域来纠正预测的掩码（Mq）。这个操作被表示为O(-)，增加的修正信息被表示为Mp。Mp是一个{1, 0, -1}中数值的矩阵，表示每个像素被修正为什么标签。具体来说，被校正为正的像素被设置为1，被校正为负的像素被设置为-1。修改意味着通过运行梯度下降步骤来更新模型M中的参数（θ∗），使我们的LO损失最小。在这个过程中，我们利用一个像素级的加法（⊕）来结合预测图Mq和校正图Mp，并生成校正后的掩码Mg。因此，Mq中的假阴性像素在Mg中被纠正为1（对应于真阳性），而Mq中的假阳性像素在Mg中被纠正为0（对应于真阴性）。然后，Mg被当作一个假的真实掩码来计算预测掩码Mq的Dice损失。Dice损失是我们LO损失的一部分，用于指导参数优化。</p><p>2）获得能力感知损失函数（LO）。</p><p>我们的LO损失定义在下面的公式（4）中。它结合了一个天真的Dice损失（Ldice (θ∗)）和一个正则器。前者主要衡量IL-TOA中额外的监督和修正所造成的损失。后者根据参数对以前任务的重要性（Ωi,j）对参数的变化进行惩罚。对那些被认为是重要的参数的变化可以进行严厉的惩罚，这样就可以防止以前任务的重要知识被覆盖[57]。<img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251342452.png" alt="" /></p><p>正则器适应了[57]中提出的记忆感知突触（MAS），它最初是用于终身学习策略中的分类任务。正如文献[57]中所讨论的，它根据预测输出对参数变化的敏感性来衡量网络中每个参数的重要性。在这项工作中，我们将MAS适应于我们的分割任务，将分割视为给每个像素分配一个一致的语义类别标签（器官或背景）的任务。除了将图像视为[57]中的一个数据点外，我们将一个像素视为一个数据点。因此，按照[57]，我们将每个像素xpi的学习函数相对于参数θi,j的梯度表示为gi,j(xpi)。θ是 &quot;旧 &quot;网络参数（在几个任务上训练的网络），其值相对固定，θ∗是每次迭代中更新的 &quot;新 &quot;网络参数。参数θi,j的重要性权重Ωi,j可以通过以下方式获得。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251344529.png" alt="" /></p><p>在这里，我们使用N个图像来计算Ωi,j，每个图像包含W×H像素。在实际应用中，考虑到这种计算的时间和空间成本，在结果相似的情况下，我们可以对图像进行4倍的降样。对于每个目标任务，Ω在训练集上只计算一次。通过这种方式，我们允许在目标任务的额外监督信息的帮助下改变参数，而从以前的任务中学到的重要知识可以得到保护。因此，我们的IL-TTOA很可能为临床场景中的小样本分割模型提供了一个新的观点，这使得医生能够以互动和实时的方式通知模型意识到目标任务的遗漏特征。</p><h2 id="实验和评估"><a class="markdownIt-Anchor" href="#实验和评估"></a> 实验和评估</h2><h3 id="a-数据集"><a class="markdownIt-Anchor" href="#a-数据集"></a> A. 数据集</h3><p>公共数据集。KiTS19挑战数据集[58]和LiTS挑战数据集[59]。KiTS19和LiTS都是用于器官分割挑战的训练集。KiTS19包含209个三维CT堆栈，其中有肾脏的切片级注释。LiTS包含131个带有肝脏注释的三维CT堆栈。图4给出了每个数据集的一个例子。</p><p>内部数据集。胃部数据集和乳腺数据集。胃部数据集包含153个带有胃部切片级注释的三维CT堆栈。乳房数据集是用于乳腺癌（BC）放疗的右侧临床靶区（CTV），包含114个三维CT堆栈和相应的CTV注释。CTV分割是成功治疗的一个重要步骤，因为CTV通常包括有潜在肿瘤扩散或亚临床疾病的组织。然而，CTV的自动分割是非常具有挑战性的，因为低对比度的可见性没有明确的划分[60] （如图4所示）。</p><p>所有CT堆栈的大小为256×256×C，C∈[160，220]是三维堆栈中的切片数量（经过厚度为2mm的均匀重采样）。在这项工作中，我们在二维图像上进行了所有的实验（即用堆栈的切片作为输入）。</p><h3 id="b-实验设置"><a class="markdownIt-Anchor" href="#b-实验设置"></a> B. 实验设置</h3><p>在本研究中，我们将每个目标器官/组织视为一个语义类，只有少数标记的图像，而其他任务的数据集被打包成一个训练集D用于训练模型。为方便起见，在下面的实验中，四个分割任务被表示为乳房、肾脏、肝脏和胃。例如，当我们以肝脏为目标任务进行实验时，其他三个数据集被用作训练集D。按照[11]中切片采样策略的基准设置，以下实验中使用的所有CT堆栈由感兴趣的器官所在的中央CT切片组成，大小为256×256×C（C∈{[50，96]，[47，91]，[20，119]，[31，106]}，分别用于乳房、肾、肝和胃任务）。</p><p><strong>1) Constructing Support-Query Image Pairs</strong></p><p>具体来说，我们提出了两种不同的方式，分别为训练任务和目标任务形成支持-查询图像对。在训练阶段，我们采用切片采样策略[11]的基准设置来形成支持-查询对。一个明显的扩展是，支持图像和查询图像是从两个不同的CT堆（同一任务）中选择的，这对于实际应用可能更有效。具体来说，我们把每个CT堆栈分成K个大小相等的片组，索引为1到K（从顶部开始，如[11]）。每次我们形成一个支持-查询对时，都会随机选择两个CT堆栈。对于其中一个，在第i组中随机选择的切片为查询图像；对于另一个，其第i组的中心切片被作为支持图像。</p><p>对于目标任务，只有一个CT堆栈的K片被用作支持图像。具体来说，这个CT堆栈被分为K组（在这项工作中K=10），每组的中心切片被注释，形成支持集S={(I i s, Y i s (l))}K=10 i=1（从顶部索引，像上一段的操作）。这个任务的其他CT堆栈形成了测试集Dtest。此外，我们把Dtest分成一个小的子集Do = {Ii e}N ∗ i=1和一个子集Dr（如图5所示）。Do，有N个∗片，从N个∗CT堆栈中随机选择，被我们的IFSL用来优化MPrNet。Dr，则用于最终测试。每个任务的Do和Dr的数据大小见表二。在优化阶段和最终测试阶段，我们通过两个步骤形成支持-查询对。首先，Do和Dr中的每个CT堆被分为K=10组。因此，给定一个CT堆栈中的查询图像，我们可以准确地确定它属于该堆栈的哪一组。假设一个查询图像来自一个堆栈的第i组（从顶部开始索引）。然后我们从S中选择第i个支持图像Ii s来形成支持-查询对。通过这种方式，小样本分割模型可以像训练时那样工作，从不同CT堆栈的匹配组中接收支持查询对。在临床应用中，可能需要额外的人工互动来指示CT堆栈中目标器官的开始和结束切片。</p><p><strong>2) Implementation Details:</strong></p><p>对于训练任务，我们使用天真的Dice loss来训练我们的MPrNet，50个epochs，批次大小为1。在初始学习率为le-3的情况下，我们使用多项式衰减学习率政策来降低它。我们使用迷你批随机梯度下降（SGD）作为优化器，动量=0.9，权重衰减=le-4。</p><p>在使用我们的IL-TOA进行模型优化的过程中，我们只需像[61]中那样模拟用户的修正，假设用户点击最大的误差区域。我们通过比较模型预测和地面实况并选择其中心像素来确定这个误差区域。然后我们用一个4×4的核来扩展它。在这项工作中，对于我们的IL-TTOA的所有优化实验，我们在Do中的T=20个切片上依次优化训练好的模型，并在每个切片上均匀地进行Iter=10次迭代而不中断（20个切片是随机排序的）。这意味着10×20个人工点被交互式地添加为额外的监督和修正（如图6所示）。对于我们的LO损失，在计算Ω值之前，我们通过4×4maxpooling对预测的掩模进行下采样，超参数λ为0.2（因为对比实验表明λ=0.2效果最好）。Dice-Sørensen系数（DSC）指标用于衡量实验中所有方法的性能。</p><h3 id="c-results-and-analysis"><a class="markdownIt-Anchor" href="#c-results-and-analysis"></a> C. Results and Analysis</h3><p><strong>1）与目前最先进的 &quot;小样本 &quot;分割模型的比较。</strong></p><p>表三将我们的MPrNet和IFSL方法与几个最先进的小样本分割模型进行了比较。为了进行公平的比较，所有的实验都是按照上面讨论的设置来分割数据并形成支持-查询对。所有被比较的小样本的分割模型都是按照原始论文中的方法实现的。</p><p>表三的第一个观察结果是，我们的MPrNet和IFSL方法在每个任务上的表现都超过了所有最先进的小样本分割模型，并在四个任务上产生了更高的平均DSC。尽管Co-FCN[5]和SGOne[6]在自然图像的小样本分割上取得了成功，但它们在我们的医学数据集上表现不佳。这可能是由于非医疗图像和医疗图像之间的性质有很大的不同，以及缺乏对医疗图像的预训练模型[13]。对于肝脏和肾脏的分割任务（也是[11]中的目标任务），sSENet的表现与原论文中的结果不完全相同，这是因为训练任务和我们使用的数据集不同。其次，我们注意到，我们的MPrNet在某些任务（肝脏和胃）上的表现要好得多，但在其他任务上的表现却有点差（DSC值低于DSC的60%）。很可能，这是不可避免的，因为训练和目标任务之间没有重叠，所以MPrNet在训练阶段获得的能力和知识可能与目标任务不太匹配。例如，MPrNet在训练过程中可能获得了更多关注纹理特征的能力，但空间特征对目标任务更重要。因此，我们认为，如果我们能够根据目标数据平衡纹理分支和空间分支的影响，MPrNet的性能将得到进一步提高。在这种情况下，IL-TOA作为一种补充，协助训练好的模型适应目标任务。如表三所示，在IL-TOA的帮助下，MPrNet可以在一个小的集合（如20个切片）上针对目标任务快速优化，并取得很大的改进（每个任务的DSC接近10%）。</p><p>图7显示了几个随机选择的样本（在数据集Dr中），以及不同模型的地面真实掩码和分割结果。为了更好的可视化，我们对所有的分割结果进行了简单的后处理，即扩张，获得最大的连接区域，以及侵蚀。与sSENet和PANet相比，我们的MPrNet在所有的任务中似乎表现得更好。显然，与所有其他模型相比，我们的IFSL方法在地面真实掩模方面取得了最有希望的性能。</p><p>此外，我们进行了一个实验作为软参考，以显示一个常用的有监督的深度学习模型（该模型以完全监督的方式在大规模数据集上训练）在这四个数据集上的表现。由于UNet[1]被广泛用作医学图像分割的强大架构，我们按照[1]的方式以天真的完全监督方式对U-Net进行了实验。对于每个分割任务，我们只需在数据集的80%的样本上训练一个U-Net模型，然后在剩余的样本（即数据集的20%）上测试它。换句话说，在N个（N∈{91，168，105，122}）CT堆栈上训练四个U-Net模型，每个堆栈包括n个切片（n在[160，220]范围内），分别用于乳腺、肾脏、肝脏和胃部任务（总共有{18928，36120，23100，26230}个切片）。表三的最右边一栏报告了不同方法对目标任务的注释数据。对于小样本的分割模型，只使用了10个带有完整注释的掩膜的切片，而对于U-Net模型，则使用了大约20000个切片（每个任务的大约20000个切片数是通过N的平均值和n的平均值相乘来估计的）。与U-Net相比，我们的IFSL在目标任务，特别是肝脏和胃部的注释成本大大降低，获得了令人鼓舞的结果。在这两个任务上，我们的方法和U-Net模型之间的DSC差异约为12%-17%，而我们的方法的注释负担远远小于U-Net（几乎是1/2000）。</p><p><strong>Discussion:</strong></p><p>我们应该注意到，在所有的情况下（使用很少的拍摄方法，纯粹训练目标分割的U-Net），这些模型在四个任务中的乳房表现最差。这可能表明，乳房任务比其他任务更难。如上所述，乳腺癌放疗的CTV的具体特点（对比度低，没有明确的分界线）使得CTV难以自动分割，在注释非常有限的情况下，这将更加艰难。当然，我们的方法可以在这个 &quot;硬 &quot;任务上取得更好的性能，代价是稍微增加目标任务的注释负担（如补充材料中所报告的）。</p><p><strong>2) Effects of IL-TTOA</strong></p><p>在这一节中，我们扩展了我们方法的主要思想，将交互式学习引入到小样本学习模型中，以加强几个表现良好的小样本分割模型，即PANet和sSENet（分别表示为PANet⊕IL-TOA和sSENet⊕ILTTOA）。在Dr上使用训练好的模型之前，我们用我们特定的IL-TTOA对其进行优化，具体过程如图6所示。我们对四个任务进行了实验，并在表四中列出了结果。值得注意的是，在我们的IL-TOA的帮助下，两个模型都取得了可喜的进步。sSENet甚至在肝脏的DSC上取得了超过30%的巨大进步。然而，与这两个模型相比，IL-TOA对我们MPrNet的贡献并不突出（大约7%-10%的改进）。我们认为这可能是由于我们的MPrNet在这四个小样本分割任务中的基本性能已经比其他模型好得多。虽然这些可喜的结果证明了我们想法的有效性，但我们相信，如果我们使用更多的目标任务数据来优化MPrNet，其性能可能会进一步提高（如补充材料中的报告）。</p><p>图8展示了有优化和无优化的模型的性能比较。对于每个任务，我们从最终的测试集Dr中随机选择一个切片，然后用训练好的MPrNet来分割该图像中的目标，并在第一行显示分割结果。之后，我们使用IL-TOA对Do进行优化，并随机选择在1、8、16和20片上优化的模型版本，对所选片中的目标进行分割。第二行到倒数第二行是分割的结果。值得注意的是，对于每个任务，分割结果从上到下逐渐变好。这些可喜的结果很好地验证了我们的IL-TOA在四个任务上的有效性。</p><ol start="3"><li>Effects of the Individual Components of MPrNet:</li></ol><p>为了研究MPrNet中每个单独组件的效果，我们通过每次删除一个组件来进行消减研究。我们先后摘除了空间分支、纹理分支和CosF模块，构建了三个模型，在表五中用MPrNet Spa、MPrNet Tex和MPrNet CosF表示。由于[11]中的实验显示了具有强连接的解码器结构的有效性，我们保留所有具有解码器结构的模型作为我们MPrNet的最终版本。请注意，MPrNet的每个组件对四个任务的平均Dice得分都有4%-10%的提高。</p><p>此外，我们还进行了实验，以检查空间分支和纹理分支如何很好地集中于支持图像的不同特征，并相互补充地工作（在第III-B.3节讨论）。图9给出了几个例子，用梯度加权类激活映射（Grad-CAM）[62]来可视化这两个分支的捕获特征。对于每个分支，Grad-CAM使用流入最后共卷积层（瓶颈）的梯度信息来生成热图，从而突出该分支所涉及的鉴别性区域。更详细的Grad-CAM的计算方法在[62]中描述。在图9中，热图被重叠在原始支持图像上，红色区域表示被分支高度关注。<br />从图9中可以看出，空间分支中的高激活区域与纹理分支中的高激活区域有很大不同。这一现象表明，这两个分支关注支持图像中的不同区域以捕捉不同的特征。具体来说，空间分支集中于一个任务的相对固定的区域（即任务的全局空间特征），特别是在使用同一支持图像的情况下。例如，图9(i)和图9(j)中的例子使用相同的切片作为支持图像。请注意，尽管两张查询图像中的目标形状明显不同，但空间分支关注的是几乎相同的区域（用红框表示）。在图9(m)和图9(n)的例子中也可以看到同样的情况。相反，即使有相同的支持图像，纹理分支也没有注意到任何特定的区域（例如，见图9(e)和图9(f)的例子）。</p><p>正如III-B节所讨论的，纹理分支和查询分支与分权操作有不直接的相互作用。因此，如图9(e)中的绿色方框所示，查询图像的特征会在很大程度上影响纹理分支的特征提取。另一个例子是图9(o)中的黄框；右上角的黄框可能表示纹理分支注意到了查询图像中目标的边界，而高亮区域似乎不在支持图像的区域内。由于这两个分支的具体结构和交互方式，这两个分支可以互补地工作，以捕捉支持图像的特征来指导查询分割。例如，在图9(o)的例子中，支持图像中的目标形状与查询图像中的目标形状完全不同。在这种情况下，空间分支集中于支持图像的全局空间特征（如上所述），而纹理分支则捕获与查询图像相关的鉴别和特殊支持特征（例如，查询图像中目标的区域或边界），如黄色方框中所示。</p><p><strong>4) Sensitivity of the Hyper-parameter λ:</strong></p><p>为了考察λ的敏感性，我们根据经验进行实验，将λ的值从0增加到1.5，步长为0.1。按照[57]，λ的影响从两个方面来估计。1）模型性能，和2）模型遗忘。对于前者，我们按照上述IV-B节的设置，以不同的λ值对我们的IFSL方法进行了实验。图10中报告了四个任务的平均DSCs，用Avg.Per表示。对于后者，我们遵循终身学习中常见的遗忘估计研究[63]，将训练任务视为 “以前遇到的任务”。具体来说，我们的IFSL方法在目标任务上的遗忘（简单表示为F orgetting）被定义为DSC在 &quot;以前遇到的任务 &quot;上的退化程度。这意味着我们通过在目标任务上通过IL-TOA优化之前和之后，在 &quot;以前遇到的任务 &quot;上对MPrNet进行两次评估，并计算这两次表现之间的差异，从而获得F orgetting值。这些性能分别用Per.Old和Per.New表示，差值用|Per.Old-Per.New|计算。为了进行综合估计，我们对四个任务的F orgetting值进行平均，以获得平均遗忘值（图10中表示为Avg.For）。更详细的设置和实验报告见补充材料。</p><p>如图10所示，平均性能（Avg.Per）首先得到改善，然后随着λ值的增加而降低。最佳性能出现在λ=0.2（DSC=64.49%）。这可以解释为λ=0.2可能在训练阶段获得的力量和IL-TOA中额外监督的影响之间达到了最佳平衡。因此，我们在本工作的所有实验中都选择λ=0.2。另一个观察结果是，平均遗忘值随着λ的增大而减少。这一现象似乎与我们的LO的理论预测相一致（在第III-C.2节），即λ越大，对参数变化的惩罚越多，允许遗忘的知识越少（特别是，λ=0意味着我们的LO相当于一个天真的Dice loss）。</p><h2 id="discussion-and-conclusions"><a class="markdownIt-Anchor" href="#discussion-and-conclusions"></a> DISCUSSION AND CONCLUSIONS</h2><p>在本文中，我们首次将交互式学习融入到小样本分割方法中，以减轻传统监督式深度学习方法的注释负担，并解决已知小样本分割方法的常见问题。我们新的交互式小样本学习（IFSL）方法有效地使小样本分割模型在目标任务上以交互和可控的方式得到加强。实验结果证明了我们的IFSL方法的优越性，它在DSC中比所有最先进的小样本分割方法高出20%以上（如第四节C.1所示）。</p><p>除了我们的新想法和明显的性能改进，我们还发现了未来研究的几个关键方向。首先，在实践中，我们的交互式策略（IL-TTOA）可能会产生额外的时间成本（与天真的小样本的分割模型相比），因为它需要专家指出错误区域来修改我们的MPrNet的几个迭代过程。因此，开发一种更有效的方法来接收和利用对目标任务的额外监督是一个重要的方向，这可能会在性能和时间成本之间产生一个更好的权衡。第二，医学图像中的其他目标可能会出现在不同的位置（例如，CT堆栈中的脑瘤或病理图像中的病变）。将我们目前的方法应用于这些目标可能仍然面临巨大的挑战，我们将在未来的研究中考虑这个问题。也许，在主动学习策略的帮助下，仔细选择信息量最大的样本作为支持图像或用于细化阶段（用IL-TOA）会对上述两个方向有所帮助。</p><p>总而言之，我们发现了现有的小样本分割方法的缺点，即缺乏对目标任务的优化，并提出了一种新的IFSL方法来弥补这些缺点。据我们所知，我们是第一个在目标任务上通过额外的交互式监督使小样本的分割模型得到加强。此外，在临床应用中，我们的新优化算法（ILTTOA）可以以人类可控的方式，即时加强任何小样本的深度学习分割模型。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lightweight deep learning methods for panoramic dental X-ray image segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Lightweight-deep-learning-methods-for-panoramic-dental-X-ray-image-segmentation/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Lightweight-deep-learning-methods-for-panoramic-dental-X-ray-image-segmentation/</url>
      
        <content type="html"><![CDATA[<h1 id="lightweight-deep-learning-methods-for-panoramic-dental-x-ray-image-segmentation"><a class="markdownIt-Anchor" href="#lightweight-deep-learning-methods-for-panoramic-dental-x-ray-image-segmentation"></a> Lightweight deep learning methods for panoramic dental X-ray image segmentation</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>牙科X射线图像分割有助于协助临床医生检查牙齿状况和识别牙科疾病。在X射线成像系统中可能需要不使用云计算的快速和轻量级的分割算法来实现。本文旨在研究用于牙科X射线图像分割的轻量级深度学习方法，以便部署在边缘设备上，如牙科X射线成像系统。本文提出了一种使用知识提炼的新型轻量级神经网络方案。提出的轻量级方法和一些现有的轻量级深度学习方法在全景牙科X光图像数据集上进行了训练。这些轻量级的方法通过使用几个准确度指标进行了评估和比较。提出的轻量级方法只需要0.33万个参数（7:5兆字节）用于训练模型，而与其他轻量级方法相比，它在IoU（0.804）和Dice（0.89）方面取得了最佳性能。这项工作表明，所提出的牙科X射线图像分割方法需要很小的内存存储，同时它取得了比较好的性能。该方法可以部署在边缘设备上，并有可能帮助临床医生减轻他们的日常工作流程，提高分析质量。</p><h2 id="experimental-results"><a class="markdownIt-Anchor" href="#experimental-results"></a> Experimental results</h2><h3 id="41-the-data"><a class="markdownIt-Anchor" href="#41-the-data"></a> 4.1 The data</h3><p>本实验中用于评估我们算法的数据集包含1500张全景牙科X光图像[3, 37]。在这个数据集中有10个类别，但根据[37]的建议，类别5和6没有被用于我们的实验中，因为它们包括有种植牙和脱落牙的图像。最后，我们的实验中共使用了1321张牙科X射线全景图像。其中有432张图片用于训练，111张图片用于验证，778张图片用于测试。在我们的实验中，我们只通过归一化和调整大小对图像进行了预处理。通常情况下，图像的大小从1991x1127调整到256x256。</p><h3 id="42-evaluation-metrics"><a class="markdownIt-Anchor" href="#42-evaluation-metrics"></a> 4.2 Evaluation metrics</h3><p>在我们的实验中，出于比较的目的，使用了五个误差指标来评估这些算法，它们是交集大于联合（IoU）、Hausdorff距离（HD）、Dice系数（DC）、体积重叠误差（VOE）和相对体积差异（RVD）。它们描述如下。</p><p>IoU是一个评估检测图像中物体准确性的指标。它被用来衡量预测的盒子和包含真实物体的盒子之间的关联性。</p><p><img src="images/image-20230709124734754.png" alt="image-20230709124734754" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>P</mi><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{PB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表预测箱的面积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>T</mi><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{TB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表包含目标物体的真实箱的面积。</p><p>Hausdorff距离可以用来计算公制空间中两个集合之间的距离。这个距离可以解释为从集合的一个点到集合的另一个点的最短距离的最大值</p><p><img src="images/image-20230709124755773.png" alt="image-20230709124755773" /></p><p>其中sup表示最高值，inf表示下限值，并且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>i</mi><mi>n</mi><msub><mi>f</mi><mrow><mi>x</mi><mo>∈</mo><mi>Y</mi></mrow></msub><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(x,Y)=inf_{x \in Y}d(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p><p>Dice系数是一个集体相似性指标，定义为</p><p><img src="images/image-20230709124804110.png" alt="image-20230709124804110" /></p><p>其中Opred表示模型的分割输出图像，Otruth表示地面真相的分割图像。DC的范围是[0,1]，其中’1’表示预测与地面真相相同。在DC中，分子是预测和真相的交集，分母是联合。通常，在分子中，预测和地面真相的交集被计算了两次（图4.2）。一些实验表明，当预测和地面真相之间的交集不以2为因数时，Dice值会出现波动，很难成为一个稳定的指标。</p><p>与DC类似，VOE的定义如下。它表示错误率，[0,1]是其范围，其中’0’表示没有错误。</p><p><img src="images/image-20230709124813045.png" alt="image-20230709124813045" /></p><p>RVD是一个显示地面实况和预测之间体积差异的指标。它的值属于[0,1]，'0’意味着模型可以产生与地面实况相同的分割预测。RVD定义为</p><p><img src="images/image-20230709124822851.png" alt="image-20230709124822851" /></p><h3 id="43-settings-for-experiments"><a class="markdownIt-Anchor" href="#43-settings-for-experiments"></a> 4.3 Settings for experiments</h3><p>以下是用于训练所有模型的超参数。我们设置了200个epoch来训练模型。为了防止过度拟合，我们用20个历时作为容忍度来提前停止。我们观察到，大多数模型在50个 epochs左右就收敛了。学习率被设置为1e 3，批次大小被设置为4。为了使用蒸馏算法[27]，下面的类概率中的温度s被用作参数，在类上产生一个软概率分布：</p><p>我们在实验中设置s ¼ 4。请注意，s的数值越高，表明类上的概率分布越柔和。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>M3BUNet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/M3BUnet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/M3BUnet/</url>
      
        <content type="html"><![CDATA[<h1 id="m3bunet"><a class="markdownIt-Anchor" href="#m3bunet"></a> M3BUNet</h1><h2 id="3proposed-method"><a class="markdownIt-Anchor" href="#3proposed-method"></a> 3.Proposed Method</h2><p><img src="images/image-20240204032810596.png" alt="image-20240204032810596" /></p><blockquote><p>图 1：使用 M3BUNet 进行双阶段胰腺分割的总体工作流程：蓝色形状表示传统步骤，橙色块表示本工作中提出的其他新颖步骤。</p></blockquote><p>我们提出了一种在 CT 图像中分割胰腺的新技术，如图 1 所示。我们的方法包括三个关键阶段：预处理、分割第一阶段和分割第二阶段。下文将详细讨论每个阶段。我们方法的独特之处在于其独特的两阶段流程。初始阶段用于执行粗分割，而后续阶段则处理细粒度分割。顺便提一下，这两个阶段都使用相同的架构，这是一个简单而优雅的解决方案。我们技术的另一个显著特点是在初始阶段的预处理阶段加入了外部轮廓分割步骤。此外，在第二阶段，我们引入了小波分解部署，这种方法在以往的胰腺分割研究中鲜有探索。此外，我们还在网络架构（称为 M3BUNet）中引入了均值最大（MM）区块作为关注机制。这一机制增强了模型关注 CT 图像中相关信息的能力。总之，这些创新性的贡献使我们的技术在高效的同时也非常有效。</p><h3 id="31-pre-processing"><a class="markdownIt-Anchor" href="#31-pre-processing"></a> 3.1. Pre-processing</h3><p><img src="images/image-20240204032907542.png" alt="image-20240204032907542" /></p><blockquote><p>图 2：现有预处理步骤后的代表性原始图像。</p></blockquote><p>我们的预处理阶段受到一些现有研究的启发[12, 43, 44, 33]。我们利用了医学图像分析中已有的预处理技术，即通常所说的强度剪切、体素间隔、切片和 .PNG 转换。实施这些步骤后，我们对切片过程中的图像进行了视觉分析，找出了可能需要改进的地方。在我们的分析中，一个值得注意的现象是不同患者图像中腹部大小的差异，以及腹部形状外大量黑色像素和腹壁外白色像素的存在，类似于钢板扫描，如图 2 中的代表性图像所示。我们认为这些伪影是噪音，可能导致建模不准确。因此，为了解决这个问题，我们设计了一种外部轮廓分割策略。</p><h4 id="311-external-contour-segmentation"><a class="markdownIt-Anchor" href="#311-external-contour-segmentation"></a> 3.1.1. External Contour Segmentation</h4><p><img src="images/image-20240204032953403.png" alt="image-20240204032953403" /></p><blockquote><p>图 3：表示外部轮廓分割步骤的图像序列。</p></blockquote><p>为了确定外部轮廓，我们首先将图像转换成二值图像，将阈值设置在 [𝛿，255] 范围内，其中𝛿 根据经验确定为 77。选择这一阈值是为了消除不相关的背景和白钢板扫描。如图 3 所示，我们特别提取了外部轮廓，而忽略了物体内部的任何轮廓。我们发现，明显大于 𝛿 = 77 的阈值能检测到腹壁区域内其他物体的轮廓，而远小于此值的阈值仍会在腹壁外的背景中留下许多黑色像素。图 3B 显示，由此产生的类似圆形的线条与外部轮廓边界相互连接。我们将由此检测到的无关区域删除。处理的最终结果如图 3C 所示。此后，我们将图像尺寸标准化为 376 × 376。这样得到的图像对腹部外部轮廓的分割更为粗略。正如稍后的实验所证明的，这一简单的策略大大提高了我们技术的整体性能。</p><h3 id="32-segmentation-phase-one"><a class="markdownIt-Anchor" href="#32-segmentation-phase-one"></a> 3.2. Segmentation Phase One</h3><p>选择适当的感兴趣区（ROI）是胰腺分割的关键工作。大的感兴趣区可能会包含不必要的背景，从而降低模型性能，而小的感兴趣区则可能会排除胰腺的重要部分。我们第一阶段分割的主要目标是从预处理步骤（包括外部轮廓分割步骤）中获得的粗裁剪图像中保守地裁剪 ROI。在这一阶段，我们使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mn>3</mn><mi>B</mi><mi>U</mi><mi>n</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>𝑠</mi><mi>𝑡</mi><mi>𝑎</mi><mi>𝑔</mi><mi>𝑒</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">M3BUnet_{𝑠𝑡𝑎𝑔𝑒1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>训练我们的模型。为了保持讨论的流畅性，我们暂时将 M3BUNet 的讨论推迟到下一节。在此，我们强调一个关键概念，即在这一阶段，网络是以胰腺分割为目标对输入数据进行训练的。在这种情况下，网络的输出用于创建预测掩码，我们的目标是用它来粗略定位胰腺。</p><p>具体来说，我们通过考虑预测掩膜的极坐标，从掩膜中提取胰腺的可能边界框。这个边界框预计会包含胰腺，因为网络是为胰腺分割而训练的。我们会裁剪这个边界框区域，以便进一步处理。在这一检测阶段，我们要解决潜在的模型局限性，并处理 ROI 检测可能失败的情况。为此，我们实施了两项条件检查。首先，我们在所有坐标方向添加 15 个像素作为填充，以确保更好的覆盖范围。其次，如果模型无法检测到 ROI，我们会设置一个默认的 ROI，其尺寸为高（H）：168，宽（W）：229。这些值是通过目测评估 CT 扫描体积内预测的胰腺位置确定的。这些值不需要根据不同样本进行修改，因为图像尺寸已经标准化，这一点在上一节中已经解释过。</p><p>获得所有图像的 ROI 后，我们对 ROI 进行小波分解，以创建其他输入图像，并将其输入 M3BUNet。接下来将详细介绍我们的小波分解过程。</p><h4 id="321-wavelet-decomposition-for-multi-input"><a class="markdownIt-Anchor" href="#321-wavelet-decomposition-for-multi-input"></a> 3.2.1. Wavelet Decomposition for Multi Input</h4><p>虽然我们成功地减少了第一阶段分割结果中裁剪区域的大量背景，但胰腺和邻近器官之间的边界仍然显得模糊不清。为了解决这个问题，我们采用了离散小波变换分解技术（DWT）[45]，这是一种用于将信号或图像分析为低频和高频成分的技术。就图像而言，它可以将图像分解成一系列具有不同空间分辨率的图像。在 DWT 中，原始图像被分成几个分量，包括低频分量（通常称为 LL，代表 “Low-Low”）和高频分量（LH、HL、HH，分别代表 “Low-High”、&quot;High-Low &quot;和 “High-High”）。LL 分量代表空间分辨率较低的图像（或高频含量较低），而 LH、HL 和 HH 分量则代表捕捉图像细节的高频分量。一般来说，一维小波的缩放和平移函数公式如下：缩放函数如公式 1，小波函数如公式 2：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>W</mi><mi>φ</mi></msub><mo stretchy="false">(</mo><msub><mi>j</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mi>M</mi></msqrt></mfrac><munder><mo>∑</mo><mi>x</mi></munder><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>φ</mi><mrow><msub><mi>j</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W_\varphi(j_0,k)=\frac1{\sqrt{M}}\sum_xf(x)\varphi_{j_0,k}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05724em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5714449999999998em;vertical-align:-1.250005em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.1833349999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9266650000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-2.886665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11333499999999996em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>W</mi><mi>ψ</mi></msub><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mi>M</mi></msqrt></mfrac><munder><mo>∑</mo><mi>k</mi></munder><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>ψ</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W_\psi(j,k)=\frac1{\sqrt{M}}\sum_kf(x)\psi_{j,k}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ψ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.623553em;vertical-align:-1.3021129999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.1833349999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9266650000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-2.886665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11333499999999996em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>其中，𝜑(𝑗0, 𝑘)是使用缩放函数𝜑 在水平𝑗0 和位置𝑘 上变换的结果。𝜓 (𝑗, 𝑘)是使用小波函数𝜓 在水平𝑗 和位置𝑘 上进行变换的结果。1 √ 𝑀 是归一化因子。𝑓 (𝑥) 是将要变换的信号。𝜑𝑗0,𝑘(𝑥)和𝜓𝑗,𝑘(𝑥)分别是水平𝑗0 和𝑗上以及位置𝑘上的缩放函数和小波函数。</p><p><img src="images/image-20240204033533717.png" alt="image-20240204033533717" /></p><blockquote><p>图 4：2-D 小波分解</p></blockquote><p>图 4 所示为低通滤波器𝜓、高通滤波器𝜑、卷积运算 ∗ 和向下采样运算。</p><p><img src="images/image-20240204033612432.png" alt="image-20240204033612432" /></p><blockquote><p>图 5：馈送到 M3BUNet 的代表性多输入图像</p></blockquote><p>我们使用 Daubechies 滤波器[46]进行两级小波分解，每级有四个系数。在本实验中，我们只提取垂直详细系数高频级 1 和 2 作为额外输入。随后，我们将这些分解后的图像结果与第一阶段分割后裁剪的原始图像一起作为网络输入。因此，我们的附加输入由 1 级和 2 级分解的高频成分组成，如图 5 所示，它们主要强调图像中的边缘纹理。从图中可以看出，原始图像的高频分解提供了更清晰的边缘细节。分解级别越高，胰腺的纹理和边界越明显。</p><h3 id="33-segmentation-phase-two"><a class="markdownIt-Anchor" href="#33-segmentation-phase-two"></a> 3.3. Segmentation Phase Two</h3><p>这一阶段是拟议的 M3BUNet 的直接应用。因此，在本节中，我们将详细讨论我们的网络。如图 6 所示，我们的网络采用了编码器-解码器骨干网与 MM-Block 相结合的形式。在图中，我们还提供了拟议 MM-Block 的架构。下文将详细讨论网络的各个组成部分。</p><h4 id="331-m3bunet-encoder-decoder"><a class="markdownIt-Anchor" href="#331-m3bunet-encoder-decoder"></a> 3.3.1. M3BUNet Encoder-Decoder</h4><p><strong>Encoder:</strong> <strong>鉴于医学图像训练数据有限，我们在技术上采用了迁移学习。我们利用在另一个数据集（ImageNet）上预先训练好的 MobileV2Net 模型 [47] 作为任务的基础。在大型非医疗数据集上利用预训练模型的权重已被证明可以提高图像分割任务的性能[48]</strong>。随后，我们进行了微调。<strong>从原始架构的 17 个区块中，我们选择了 0 到 13 个区块</strong>。在编码器的初始层，通道数设置为 32。虽然我们没有对 [47] 的原始结构进行重大改动，但由于存在从原始 MobileNetV2 结构继承的反转残差块，我们在编码器中进行了参数缩减。我们架构设计的一个独特之处是，将编码器部分采用深度卷积的精简布局与解码器部分采用标准二维卷积的稍重布局相结合。过小的模型可能会影响精度，因此在编码器中考虑了参数数量和精度之间的平衡。</p><p><strong>Decoder:</strong> 我们模型的解码器部分采用 UNet 架构[5]，所有卷积滤波器的大小均为 3x3。为了保持合理的模型大小，我们选择了中等数量的滤波器，即 128、64、32 和 16。在解码器部分，我们采用了所提出的新型 MMBlock。我们的 MMBlock 结构将在下一小节中详细阐述。</p><h4 id="332-mm-block"><a class="markdownIt-Anchor" href="#332-mm-block"></a> 3.3.2. MM BLock</h4><p><img src="images/image-20240204052926814.png" alt="image-20240204052926814" /></p><blockquote><p>Figure 6: Proposed M3BUNet with MM-Block</p></blockquote><p><img src="images/image-20240204052246523.png" alt="image-20240204052246523" /></p><blockquote><p>图 7：建议的 Mean-Max 块提取并融合保留位置信息的互补特征。 (A) 从病例 73、切片 115 中随机选择的输入图像，用于 NIH 胰腺数据集中的轴向视图。 (B) 代表性特色频道。 © 平均和最大池的结果。 （四）融合。 (E-F) 预测准确度为 91% 以及真实情况</p></blockquote><p>这是一种基于卷积的注意力机制，由两条注意力路径组成。我们选择 3x3 卷积，而不是更大的核大小，以避免丢失相邻像素的细节，这与 [18] 中使用的方法不同。最初，编码器和解码器的裁剪-卷积产生的输入特征进入 MM-Block。这就是 “F”。随后，&quot;F &quot;会经过一些操作。其一是对所有信道进行平均池化，其二是最大池化。将这两种操作的结果结合起来，就能增强学习到的描述符特征。下面给出的等式 3 和 4 用于计算沿通道轴的平均池化和平均池化。这两种运算虽然功能不同，但可以互补。跨通道平均池化旨在捕捉胰腺的整体特征。相反，如图 7 所示，跨通道最大汇集旨在捕捉器官最突出的特征。从图中可以看出，在进行均值-最大池化操作之前，激活特征图仍包含大量背景信息。随后，均值汇集操作提供了胰腺形状的总体概况，而最大值汇集操作则更清晰地突出了胰腺的边缘。将这两种操作的特征图融合在一起，可将注意力引向胰腺的关键特征。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">g</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>C</mi></mfrac><munderover><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathrm{MeanPooling}(x)=\frac1C\sum_{c=1}^Cx(i,j,c),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">M</span><span class="mord mathrm">e</span><span class="mord mathrm">a</span><span class="mord mathrm">n</span><span class="mord mathrm">P</span><span class="mord mathrm">o</span><span class="mord mathrm">o</span><span class="mord mathrm">l</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">g</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathrm{MaxPooling}(x)=\max_{c=1}^Cx(i,j,c),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">M</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span><span class="mord mathrm">P</span><span class="mord mathrm">o</span><span class="mord mathrm">o</span><span class="mord mathrm">l</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.925999em;vertical-align:-0.717108em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.208891em;"><span style="top:-2.382892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span><span style="top:-3.63056em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.717108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>ConcatenatedResult</mtext><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>MeanPooling(x)</mtext><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>MaxPooling(x)</mtext><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\text{ConcatenatedResult}(i,j)=\begin{bmatrix}\text{MeanPooling(x)}(i,j)\\\text{MaxPooling(x)}(i,j)\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">ConcatenatedResult</span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">MeanPooling(x)</span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">MaxPooling(x)</span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>其中，𝑖、𝑗 表示特征空间指数，𝑐 是信道。给定输入特征图 𝑥′ 和 3x3 卷积滤波器权值 𝑥，使用的卷积运算可描述为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">v</mi><mi mathvariant="normal">R</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">s</mi></mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><mn>1</mn></munderover><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><mn>1</mn></munderover><mi>W</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⋅</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mi>m</mi><mo separator="true">,</mo><mi>j</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{ConvRes}(i,j)=\sum_{m=-1}^1\sum_{n=-1}^1W(m,n)\cdot x^{\prime}(i+m,j+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">C</span><span class="mord mathrm">o</span><span class="mord mathrm">n</span><span class="mord mathrm" style="margin-right:0.01389em;">v</span><span class="mord mathrm">R</span><span class="mord mathrm">e</span><span class="mord mathrm">s</span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>逐点卷积的计算公式为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">v</mi><mi mathvariant="normal">R</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">s</mi></mrow><mrow><mn>1</mn><mi>x</mi><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathrm{F}(x)=\sigma(\mathrm{ConvRes}^{1x1})+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">F</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.137338em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">C</span><span class="mord mathrm">o</span><span class="mord mathrm">n</span><span class="mord mathrm" style="margin-right:0.01389em;">v</span><span class="mord mathrm">R</span><span class="mord mathrm">e</span><span class="mord mathrm">s</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.887338em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">x</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p><p>其中，𝜎 是激活函数。</p><p>下一个注意力路径是新颖的点向卷积路径。在该路径中，我们使用滤波器进行点向卷积，然后使用西格玛激活。在这条路径中，通道维数有所减少，然后使用 sigmoid 激活进行注意力计算。此外，图 6 中用 &quot;D &quot;表示的第一条通路的特征图与用 &quot;H &quot;表示的第二条通路的点式注意力融合，并在与原始特征图合并之前进行通道转换。这种策略有助于网络理解不同通道特征之间的相互作用。最终得到的是一个关注胰腺重要区域的最终特征图。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>One-Shot Learning for Semantic Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/One-Shot-Learning-for-Semantic-Segmentation/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/One-Shot-Learning-for-Semantic-Segmentation/</url>
      
        <content type="html"><![CDATA[<h1 id="one-shot-learning-for-semantic-segmentation"><a class="markdownIt-Anchor" href="#one-shot-learning-for-semantic-segmentation"></a> One-Shot Learning for Semantic Segmentation</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>用于图像分类的小样本学习方法支持从稀疏的数据中学习。我们将这些技术扩展到支持密集的语义图像分割。具体来说，我们训练一个网络，给定一小群有注释的图像，产生一个全卷积网络（FCN）的参数。我们使用这个FCN对新语义类别的测试图像进行密集的像素级预测。与PASCAL VOC 2012数据集中对未见过的类别进行一次性分割的最佳基线方法相比，我们的架构显示出25%的相对平均误差，并且至少快3倍。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>深度神经网络在解决计算机视觉中的分类问题方面非常强大。然而，用这些模型学习分类器需要大量的标记训练数据，而且最近的方法很难以一种有效的数据方式适应新的类别。人们对使用一次性学习方法从有限的数据中快速学习新概念感兴趣[21, 37]。一次性图像分类是指只给每个类别的单一训练实例进行图像分类的问题[22, 39]。</p><p>我们建议进行单次语义图像分割。我们的目标是为一个语义类别（如马、公共汽车等）预测一个像素级的分割掩码，只给出一张图像和其相应的像素级注释。在这里，我们把新类别的图像-标签对称为支持集，但对于K-shot学习来说，支持集更多地是指K个图像和标签。</p><p>进行一次性语义图像分割的一个简单方法是在已标注的图像上微调一个预先训练好的分割网络[3]。由于有数百万个参数被更新，这种方法很容易出现过拟合。它还引入了优化的复杂性，像步长、动量、迭代次数等参数可能难以确定。相比之下，最近的一次性图像分类方法[22, 39]则是元学习一个分类器，当以少数训练实例为条件时，可以在新的类别上表现良好。由于全卷积神经网络（FCN）[26]将分割作为像素级的分类，我们可以直接扩展这些一次性方法，在像素级进行分类。然而，数以千计的密集特征是从一张图像中计算出来的，而一击即中的方法并不能很好地适应这么多的特征。我们在第6节通过实现对[22]中的连体网络的扩展作为基线来说明这个问题。</p><p><img src="images/image-20240103144124154.png" alt="image-20240103144124154" /></p><blockquote><p>图 1：概述。S 是来自新语义类别的注释图像。在我们的方法中，我们将 S 输入一个函数 g，该函数输出一组参数 θ。我们使用 θ 对学习到的分割模型的一部分进行参数化，该模型在给定 Iq 的情况下生成分割掩码。</p></blockquote><p>我们从几张照片的学习中得到启发，提出了一种新颖的双分支方法来进行一次性语义图像分割。第一个分支将标记的图像作为输入，并产生一个参数向量作为输出。第二个分支将这些参数以及新的图像作为输入，并产生一个新类别的图像分割掩码作为输出。这在图1中得到了说明。与单次学习的微调方法不同，它可能需要SGD的多次迭代来学习分割网络的参数，而我们网络的第一个分支在一次前向传递中计算参数。这有几个优点：单次前向传递使我们的方法很快；我们的一次学习方法是完全可微调的，允许该分支与我们网络的分割分支联合训练；最后，参数θ的数量与图像的大小无关，所以我们的方法在扩展方面没有问题。</p><p>为了衡量一次性语义分割的性能，我们在PASCAL VOC 2012数据集[11]上定义了一个新的基准（第5节）。训练集包含来自PASCAL类别子集的标记图像，而测试集有训练中不存在的类别的注释。如第7节所述，在标准的meanIoU（mean Intersection over Union）指标方面，我们在这个基准上显示出比基线有明显的改进。</p><p>我们通过对K个图像中的每一个独立地应用我们的单次拍摄方法来产生K个分割掩码，从而扩展到K次拍摄学习。然后，我们通过在像素水平上进行逻辑OR操作来汇总这些掩码。这种方法，除了容易实现和快速之外，还不需要重新训练，就可以推广到支持集中的任何数量的图像。我们在第7节中展示了它的有效性，即在支持集中每增加一个图像，平均IOU的准确性就会增加。</p><p>PASCAL VOC只包含20个类，与用于训练一次性分类方法的标准数据集如Omniglot（1623）[24]和ImageNet（1000）（[10]）相比，这个数据集很小。在训练过程中模拟单次任务，即使有如此有限的类的数量，也能表现良好。这与通常的观念相反，即为少数次学习训练模型需要大量的类。我们假设，我们的算法对未见过的类有很好的泛化能力，这部分能力来自于在ImageNet上进行的预训练，ImageNet包含大量类的弱图像级注释。我们在7.1节中对预训练进行了实验。</p><p>本文有以下贡献：</p><p>（1）我们提出了一种新的单次分割技术，其性能优于基线，同时保持明显的速度；</p><p>（2）我们表明，我们的技术可以在没有新类的弱标签的情况下做到这一点；</p><p>（3）我们表明，即使只有少数类有强注释，元学习也可以有效进行；</p><p>（4）我们为PASCAL上具有挑战性的k-shot语义分割任务设立了一个基准。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>语义图像分割是将图像中的每个像素归入预定的类别集合的任务。基于卷积神经网络（CNN）的方法推动了该领域最近的成功。其中一些方法对超级像素进行分类[13, 15, 27]，另一些则直接对像素进行分类[6, 16, 26, 28]。我们的方法基于用于语义分割的完全卷积网络（FCN）[26]，它显示了像素级分类的效率。然而，与FCN和上述其他方法不同的是，我们并不假设有大量的注释训练数据用于测试类。</p><p>弱监督。用于语义分割的弱监督和半监督方法减少了对昂贵的像素级注释的要求，因此引起了最近的兴趣。弱监督是指从边界框[9]或图像标签[30, 31, 33]等粗略的注释进行训练。一个值得注意的例子是共同分割，其目标是寻找和分割图像中来自同一语义类别的共同出现的物体[12, 35]。许多共同分割算法[8, 17, 34]假定一批物体的视觉外观是相似的，并且要么依赖手工调整的低级特征，要么依赖为不同任务或物体训练的高级CNN特征[34]。相比之下，我们通过元学习网络来产生一个新的语义类别的高级表征，给定一个单一的标记的例子。半监督的方法[18, 19, 30]将弱的标签与一小套像素级的注释结合起来。然而，他们假设每个所需对象都有一大组弱标签。例如，Pathak等人[32]使用PASCAL 2012训练集[11]中所有类别和图像的图像级注释，而我们从PASCAL训练集中排除了所有测试类别的注释。</p><p>Few-Shot学习算法试图将通过训练期间看到的类获得的知识推广到只有少数训练实例的新类[25, 36, 39]。鉴别性方法中，基础分类器的参数（在训练类上学习的）适应于新的类别[1, 2, 14, 40]与我们的工作密切相关。主要的挑战是，适应的分类器很容易过度适应新出现的训练例子。Wang和Herbert[40]通过学习预测与基础分类器保持接近的分类器来解决这一挑战。Bertinetto等人[2]训练了一个双分支网络，其中一个分支接收一个例子并预测一组动态参数。第二个分支使用动态参数和一组学习的静态参数对查询的图像进行分类。Noh等人在[29]中使用了一个类似的方法来回答问题。我们从这些论文中吸取了一些想法，并将它们用于密集分类的任务，以设计我们的模型。公制学习是另一种小样本学习的方法[22, 39]。它的目的是学习一个嵌入空间，将相同类别的对象拉近，同时将不同类别的对象推开。Koch等人[22]表明，为二元验证任务训练的连体结构可以在k-shot图像分类中击败几个分类基线。我们将他们的方法用于图像分割，作为我们的基线之一。</p><h2 id="3-problem-setup"><a class="markdownIt-Anchor" href="#3-problem-setup"></a> 3. Problem Setup</h2><p>让支持集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msubsup><mi>I</mi><mi>s</mi><mi>i</mi></msubsup><mo separator="true">,</mo><msubsup><mi>Y</mi><mi>s</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mo stretchy="false">}</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">S=\{(I_s^i,Y_s^i(l))\}_{i=1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>是一个由k个图像-二元掩码对组成的小集合，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mi>s</mi><mi>i</mi></msubsup><mo>∈</mo><msubsup><mi>L</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">Y_s^i\in L_{test}^{H\times W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.127218em;vertical-align:-0.24575599999999997em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.881462em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999997em;"><span></span></span></span></span></span></span></span></span></span>测试是图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>I</mi><mi>s</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">I_{s}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>的分割注释，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mi>s</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y_s^i(l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个图像在语义类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>∈</mo><msub><mi>L</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">l\in L_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的掩码。我们的目标是学习一个模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>I</mi><mi>q</mi></msub><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(I_q,S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>，当给定支持集S和查询图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">I_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>时，预测语义类l的二进制掩码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>M</mi><mo>^</mo></mover><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">\hat{M}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.232878em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>在训练期间，该算法可以访问一大组图像-掩码对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>I</mi><mi>j</mi></msup><mo separator="true">,</mo><msup><mi>Y</mi><mi>j</mi></msup><mo stretchy="false">)</mo><msubsup><mo stretchy="false">}</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup></mrow><annotation encoding="application/x-tex">D=\{(I^j,Y^j)\}_{j=1}^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.236103em;vertical-align:-0.394772em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Y</mi><mi>j</mi></msup><mo>∈</mo><msubsup><mi>L</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">Y^j\in L_{train}^{H\times W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.863764em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.158326em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.881462em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span>是训练图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">I^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span>的语义分割掩码。在测试时，查询图像只被注释为新的语义类别，即$L_{train}\cap L_{test}=\varnothing $。这是与典型的图像分割的关键区别，在这种分割中，训练和测试类别是相同的。虽然这个问题与K-shot学习相似，后者在图像分类方面已经被广泛研究[36, 39]，但将其应用于分割需要一些修改。</p><p>在这个问题上，与图像分类不同，Ltest的例子可能会出现在训练图像中。当一个不知道某些物体类别的注释者将其标记为背景时，这一点就会被自然地处理。Ltest对象的注释被排除在训练集之外，而只要有Ltrain的对象存在，图像就会被包括在内。最先进的图像分割算法[4，5]使用在大规模图像分类数据集上预训练的网络，如[10]。虽然这些权重给了模型一个较好的起点，但它们仍然需要许多分割的图像和成千上万的权重更新来学习一个良好的像素分类模型。即使对于直接重叠的类别也是如此。对于我们的问题，我们通过用在ImageNet[10]上预先训练的权重来初始化VGG，允许类似的访问弱注释。然而，在第7.1节中，我们表明，即使从预训练中排除所有的重叠类，也不会降低我们方法的性能。</p><h2 id="4-proposed-method"><a class="markdownIt-Anchor" href="#4-proposed-method"></a> 4. Proposed Method</h2><p><img src="images/image-20240103150508130.png" alt="image-20240103150508130" /></p><blockquote><p>图 2：模型架构。调节分支接收图像-标签对，并为逻辑回归层 c（-，w，b）生成一组参数 {w，b}。分割分支是一个 FCN，接收查询图像作为输入，并输出 conv-fc7 的strided 特征。通过 c(-,w,b)对像素级特征进行分类，生成预测掩码，然后将其上采样到原始尺寸。</p></blockquote><p>我们提出了一种方法，第一分支接收支持集S中的标记图像作为输入，第二分支接收查询图像Iq。在第一个分支中，我们输入图像-标签对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>I</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=(I_s,Y_s(l))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>以产生一组参数: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo>=</mo><msub><mi>g</mi><mi>η</mi></msub><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w, b=g_{\eta}(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">η</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>在另一个分支中，我们使用参数化嵌入函数φ从Iq中提取密集的特征体。让<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>q</mi></msub><mo>=</mo><msub><mi mathvariant="bold-italic">ϕ</mi><mi>ζ</mi></msub><mo stretchy="false">(</mo><msub><mi>I</mi><mi>q</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_q=\boldsymbol{\phi}_\zeta(I_q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.130248em;vertical-align:-0.380248em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">ϕ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2419679999999999em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07378em;">ζ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.380248em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>成为从Iq中提取的特征量，那么Fmn q就是空间位置（m, n）的特征向量。然后用第一层的参数对特征进行像素级的逻辑回归，得到最终的掩码。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mover accent="true"><mi>M</mi><mo>^</mo></mover><mi>q</mi><mrow><mi>m</mi><mi>n</mi></mrow></msubsup><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msup><mi>w</mi><mi mathvariant="normal">⊤</mi></msup><msubsup><mi>F</mi><mi>q</mi><mrow><mi>m</mi><mi>n</mi></mrow></msubsup><mo>+</mo><mi>b</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{M}_{q}^{m n}=\sigma\left(w^{\top} F_{q}^{m n}+b\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.329878em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.282216em;vertical-align:-0.383108em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><p>这里，σ（…）是sigmoid函数，ˆ Mmn q是查询的预测面具的（m，n）位置。这可以理解为一个卷积层，参数为{w, b}，后面有一个sigmoid激活函数，参数在训练后并不固定，通过支持集中的每张图片的第一个分支得到计算。然后使用标准的双线性插值将预测的掩码上采样到原始图像大小。最终的二进制遮罩是通过在Mq上使用0.5的阈值产生的。图2说明了整体结构。我们在下面的小节中更详细地解释该架构的每一部分。</p><h3 id="41-producing-parameters-from-labeled-image"><a class="markdownIt-Anchor" href="#41-producing-parameters-from-labeled-image"></a> 4.1 Producing Parameters from Labeled Image</h3><p>我们修改了[38]中的VGG-16架构来为函数gη（-）建模。</p><p><strong>Masking.</strong><br />我们选择用相应的标签来掩盖图像，因此它只包含目标物体，而不是修改第一层来接收四通道图像掩码对作为输入。我们这样做是出于以下两个经验上的原因。(1) 即使在有掩码的情况下，网络响应也倾向于偏向于图像中最大的物体，而这可能不是我们想要分割的物体。(2) 在输入中包括背景信息增加了输出参数{w, b}的方差，这使网络无法收敛。 </p><p><strong>Weight Hashing.</strong><br />受Noh等人[29]的启发，我们采用了[7]中的权重散列层，将VGG最后一层的1000维向量输出映射到{w, b}的4097维。这种映射避免了由于全连接层引入大量的额外参数而导致的过度拟合。我们将其有效地实现为一个具有固定权重的全连接层。这在补充材料中有更详细的解释。</p><h3 id="42-dense-feature-extraction"><a class="markdownIt-Anchor" href="#42-dense-feature-extraction"></a> 4.2 Dense Feature Extraction</h3><p>我们通过FCN-32s全卷积架构[26]对嵌入函数Fq=φζ（Iq）进行建模，不包括最后的预测层。然后，在conv-fc7的4096个通道特征量被送入上述的逻辑像素分类器。在第7节中，我们还评估了具有第8步的高分辨率扩张-FCN[41]的性能。</p><h3 id="43-training-procedure"><a class="markdownIt-Anchor" href="#43-training-procedure"></a> 4.3 Training Procedure</h3><p>我们通过在每次迭代时从训练集Dtrain中取样支持集S、查询图像Iq及其相应的二进制掩码Mq来模拟训练期间的一次拍摄任务。首先，从Dtrain中均匀地随机抽取一个图像-标签对（Iq,Yq），然后我们从语义掩码中存在的类中均匀地抽取一个类l∈Ltrain，用它来产生二进制掩码Yq(l)。S是通过从Dtrain-{(Iq,Yq)}中随机挑选一个有l类存在的图像-面具对形成的。然后，我们可以通过网络的前向传递来预测掩码ˆMq。我们最大限度地提高地面真实面具的对数似然性：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">L</mi><mo stretchy="false">(</mo><mi>η</mi><mo separator="true">,</mo><mi>ζ</mi><mo stretchy="false">)</mo><mo>=</mo><mi><munder><mo><mi mathvariant="double-struck">E</mi></mo><mrow><mi>S</mi><mo separator="true">,</mo><msub><mi>I</mi><mi>q</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mi>q</mi></msub><mo>∼</mo><msub><mi>D</mi><mtext>train </mtext></msub></mrow></munder></mi><mrow><mo fence="true">[</mo><munder><mo>∑</mo><mrow><mi>m</mi><mo separator="true">,</mo><mi>n</mi></mrow></munder><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mrow><mi>η</mi><mo separator="true">,</mo><mi>ζ</mi></mrow></msub><mrow><mo fence="true">(</mo><msubsup><mi>M</mi><mi>q</mi><mrow><mi>m</mi><mi>n</mi></mrow></msubsup><mo>∣</mo><msub><mi>I</mi><mi>q</mi></msub><mo separator="true">,</mo><mi>S</mi><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\mathcal{L}(\eta, \zeta)=\underset{S, I_{q}, M_{q} \sim D_{\text {train }}}{\mathbb{E}}\left[\sum_{m, n} \log p_{\eta, \zeta}\left(M_{q}^{m n} \mid I_{q}, S\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal">L</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.136113em;vertical-align:-1.386113em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68889em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∼</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">train </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathbb">E</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.941651em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">η</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.07378em;">ζ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p><p>这里η和ζ是网络参数，pη,ζ是给定神经网络输出的掩码的概率，S、Iq和Mq是通过上述的抽样策略进行抽样。我们使用随机梯度下降法，固定学习率为10-10，动量为0.99，批次大小为1。VGG网络的过拟合速度比完全卷积分支快；因此，我们将学习参数η的学习率乘数设置为0.1。我们在60k次迭代后停止训练。</p><h3 id="44-extension-to-k-shot"><a class="markdownIt-Anchor" href="#44-extension-to-k-shot"></a> 4.4 Extension to k-shot</h3><p>在k-shot分割的情况下，支持集包含k个标记的图像，S = {Ii s,Y i s (l)}k i=1。我们使用这些图像来产生k个参数{wi, bi}k i=1的集合。它们中的每一个都可以理解为是一个集合体的独立分类器。我们注意到这些分类器有很高的精度，但召回率很低。我们认为这是因为每个分类器都是由支持集中的一个例子产生的，而一张图片只能包含物体可能出现的一小部分子集。因此，我们将这些分类器的决定结合起来，如果一个像素被这些分类器中的任何一个认为是物体，就将其纳入最终的遮罩中。这被实现为k个二进制遮罩之间的逻辑OR操作。这种方法的好处是，它不需要任何再训练，而且可以推广到任何k。如第7节所示，它也比基线快很多。</p><h2 id="5-dataset-and-metric"><a class="markdownIt-Anchor" href="#5-dataset-and-metric"></a> 5 Dataset and Metric</h2><p><strong>Dataset:</strong> 我们使用PASCALVOC 2012[11]中的图像和注释以及SDS1[15]中的扩展注释创建了一个新的数据集PASCAL-5i，用于解决K-shot图像分割的问题。我们从PASCALVOC的20个语义类的集合L中抽取5个，并将其视为测试标签集Ltest = {4i + 1, … ，4i + 5}，其中i为折叠数，其余的15个构成训练标签集Ltrain。测试和训练类的名称如表5所示。我们通过将PASCALVOC和SDS训练集中的所有图像-掩码对纳入训练集Dtrain，这些掩码在标签集Ltrain的语义掩码中至少包含一个像素。Dtrain中的遮罩被修改，使任何具有语义类别6= Ltrain的像素被设置为背景类别l∅。我们遵循类似的程序来形成测试集Dtest，但这里的图像-标签对来自PASCALVOC验证集，相应的标签集是Ltest。因此，除了一些例外情况外，这组图像与图像分割论文中使用的图像相似，如FCN [26]。然而，注释是不同的。考虑到测试集Dtest，我们使用与第4.3节所述相同的程序对每个测试实例{S, (Iq,Yq(l))}进行采样。我们对N=1000个例子进行抽样，并将其作为测试下一节中描述的每个模型的基准。</p><p><strong>Metric:</strong> 给定一组预测的二元分割掩码{ ˆ Mq}N i=1和一个语义类l的地面真实注释掩码{Mq}N i=1，我们定义每类的交叉联合（IoUl）为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>t</mi><msub><mi>p</mi><mi>l</mi></msub></mrow><mrow><mi>t</mi><msub><mi>p</mi><mi>l</mi></msub><mo>+</mo><mi>f</mi><msub><mi>p</mi><mi>l</mi></msub><mo>+</mo><mi>f</mi><msub><mi>n</mi><mi>l</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{t p_{l}}{t p_{l}+f p_{l}+f n_{l}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3577719999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8766639999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。这里，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>t</mi><mi>p</mi></mrow><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">{tp}_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85922em;vertical-align:-0.24414em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span></span>是真阳性的数量，fpl是假阳性的数量，fnl是掩码集合上的假阴性的数量。平均IoU只是其在类集上的平均值，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mn>1</mn><mi mathvariant="normal">/</mi><msub><mi>n</mi><mi>l</mi></msub><mo fence="true">)</mo></mrow><msub><mo>∑</mo><mi>l</mi></msub><mi>I</mi><mi>o</mi><msub><mi>U</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">\left(1 / n_{l}\right) \sum_{l} I o U_{l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1863979999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。这是图像分割文献中定义的平均IU的标准指标，适用于我们的二元分类问题。</p><h2 id="6-baselines"><a class="markdownIt-Anchor" href="#6-baselines"></a> 6 Baselines</h2><p>我们用不同的基线来评估我们方法的性能。由于一次性图像分割是一个新问题，我们调整了以前的密集像素预测工作，作为基线进行比较。</p><ul><li><p><strong>Base Classifiers:</strong> CNN学习图像的深度表征，所以这些模型是分类的一个直观起点。具体来说，我们首先对在ILSVRC2014数据上预训练的FCN-32进行微调，对PASCAL-5i数据集进行16路（15个训练前景类+1个背景类）像素级的预测。在测试期间，我们从支持集的图像和查询图像中提取密集的像素级特征。然后，我们训练分类器，将支持集中密集的fc-7特征映射到其相应的标签上，并使用它来生成预测的掩码ˆMq。我们试验了各种分类器，包括1-NN和逻辑回归。</p></li><li><p><strong>Fine-tuning:</strong> 正如文献[3]所建议的，在每次测试迭代中，我们在支持集中的例子上对训练好的分割网络进行微调，并在查询图像上进行测试。我们只对全连接层（fc6, fc7, fc8）进行微调，以避免过度拟合和减少每个查询的推理时间。我们还发现，如果我们通过批量归一化层将fc-7的特征归一化，那么微调后的网络收敛得更快。</p></li><li><p><strong>Co-segmentation by Composition:</strong> 为了与这些技术进行比较，我们将公开的[12]在PASCAL-5i上的实现3的结果包括在内。</p></li><li><p><strong>Siamese Network for One-shot Dense Matching:</strong> 为图像验证而训练的连体网络，即预测两个输入是否属于同一类别，在单次图像分类上表现出良好的性能[22]。我们通过使用两个FCN来提取密集的特征，然后训练它用于像素验证。我们还学习了从查询图像中的每个像素到支持集中的每个像素的相似度指标，然后根据支持集中的最近邻居对像素进行标注。实施细节在补充文件中提供。</p></li></ul><h2 id="7-experiments"><a class="markdownIt-Anchor" href="#7-experiments"></a> 7. Experiments</h2><p>我们进行了几个实验，通过与其他方法的比较，评估我们的方法在kshot图像分割任务上的性能。表1报告了我们的方法在1-shot和5-shot设置中的性能，并将其与基线方法进行了比较。为了将5张照片的连体网络装入内存，我们从支持集的特征中取样，取样率为0.3。然而，次取样大大降低了方法的性能，5次取样的结果比1次取样的结果更差，所以我们排除了这些结果。</p><p>我们的方法对新的类别显示出更好的泛化性能。这种差异在单次学习中非常明显，因为其他方法只对支持集中的图像进行过度拟合。具体来说，我们的方法在单次图像分割中优于1-NN和微调方法，相对于平均IoU为25%。我们还在图4中提供了我们方法的一些定性结果。令人惊讶的是，1-NN的结果几乎和微调基线一样好，微调基线对支持集中的数据迅速过度。</p><p>在表1中，我们还将Co-segmentation by Composition[35]用于5张照片的分割与我们的方法进行了比较。正如预期的那样，使用强大的像素级注释使我们的方法优于无监督的共同分割方法，提高了16%。事实上，我们只用一张强注释的图像就可以超越需要5张弱注释的图像的共同分割结果。</p><p><strong>Dilated-FCN:</strong> 除了我们方法的低分辨率版本外，我们还在PASCAL-50上用更高的分辨率训练了扩张的FCN，在1次拍摄和5次拍摄中分别取得了37.0%和37.43%的平均IoU。我们注意到单次拍摄比低分辨率有3.4%的改进，然而，在这种分辨率下，单次拍摄和5次拍摄之间的差距很小。我们认为这是由于我们的训练是专门针对1-shot问题的。由于高计算成本或内存占用造成的不切实际，我们没有将扩张的FCN架构用于其他方法。</p><p><strong>Running Time:</strong> 在表2中，我们包括每个算法的运行时间。所有的实验都是在一台拥有4GHz英特尔Core-i7 CPU、32GB内存和Titan X GPU的机器上进行的。在单次设定中，我们的方法比第二快的逻辑回归方法快3倍。对于5次拍摄，我们的方法比逻辑回归快10倍。</p><h3 id="71-pretraining-effect"><a class="markdownIt-Anchor" href="#71-pretraining-effect"></a> 7.1 Pretraining Effect</h3><p>以上比较的模型有两个信息来源，即通过预训练得到的ImageNet[10]中类的图像级标签和Ltrain中类的像素级注解。虽然测试类Ltest与Ltrain没有重叠，但它们与ImageNet的一些类有部分重叠。为了理解这种影响，我们使用了一个数据集，其中排除了ImageNet中所有与PASCAL类别有任何重叠的类别，称为PASCAL-removedImageNet，如[20]。这个数据集只包含771个类，而原来是1000个，因为PASCAL中的每个类通常都与ImageNet的多个类重叠。我们使用在ImageNet和PASCAL-removed-ImageNet（来自Huh等人[20]）上训练的AlexNet[23]，其足够数量分别为1000和771。我们用AlexNet替换了我们方法中两个分支的VGG和FCN，从而得到AlexNet-1000和AlexNet-771。我们还有一个基线，即在PASCAL上对卷积AlexNet特征进行微调的Logistic回归，类似于第6节中描述的基础分类器。我们将其称为LogReg-1000和LogReg-771。图3包含了这些模型在第一个折叠上的结果，即PASCAL-50。请注意，这两个基线的结果是恒定的，因为我们只在网络收敛后才对其进行评估。</p><p>在图3中，我们观察到AlexNet-1000最初的表现更好，并显示出更快的收敛。然而，在收敛之后，AlexNet-771的表现与AlexNet-1000相当。最初的差距可以理解为，即使是Ltrain类也没有在预训练中出现。AlexNet是一个比较简单的模型，表现比VGG差，表5中的平均IOU为33.6%。然而，AlexNet-771甚至超过了我们最好的VGG基线，即PASCAL-50的Siamese的28.1%。这一结果表明，我们可以在没有任何弱监督的情况下将其推广到新的类别。相比之下，LogReg-1000的表现优于LogReg-771，说明它没有能力在没有看到测试类别的弱标签的情况下学习一个好的表示。这凸显了元学习对于这项任务的重要性。</p><h1 id="8-conclusion"><a class="markdownIt-Anchor" href="#8-conclusion"></a> 8. Conclusion</h1><p>深度学习方法已经在许多计算机视觉问题上取得了顶尖的表现。然而，在给定的几个例子中，学习一个新的概念仍然是一项非常具有挑战性的任务。在本文中，我们开发了一个新的架构来解决图像分割的这个问题。我们的架构可以学习一个集合分类器，并使用它来对查询图像中的像素进行分类。通过综合实验，我们显示了我们算法的明显优势。所提出的方法比其他基线快得多，而且内存占用更小。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHTrans</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/PHTrans/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/PHTrans/</url>
      
        <content type="html"><![CDATA[<h1 id="phtrans"><a class="markdownIt-Anchor" href="#phtrans"></a> PHTrans</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract.</h2><p>Transformer在计算机视觉领域的成功引起了医学影像界越来越多的关注。特别是在医学图像分割方面，许多基于卷积神经网络（CNN）和Transformer的优秀混合架构已被提出，并取得了令人印象深刻的性能。然而，这些将模块化的Transformer嵌入到CNN中的方法，大多数都难以发挥其全部潜力。在本文中，我们提出了一种用于医学图像分割的新型混合架构，称为PHTrans，它将Transformer和CNN并行地混合在主要构件中，从全局和局部特征中产生层次化的表征，并自适应地聚合它们，旨在充分利用它们的优势来获得更好的分割性能。具体来说，PHTrans遵循U形编码器-解码器的设计，并在深层阶段引入了并行的hybird模块，其中卷积块和修改后的3D Swin Transformer分别学习局部特征和全局依赖，然后通过序列到体积的操作来统一输出的维度，实现特征聚合。在颅顶以外的多图集标签和自动心脏诊断挑战者数据集上的大量实验结果证实了其有效性，一直优于最先进的方法。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>医学图像分割旨在提取和量化生物组织/器官图像中的感兴趣区域，这对疾病诊断、术前规划和干预至关重要。受益于深度学习的优秀表征学习能力，卷积神经网络（CNN）在医学图像分析中取得了巨大的成功。许多优秀的网络模型（如U-Net[14]、3D U-Net[4]和Attention U-Net[12]）已经出现，不断刷新着各种分割任务的性能上限。尽管取得了极具竞争力的结果，但基于CNN的方法由于固有的归纳性偏差，如位置性和平移等价性，缺乏对长距离依赖关系的建模能力。一些研究人员通过增加卷积核的大小[13]、使用反转卷积[20]和嵌入自我注意机制[17]来缓解这一问题。然而，只要卷积操作仍然是网络结构的核心，它就不能从根本上得到解决。</p><p>Transformer[15]，纯粹依靠注意力机制来模拟全局依赖关系，而没有任何卷积操作，已经成为一种替代架构，在大规模数据集上进行预训练的条件下，在计算机视觉（CV）中提供比CNN更好的性能。其中，Vision Transformer（ViT）[5]将图像分割成一连串的标记，并用堆叠的Transformer块来模拟它们的全局关系，这给CV领域带来了革命性的变化。Swin Transformer[11]可以在可移动窗口中以较低的计算复杂度产生分层特征表示，在各种CV任务中取得最先进的性能。然而，医学图像数据集在量级上比上述作品中预训练的数据集（如ImageNet-21k和JFT-300M）小得多，因为医学图像并不总是可用的，而且需要专业的注释。因此，Transformer在医学图像分割中产生的性能并不令人满意。同时，出现了许多由CNN和Transformer组合而成的混合结构，它们具有两者的优点，并逐渐成为医学图像分割的折中方案，而无需在大型数据集上进行预训练。</p><p>我们总结了几种在医学图像分割中基于Transformer和CNN的流行混合架构。这些混合架构将Transformer添加到以CNN为骨干的模型中，或者替换架构的部分组件。例如，UNETR[7]和Swin UNETR[2]使用了编码器-解码器结构，其中编码器是由一个用自我注意和多层感知器（即Transformer）构建的级联块组成，而解码器是堆叠的卷积层，见图1（a）。TransBTS[16]和TransUNet[3]在CNN组成的编码器和解码器之间引入了一个Transformer，见图1(b)。MISSFormer[8]和CoTr[18]通过Transformer桥接了从编码器到解码器的所有阶段，而不仅仅是相邻的阶段，这就抓住了多尺度的全球依赖性，见图1©。此外，nnFormer[21]将Transformer和卷积块交错成一个混合模型，其中卷积编码精确的空间信息，而自我注意捕捉全局背景，见图1（d）。从图1可以看出，这些架构从宏观角度实现了Transformer和CNN的串行组合。尽管如此，在串行组合中，卷积和自我注意不能贯穿整个网络架构，使得它很难连续地对局部和全局表征进行建模，所以它没有充分挖掘其潜力。</p><p>在本文中，我们提出了一种用于医学图像分割的并行混合变换器（PHTrans），其中主要的构建模块包括CNN和Swin变换器，以同时聚合全局和局部表征，见图1（e）。在PHTrans中，我们将标准的Swin Transformer扩展到三维版本，通过提取分割体积的三维斑块并构建三维自我关注机制。鉴于Swin Transformer的分层特性可以方便地利用U-Net[11]等先进技术进行密集预测，我们沿用了成功的U型架构设计，引入了序列和体积的转换操作，实现了Swin Transformer和CNN在一个块中的并行组合。与串行混合架构相比，PHTrans可以独立构建分层的局部和全局表征，并在每个阶段进行融合，充分挖掘了CNN和转化器的潜力。大量的实验证明了我们的方法在各种医学图像分割任务上相对于其他竞争方法的优越性。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202211081108991.png" alt="" /></p><blockquote><p>图1 变换器和CNN的几种混合架构的比较。(在线彩色图)</p></blockquote><h2 id="2-method"><a class="markdownIt-Anchor" href="#2-method"></a> 2 Method</h2><h3 id="21-整体架构"><a class="markdownIt-Anchor" href="#21-整体架构"></a> 2.1 整体架构</h3><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221108110943168.png" alt="image-20221108110943168" style="zoom:200%;" /><blockquote><p>图2 (a)PHTrans的结构；(b)由Transformer和convolution（Trans&amp;Conv块）组成的并行hybird块。</p></blockquote><p><img src="images/image-20221116095938932.png" alt="image-20221116095938932" /></p><blockquote><p>图3：（a）Swin Transformer（Swin-T）的结构；（b）两个连续的Swin Transformer区块（用公式（3）表示）。W-MSA和SW-MSA是多头自我注意模块，分别具有常规和移位的窗口配置。</p></blockquote><p>图2(a)显示了PHTrans的结构概况。PHTrans遵循U型编码器和解码器的设计，主要由纯卷积模块和平行混合模块组成。我们的初衷是构建一个由Transformer和CNN组成的完全混合的架构，但由于自我注意机制的高计算复杂性，Transformer不能直接接收作为标记的像素的输入。<strong>在我们的实现中，引入了级联的卷积块和下采样操作来减少空间大小，从而逐步提取具有高分辨率的低层次特征，以获得精细的空间信息。同样，这些纯卷积模块也被部署在解码器的同一阶段，通过上采样恢复原始图像尺寸。</strong></p><p>给定一个输入体积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>D</mi></mrow></msup></mrow><annotation encoding="application/x-tex">x∈\mathbb{R}^{H×W×D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span></span></span></span>，其中H、W和D分别表示高度、宽度和深度，我们首先利用几个纯卷积模块来获得特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mfrac><mi>H</mi><msup><mn>2</mn><msub><mi>N</mi><mn>1</mn></msub></msup></mfrac><mo>×</mo><mfrac><mi>W</mi><msup><mn>2</mn><msub><mi>N</mi><mn>1</mn></msub></msup></mfrac><mo>×</mo><mfrac><mi>D</mi><msup><mn>2</mn><msub><mi>N</mi><mn>1</mn></msub></msup></mfrac><mo>×</mo><msup><mn>2</mn><msub><mi>N</mi><mn>1</mn></msub></msup><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f \in \mathbb{R}^{\frac{H}{2^{N_{1}}} \times \frac{W}{2^{N_{1}}} \times \frac{D}{2^{N_{1}}} \times 2^{N_{1}} C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.172925em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.172925em;"><span style="top:-3.52956em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.3974142857142855em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0907200000000001em;"><span style="top:-3.09072em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6025857142857144em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.3974142857142855em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0907200000000001em;"><span style="top:-3.09072em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6025857142857144em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.3974142857142855em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0907200000000001em;"><span style="top:-3.09072em;margin-right:0.1em;"><span class="pstrut" style="height:2.6833299999999998em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6025857142857144em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，其中N1和C分别表示模块的数量和基础通道。之后，由Transformer和CNN组成的并行混合模块被应用于从局部和全局特征中建立分层表示的模型。该过程重复<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>次，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><msup><mn>2</mn><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>+</mo><msub><mi>N</mi><mn>2</mn></msub></mrow></msup></mfrac><mo>×</mo><mfrac><mi>W</mi><msup><mn>2</mn><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>+</mo><msub><mi>N</mi><mn>2</mn></msub></mrow></msup></mfrac><mo>×</mo><mfrac><mi>D</mi><msup><mn>2</mn><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>+</mo><msub><mi>N</mi><mn>2</mn></msub></mrow></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac{H}{2^{N_{1}+N_{2}}} \times \frac{W}{2^{N_{1}+N_{2}}} \times \frac{D}{2^{N_{1}+N_{2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2492409999999998em;vertical-align:-0.3769099999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.62309em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8098714285714286em;"><span style="top:-2.8217785714285717em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3769099999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2492409999999998em;vertical-align:-0.3769099999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.62309em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8098714285714286em;"><span style="top:-2.8217785714285717em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3769099999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2492409999999998em;vertical-align:-0.3769099999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.62309em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8098714285714286em;"><span style="top:-2.8217785714285717em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.10903em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3769099999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>为输出结果，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>+</mo><msub><mi>N</mi><mn>2</mn></msub></mrow></msup><mi>C</mi></mrow><annotation encoding="application/x-tex">2^{N_1+N_2} C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>为通道数。与编码器相对应，对称解码器同样是基于纯卷积模块和并行混合模块建立的，并通过跳过连接和加法运算融合编码器的语义信息。此外，在训练过程中，我们在解码器的每个阶段都使用深度监督，共产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>+</mo><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_1 + N_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个输出，其中应用了由交叉熵和骰子损失组成的联合损失。PHTrans的结构简单明了且可改变，其中每个模块的数量可根据医学图像分割任务进行调整，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是并行混合模块中Swin Transformer块和卷积块的数量。</p><h3 id="22-parallel-hybrid-module"><a class="markdownIt-Anchor" href="#22-parallel-hybrid-module"></a> 2.2 Parallel Hybrid Module</h3><p>并行混合模块被部署在PHTrans的深层阶段，其中Trans&amp;Conv块作为其核心，通过CNN和Swin Transformer实现了局部和全局表征的分层聚合。</p><h5 id="transconv-block"><a class="markdownIt-Anchor" href="#transconv-block"></a> Trans&amp;Conv block.</h5><p>经过缩减的特征图分别被送入Swin Transformer（ST）块和Conv（Conv）块。我们在ST块的开头和结尾分别引入体积到序列（V2S）和序列到体积（S2V）操作，以实现体积和序列的转换，使其与Conv块产生的输出的维度空间相一致。具体来说，V2S用于将整个体积（三维图像）重塑为具有窗口大小的三维斑块序列。S2V则是相反的操作。如图2（b）所示，一个ST块由一个基于移位窗口的多头自我注意（MSA）模块组成，然后是一个2层MLP，中间有一个GELU激活函数。在每个MSA模块和每个MLP之前都有一个LayerNorm（LN）层，每个模块之后都有一个残差连接[11]。在M1的连续ST块中，具有常规和移位窗口配置的MSA，即W-MSA和SW-MSA，被交替嵌入ST块中，以实现跨窗口连接，同时保持非重叠窗口的有效计算。</p><p>对于医学图像分割，我们将标准的ST块修改为3D版本，在局部的3D窗口内计算自我注意力，这些窗口的排列以非重叠的方式均匀地分割了体积。假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>S</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">x∈\mathbb{R}^{H×W×S\times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>是ST块的输入，它将首先被重塑为N×L×C，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>W</mi><mi>h</mi></msub><mo>×</mo><msub><mi>W</mi><mi>w</mi></msub><mo>×</mo><msub><mi>W</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">L=W_h×W_w×W_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别表示3D窗口的数量和维度。每个头部的自我注意力计算为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Attention</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">SoftMax</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><mi>d</mi></msqrt></mfrac><mo>+</mo><mi>B</mi><mo fence="true">)</mo></mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">\operatorname{Attention}(Q, K, V)=\operatorname{SoftMax}\left(\frac{Q K^{T}}{\sqrt{d}}+B\right) V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">A</span><span class="mord mathrm">t</span><span class="mord mathrm">t</span><span class="mord mathrm">e</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span><span class="mord mathrm">i</span><span class="mord mathrm">o</span><span class="mord mathrm">n</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.468361em;vertical-align:-0.95003em;"></span><span class="mop"><span class="mord mathrm">S</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">M</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.17778em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">d</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mtext>、</mtext><mi>K</mi><mtext>、</mtext><mi>V</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>L</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Q、K、V∈\mathbb{R}^{L×d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>是查询、键和值矩阵，d是查询/键维度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>L</mi><mo>×</mo><mi>L</mi></mrow></msup></mrow><annotation encoding="application/x-tex">B∈\mathbb{R}^{L×L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span></span></span></span></span>是相对位置偏差。我们将一个较小尺寸的偏置矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>B</mi><mo>^</mo></mover><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mrow><mo fence="true">(</mo><mn>2</mn><msub><mi>W</mi><mi>h</mi></msub><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><mo>×</mo><mrow><mo fence="true">(</mo><mn>2</mn><msub><mi>W</mi><mi>w</mi></msub><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><mo>×</mo><mrow><mo fence="true">(</mo><mn>2</mn><msub><mi>W</mi><mi>s</mi></msub><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">\hat{B} \in \mathbb{R}^{\left(2 W_{h}-1\right) \times\left(2 W_{w}-1\right) \times\left(2 W_{s}-1\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9858699999999999em;vertical-align:-0.0391em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span><span class="mbin mtight">×</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span><span class="mbin mtight">×</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>中的值取自<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>B</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>。</p><p>卷积块以3×3×3卷积层、GELU非线性和实例归一化层为单位重复M2次。卷积块的配置简单而灵活，任何现成的卷积网络都可以应用。最后，我们通过加法运算将ST块和Conv块的输出融合在一起。编码器中Trans&amp;Conv块的计算过程可以总结为以下:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>S</mi><mn>2</mn><mi>V</mi><mrow><mo fence="true">(</mo><mi>S</mi><msup><mi>T</mi><msub><mi>M</mi><mn>1</mn></msub></msup><mrow><mo fence="true">(</mo><mi>V</mi><mn>2</mn><mi>S</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><mi>C</mi><mi>o</mi><mi>n</mi><msup><mi>v</mi><msub><mi>M</mi><mn>2</mn></msub></msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">y_{i}=S 2 V\left(S T^{M_{1}}\left(V 2 S\left(x_{i-1}\right)\right)\right)+C o n v^{M_{2}}\left(x_{i-1}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2413409999999998em;vertical-align:-0.35001em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>是编码器第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>−</mo><msup><mn>1</mn><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i-1^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span>级的下采样结果。在解码器中，除了跳过连接，我们用加法运算来补充来自编码器的上下文信息。因此，解码器中的Trans&amp;Conv块可以表述为:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><mi>S</mi><mn>2</mn><mi>V</mi><mrow><mo fence="true">(</mo><mi>S</mi><msup><mi>T</mi><msub><mi>M</mi><mn>1</mn></msub></msup><mrow><mo fence="true">(</mo><mi>V</mi><mn>2</mn><mi>S</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><mi>C</mi><mi>o</mi><mi>n</mi><msup><mi>v</mi><msub><mi>M</mi><mn>2</mn></msub></msup><mrow><mo fence="true">(</mo><mrow><mo fence="true">[</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">]</mo></mrow><mo fence="true">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">z_{i}=S 2 V\left(S T^{M_{1}}\left(V 2 S\left(x_{i+1}+y_{i}\right)\right)+C o n v^{M_{2}}\left(\left[x_{i+1}, y_{i}\right]\right)\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2413409999999998em;vertical-align:-0.35001em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>是解码器第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><msup><mn>1</mn><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i+1^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span>级的上采样结果，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是编码器第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mrow><mi>t</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span>级的输出。</p><h5 id="下采样和上采样"><a class="markdownIt-Anchor" href="#下采样和上采样"></a> 下采样和上采样</h5><p>下采样包含一个分层卷积操作和一个实例归一化层，其中通道数量减半，空间大小加倍。同样，上采样是一个分层去卷积层，然后是一个实例归一化层，其中特征图的通道数增加了一倍，空间大小减半。在所有维度上，跨度一般设置为2。然而，当三维医学图像是各向异性的，关于特定维度的跨度被设置为1。</p><h2 id="3-experiments"><a class="markdownIt-Anchor" href="#3-experiments"></a> 3 Experiments</h2><h3 id="31-dataset"><a class="markdownIt-Anchor" href="#31-dataset"></a> 3.1 Dataset</h3><p>颅顶以外的多图谱标记（BCV）[10]包括30个病例，有3779张轴向腹部临床CT图像。与[21]类似，该数据集被分成18个训练样本和12个测试样本。并采用平均DiceSimilarity系数（DSC）和平均Hausdorff距离（HD）作为评价指标，对8个腹部器官（主动脉、胆囊、脾脏、左肾、右肾、肝脏、胰腺、脾脏、胃）进行评价。</p><p>自动心脏诊断挑战赛（ACDC）[1]数据集是使用MRI扫描仪从不同的病人身上收集的。对于每个病人的MR图像，左心室（LV）、右心室（RV）和心肌（MYO）都被标记。按照文献[21]，70个样本被划分为训练集，10个样本被划分为验证集，20个样本被划分为测试集。平均DSC被用来评估我们在这个数据集上的方法。</p><h3 id="32-implementation-details"><a class="markdownIt-Anchor" href="#32-implementation-details"></a> 3.2 Implementation Details</h3><p>为了进行公平的比较，我们采用了 nnUNet[9] 的代码框架来评估 PHTrans 的性能，与 CoTr[18] 和 nnFormer[21] 相同。所有的实验都是在 nnUNet 的默认配置下进行的。在PHTrans中，我们根据经验将超参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>N</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>N</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[N_1,N_2,M_1,M_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>设置为[2,4,2,2]，并采用nnU-Net[9]的stride策略进行下采样和上采样，无需精心设计。此外，通道C的基数为24，不同编码器阶段使用的多头自瞄头数为［3,6,12,24］。对于BCV和ACDC数据集，我们将3D窗口<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>W</mi><mi>h</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>s</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[W_h,W_w,W_s]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>的大小分别设置为[3,6,6]和[2,8,7]的ST块。在训练阶段，我们分别从BCV和ACDC数据集中随机裁剪出大小为48×192×192和16×256×224的子卷作为输入。我们在PyTorch 1.9下实现了PHTrans，并使用单个GeForce RTX 3090 GPU进行了实验。</p><h3 id="33-results"><a class="markdownIt-Anchor" href="#33-results"></a> 3.3 Results</h3><h5 id="comparing-with-state-of-the-arts"><a class="markdownIt-Anchor" href="#comparing-with-state-of-the-arts"></a> Comparing with State-of-the-arts.</h5><p>我们将PHTrans的性能与之前最先进的方法进行了比较。除了介绍中提到的混合架构外，还包括，LeVIT-Unet[19]，SwinUnet[2]，和nnU-Net[9]。此外，我们通过将UNETR[7]编码阶段的ViT修改为Swin变换器，再现了Swin UNETR[6]，并以同样的方式评估了UNETR和Swin UNETR的性能，使用的数据集分区与我们相同。BCV数据集上的分割结果如表1所示。我们的PHTrans以88.55%(DSC↑)和8.68(HD↓)取得了最佳性能，并且在平均DSC上超过以前的最佳模型0.8%，在HD上超过了1.15。图3中的代表性样本证明了PHTrans识别器官细节的成功，例如，第1、2行的 &quot;胃 &quot;和第2行的 “左肾”。对ACDC数据集的分割结果见表2。同样，很明显，PHTrans通过获得最高的平均DSC而与其他最先进的方法竞争。值得一提的是，Swin-Unet、TransUNet、LeViT和nnFormer使用ImageNet上的预训练权重来初始化他们的网络，而PHTrans是在两个数据集上从头开始训练的。此外，在BCV实验中，我们比较了参数数量和FLOPs来评估3D方法的模型复杂性，即nformer、CoTr、nnU-Net、UNETR、Swin UNETR和PHTrans。如表3所示，PHTrans的参数很少（36.3M），其FLOPs（187.4G）明显低于CoTr、nnU-Net和Swin UNETR。综上所述，PHTrans在BCV和ACDC数据集上的实验结果充分证明了其出色的医学图像分割和泛化能力，并保留了适度的模型复杂性。</p><p><img src="https://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221108113530392.png" alt="image-20221108113530392" /></p><h5 id="ablation-study"><a class="markdownIt-Anchor" href="#ablation-study"></a> Ablation Study.</h5><p>以修改后的三维Swin-Unet为基线，我们逐步整合了PHTrans的组件，以探索不同组件对模型性能的影响。表4提供了该架构的消融研究的定量结果。&quot;+PCM &quot;表示使用堆叠的纯卷积模块，而不是使用分层卷积操作进行斑块分割，而 &quot;w/o PCM &quot;则表示相反。&quot;w/o ST &quot;表示PHTrans中的并行混合模块去掉了Swin Transformer块，从而形成了与nnU-Net类似的架构。从这些结果可以看出，3D Swin-Unet和PHTrans的性能被PCM提高了，这要归功于它在前几个阶段捕捉细粒度细节的能力。此外，与单一架构相比，PHTrans带来了更明显的性能提升，在平均DSC和HD中分别比 &quot;3D Swin-Unet+PCM &quot;和 &quot;PHTrans w/o ST &quot;高出3.6%和0.84%。这些结果表明，使用CNN和Transformer的并行组合策略来聚合全局和局部表征是有效的。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221108113546359.png" alt="image-20221108113546359" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221108113559123.png" alt="image-20221108113559123" /></p><h5 id="discussion"><a class="markdownIt-Anchor" href="#discussion"></a> Discussion.</h5><p>在PHTrans中，应用了一个虚无的Swin变换器和简单的卷积块，这表明与最先进的技术相比，显著的性能提升来自于并行混合架构设计，而不是变换器和CNN块。此外，PHTrans没有进行预训练，因为到目前为止还没有足够大的多用途三维医学图像的数据集。从以上考虑，在未来，我们将精心设计Transformer和CNN模块，并探索如何对Transformer进行端到端的预训练，以进一步提高分割的性能。</p><h2 id="4-conclusions"><a class="markdownIt-Anchor" href="#4-conclusions"></a> 4 Conclusions</h2><p>在本文中，我们提出了一个基于Swin Transformer和CNN的并行混合架构（PHTrans），用于精确的医学图像分割。与其他将模块化变换器嵌入CNN的混合架构不同，PHTrans在整个模型中构建了由Swin变换器和CNN组成的混合模块，它不断聚合来自全局和局部特征的层次化表示，以充分发挥两者的优势。在BCV和ACDC数据集上的大量实验表明，我们的方法优于几个最先进的替代方案。作为一个万能的架构，PHTrans很灵活，可以用现成的卷积和变换器模块来代替，这为更多的下游医学图像任务提供了新的可能性。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MedAugment</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/MedAugment%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/MedAugment%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="medaugment-universal-automatic-data-augmentation-plug-in-for-medical-image-analysis"><a class="markdownIt-Anchor" href="#medaugment-universal-automatic-data-augmentation-plug-in-for-medical-image-analysis"></a> MedAugment: Universal Automatic Data Augmentation Plug-in for Medical Image Analysis</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>在计算机视觉领域，数据增强（DA）被广泛用于缓解数据短缺问题，而医学图像分析（MIA）中的数据增强则面临多重挑战。医学图像分析中流行的数据增强方法包括传统数据增强、合成数据增强和自动数据增强。然而，这些方法的使用带来了各种挑战，如经验驱动的设计和密集的计算成本。在此，我们提出了一种高效的自动图像增强方法–MedAugment。我们提出了像素增强空间和空间增强空间，并排除了可能破坏医学图像细节和特征的操作。此外，我们还提出了一种新颖的采样策略，即从这两个空间中采样有限数量的操作。此外，我们还提出了一种超参数映射关系，以产生合理的增强级别，并使 MedAugment 可通过单个超参数进行完全控制。这些修订解决了自然图像和医学图像之间的差异。在四个分类和三个分割数据集上的大量实验结果证明了 MedAugment 的优越性。我们认为，即插即用、无需训练的 MedAugment 有可能为医学领域做出宝贵贡献，尤其是对缺乏深度学习基础专业知识的医学专家而言。</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><ul><li><p>医学影像分析（MIA）采用各种成像模式来创建人体内部的可视化表示，并协助进一步的医学诊断。目前，医学影像分析主要由医学专家进行，这一耗时耗力的过程可能会导致解释和准确性的差异。为此，深度学习（DL）被引入 MIA 领域，以协助 MIA，尤其是主流的分类和分割任务。虽然基于深度学习的 MIA 取得了可喜的成果[1-4]，但在数据稀缺的情况下确保深度学习模型的性能仍具有挑战性。与自然图像[5]不同，医疗图像分析中的数据稀缺主要归因于两个因素。首先，收集医学图像需要专业设备，并需要专家注释。其次，收集到的图像的分发受到病人隐私问题的限制[6]。在这种情况下，人们提出了各种技术来缓解数据短缺问题，而数据增强（DA）是最普遍、最有效的一种技术[7]。数据扩增通过增强数据的多样性和丰富性来提高模型的性能和泛化能力，其在 MIA 领域的普遍应用包括传统数据扩增、合成数据扩增和自动数据扩增。</p><p>传统 DA 方法利用各种 DA 操作（如旋转、翻转和平移[7]）来组成不同的 DA 管道。这种方法虽然在 MIA 中直接有效 [8-12]，但也带来了明显的挑战。操作选择、顺序调整和幅度确定等管道设计在很大程度上依赖于经验。这可能不适合没有扎实 DL 基础的人员，并可能导致次优的增强多样性。利用生成式对抗网络（GAN）[13]来执行 DA 是最流行的合成方法之一。生成式对抗网络包括生成器和判别器进行对抗游戏，生成器学习合成逼真的人工图像，判别器则努力区分真实图像和合成图像。然而，在 MIA 中使用 GAN [14-23] 面临着各种挑战，包括耗时且耗费数据的训练 [24, 25]，以及合成质量的参差不齐。除了利用 GAN 外，一些研究人员还利用扩散模型 [26] 来增强医学图像 [27-30]。然而，这种方法面临采样速度低、计算成本高等问题 [29]。</p><p>自动诊断[31-36]由一个包含各种常规操作的增强空间组成，通过从空间中采样的操作对输入进行增强。这可以为输入产生不同的增强，从而提高数据多样性和模型泛化能力。虽然已有多种自动数据分析方法[31-40]适用于 MIA，但这些方法可能不适合医学图像，而且计算量很大。无处不在的数据短缺问题[20, 41, 42]，再加上遇到的扩增挑战，在很大程度上影响了模型在 MIA 中的表现。为了解决数据短缺问题和所面临的挑战，我们提出了一种高效的自动增强方法 MedAugment。与现有的单一增强空间方法相比，我们提出了两个增强空间，即像素增强空间 Ap 和空间增强空间 As，并排除了可能破坏医学图像细节和特征的操作。此外，我们还提出了一种新颖的操作采样策略，即限制从两个空间采样的操作数量。此外，我们还提出了一种超参数映射关系，以产生合理的增强水平，并使 MedAugment 只需一个超参数即可完全控制。这些修改有效地解决了自然图像和医学图像之间的差异。在四个分类和三个分割数据集上的大量实验结果证明了所提出的 MedAugment 的领先性。即插即用、无需训练的 MedAugment 可使 MIA 社区受益，尤其是那些没有坚实 DL 基础的医学专家。总之，我们的主要贡献是</p></li><li><p>我们提出了一种高效的自动数据扩增方法，称为 MedAugment。MedAugment 即插即用，无需训练，可同时执行医学图像分类和分割任务。</p></li><li><p>我们提出了像素增强空间和空间增强空间，以及新颖的采样策略和超参数映射关系，以有效解决自然图像和医学图像之间的差异。</p></li><li><p>我们在四个分类和三个分割数据集上进行了广泛的实验，结果证明了所提出的 MedAugment 的优越性。</p></li></ul><p>本文接下来的内容安排如下。第 2 节 &quot;相关工作 &quot;介绍了自动数据分析和 MIA 中数据分析的最新进展。第 3 节 &quot;方法 &quot;讨论了所建议的 MedAugment 的详细方法。第 4 节 &quot;实验与结果 &quot;展示了数据集、实验设置和主要结果。我们还进行了详细的分析和消融实验。我们在第 5 节 &quot;结论 &quot;中总结了我们的工作并指出了未来的展望。</p><h2 id="related-work"><a class="markdownIt-Anchor" href="#related-work"></a> Related Work</h2><h3 id="21-automatic-data-augmentation"><a class="markdownIt-Anchor" href="#21-automatic-data-augmentation"></a> 2.1. Automatic Data Augmentation</h3><p>人们开发了许多自动 DA 方法，将常规操作结合起来以提高模型性能。2019 年，Cubuk 等人[31] 开发了一种 AutoAugment，其中搜索空间中的一个策略由多个子策略组成，每个子策略针对每幅图像随机选择。每个子策略由从 16 个中选出的两个 DA 操作组成。虽然 AutoAugment 取得了可喜的性能，但 DA 策略是使用强化学习方法搜索的，因此计算成本较高。为此，Lim 及其同事[32]提出了 “快速自动增强”（Fast AutoAugment），通过在配对训练数据集上进行密度匹配来确定增强策略。Fast AutoAugment 基于贝叶斯 DA [43]，可以在策略搜索阶段通过贝叶斯优化恢复额外的缺失数据点。此外，Ho 等人[33] 提出了一种基于群体的增强方法，以产生非平稳策略而非固定策略。这些方法虽然降低了搜索成本，但并没有消除单独的搜索阶段。因此，Cubuk 及其同事开发了一种 RandAugment [34] 方法，在这种方法中，具有相同增强水平的多个 DA 运算被依次利用。RandAugment 的增强空间包括 14 个操作。与 RandAugment 类似的工作包括 TrivialAugment [35]，该方法利用单一操作，并对每幅图像的增强级别重新采样。此外，UniformAugment [36] 将操作次数固定为两次，并以 p = 0.5 的概率放弃每次操作。除了连续利用 DA 操作外，另一种方法是并行组合这些操作。例如，AugMix[44] 从九个操作中随机抽样各种操作，组成一个增强链。虽然这些方法有效且计算量低，但它们的使用在 MIA 领域提出了各种挑战。首先，反转、均衡和日晒等操作会破坏医学图像中错综复杂的细节和特征。其次，采样策略往往会忽略医学图像对亮度、对比度和海报化等操作的高度敏感性。最后，亮度和对比度等操作会破坏掩膜中存储的灰阶类别信息，从而限制模型在图像分割方面的性能。</p><h3 id="22-data-augmentation-in-mia"><a class="markdownIt-Anchor" href="#22-data-augmentation-in-mia"></a> 2.2. Data Augmentation in MIA</h3><p>大多数研究人员在 MIA 中采用 DA 方法[7]，普遍使用的方法有三个方面。首先，大多数研究都利用了传统的 DA。例如，Kaushik 等人[11] 利用平移、旋转、缩放、翻转等方法增强眼底图像，用于糖尿病视网膜病变诊断。Khened 及其同事[10]利用旋转、平移、缩放、高斯噪声等方法增强数据集，用于心脏分割。此外，Isensee 等人开发的 nnU-Net [12]利用预设的 DA 管道，依次进行旋转、缩放、高斯噪声、高斯模糊等不同操作。虽然传统的检测方法简单有效，但管道设计严重依赖经验，可能会导致次优的增强多样性。其次，很大一部分研究人员采用 GAN 等合成模型来合成人工图像。例如，Beers 及其同事[22] 证明了利用 PGGAN[45] 合成眼底和胶质瘤图像的可行性。Calimeri 等人[46] 采用 LAPGAN[46] 生成脑磁共振成像图像。此外，2022 年开发的 DPGAN [14] 由三个变异自动编码器 GAN 组成，用于合成人工图像和标签。利用基于 GAN 的方法会面临各种挑战，如训练耗时、数据量大、合成质量参差不齐等。一些研究集中于采用扩散模型来执行合成 DA 作为替代方法。例如，Moghadam 等人[27] 利用扩散模型、颜色归一化和优先形态加权生成组织病理学图像。Pinaya 及其同事[28] 利用潜在扩散模型[47] 合成了三维人工大脑图像。此外，2023 年开发的 MGCC [30] 在进行半监督分割时，将潜在扩散模型 [47] 生成的图像用作非标记数据。不过，这类方法可能会受到采样速度低和计算成本高的限制。第三，一些研究人员利用了自动 DA 方法。例如，Qin 等人[37] 开发了一种联合学习策略，将分割模块和 Dueling DQN[48] 结合起来，以寻求最大的性能改进。Xu 及其同事[38] 提出了一种使用随机松弛和蒙特卡罗方法更新参数的可微分方法。2022 年开发的 AADG 框架[39] 包含一个新的代理任务，利用 Sinkhorn 距离最大化各种增强域之间的多样性。此外，Yang 等人[40] 利用验证精度来更新递归神经网络的控制器。这些方法都面临计算成本的挑战。</p><h2 id="methods"><a class="markdownIt-Anchor" href="#methods"></a> Methods</h2><h3 id="31-medaugment"><a class="markdownIt-Anchor" href="#31-medaugment"></a> 3.1. MedAugment</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003418306.png" alt="image-20231122003240037" /></p><p>我们在图 1 中展示了拟议的 MedAugment 的实现过程。MedAugment 包含 N = 4 个增强分支和一个用于保留输入特征的独立分支。我们设计了两个增强空间 Ap 和 As，并排除了可能破坏医学图像细节和特征的操作。Ap 和 As 分别包含 6 个和 8 个 DA 操作。此外，我们还开发了一种操作抽样策略 Π 来限制从两个空间中抽样的操作数量，从而在每个增强分支中产生 M = {2, 3} 个连续的 DA 操作。此外，我们还提出了一种新颖的映射关系，以产生合理的增强水平，并肯定了在单一增强水平 l = 5 的情况下，每个操作的最大幅度和概率都是可控的。这些修正能有效处理自然图像和医学图像之间的差异。值得注意的是，有些操作（如水平翻转）不具备幅度。总之，MedAugment 从三个方面引入了随机性，包括策略层面、操作层面和幅度层面。对于每个输入图像，MedAugment 都会使用采样策略对每个分支的操作进行采样。然后对采样的操作进行洗牌。最后，用洗牌后的操作对输入图像进行增强，其中操作幅度在最大幅度内均匀采样，概率根据 l 确定。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003240037.png" alt="image-20231122003303028" /></p><blockquote><p>图 1：MedAugment 的实现。MedAugment 由 N = 4 个增强分支和一个用于保留输入特征的独立分支组成。对于每个分支，使用采样策略 Π 从像素增强空间 Ap 和空间增强空间 As 对 M = {2, 3} DA 操作进行采样。</p></blockquote><h3 id="32-augmentation-spaces"><a class="markdownIt-Anchor" href="#32-augmentation-spaces"></a> 3.2. Augmentation Spaces</h3><p>我们将检测操作分为像素级检测操作和空间级检测操作，并用像素级检测操作和空间级检测操作构建了两个增强空间，分别称为 Ap 和 As。为了确保提议的 MedAugment 适用于医学图像，我们排除了会破坏医学图像细节和特征的操作，如反转、均衡和日晒。这就产生了 Ap = {亮度、对比度、海报化、锐度、高斯模糊、高斯噪声}，以及 As = {旋转、水平翻转、垂直翻转、缩放、平移 x、平移 y、剪切 x、剪切 y}。为了防止 Ap 中的操作影响遮罩中的灰度级信息，我们只使用 As 中的操作来增强遮罩。为了确保兼容性和可扩展性，我们利用成熟的增强框架 Albumentations [49] 来执行常规操作，因为它提供了卓越的多样性 [50-52]。</p><h3 id="33-sampling-strategy"><a class="markdownIt-Anchor" href="#33-sampling-strategy"></a> 3.3. Sampling Strategy</h3><p>在对 Ap 和 As 进行采样操作时，我们提出了一种有效的采样策略 Π，这是从两个方面考虑的。首先，医学图像对亮度等属性非常敏感。其次，大量的连续操作会导致输出图像不真实，与原始图像相差甚远[44]。为此，我们规定从 Ap 中采样的最大操作次数和总操作次数分别等于 1 次和 3 次。此外，我们认为将操作总数设为 1 并不重要，因为它会退化为没有组合的单一操作。考虑到这些因素，我们确定连续操作的次数为 M = {2，3}。在这种设置下，会产生四种采样组合 Π = {π1, π2, π3, π4}，其中从两个空间采样的操作次数分别等于 1 + 2, 0 + 3, 1 + 1 和 0 + 2。这个组合数决定了增强分支的数量。出于可扩展性的考虑，我们将 MedAugment 中的 N 设为可扩展，并将采样改为替换采样。此外，还可以屏蔽单独的分支。通过设置 N = 1 并屏蔽独立分支，MedAugment 可以执行一对一的增强。在图 2 中，我们比较了不同方法生成的增强图像实例。通过详细观察，我们发现 MedAugment 能生成最逼真的增强图像，防止破坏医学图像中的细节和特征。其余方法生成的增强图像可能可以通过 DL 模型识别，但可能缺乏临床相关性或可解释性。</p><h3 id="34-hyperparameter-mapping"><a class="markdownIt-Anchor" href="#34-hyperparameter-mapping"></a> 3.4. Hyperparameter Mapping</h3><p>我们提出了一种超参数映射关系，以产生合理的增强水平，并使用变量 l 完全控制每个操作的最大幅度（MA）和概率（PA）。我们观察到，医学图像对某些操作（如 Posterize）的幅度非常敏感。当剩余位数减少时，增强图像的质量会大幅下降。因此，我们基于广泛的实验，精心设计了这些类型操作的幅度，以确保结果增强的图像保持其重要性。我们在表1中展示了 l 和不同操作的 MA 之间的映射关系。值得注意的是，没有幅度的操作表示为“-”。出于可扩展性考虑，l 可以设置为 {1, 2, 3, 4}，较高的值对应更大的增强。函数 F 根据输入的 l 返回一个奇数，其公式为：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003645598.png" alt="image-20231122003418306" /></p><p>其中，⌈⌉ 表示四舍五入。从 Ap 和 As 中采样的操作概率采用相同的公式，其中 PA = 0.2l。</p><h2 id="experiments-and-results"><a class="markdownIt-Anchor" href="#experiments-and-results"></a> Experiments and Results</h2><h3 id="41-datasets"><a class="markdownIt-Anchor" href="#41-datasets"></a> 4.1. Datasets</h3><p>我们利用四个数据集进行分类性能评估。乳腺超声数据集（BUSI）[53] 收集自 600 名 25 至 75 岁的女性患者。该数据集包含 780 幅图像，其中良性、恶性和正常图像分别为 437 幅、210 幅和 133 幅。BUSI 的平均图像分辨率约为 500 × 500。肺部疾病 X 射线数据集（LUNG）[54] 由卡塔尔大学和达卡大学的研究人员收集。它包括三个类别，分别对应 COVID-19、严重急性呼吸系统综合征和中东呼吸系统综合征，每个类别分别包含 423、134 和 144 幅图像。脑肿瘤磁共振成像数据集（BTMRI）[55] 由四个类别组成，分别对应胶质瘤、脑膜瘤、正常和垂体。每个类别包含 1321、1339、1595 和 1457 幅训练图像，以及 300、306、405 和 300 幅测试图像。白内障眼部相机数据集（CATAR）[56] 包括白内障和正常类别，其中 245 和 246 幅图像用于训练，61 和 60 幅图像用于测试。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003503461.png" alt="image-20231122003503461" /></p><blockquote><p>表 1：Ap 和 As 的运算 MA。⌊⌋ 表示向下舍入。函数 F 返回整数奇数。不带幅度的运算用 - 表示。</p></blockquote><p>我们使用三个数据集来比较分割性能，包括 LUNG 数据集，在该数据集中，不同类别的图像和掩码被合并。内窥镜结肠镜检查数据集（CVC）[57] 作为国际医学影像计算和计算机辅助干预会议训练阶段的官方数据库，包含从结肠镜视频中提取的 1224 帧息肉图像和掩码。结肠镜图像数据集（Kvasir）[58] 包含 1000 张胃肠道息肉图像和掩码，分辨率从 332 × 487 到 1920 × 1072 不等。</p><h3 id="42-experimental-setup"><a class="markdownIt-Anchor" href="#42-experimental-setup"></a> 4.2. Experimental Setup</h3><p>在模型训练前，我们对数据进行了预处理。我们将数据集划分为训练集、验证集和测试集，比例为 6:2:2 或在测试数据单独提供的情况下为 8:2。对于分类数据集，不同子集中每个类别的比例等于原始数据的比例。类平衡划分可以防止潜在的类别不平衡。在执行增强之前，图像和掩码被预处理为 224 × 224 的分辨率，增强仅在训练子集上应用。按照 MedAugment 的一对五增强方式，所有方法的增强训练子集大小是原始训练子集的五倍。</p><p>在分类方面，我们使用 Adam 作为优化器，衰减因子为 0.01。我们使用交叉熵作为损失函数。初始学习率为 0.002，每 20 个周期以 0.9 的因子逐步衰减。总周期为 40，使用了 8 次耐心的早停技术。批量大小设置为 128。我们使用 VGGNet [59]、ResNeXt [60] 和 ConvNeXt [61] 进行训练。模型基于准确度（ACC）、负预测值（NPV）、阳性预测值（PPV）、敏感性（SEN）、特异性（SPE）和 F1 分数（FOS）等指标进行评估。我们将 MedAugment 与基于 SOTA GAN 的方法 StyleGAN2-ADA [62] 以及包括 AutoAugment、AugMix、RandAugment 和 TrivialAugment 在内的基础和 SOTA 自动 DA 方法进行比较。报告的结果是所有类别的平均值（如果适用）。</p><p>在分割方面，我们使用骰子损失（dice loss），其余超参数遵循分类设置。对于模型训练，我们使用 UNet++ [63]、FPN [64] 和 DeepLabV3 [65]，ResNet-18 [66] 作为编码器 [67]。我们使用骰子分数（DS）、交并比（IoU）和像素准确度（PA）来评估性能。由于主流 SOTA 自动 DA 方法 [34–36] 是为分类设计的，我们提出传统流程作为性能比较的 SOTA 方法。根据报告 [7]，水平翻转、旋转和垂直翻转是 MIA 领域最常用的操作，我们提出了 OneAugment、TwoAugment 和 ThreeAugment。OneAugment 仅包括水平翻转，而 TwoAugment 和 ThreeAugment 分别由水平翻转、旋转和水平翻转、旋转、垂直翻转组成。每个 DA 操作的概率 p = 0.5。</p><h3 id="43-classification-results"><a class="markdownIt-Anchor" href="#43-classification-results"></a> 4.3. Classification Results</h3><p>表 2、表 3 和表 4 分别展示了 VGGNet、ResNeXt 和 ConvNeXt 的分类结果。可以看出，在不同的模型中，建议的 MedAugment 都优于 SOTA 方法。关于 VGGNet，MedAugment 在 24 个指标中的 19 个指标上排名第一，其中 5 个指标是联合指标。在 BUSI、LUNG、BTMRI 和 CATAR 数据集上，MedAugment 的准确率最高，分别达到 83.4%、85.1%、89.3% 和 95.9%。在 BTMRI 数据集上，StyleGAN2-ADA 显示出卓越的性能，而在 LUNG 和 CATAR 数据集上，TrivialAugmet 则取得了理想的结果。对于 ResNeXt，MedAugment 在 16 个指标中排名第一，其中 3 个指标是联合指标。在四个数据集上，MedAugmet 的准确率最高，分别为 79.0%、85.8%、87.2% 和 95.9%。在 BUSI 数据集中，StyleGAN2-ADA 表现领先；在 CATAR 数据集中，AugMix 的表现优于各种方法。此外，TrivialAugment 在 BUSI 和 LUNG 数据集上也取得了理想的结果。至于 ConvNeXt，MedAugment 在 23 项指标中均名列第一，只有在 LUNG 数据集上的 PPV 值例外。在不同的数据集上，MedAugment 的准确率最高，分别为 78.3%、85.8%、86.3% 和 96.7%。值得注意的是，CATAR 数据集的测试子集中包含的图像很少，因此可能会产生相同的结果。此外，在 BUSI、LUNG 和 BTMRI 数据集上观察到的 SEN 值相对较低，这表明模型可能无法正确分类真正的阳性样本。这可能是由于很难识别医学图像中的细微异常，尤其是当异常处于早期阶段时。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003303028.png" alt="image-20231122003556630" /></p><blockquote><p>表 2：使用 VGGNet 对不同数据集进行分类的结果。†: CATAR 持有一个小型测试子集，可能会产生相同的性能。结果以百分比表示，最佳结果以粗体表示。</p></blockquote><p>我们在图 3 中展示了不同自动 DA 方法的类激活图[68]。我们利用 BUSI 数据集，因为其肿瘤区域在背景中清晰可辨。这样就能直观地区分类激活图与图像之间的叠加。我们采用 VGGNet，因为它的性能优于其他模型。通过观察可以发现，MedAugment 增强了模型准确识别正确区域的能力。虽然大多数方法都能正确地将注意力集中在感兴趣的区域，但 MedAugment 实现了更全面的覆盖和更合适的轮廓。与其他方法相比，AutoAugment 的性能不够理想，注意力可能会集中在不正确的区域。我们还举例说明了一个例子，在这个例子中，无论使用哪种自动调整方法，模型都无法捕捉到肿瘤区域。这是合理的，因为与背景相比，肿瘤区域的差异微乎其微，因此难以捕捉。</p><p>在图 4 中，我们利用 t-SNE，直观地展示了不同 DA 方法在使用 VGGNet 的 BUSI 数据集上的表现。我们从第二线性层和 RELU 激活函数后面的分类头中提取特征。通过详细观察可以发现，MedAugent 在每个类别中都能获得最接近的点簇，尤其是在恶性类别中。此外，与其他方法相比，不同类别之间的距离较长。与其他方法相比，RandAugment 的表现相对较差，正常类别与良性和恶性类别有很大程度的重叠。此外，AutoAugment 没有在不同类别之间预设明显的界限。密集的类内分布和稀疏的类间分布可以证明 MedAugment 所带来的性能提升。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003556630.png" alt="image-20231122003631302" /></p><blockquote><p>图 3：使用 VGGNet 在 BUSI 数据集上比较不同 DA 方法的类激活图。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122010420122.png" alt="image-20231122003645598" /></p><blockquote><p>图 4：使用 VGGNet 在 BUSI 数据集上比较不同 DA 方法的 t-SNE 可视化效果。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003659911.png" alt="image-20231122003659911" /></p><blockquote><p>表 3：使用 ResNeXt 对不同数据集进行分类的结果。</p></blockquote><h3 id="44-segmentation-results"><a class="markdownIt-Anchor" href="#44-segmentation-results"></a> 4.4. Segmentation Results</h3><p>表 5 展示了 UNet++、FPN 和 DeepLabV3 的分割结果。可以看出，与其他方法相比，MedAugment 的性能最高。对于 UNet++，MedAugment 在 9 个指标中的 8 个指标上都取得了最高的结果。在 LUNG、CVC 和 Kvasir 数据集上，MedAugment 的 DS 分别达到最高的 91.8%、69.1% 和 68.1%。在 CVC 数据集上，OneAugment 的 PA 最高。在 FPN 方面，MedAugment 在 8 个指标上取得了最高的联合性能。在三个数据集上，MedAugment 的 DS 分别达到了 94.7%、77.3% 和 72.3%。TwoAugment 在 CVC 数据集上表现出色。关于 DeepLabV3，MedAugment 在所有指标上都取得了最高的联合性能。在不同的数据集上，MedAugment 的 DS 分别达到了 93.3%、80.0% 和 72.3%。TwoAugment 在 Kvasir 数据集上实现了相同的 PA。值得注意的是，与 DS 和 IoU 相比，我们观察到的 PA 明显更高。虽然高 PA 可能表明模型性能优越，但预测的像素可能比较分散，因此并不理想。</p><p>我们在图 5 中展示了不同方法的预测掩码和地面实况掩码的比较。我们利用 LUNG 数据集，因为它的肺部对象具有规则形状的形态，因此有助于清晰辨别不同方法之间的细微差别。由于 FPN 性能优越，我们采用了它。通过详细观察，我们可以发现，与地面实况相比，用 MedAugment 训练的模型能生成最准确的掩膜，其性能提升主要体现在两个方面。首先，它减少了被错误预测的像素数量。其次，它提高了模型预测更平滑边缘曲线和更精确轮廓的能力。与其他方法相比，我们可以发现 ThreeAugment 和 OneAugment 可以生成不规则的凸起，而 TwoAugment 和 ThreeAugment 则可以预测出丑陋和不规则的轮廓。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003831780.png" alt="image-20231122010420122" /></p><blockquote><p>表 5：使用各种模型对不同数据集进行分割的结果。</p></blockquote><p>在图 6 中，我们使用 FPN 比较了 LUNG 数据集上不同 DA 方法的 Bland-Altman 图，以说明每张测试图像的预测掩膜与地面实况掩膜之间的关系。我们计算预测掩码中的对象像素数量，将结果除以总像素数量，然后将输出结果与地面实况掩码进行比较。从结果可以看出，MedAugment 的平均值和标准偏差最低，分别为 0.19% 和 1.96%。与 SOTA 方法相比，ThreeAugment 的性能相对较差，平均值和标准偏差分别为 4.53% 和 6.87%。此外，大多数数据点都位于 95% 的一致性范围内，这表明预测掩膜和地面实况掩膜之间具有极佳的一致性。此外，数据没有显示出一致的趋势差异，表明不存在显著的系统性差异。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003817852.png" alt="image-20231122003817852" /></p><blockquote><p>图 6：在使用 FPN 的 LUNG 数据集上，不同 DA 方法的 Bland-Altman 图的 Cpmarsion。</p></blockquote><h3 id="45-ablation-study"><a class="markdownIt-Anchor" href="#45-ablation-study"></a> 4.5. Ablation Study</h3><p>我们设计了一种具有一个增强空间和随机抽样的消融方法，以验证所提出的增强空间和抽样策略的有效性。在此设置下，增强空间由 14 个操作组成，每次随机抽样 M = {2, 3} 个操作。我们利用 LUNG 数据集，因为在分类和分割任务中使用一致的数据集能产生更有说服力的结果。图 7 和图 8 分别展示了消融方法和 MedAugment 设置在 LUNG 数据集上的分类和分割任务性能比较。在分类方面，可以看到大多数指标都呈现出下降趋势，只有少数指标有所上升。此外，与上升相比，下降的幅度更为明显。在分割方面，我们观察到所有指标的下降幅度都高于分类指标。这一观察结果符合我们的预期，因为在像素增强空间 Ap 中进行随机抽样可能会产生不切实际的增强图像，如图 2 所示，尽管程度低于上述方法生成的图像。此外，像素级分割更容易产生不真实的图像。</p><p>我们通过验证 MedAugment 在 l = {1, 2, 3, 4} 条件下的性能来研究增强级别的影响。在图 9 和图 10 中，我们分别比较了 LUNG 数据集上不同 l 的分类和分割任务性能。虽然 l = 5 在大多数情况下性能领先，但部分指标（如 ConvNeXt 中的 SEN）可能相对较低。在分割方面，与其余值相比，l = 5 实现了更高的性能领先性，同时确保了最高的 ACC、NPV 和 PPV。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003846364.png" alt="image-20231122003831780" /></p><blockquote><p>图 7：在 LUNG 数据集上利用一个增强空间和 MedAugment 的分类结果比较。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003901091.png" alt="image-20231122003846364" /></p><blockquote><p>图 8：在 LUNG 数据集上利用一个增强空间和 MedAugment 的分割结果比较。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003913839.png" alt="image-20231122003901091" /></p><blockquote><p>图 9：LUNG 数据集上不同 l 的分类指标比较。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231122003631302.png" alt="image-20231122003913839" /></p><blockquote><p>图 10：LUNG 数据集上不同 l 的分割指标比较。</p></blockquote><h2 id="conclusions"><a class="markdownIt-Anchor" href="#conclusions"></a> Conclusions</h2><p>在本文中，我们提出了一种高效、有效的自动增量方法，即 MedAugment。我们开发了像素增强空间和空间增强空间，并排除了可能破坏医学图像细节和特征的操作。此外，我们还提出了一种采样策略，即限制从建议空间中采样的操作数量。此外，我们还提出了一种超参数映射关系，以产生合理的增强水平，并确保所提出的方法只需一个超参数即可完全控制。这些修订可以解决自然图像和医学图像之间的差异。在七个公共医疗数据集上的大量实验结果证明了所提出的 MedAugment 的有效性。我们相信，即插即用、无需训练的 MedAugment 可能会让 MIA 社区受益，尤其是那些没有坚实 DL 基础的医学专家。尽管 MedAugment 性能优越，但仍存在一些挑战。首先，必须采用有效的指标平衡方法，因为不同指标之间的性能差距很大，而且 SEN 等几个指标的结果并不理想。具体来说，可以采用不同的超参数，通过在训练过程中更新超参数来平衡不同的指标。其次，处理小尺寸物体所面临的挑战需要进一步研究，以减少将错误分类归入背景的可能性。这就引出了强调小物体的方法，例如根据物体的大小利用不同类型和级别的操作。显然，与较大物体的图像相比，较小物体的图像在增强过程中被放大的可能性更大。</p><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python utils\medaugment.py --dataset tooth --train_type segmentation --level 5 --number_branch 4 --seed 8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ParC-Net</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ParcNet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ParcNet/</url>
      
        <content type="html"><![CDATA[<h1 id="parc-net"><a class="markdownIt-Anchor" href="#parc-net"></a> ParC-Net</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract.</h2><p>最近，视觉transformers开始显示出令人印象深刻的结果，其性能大大超过了基于卷积的大型模型。然而，在用于移动或资源受限设备的小型模型领域，ConvNet在性能和模型复杂性方面仍有自己的优势。我们提出了ParC-Net，一个纯粹的基于ConvNet的骨干模型，通过将视觉transformers的优点融合到ConvNets中，进一步加强了这些优势。具体来说，我们提出了位置感知卷积（ParC），这是一个轻量级的卷积运算，它拥有一个全局的接受域，同时产生了与局部卷积一样的位置敏感特征。我们将ParCs和squeeze-exictation（SE）操作结合起来，形成一个类似于模型块的meta-former，它还具有类似于transformers的注意机制。上述块可以用即插即用的方式来替代ConvNets或transformers中的相关块。实验结果表明，在常见的视觉任务和数据集中，所提出的ParC-Net比流行的轻量级ConvNets和基于视觉transformers的模型取得了更好的性能，同时参数更少，推理速度更快。对于ImageNet-1k的分类，ParC-Net以大约500万个参数达到了78.6%的最高准确率，与MobileViT相比，节省了11%的参数和13%的计算成本，但获得了0.2%的高准确率和23%的快推理速度（基于ARM的Rockchip RK3288），与DeIT相比，仅使用0.5倍的参数，但获得了2.7%的准确率。在MS-COCO物体检测和PASCAL VOC分割任务中，ParC-Net也显示出更好的性能。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>最近，各种视觉transformers（ViTs）模型在许多视觉任务中取得了显著的效果，形成了卷积神经网络（ConvNets）的强有力的替代品[5] [33] [21]。</p><p>然而，我们认为ViTs和ConvNets都是不可缺少的，原因如下：</p><ol><li><strong>从应用的角度来看，ViTs和ConvNets都有其优点和缺点。ViT模型一般具有较好的性能，但通常存在计算成本高和难以训练的问题[33]。与ViTs相比，ConvNets可能表现出较差的性能，但它们仍然有一些独特的优势。例如，ConvNets有更好的硬件支持，并且容易训练。此外，正如[9]和我们的实验所总结的那样，ConvNets在移动或边缘设备的小模型领域仍然占据主导地位。</strong></li><li>**从信息处理的角度来看，ViTs和ConvNets都有独特的特点。ViTs擅长提取全局信息，并利用注意力机制从输入数据驱动的不同位置提取信息[3] [25]。ConvNets专注于局部关系的建模，并通过归纳偏见具有很强的先验性[4]。**上述分析自然而然地提出了一个问题：我们能否从ViTs中学习，以改进移动或边缘计算应用的ConvNets？</li></ol><p>在本文中，我们旨在设计新的轻量级纯卷积网，进一步增强其在移动和边缘计算友好模型领域的优势。</p><p>纯卷积对移动更加友好，因为卷积被现有的工具链高度优化，这些工具链被广泛用于将模型部署到这些资源有限的设备中。更重要的是，由于过去几年中卷积网络的大受欢迎，一些现有的神经网络加速器主要围绕卷积风格的操作而设计，复杂的非线性操作，如softmax和数据总线带宽要求的大矩阵乘法，并没有得到有效的支持。这些硬件和软件的限制使得一个纯卷积的轻量级模型更加可取，即使基于ViT的模型在其他方面同样具有竞争力。</p><p>为了设计这样的ConvNet，我们比较了ConvNets和ViTs，并总结了它们之间的三个主要区别。</p><ol><li><p>ViTs善于提取全局特征[3] [25] [4]；</p></li><li><p>ViTs采用Meta-former块[40]；</p></li><li><p>ViTs中的信息聚合是数据驱动的（数据依赖动态计算）。</p></li></ol><p>对应于这三点，我们设计了我们的ParC块。</p><ol><li>我们提出了位置感知循环卷积（ParC）来提取全局特征；</li><li>基于提出的ParC，我们建立了一个纯ConvNet meta-former块作为基本的外部结构；</li><li>我们在meta-former的特征前向网络（FFN）部分增加了通道明智的关注模块，这使得我们提出的ParC块能够根据输入调整内核权值。</li><li>受CoatNet[4]和MobileViT[25]的启发，我们使用分叉结构（第3.2节）作为外部框架来构建一个完整的网络ParC-Net。</li></ol><p>实验结果表明，所提出的ParC-Net在三个流行的视觉任务上取得了坚实的性能，包括图像分类、物体检测和语义分割。以图像分类的实验结果为例，与MobileViT[25]相比，ParC-Net在大约500万个参数的情况下达到了78.6%的最高准确率，节省了11%的参数和13%的计算成本，但获得了0.2%的高准确率和23%的推理速度（在Rockchip RK3288上）。在物体检测和语义分割的实验中，与其他轻量级模型相比，所提出的ParC-Net获得了更高的mAP和mIOU，同时参数更少。</p><p>我们的主要贡献总结如下：</p><ul><li>为了克服传统卷积运算感知领域有限的限制，我们提出了position aware circular convolution（ParC），其中base-instance kernel和position embedding strategies被用来处理输入尺寸变化，并将位置信息分别注入输出特征图。我们联合使用提议的ParC和传统的卷积操作来提取局部-全局特征，这带来了更高的准确性。</li><li>我们提出了ParC-Net，一个用于移动和边缘计算应用的纯ConvNet。拟议的ParC-Net继承了ConvNets和ViTs的优点。据我们所知，这是第一次尝试结合ConvNets和ViTs的优点来设计一个轻量级的ConvNet。</li><li>我们将提出的ParC-Net应用于三个视觉任务。与基线模型相比，拟议的ParC-Net在所有三个任务上都取得了更好的性能，同时参数更少，计算成本更低，推理速度更高。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 Related work</h2><h3 id="21-vision-transformers"><a class="markdownIt-Anchor" href="#21-vision-transformers"></a> 2.1 Vision transformers</h3><p>Vaswani等人首先提出了用于自然语言处理（NLP）任务的transformer[34]。与递归神经网络（RNN）模型相比，transformers的计算效率要高得多，它善于从输入序列中的任何一对元素中捕捉关系。因此，transformers取代了RNN，在NLP领域占据主导地位。</p><p>2020年，Dosovitskiy等人将transformers引入视觉任务，并提出了视觉transformers（ViT）[5]，其中每个图像被裁剪成一个patch序列以满足transformers的输入要求，并采用PE来确保模型对输入patch的位置信息敏感。通过对JFT-300M[29]等巨大数据集的预训练，ViT在各种视觉任务上取得了令人印象深刻的性能。然而，原始的ViT模型有一些限制，例如，它的重量很重(复杂），计算效率低，而且很难训练。随后的ViTs变体被提出来以克服这些问题。从改善训练策略的角度出发，Touvron等人[33]提出使用知识提炼法来训练ViT模型，并在较少的预训练数据下取得了具有竞争力的精度。为了进一步改进模型结构，一些研究者试图通过从ConvNets中学习来优化ViTs。其中，PVT[35]和CVT[37]在ViT模型的每个阶段插入卷积操作，以减少标记的数量，并建立分层的多阶段结构。Swin transformers[21]在移位的局部窗口内计算自我注意。PiT[11]联合使用池化层和深度卷积层来实现通道乘法和空间减法。CCNet[15]提出了一个简化版的自我注意机制十字交叉注意，并将其插入到ConvNet中，以建立具有全局感受野的ConvNet。这些论文清楚地表明，ConvNet的一些技术可以应用于视觉transformers，以设计更好的视觉transformers模型。</p><h3 id="22-hybrid-structures-combining-convnet-and-vision-transformers"><a class="markdownIt-Anchor" href="#22-hybrid-structures-combining-convnet-and-vision-transformers"></a> 2.2 Hybrid structures combining ConvNet and vision transformers</h3><p>另一个流行的研究方向是结合ViT和ConvNets的元素来设计新的骨干网。Graham等人在他们的LeVit模型中混合了ConvNet和transformer，在速度/准确度的权衡方面明显优于以前的ConvNet和ViT模型[8]。BoTNet[28]在ResNet的最后几个块中用多头关注取代了标准卷积。ViT-C[38]在vanilla ViT中加入早期卷积干。ConViT[6]通过一个门控的位置自我注意纳入了软卷积的归纳偏差。CMT[9]块由基于深度的卷积的局部感知单元和一个轻量级的transformers模块组成。CoatNet[4]合并了卷积和自我注意，设计了一个新的transformers模块，它同时关注局部和全局信息。经过综合比较，我们发现这些混合模型同时采用了类似的结构，即在开始阶段使用卷积干来提取局部特征，随后使用transformer式模型来提取全局或局部-全局特征。在设计我们的纯卷积模型时，我们也选择了类似的结构。</p><h3 id="23-light-weight-convnets-and-vits"><a class="markdownIt-Anchor" href="#23-light-weight-convnets-and-vits"></a> 2.3 Light-weight ConvNets and ViTs</h3><p>自2017年以来，由于越来越多的应用需要在移动设备上运行ConvNet模型，轻量级ConvNets引起了人们的关注。现在，有很多轻量级的ConvNets，如ShuffleNets [24] [24], MobileNets [13] [27] [12], MicroNet [18], GhostNet [10], EfficientNet [32], TinyNet [2] 和MnasNet [31]。与标准ConvNets相比，轻量级ConvNets的参数更少，计算成本更低，推理速度更快。此外，轻量级的ConvNets可以在广泛的设备上应用。尽管有这些好处，这些轻量级模型与重量级模型相比性能较差。最近，按照结合ConvNet和ViT的优势的研究思路，一些研究人员试图为移动视觉任务建立轻量级的混合模型。Mobile-Former提出了一个MobileNet和Transformer的并行设计，它利用了MobileNet在提取局部特征和Transformer在捕捉全局信息方面的优势[3]。Mehta和Rastegari提出了MobileViT，其中MobileNetv2[27]的上层阶段被MobileViT块[25]取代。在MobileViT模块中，通过卷积提取的局部表征和全局表征被串联起来，生成局部-全局表征。</p><p>就目的而言，我们提出的ParC-Net与Mobile-Former和MobileViT有关。与这两个模型不同的是，我们提出的ParC-Net仍然保留了transformers块，是纯粹的ConvNet，这使得我们提出的ParC-Net更有利于移动。我们在低功率平台上部署模型的实验证实了这一点。在通过从ViTs中学习来设计一个纯ConvNet方面，我们的工作与一个平行工作ConvNext[22]最为接近。两个主要的区别是。1) 思路和架构不同。ConvNext通过引入一系列（超过10个）递增但有效的设计，将一个标准的ResNet朝着视觉transformer的设计方向现代化。</p><p>我们提出的ParC-Net从ConvNets和ViTs之间的三个主要区别出发，从宏观上填补了这些空白。由于想法不同，相应的结构也不同；2）它们是为不同的目的提出的。我们的ParC-Net是为移动设备提出的。与ConvNext相比，所提出的ParC-Net在约束模型时表现出轻量级模型的优势。</p><h2 id="3-the-proposed-method"><a class="markdownIt-Anchor" href="#3-the-proposed-method"></a> 3 The proposed method</h2><p>在本节中，我们将分两部分介绍我们的ParC-Net，即构建块（ParC块）的细节和整体模型结构（ParC-Net）。</p><h3 id="31-parc-block"><a class="markdownIt-Anchor" href="#31-parc-block"></a> 3.1 ParC block</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202130115789.png" alt="image-20221202130115789" /></p><blockquote><p>图1 ParC block. (a) A residual block that is widely used in ConvNets; (b) A ViT block; © An ParC block</p></blockquote><p>图1的上半部分显示了普通ConvNets和ViTs之间的三个主要区别。图1的下半部分说明了我们所提出的ParC块的结构。在下文中，我们将解释提议的ParC块的动机和每个组件的具体结构。</p><h5 id="extracting-global-features-with-parc"><a class="markdownIt-Anchor" href="#extracting-global-features-with-parc"></a> Extracting global features with ParC.</h5><p>在ConvNets中，特征的计算公式为yi = P j∈L(i) wi-jxj，其中xi、yi分别是位置i的输入和输出，L(i)表示i的局部邻域。在ViTs中，自我注意模块根据公式yi = P j∈G e(xiT xj ) P k∈G e(xiT xk) xj提取特征，其中G表示全局空间。比较这两个公式，我们可以看到，自我注意从整个空间位置学习全局特征，而卷积则从局部的感受野收集信息。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202135639713.png" alt="image-20221202135639713" /></p><blockquote><p>图2 Illustration of the position aware circular convolution. (a) ParC-V; (b) ParC-H. F , EV and EH are explained in equations 1 and 2</p></blockquote><p>为了克服这个问题，我们提出了位置感知循环卷积（ParC）。如图2所示，我们提出的ParC有两种类型，一种是垂直方向的ParC（ParC-V），另一种是水平方向的ParC（ParC-H）。ParC-V和ParC-H的感受野分别覆盖了同一列和同一行的所有像素。联合使用ParC-V和ParC-H可以从所有输入像素中提取全局特征。为了简化符号，我们假设输入的x只有一个通道，相应的形状是1×h×w。ParC-V在位置(i, j)的输出是通过以下方式计算的。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201213028256.png" alt="image-20221201213028256" /></p><p>其中，peV是实例位置嵌入（PE），它是通过双线性插值函数F（）从基础嵌入e peV生成的。这里F()用于使位置嵌入的大小与输入特征的大小相适应。 peeV是扩展的PE。EV（）是垂直方向的扩展函数。在复制了输入矢量w次后，EV（）沿水平方向将这些复制的矢量连接起来，生成一个h×w大小的PE矩阵。同样，ParC-H在位置（i，j）的输出可以表示为。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201213123065.png" alt="image-20221201213123065" /></p><p>其中peeH = EH(peH , h)，EH()是一个扩展函数。EH()将输入矢量沿垂直方向扩展。在现代深度学习库中实现ParC是很简单的。以最复杂的部分yi,j = P t∈(0,w-1) kH t xp (i,(j+t)modw)为例，可以用一行代码实现：y = F.conv2D(torch.cat(xp, xp, dim = 3), kH ) 。图3说明了在输入为一维向量的情况下的计算过程。从图3中，我们可以看到ParC-H沿着连接输入的起点和终点产生的圆进行卷积。因此，我们将提议的卷积命名为圆形卷积。拟议的ParC引入了三个修改。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140038047.png" alt="image-20221202140038047" /></p><blockquote><p>图3 Illustration of global circular convolution on horizontal direction.</p></blockquote><ul><li>感受野被增加到全局空间。请注意，将传统局部卷积的核大小增加到全部输入大小并不能提取全局特征。在局部卷积中，通常使用零填充来保持卷积特征的大小与输入的相同。即使我们将核的大小增加到全局大小，全局核也只能覆盖来自输入的部分像素。特别是在提取边缘部分的特征时，全局核覆盖的像素中只有大约一半是来自输入的实际输入，而其他的则是简单的零。</li><li>PE用于保持输出特征对空间位置的敏感性。循环卷积可以提取全局特征，但它扰乱了原始输入的空间结构。对于分类来说，保持空间结构可能不是一个大问题。但是，正如消融研究中所显示的，对于位置敏感的任务，如分割和检测，保持空间结构确实很重要。这里，按照ViTs的设计，我们引入了PE来保持空间结构。消融研究的实验结果表明，PE在分割和检测任务中是有用的。</li><li>内核和PE是根据输入大小动态生成的。在ParC中，内核和PE码的大小必须与实例输入的大小一致。为了处理输入具有不同空间分辨率的情况，我们通过内插函数生成实例内核和PE码。</li></ul><h5 id="designing-parc-block-with-parc"><a class="markdownIt-Anchor" href="#designing-parc-block-with-parc"></a> Designing ParC block with ParC.</h5><p>从ConvNets到ViTs，一个相当大的修改是meta-former块取代了residual块（蓝色双向箭头）。一个meta-former块一般由两个部件组成的序列：一个标记混合器和一个通道混合器。令牌混合器用于在不同空间位置的令牌之间交换信息。通道混合器是用于在不同的通道之间混合信息。这两个组件都使用残差学习结构。</p><p>受此启发，我们将ParC插入类似于Meta-former的模块中，建立我们的ParC模块。具体来说，我们用提议的ParC来取代自我注意模块，建立一个新的空间模块来取代标记混合器部分。在这里，我们这样做有两个主要原因：</p><ol><li>ParC可以从全局空间中提取全局特征和像素间的交互信息，这符合令牌混合器模块的要求；</li><li>自我注意模块的计算复杂性是二次的。</li></ol><p>用ParC代替这部分模块可以大大降低计算成本，这有助于实现我们设计一个轻量级ConvNet的目标。基于所提出的ParC，我们建立了一个类似于纯ConvNet meta-former的模块。</p><h5 id="adding-channel-wise-attention-in-channel-mixer-part"><a class="markdownIt-Anchor" href="#adding-channel-wise-attention-in-channel-mixer-part"></a> Adding channel wise attention in channel mixer part.</h5><p>在ViTs中，自我注意模块可以根据输入调整权重，这使得ViTs成为数据驱动模型。通过采用注意力机制，数据驱动模型可以专注于重要的特征而抑制不必要的特征，从而带来更好的性能。以前的文献14[16]已经解释了保持模型数据驱动的重要性。</p><p>通过用提议的全局循环卷积取代自我注意，我们得到了一个可以提取全局特征的纯ConvNet。但是被替换的模型不再是一个数据驱动的模型。为了弥补这一点，我们在通道混合器部分插入了通道明智的注意力模块，如图1（c）所示。按照SENet[14]，我们首先通过全局平均池聚合输入特征x∈Rc×h×w的空间信息，得到聚合的特征xa∈Rc×1×1；然后我们将xa送入多层感知器，生成通道明智权重a∈Rc×1×1。a与通道明智的x相乘，产生最终输出。</p><h3 id="32-parc-net"><a class="markdownIt-Anchor" href="#32-parc-net"></a> 3.2 ParC-Net</h3><p>在第3.1节中，我们已经介绍了ParC块，它是一个基本块，可以插入到目前大多数现有的模型中。在这一节中，我们为它选择了一个外框，并建立了完整的网络ParC-Net。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140339795.png" alt="image-20221202140339795" /></p><blockquote><p>图4 Three main hybrid structures. (a) serial structure; (b) parallel structure; © bifurcate structure</p></blockquote><p>目前，如图4所示，现有的混合结构基本上可以分为三种主要结构，包括串行结构（图4（a））8，并行结构（图4（b））[3]和分叉结构（图4（c））25。在这三种结构中，第三种结构目前取得了最佳性能。目前，分叉模型CoatNet[4]在Imagenet-1k上取得了最高的分类精度。移动设备目标模型MobileViT[25]也采用了第三种结构。</p><p>受此启发，我们采用分叉结构作为我们的外框，并在MobileViT的基础上建立我们最终的外框。具体来说，以MobileViT采用的外框为基线，我们进一步做了一些改进。</p><ul><li>MobileViT由两种主要的模块组成。浅层阶段由MobileNetV2模块组成，它具有局部感受野。深层阶段由ViT块组成，它享有全局接收场。我们保留所有的MobileNetV2模块，用相应的ParC模块取代ViT模块。这种替换将模型从混合结构转换为纯ConvNet。</li><li>我们适当地增加了ParC块的宽度。即便如此，被替换的模型仍然有更少的参数和更少的计算成本。</li><li>如图4©所示，分叉结构包含一些交互模块，它们负责本地和全局特征模块之间的信息交互。在最初的MobileViT中，ViT块是最重的模块。在用ParC块代替ViT块后，这些交互模块的成本变得很突出。因此，我们在这些模块中引入了分组卷积和点智卷积，在不影响性能的情况下减少了参数的数量。</li></ul><h2 id="4-experiment-results"><a class="markdownIt-Anchor" href="#4-experiment-results"></a> 4 Experiment results</h2><p>在实验中，我们展示了所提出的ParC-Net在三个典型的视觉任务上的整体优势，然后进行详细的研究，以显示我们的设计选择的价值，模型的扩展特性，以及它在低功耗设备上的速度优势。</p><h3 id="41-image-classification"><a class="markdownIt-Anchor" href="#41-image-classification"></a> 4.1 Image classification</h3><p>我们在ImageNet-1k上进行了图像分类实验，这是这项任务中最广泛使用的基准数据集。我们在ImageNet-1K的训练集上训练所提出的ParC-Net模型，并在验证集上报告了最高的准确性。</p><h5 id="training-setting"><a class="markdownIt-Anchor" href="#training-setting"></a> Training setting.</h5><p>由于我们采用类似MobileViT的结构作为我们的外部框架，我们也使用非常类似的训练策略来训练我们的模型。具体来说，我们用AdamW优化器[23]在8个V100或A100 GPU上对每个模型进行300次训练，其中最大学习率、最小学习率、权重衰减和批量大小分别被设置为0.004、0.0004、0.025和1024。AdamW优化器的优化动量β1和β2分别被设置为0.9和0.999。我们使用前3000次迭代作为热身阶段。我们按照余弦计划调整学习率。对于数据增强，我们使用随机裁剪、水平翻转和多尺度采样器。我们使用标签平滑法[30]来规范网络，并将平滑系数设置为0.1。我们使用指数移动平均法（EMA）[26]。更多关于训练设置的细节和源代码的链接将在补充材料中提供。</p><h5 id="comparison-results"><a class="markdownIt-Anchor" href="#comparison-results"></a> Comparison results.</h5><p>图像分类的实验结果列于图5。图5（a）显示，ParC-Net-S和MobileViT-S以明显的优势击败了其他模型。图5（b）显示了与更多模型的比较。所提出的ParC-Net-S达到了最高的分类精度，并且比大多数模型的参数更少。与第二好的模型MobileViT-S相比，我们的ParC-Net-S减少了11%的参数数量，前1名的准确率增加了0.2个百分点。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140632361.png" alt="image-20221202140632361" /></p><blockquote><p>图5 ImageNet-1K上的分类实验结果。 (a) 准确率与模型大小的关系。这里我们只保留部分对比模型以示清晰。(b) 图像分类的结果比较。∗表示我们的实现。Pre-ConvNets表示在ViTs之前出现的经典ConvNets。Post-ConvNets表示整合了ViTs的优点但仍然保持纯ConvNet结构的ConvNets。</p></blockquote><h5 id="light-weight-models"><a class="markdownIt-Anchor" href="#light-weight-models"></a> Light-weight models.</h5><p>表1显示了轻量级模型之间的比较结果，这证实了我们的想法并回答了介绍中提出的问题。</p><p>首先，比较轻量级ConvNets和ViTs的结果，轻量级ConvNets显示出更好的性能。</p><p>其次，比较ViT出现之前流行的ConvNets（pre-ConvNets）、ViTs和混合结构，混合结构取得了最好的性能。因此，通过学习ViT的优点来改进ConvNets是可行的。</p><p>最后，所提出的ParC-Net在所有比较模型中取得了最好的性能。因此，通过学习ViT的设计，纯粹的轻量级ConvNets的性能确实可以得到显著提高。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140753512.png" alt="image-20221202140753512" /></p><blockquote><p>表1 Comparisons of light-weight models on ImageNet-1K classification</p></blockquote><h3 id="42-object-detection"><a class="markdownIt-Anchor" href="#42-object-detection"></a> 4.2 Object detection</h3><p>我们使用MS-COCO[19]数据集及其评估协议进行物体检测实验。继25之后，我们将单次物体检测（SSD）[20]作为检测框架，并使用可分离卷积来取代检测头中的标准卷积。</p><h5 id="experiment-setting"><a class="markdownIt-Anchor" href="#experiment-setting"></a> Experiment setting.</h5><p>以在ImageNet-1K上预训练的模型为骨干，我们在MS-COCO的训练集上用AdamW优化器对检测模型进行了200次的微调。批量大小和权重衰减被设置为128和0.01。我们使用前500次迭代作为热身阶段，其中学习率从0.000001增加到0.0009。在训练期间，标签平滑和EMA都被使用。</p><h5 id="comparison-results-2"><a class="markdownIt-Anchor" href="#comparison-results-2"></a> Comparison results.</h5><p>图6列出了相应的结果。与图像分类的结果类似，MobileViT-S和ParC-Net-S在mAP方面达到了第二好和最好。与第二好的模型相比，ParC-Net-S在模型大小和检测精度方面都显示出优势。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140718542.png" alt="image-20221202140718542" /></p><blockquote><p>图6 Object detection results on MS-COCO. (a) mAP vs model size. (b) Comparison results</p></blockquote><h5 id="experiment-settings"><a class="markdownIt-Anchor" href="#experiment-settings"></a> Experiment settings.</h5><p>DeepLabV3被作为语义分割的框架。我们在PASCAL VOC[7]和COCO数据集的训练集上对分割模型进行微调，然后在PASCAL VOC的验证集上使用平均相交于联合（mIOU）对训练模型进行评估，并报告最终结果进行比较。我们用AdamW对每个模型进行50次微调。读者可以参考补充材料中关于训练设置的更多细节。</p><h5 id="comparison-results-3"><a class="markdownIt-Anchor" href="#comparison-results-3"></a> Comparison results.</h5><p>结果总结在图7中。我们可以看到，MobileViT-S和ParC-Net-S在模型规模和mIOU之间有最好的权衡。与ResNet-101相比，MobileViT-S和ParC-Net-S实现了有竞争力的mIOU，同时参数少得多。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140837187.png" alt="image-20221202140837187" /></p><blockquote><p>图7 在PASCAL VOC上进行的语义分割实验。(a) mIOU与模型大小的关系。(b) 与更多模型的比较结果。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202140932440.png" alt="image-20221202140932440" /></p><h3 id="44-ablation-study"><a class="markdownIt-Anchor" href="#44-ablation-study"></a> 4.4 Ablation study</h3><p>使用MobileViT作为基线模型，我们进一步对我们的ParC-Net中提出的三个组件进行消融分析。</p><ul><li><strong>Position aware circular convolution.</strong> 提出的ParC有两个主要特点。1）循环卷积带来全局感受野；2）PE保持空间结构信息。实验结果证实，这两个特点都很重要。1）第1-3行的结果表明，使用大内核也能提高精度，但当内核大小达到一定程度时，其好处达到饱和点。这个结果与[22]中声称的说法一致。使用ParC可以进一步提高精度，如第2-3行和第6-7行所示。2）在ParC中引入PE是必要的。正如我们在第3.1节中所解释的，单独使用循环卷积确实可以捕获全局特征，但它扰乱了原始空间结构。对于分类任务，PE没有影响（第6和7行）。然而，对于对空间位置敏感的检测和分割任务，放弃PE会损害性能（第9-10和12-13行）。</li><li><strong>Meta-former architecture.</strong> 在放弃Meta-former架构的实验中，我们将ParC与ResNeXt块[39]整合，以取代Metaformer架构。通过比较第4行和第7行，我们可以看到，使用提议的纯ConvNet元构架是有用的。</li><li><strong>Channel wise attention.</strong> 第5行和第7行的结果表明，使用明智的通道关注可以提高性能。与ParC相比，明智的通道关注带来的好处较少。</li></ul><p>总而言之，这三个部分都是有用的。将它们作为一个整体连接起来可以达到最佳的性能。</p><h3 id="45-inference-speed-on-low-power-devices"><a class="markdownIt-Anchor" href="#45-inference-speed-on-low-power-devices"></a> 4.5 Inference speed on low power devices.</h3><p>在本节中，我们进行了实验来验证两点。1）正如我们在介绍中提到的，ParC-Net是为边缘计算设备提出的。为了验证所提出的ParC-Net是否符合我们的要求，我们将所提出的ParC-Net部署在一个广泛使用的低功耗芯片Rockchip RK3288和一个内部的低功耗神经网络处理器DP2000上，与基线进行比较。我们使用ONNX[1]和MNN[17]将这些模型移植到芯片上，并对每个模型进行100次迭代，以测量平均推理速度；2）提议的ParC块是一个即插即用的块，它可以插入到其他模型中。我们用我们提出的ParC替换了典型CNN的最后几个块中的卷积（有PE和内核生成等），比较结果列于表3。</p><p>如表3第1-4行所示，与基线相比，ParC-Net在Rockchip RK3288上要快23%，在DP2000上要快3.77倍。除了更少的FLOPs操作，我们认为这一速度的提高也是由两个因素带来的。1)现有的工具链对卷积进行了高度优化，这些工具链被广泛用于在这些资源受限的设备上部署模型；2)与卷积相比，transformers对数据的带宽要求更高，因为计算注意力图涉及两个大矩阵K和Q，而在卷积中，内核与输入特征图相比是一个相当小的矩阵。在带宽要求超过芯片设计的情况下，CPU将被闲置，等待数据，导致CPU利用率降低，整体推理速度变慢。</p><p>第3-10行的结果显示，我们的ParC-Net普遍提高了典型的轻量级模型的性能。MobileViT-S的FLOPs要高得多，但在模型大小和精度之间实现了良好的权衡，在其自身的应用目的中表现出色。通过在MobleViT-S上应用我们的ParC-Net设计，ParC-Net-S在模型大小、FLOPs和精度之间实现了更好的平衡。在ResNet50、MobileNetV2和ConvNext-T上的结果表明，注重优化FLOPs-精度权衡的模型也能从ParC-Net设计中受益。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221202141044186.png" alt="image-20221202141044186" /></p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 Conclusion</h2><p>在本文中，针对边缘计算设备，我们提出了ParC-Net，一个纯粹的ConvNet，它继承了ConvNet的优点和ViT的综合结构特征。为了评估其性能，我们将提出的模型应用于三个流行的视觉任务，即图像分类、物体检测和语义分割。与其他ConvNet、ViT和混合模型相比，所提出的模型在所有三个任务上都取得了更好的性能，同时拥有更少的参数。在低功耗设备Rockchip RK3288和我们的内部处理器DP2000上的实验结果表明，拟议的ParC-Net确实继承了ConvNets，而且它能很好地被边缘计算设备支持。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Polyper</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Polyper/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Polyper/</url>
      
        <content type="html"><![CDATA[<h1 id="polyper"><a class="markdownIt-Anchor" href="#polyper"></a> Polyper</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>我们提出了一种新的息肉分割边界敏感框架，称为 Polyper。我们的方法源于一种临床方法，即经验丰富的医生经常利用息肉内部区域的固有特征来解决边界模糊的问题。受此启发，我们提出明确利用息肉区域来增强模型的边界辨别能力，同时最大限度地减少计算量。我们的方法首先通过形态学算子从初始分割图中提取边界和息肉区域。然后，我们设计了对边界敏感的注意力，利用内部息肉区域的特征集中增强边界区域附近的特征，从而生成良好的分割结果。我们提出的方法可与 ResNet-50、MiT-B1 和 Swin Transformer 等经典编码器网络无缝集成。为了评估 Polyper 的有效性，我们在五个公开的挑战性数据集上进行了实验，并在所有数据集上都获得了一流的性能。</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>结肠息肉是结肠粘膜内的突起物，在形状、质地和颜色上有很大差异（Pooler 等人，2023 年）。重要的是，结肠息肉被认为是与结肠癌发展密切相关的癌前病变（Djinbachian 等人，2020 年）。因此，迫切需要提高早期检测的效率和息肉轮廓分割的准确性。由于息肉的边界不明显且对比度低，因此在结肠镜检查中给诊断带来了挑战。在初期阶段，息肉通常表现为较小的尺寸，导致边缘不清晰，从而增加了检测难度。</p><p>为应对这一挑战，当前的研究趋势之一是最大限度地整合不同尺度的特征，以保留尽可能多的边界细节。典型的例子是，Wu 等人（Wu et al. 2021）引入了语义校准和细化技术，以弥合不同层次特征图之间的语义差距，从而获得良好的息肉分割图。类似地，SwinE-Net（Park 和 Lee，2022 年）利用多编译卷积和多特征聚合块，完善了从 CNN 和 Swin Transformer 架构中提取的多层次特征。虽然这种方法可以处理边缘清晰的病变中后期息肉，但却难以有效处理边缘对比度较低的早期息肉。</p><p>另一种流行的策略是生成息肉掩膜来粗略定位息肉，然后通过增强潜在边界周围的语义特征来提高分割图的质量。作为早期的尝试，SegT（Chen、Ma 和 Zhang，2023 年）通过评估前景和背景区域之间的差异来突出息肉区域的边界。然而，由于息肉边界与周围粘膜混合造成的模糊性，准确捕捉息肉边界是一项挑战。仅仅依靠前景和背景信息之间的协同效应可能无法实现准确的息肉分割。CaraNet（Lou 等人，2022 年）利用轴向注意力的远距离交互作用，从全局角度计算成对亲和度。粗略估计的息肉区域会从深层特征中移除，然后利用不同尺度的特征来补充边界细节，以产生良好的 arXiv:2312.08735v1 [<a href="http://cs.CV">cs.CV</a>] 14 Dec 202 分割结果。然而，轴向关注可能无法始终使网络受益，因为它有可能无意中排除关键的边界信息（Thanh Duc 等，2022 年）。因此，上述方法无法充分解决边界模糊的问题。</p><p>在内窥镜筛查中，技术娴熟的医生通常会利用非边界区域的息肉特征来解决边界模糊的难题。受此启发，我们的方法首先生成初始分割图，并利用形态学算子将息肉分割为边界区域和非边界区域。然后，我们利用从非边界区域提取的语义特征，通过一个新颖的边界敏感注意模块来完善边界区域，该模块可以利用全局和局部特征来识别真正的息肉边界。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222018439.png" alt=" " />    <p align="left">   图 1：在五个流行数据集上与最先进方法的比较。   </p> </p><p>我们的方法被称为 Polyper，它简单易学，适用于实际医疗场景。我们在五个广泛使用的数据集上进行了一系列实验来评估 Polyper。如图 1 所示，在所有数据集上，Polyper 的 mDice 和 mIoU 分数都优于之前的方法。通常情况下，由于息肉特征的异质性，以往的研究大多对生长早期的小息肉效果不佳。在随后的消融研究中，我们验证了我们的方法在小息肉上的良好表现。</p><p>我们的主要贡献可归纳如下：</p><ul><li><p>我们提出了一个名为 &quot;边界敏感注意 &quot;的新模块，<strong>它可以模拟息肉的边界区域和内部区域之间的关系，利用内部区域的固有特征来增强边界区域附近的特征</strong>。</p></li><li><p>我们设计了一种用于息肉分割的新型解码器，由两个不同的阶段组成：<strong>潜在边界提取和边界敏感细化</strong>。这种解码器能帮助我们有效识别息肉的真实边界，解决内窥镜检查中边界模糊的难题。</p></li><li><p>我们在五个流行的息肉分割数据集上对所提出的 Polyper 进行了评估，结果几乎在所有基准上都创下了新纪录。</p></li></ul><h2 id="related-work"><a class="markdownIt-Anchor" href="#related-work"></a> Related Work</h2><p>**医学图像分割架构。**CNN 是医学图像分割领域应用最广泛的深度神经网络架构之一。最经典的网络之一 U-Net（Ronneberger、Fischer 和 Brox，2015 年）就是一个典型的例子。Attention U-Net（Oktay 等人，2018 年）引入了一种新颖的注意力门机制，使模型能够选择性地关注不同形状和大小的目标。Res-UNet（Xiao 等人，2018 年）采用了加权注意力机制来提高分割性能。R2U-Net （Alom 等人，2018 年）巧妙地融合了残差网络（He 等人，2016 年）和 U-Net 的优势。KiU-Net（Valanarasu 等人，2020 年）提出了一种创新结构，利用欠完整和超完整特征来增强对具有小解剖结构的病变区域的分割。AttResDUNet（Khan 等人，2023 年）在卷积块中的跳过连接和残余连接上加入了注意门。最近，人们对利用 Transformers（Huang 等人，2022 年）进行息肉分割产生了浓厚的兴趣。SwinMM （Wang 等人，2023 年）开发了一种跨视点解码器，通过交叉注意块聚合多视点信息。MPU-Net（Yu 和 Han，2023 年）旨在通过将图像序列化与位置注意力模块相结合实现精确定位，使模型能够有效理解更深层的上下文依赖关系。Segtran（Li 等人，2021 年）提出了一种新颖的 &quot;挤压-扩展 &quot;转换器。</p><p>**细化方法。**细化的一个途径是最大限度地利用不同尺度的特征。Wu 等人（Wu et al. 2021 年）采用语义校准和细化技术来弥合不同层次特征映射之间的语义差距。SwinE-Net（Park 和 Lee，2022 年）通过多压缩卷积和多特征聚合块来完善和增强从 CNN 和 Swin Transformer 提取的多级特征。FTMFNet （Liu 等人，2023 年）提出了一种用于分割小息肉物体的傅立叶变换多尺度特征融合网络。另一种方法是针对特定区域进行细化。PraNet（Fan等人，2020年）和CaraNet（Lou等人，2022年）都集成了反向关注模块（Chen等人，2018年），这是一个专门的组件，可以突出息肉及其周围环境之间的边界。Xie 等人（Xie et al. 2020）引入了辅助边界监督作为完善玻璃分割的指导机制，帮助预测边界周围的不确定区域。与直接增强边界特征不同，He 等人（He et al. 2021）主张通过残差方法对非边缘部分进行监督，以获得更精细的边缘。张等人（Zhang et al. 2020）提出了本地上下文关注模块，将本地上下文特征从编码器层传递到解码器层，增强了对难点区域的关注。RFENet （Fan 等人，2023 年）引入了结构焦点细化模块，以方便对边界周围的模糊点进行细粒度特征细化。EAMNet（Sun、Jiang 和 Qi，2023 年）将边缘检测和伪装物体分割视为一个相互关联的交叉细化过程。</p><h2 id="method"><a class="markdownIt-Anchor" href="#method"></a> Method</h2><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222016676.png" alt=" " />    <p align="left">    图 2：Polyper 的整体架构。我们使用 Swin Transformer 的 Swin-T 作为编码器。解码器分为两个主要阶段。第一个潜在边界提取（PBE）阶段旨在从编码器中捕捉多尺度特征，然后将这些特征汇总，生成初始分割结果。接下来，我们使用形态学算子提取预测息肉的潜在边界和内部区域。在第二个边界敏感细化（BSR）阶段，我们对潜在边界和内部区域之间的关系进行建模，以生成更好的分割结果。  </p> </p><p>由于息肉与周围组织的对比度较低，因此从周围粘膜中准确识别息肉边界具有挑战性。为了解决这个问题，一种普遍的策略是通过完善潜在边界附近的语义特征来提高分割图的质量。然而，息肉边界与周围组织混合的模糊性质往往会阻碍对息肉边界区域的准确预测。在内窥镜筛查中，经验丰富的医疗从业人员通常会利用非边界区域内息肉的固有特征来有效解决边界模糊的问题。受这种临床方法的启发，我们提出了一种新的边界敏感框架，称为 Polyper。</p><p>图 2 是 Polyper 的概览。与之前大多数息肉分割工作一样，我们采用了经典的编码器-解码器架构。编码器在提取不同尺度和层次的特征方面起着至关重要的作用，使模型能够捕捉到粗略和精细的细节。我们使用 Swin Transformer（Liu 等人，2021 年）中的 Swin-T 作为编码器。解码器包括两个不同的阶段：潜在边界提取和边界敏感细化。在潜在边界提取阶段，编码器的多尺度特征汇总生成一个初始预测，用于提取预测息肉的潜在边界和内部区域。边界敏感阶段利用内部区域的独特特征，通过对潜在边界区域和内部区域之间的关系建模来提高模型的精度。下面我们将详细介绍这两个阶段。</p><h3 id="potential-boundary-extraction"><a class="markdownIt-Anchor" href="#potential-boundary-extraction"></a> Potential Boundary Extraction</h3><p>图 2 展示了潜在边界提取阶段的概况。我们使用 1 × 1 卷积预测分割图，并使用形态学算子从初始分割结果中提取边界和内部息肉区域。这一阶段可分为特征聚合和区域分离。</p><p>特征聚合。在特征聚合部分，我们使用 1 × 1 卷积和连接操作来聚合不同尺度的特征。给定来自编码器四个阶段的特征（表示为 E0、E1、E2 和 E31），我们首先按照（Lin 等人，2017 年）的方法构建一个特征金字塔。具体来说，我们通过线性插值调整特征图 E1、E2 和 E3 的大小，以确保它们与 E0 大小相同，从而得到 E′ 1、E′ 2 和 E′3。特征聚合过程各阶段中间层特征图 Di 的计算公式为</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231222201318437.png" alt="image-20231222201318437" /></p><p>其中 i∈{0, 1, 2, 3}，[- - - ] 表示连接操作。这里，D3 相当于 E′ 3，E′ 0 相当于 E0。Conv1×1 表示 1 × 1 卷积。</p><p>区域分离。我们引入了一个区域分离模块，用于从初始分割图中分离边界和内部息肉区域。具体来说，给定最后阶段特征聚合的输出 D0，通过 1 × 1 卷积得到初始分割掩膜 fm。然后，我们利用侵蚀算子 (E) 和扩张算子 (D)2 从初始分割掩膜中分离出边界和内部区域。每次迭代，掩膜边缘都会侵蚀或扩张一个像素。这些区域为后续的细化过程提供了重要的指导。分离过程可以写成</p><p><img src="images/image-20231222201341078.png" alt="image-20231222201341078" /></p><p>其中 PCR 表示内部区域，PBR 表示潜在边界区域。值得注意的是，运算符 D 和运算符 E 的总运算次数是相同的。</p><h3 id="boundary-sensitive-refinement"><a class="markdownIt-Anchor" href="#boundary-sensitive-refinement"></a> Boundary Sensitive Refinement</h3><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222019455.png" alt=" " />    <p align="left">    图 3：边界敏感注意（BSA）模块的详细结构。这一过程分为两个并行分支，它们系统地利用了息肉在不同生长阶段的空间和通道特性。B "和 "M "表示输入 H × W 尺寸和 C 信道中息肉边界和内部区域的像素数量。  </p> </p><p>如导言部分所述，不同生长阶段的息肉具有不同的特征，包括形状、纹理和颜色，这给息肉分割方法的鲁棒性带来了巨大挑战。为了解决这个问题，我们提出了边界敏感细化阶段，以细化基于 PCR 和 PBR 的边界区域特征。</p><p>边界敏感细化阶段如图 2 右侧所示，包括边界敏感注意模块和全阶段敏感策略。我们首先分别从边界、内部多边形和背景区域提取特征。然后，我们利用交叉注意机制来模拟边界区域和内部息肉区域之间的关系，以及内部息肉区域和背景区域之间的关系。这样就能同时对全局特征和局部特征进行编码，从而提高分割结果的质量，并获得准确的边界。完成上述过程后，不同区域对应的特征将恢复到初始位置。这样做的目的是确保有效利用硬件资源。为了实现上述过程，我们引入了一个新颖的边界敏感注意模块。此外，深层特征擅长捕捉和传递语义信息，而低层特征则善于表现复杂的几何细节。我们引入了全阶段灵敏度策略，巧妙地利用了深层和浅层特征的优势。</p><p><strong>边界敏感注意</strong> 边界敏感注意模块的结构如图 3 所示。它由两个分支组成，通过建立空间和通道注意力来深入探索息肉的固有特征。我们首先介绍边界敏感注意模块在空间信息编码方面的工作机制。</p><p>给定输入 Di、边界区域掩码 PBR 和内部息肉区域掩码 PCR，我们首先在 Di 上对 PBR 和 PCR 执行元素乘积运算，以获得与边界区域和内部息肉区域相对应的特征，分别称为 FBR 和 FCR。为了更好地发现真正的息肉边界，我们不考虑背景区域。我们将 FBR 视为查询矩阵，FCR 视为关键矩阵和值矩阵，并计算它们之间的交叉关注度如下：</p><p><img src="images/image-20231222201434214.png" alt="image-20231222201434214" /></p><p>其中 MHCAS(-, -, -) 表示沿空间维度的多头交叉关注（Vaswani 等人，2017 年）。这一操作的目的是根据本节开头提到的观察结果，利用内部息肉区域的先验值，更准确地挖掘出真正的息肉区域。此外，由于交叉关注的计算只涉及 FBR 和 FCR，而不涉及背景区域，因此计算成本也较低。然后将结果放回 Di 的相应位置。</p><p>我们还考虑使用背景区域来捕捉背景与边界区域之间以及背景与内部息肉区域之间的变化和相关性。我们用 F ′ BR 和 F ′ CR 分别表示包含背景信息的边界区域特征和内部息肉区域特征。我们将 F ′ BR 视为查询矩阵，F ′ CR 视为关键矩阵和值矩阵，并计算它们之间的交叉关注度如下：</p><p><img src="images/image-20231222201505589.png" alt="image-20231222201505589" /></p><p>其中，MHCAC(-, -, -) 表示沿通道维度的多头交叉关注，遵循（Yin 等人，2022 年；Zamir 等人，2022 年）以节省计算量。这一操作的目的是从全局角度捕捉不同区域之间的一致性和相关性。这有助于更好地理解息肉的整体结构。</p><p>拟议的边界敏感注意模块的输出可表述为</p><p><img src="images/image-20231222201530471.png" alt="image-20231222201530471" /></p><p>其中 Conv1×1 是 1 × 1 卷积。</p><p>全阶段敏感策略。如图 2 右侧所示，边界敏感注意模块可有效利用不同尺度的特征，逐步细化边界区域。这种全阶段敏感策略的表述如下。在最深阶段，细化过程的计算方法如下：</p><p><img src="images/image-20231222201555039.png" alt="image-20231222201555039" /></p><p>其中，BSA(-, -, -) 表示边界敏感注意模块。此外，后续阶段的细化过程可定义为</p><p><img src="images/image-20231222201624907.png" alt="image-20231222201624907" /></p><p>最后，我们对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">F_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 进行 1 × 1 卷积，生成最终预测结果。从以上描述可以看出，我们的解码器主要包含 1 × 1 卷积和简单的交叉注意。这使得我们的方法非常高效。</p><h2 id="experiments"><a class="markdownIt-Anchor" href="#experiments"></a> Experiments</h2><h3 id="dataset"><a class="markdownIt-Anchor" href="#dataset"></a> Dataset</h3><p>与之前的大多数研究一样，这些结果是在 Pranet（Fan 等人，2020 年）中使用的相同数据集上报告的，其中包括五个常用数据集：Kvasir-SEG、CVCClincDB、CVC-ColonDB、EndoScene 和 ETIS。具体来说，训练集包括来自 KvasirSEG 的 900 幅图像和来自 ClinicDB 的 550 幅图像。测试集包括 Kvasir-SEG 的 100 幅图像、CVCClincDB 的 62 幅图像、CVC-ColonDB 的 380 幅图像、EndoScene 的 60 幅图像和 ETIS 的 196 幅图像。</p><h3 id="implementation-details"><a class="markdownIt-Anchor" href="#implementation-details"></a> Implementation Details</h3><p>我们在所有实验中都使用 PyTorch（Paszke 等人，2019 年）和 mmsegmentation（Contributors，2020 年）来实现 Polyper。训练期间的输入分辨率设置为 224 × 224，批量大小设置为 6。训练期间的迭代次数为 80k。我们使用 AdamW 优化器进行训练，初始学习率为 0.0002，动量为 0.9，权重衰减为 1e-4。所有实验均在一个英伟达 RTX 3090 GPU 上进行。按照先前研究（Lin 等，2022 年）的配置，采用了 mIoU 和 mDice 评估指标。实验中的翻转数和参数计算基于 512 × 512 的输入大小，计算方法来自 mmsegmentation 项目。</p><h3 id="analysis-of-experimental-results"><a class="markdownIt-Anchor" href="#analysis-of-experimental-results"></a> Analysis of Experimental Results</h3><p align="left">表 1：与最先进方法的比较。Polyper w/o RS "表示在提取潜在边界时不使用区域分割，而是细化整个前景区域而不是边界区域。Polyper w/o BSR "表示不细化初始分割结果。<p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222027559.png" alt=" " />          </p> </p><p>与最先进方法的比较。我们将 Polyper 的分割性能与其他最先进的模型进行了比较。表 1 列出了与基于 CNN 的方法的综合比较，包括 UNet（Ronneberger、Fischer 和 Brox，2015 年）、UNet++（Zhou 等，2018 年）、SFA（Fang 等，2019 年）、ACSNet（Zhang 等，2020 年）、PraNet（Fan 等，2020 年）和 SANet（Wei 等，2021 年）。此外，我们还比较了基于Transformer的方法，包括 TransFuse（Zhang、Liu 和 Hu，2021 年）、HarDNet-MSEG（Huang、Wu 和 Lin，2021 年）、DSTransUNet（Lin 等，2022 年）、Polyp-PVT（Dong 等，2021 年）和 SwinENet。2021 年）、SwinE-Net（Park 和 Lee 2022 年），以及基于细化的方法，如 CaraNet（Lou 等 2022 年）、ColonFormer（Thanh Duc 等 2022 年）和 SegT（Chen、Ma 和 Zhang 2023 年）。如表 1 所示，我们提出的边界敏感方法 Polyper 明显优于其他列出的方法。可视化结果如图 5 所示，从中可以看出，我们提出的方法在边界处理和小息肉处理方面优于之前的方法。</p><p>小息肉分析。我们还对小息肉的性能进行了评估。这类息肉往往出现在疾病的初期，对比度较低（Antonelli 等人，2021 年）。具体来说，我们采用 CaraNet（Lou 等人，2022 年）中提出的方法，重点评估占整个图像 6% 以下的息肉。在该实验中，我们与基于 CNN 的方法 PraNet（Fan 等人，2020 年）、基于Transformer的方法 DSTransUNet（Lin 等人，2022 年）和基于细化的方法 CaraNet（Lou 等人，2022 年）进行了比较。结果如图 4 所示。可以看出，由于采用了边界敏感策略，Polyper 在小息肉中的表现优于其他方法。值得注意的是，Polyper 甚至优于专门为小息肉目标设计的方法 CaraNet。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222030955.png" alt=" " />    <p align="left">    图 4：五个数据集上小息肉的性能。比例大小 "是指息肉的大小与整个图像的比例。  </p> </p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222030460.png" alt=" " />    <p align="left">    图 5：不同方法在 Kvasir、ClinicDB 和 ColonDB 数据集上的分割结果。  </p> </p><h3 id="ablation-study"><a class="markdownIt-Anchor" href="#ablation-study"></a> Ablation Study</h3><p align="left"> 表 2：不同编码器和特征聚合方法的消融情况。Polyper w/o BSR "表示不细化初始分割结果<p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222026113.png" alt=" " />          </p> </p><p>我们在 Kvasir 数据集上进行了大量消融实验，以分析 Polyper。</p><p>对编码器的消融。首先，我们进行实验来评估不同编码器的影响。我们选择常用的 ResNet-50（He 等人，2016 年）和 MiTB1（Xie 等人，2021 年）作为评估编码器。如表 2 所示，当使用我们的解码器和 ResNet-50 作为编码器时，与不改进初始分割结果相比，mIoU 和 mDice 分别显著提高了 2.22 和 1.16。此外，使用 MiT-B1 作为编码器也能带来显著提升。这表明 Polyper 可广泛应用于各种编码器。</p><p>消融对潜在边界提取的影响。我们首先评估了不同特征聚合方法的影响。为此，我们考虑了非局部块（Wang 等人，2018 年）和 Hamburger（Geng 等人，2021 年）。如表 2 所示，我们提出的边界敏感方法 Polyper 兼容不同的特征聚合方法，这反映了我们方法的泛化能力。此外，值得注意的是，当使用非本地块和 Hamburger 进行特征聚合时，其性能并没有超过我们提出的特征聚合方法。我们认为这是由于这两种方法最初是为自然图像的语义分割而设计的。鉴于可用于分割的医疗数据量有限，以及由此带来的网络融合挑战，这两种方法在医疗分割中的表现仍不能令人满意。</p><p align="left">表 3：区域分割的消蚀。其中，"迭代次数 "表示侵蚀算子的迭代次数。<p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222028422.png" alt=" " />          </p> </p><p>此外，我们还通过实验分析了区域分割（RS）的有效性。在没有 RS 的情况下，随后的细化阶段会使用完整的掩码来涵盖整个前景区域。如表 3 所示，与使用完整掩膜的细化相比，使用 RS 的细化在 mIoU 和 mDice 上分别提高了 4.40 和 2.59。这是因为初始分割结果的边界区域包含了不可靠的低置信度特征。当细化整个前景时，会受到这些不可靠特征的影响，从而降低分割结果的质量。</p><p>最后，我们对边界区域的宽度进行了实验，结果如表 3 所示。边界区域的宽度是通过在应用侵蚀算子后的掩膜和应用扩张算子后的掩膜之间进行减法运算来确定的，计算方法遵循（Zhu, Qiao, and Yang 2023）。在本实验中，我们重点评估了侵蚀算子迭代次数的影响。从表中可以看出，侵蚀算子的最佳迭代次数为 4。</p><p><img src="images/image-20231222202910561.png" alt="image-20231222202910561" /></p><p>烧蚀对边界敏感的细化。在这里，我们通过实验来验证边界敏感细化阶段的重要性。首先，我们评估了空间注意力和通道注意力这两个分支的重要性。表 4 清楚地说明了空间注意力和通道注意力的贡献。这说明了充分利用边界区域与内部息肉区域之间的关系以及内部息肉区域与背景区域之间的关系来生成具有精确边界的息肉区域的有效性。</p><p>然后，我们评估全阶段敏感策略的重要性。该实验的目的是验证是否有必要在特征聚合部分细化所有特征。表 5 说明了充分利用不同层次的特征来提高具有准确边界的分割结果质量的有效性。我们可以看到，逐渐加入更多低层次的特征可以不断提高模型的性能。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312222031760.png" alt=" " /><p align="left" >    图 6：不同版本 Polyper 生成的特征图的视觉分析。所有图像均选自 Kvasir 数据集。(a) 无边界敏感度细化；(b) 无区域分割；(c) 无边界敏感度关注；(d) 无通道关注的 Polyper；(e) 无空间关注；(f) Polyper；(g) 无边界敏感度的分割结果；(h) 无区域分割的分割结果；(i) 使用 Polyper 的分割结果；(j) 地面实况注释。  </p> </p><p>可视化分析。为了更全面地了解我们提出的 Polyper 中每个组件的功能，我们利用（Komodakis 和 Zagoruyko，2017 年）中提出的可视化方法对不同版本 Polyper 生成的输出特征图进行了可视化。可视化结果如图 6 所示。从图 6(b)可以看出，当从全局角度完善初始结果时，这种方法效果有限，无法解决由于低置信度预测的边界区域存在干扰而导致的边缘模糊问题。相反，从图 6(f)中可以看出，如果对内部息肉区域和边界区域之间的关系以及内部息肉区域和背景区域之间的关系进行建模，以区分病变区域的边界，我们的方法就会非常有效。</p><p>Polyper 的局限性。我们在图 7 中展示了 Polyper 的一些失败案例。首先，我们假设息肉定位是准确的，因此无法很好地处理假阳性或假阴性。其次，我们采用固定宽度法来定义边界宽度和提取边界区域。这可能无法解释息肉特征的多样性。未来，我们将探索自适应边界宽度方法。</p><h2 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h2><p>我们提出了一种新颖的息肉分割方法 Polyper。我们利用形态学算子从初始分割结果中划分出息肉的边界和内部区域。然后，我们利用息肉内部区域的特征来增强边界区域的特征。我们在五个数据集上的实验证明了 Polyper 的卓越性能。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PIDNet A Real-time Semantic Segmentation Network Inspired by PID Controllers</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/PIDNet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/PIDNet/</url>
      
        <content type="html"><![CDATA[<h1 id="pidnet-a-real-time-semantic-segmentation-network-inspired-by-pid-controllers"><a class="markdownIt-Anchor" href="#pidnet-a-real-time-semantic-segmentation-network-inspired-by-pid-controllers"></a> PIDNet: A Real-time Semantic Segmentation Network Inspired by PID Controllers</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><h3 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h3><p>Proportional-Integral-Derivative (PID) Controller is a classic concept that has been widely applied in modern dynamic systems and processes such as robotic manipulation [3], chemical processes [24], and power systems [25]. Even though many advanced control strategies with better control performance have been developed in recent years, PID controller is still the go-to choice for most industry applications due to its simplicity and robustness. Furthermore, the idea of PID controller has been extended to many other areas. For example, researchers introduced the PID concept to image denoising [32], stochastic gradient decent [1] and numerical optimization [50] for better algorithm performance. In this paper, we devise a novel architecture for real-time semantic segmentation tasks by employing the basic concept of PID controller and demonstrate that the performance of our model surpasses all the previous works and achieves the best trade-off between inference speed and accuracy, as illustrated in Figure 1, by extensive experiments.</p><p>Semantic segmentation is a fundamental task for visual scene parsing with the objective of assigning each pixel in the input image to a specific class label. With the increasing demand of intelligence, semantic segmentation has become the basic perception component for applications such as autonomous driving [16], medical imaging diagnosis [2] and remote sensing imagery [54]. Starting from FCN [31], which achieved great improvement over traditional methods, deep convnets gradually dominated the semantic segmentation field and many representative models have been proposed [4, 6, 40, 48, 59, 60]. For better performance, various strategies were introduced to equip these models with the capability of learning contextual dependencies among pixels in large scale without missing important details. Even though these models achieve encouraging segmentation accuracy, too much computational cost are required, which significantly hinder their application in real-time scenarios, such as autonomous vehicle [16] and robot surgery [44].</p><p>To meet real-time or mobile requirements, researchers have come up with many efficient and effective models in the past for semantic segmentation. Specifically, ENet [36] adopted lightweight decoder and downsampled the feature maps in early stages. ICNet [58] encoded small-size inputs in complex and deep path to parse the high-level semantics. MobileNets [21, 42] replaced traditional convolutions with depth-wise separable convolutions. These early works reduced the latency and memory usage of segmentation models, but low accuracy significantly limits their real-world application. Recently, many novel and promising models based on Two-Branch Network (TBN) architecture have been proposed in the literature and achieve SOTA trade-off between speed and accuracy [15, 20, 38, 39, 52].</p><p>In this paper, we view the architecture of TBNs from the prospective of PID controller and point out that a TBN is equivalent to a PI controller, which suffers from the overshoot issue as illustrated in Figure 2. To alleviate this problem, we devise a novel three-branch network architecture, namely PIDNet, and demonstrate its superiority on Cityscapes [12], CamVid [5] and PASCAL Context [33] datasets. We also provide ablation study and feature visualization for better understanding of the functionality of each module in PIDNet.</p><p>The main contributions of this paper are three-fold:</p><ul><li>We make a connection between deep CNN and PID controller and propose a family of three-branch networks based on the PID controller architecture.</li><li>Efficient modules, such as Bag fusion module designed to balance detailed and context features, are proposed to boost the performance of PIDNets.</li><li>PIDNet achieves the best trade-off between inference speed and accuracy among all the existing models. In particular, PIDNet-S achieves 78.6% mIOU with speed of 93.2 FPS and PIDNet-L presents the highest accuracy (80.6% mIOU) in real-time doman on Cityscapes test set without acceleration tools.</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>Representative methods towards high-accuracy and realtime requirements are discussed separately in this section.</p><h3 id="21-high-accuracy-semantic-segmentation"><a class="markdownIt-Anchor" href="#21-high-accuracy-semantic-segmentation"></a> 2.1. High-accuracy Semantic Segmentation</h3><p>早期的语义分割方法是基于编码器-解码器结构[4,31,40]，其中编码器通过分层卷积或集合操作逐渐扩大其感受野，而解码器则使用去卷积或上采样来恢复高层语义的详细信息。然而，在编码器-解码器网络的下采样过程中，空间细节容易被忽略。为了缓解这个问题，人们提出了扩张卷积[53]，在不降低空间分辨率的情况下扩大视场。在此基础上，DeepLab系列[7-9]通过在网络中采用不同扩张率的扩张卷积，取得了比以前的工作更大的改进。请注意，扩张卷积由于其非连续的内存访问而不适合硬件实现。PSPNet[59]引入了一个金字塔池模块（PPM）来解析多尺度的上下文信息，HRNet[48]利用多路径和双边连接来学习和融合不同尺度的表示。受语言机注意机制[47]的长距离依赖性解析能力的启发，非局部操作[49]被引入计算机视觉，并导致了许多精确的模型[17, 23, 55]。</p><h3 id="22-real-time-semantic-segmentation"><a class="markdownIt-Anchor" href="#22-real-time-semantic-segmentation"></a> 2.2. Real-time Semantic Segmentation</h3><p>为了实现推理速度和准确性之间的最佳权衡，人们提出了许多网络架构，大致可以概括为以下几点。</p><p>轻量级的编码器和解码器 SwiftNet[35]采用了一个低分辨率的输入来获得高层次的语义，另一个高分辨率的输入为其轻量级的解码器提供足够的细节。DFANet[27]通过修改Xception[11]的架构引入了一个轻量级的骨干，该架构是基于深度可分离卷积的，并减少了输入大小以提高推理速度。ShuffleSeg[18]采用了ShuffleNet[57]，它结合了通道洗牌和分组卷积，作为其骨干，以减少计算成本。然而，这些网络中的大多数仍然是编码器-解码器的结构形式，它们要求信息流经过深度编码器，然后再反向通过解码器，这就引入了太多的延迟。此外，由于在GPU上对深度可分离卷积的优化还不成熟，传统的卷积呈现出更快的速度，而有更多的FLOPs和参数[35]。因此，我们寻求更有效的模型，避免卷积因子化和编码器-解码器架构。</p><p>双分支网络结构 语境依赖性可以通过大的感受野来提取，而空间细节对于边界划分和小范围物体识别至关重要。为了兼顾这两方面，**BiSeNet[52]的作者提出了一个双分支网络（TBN）架构，它包含两个不同深度的分支，用于上下文嵌入和细节解析，同时还有一个特征融合模块（FFM）来融合上下文和细节信息。一些基于该架构的后续工作被提出，以提高其表示能力或降低其模型的复杂性[38, 39, 51]。**具体来说，DDRNet[20]引入了双边连接，以加强上下文和详细分支之间的信息交流，在实时语义分割中取得了最先进的成果。然而，直接融合原始的详细语义和低频的上下文信息有这样的风险，即物体的边界被周围的像素过度腐蚀，小物体被相邻的大物体所淹没（如图2和3所示）。</p><p><img src="images/image-20230507145008196.png" alt="image-20230507145008196" /></p><blockquote><p>图2. 动态系统（左|）和图像分割（|右）的过冲问题。左图 |： 二阶系统的PI和PID控制器的阶跃响应； | 右： 从第一行到最后一行，图像分别从地面实况、DDRNet-23[20]和ADB-Bag-DDRNet-23（我们的）的输出中裁剪出来。</p></blockquote><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> 3. Method</h2><img src="images/image-20230507145047907.png" alt="image-20230507145047907" style="zoom:150%;" /><blockquote><p>图3. 上图|： PID控制器和提议的网络之间的类比； |下图： 左图：将周围的掩膜区域清零，并计算每个像素的当前特征和原始特征的相似度；右图：将周围的掩膜区域清零： 从第一列到最后一列，图像指的是DDRNet-23的基础真相、所有分支的预测、仅详细分支和仅上下文分支。</p></blockquote><p>PID控制器包含三个部分：比例（P）控制器、积分（I）控制器和导数（D）控制器，如图3-Upper所示。PI控制器的实现可以写成：</p><p>P控制器专注于电流信号，而I控制器积累所有过去的信号。由于积累的惯性效应，当信号发生相反的变化时，简单的PI控制器的输出会发生过冲现象。然后，引入了D控制器，如果信号变小，D分量将变成负值，作为阻尼器来减少过冲。同样地，TBNs通过多个卷积层分别解析上下文和详细信息，有的有，有的没有。考虑一个简单的一维例子，其中详细和背景分支都由3层组成，没有BNs和ReLUs。那么，输出图可以被计算为：</p><p>这里，kmn指的是m层中内核的第n个值。由于|kmn|大多分布在（0，0.01）（DDRNet-23的92%），并且以1为界，所以每项的系数会随着层数的增加而呈指数下降。因此，对于每个输入向量来说，项目的数量越多，意味着对最终输出的贡献越大。对于细节分支，I[i - 1]、I[i]和I[i + 1]占据了总项目的70%以上，这意味着细节分支更注重于局部信息。相反，I[i - 1]、I[i]和I[i + 1]只占上下文分支总项目的不到26%，所以上下文分支强调的是周围信息。图3-底部显示，与细节分支相比，上下文分支对本地信息的变化不太敏感。细节分支和上下文分支在空间域中的行为与时域中的P（当前）和I（所有先前）控制器相似。</p><p>在PID控制器的z变换中用e-jω代替z-1，可以表示为：</p><p>当输入频率ω增加时，I和D控制器的增益将分别变小和变大，因此P、I和D控制器作为全通、低通滤波器和高通滤波器工作。由于PI控制器更关注输入信号的低频部分，不能立即对信号的快速变化做出反应，因此它本身就存在过冲问题。D控制器通过使控制输出对输入信号的变化敏感来减少过冲。图3-底部显示，细节分支解析各种语义信息，即使不准确，而上下文分支聚合低频的上下文信息，并在语义上用大的平均过滤器进行类似工作。直接融合细节信息和上下文信息会导致一些细节特征的缺失。因此，我们得出结论，TBN等同于傅里叶域的PI控制器。</p><h3 id="31-pidnet-a-novel-three-branch-network"><a class="markdownIt-Anchor" href="#31-pidnet-a-novel-three-branch-network"></a> 3.1. PIDNet: A Novel Three-branch Network</h3><p>为了缓解过冲问题，我们在TBN上附加了一个辅助导数分支（ADB），在空间上模仿PID控制器，突出高频语义信息。每个物体内部的像素的语义是一致的，只有沿着相邻物体的边界才会变得不一致，所以语义的差异只有在物体边界才是非零的，ADB的目标是边界检测。因此，我们建立了一个新的三分支实时语义分割架构，即比例-积分-导数网络（PIDNet），如图4所示。</p><p><img src="images/image-20230507145437924.png" alt="image-20230507145437924" /></p><blockquote><p>图4. 我们提出的比例-积分-导数网络（PIDNet）的基本架构概述。S和B表示语义和边界，Add和Up分别指元素相加和双线性升值操作；BASLoss表示边界感知的CE损失[46]。虚线和关联块在推理阶段将被忽略。</p></blockquote><p>PIDNet拥有三个责任互补的分支：比例（P）分支解析并保留高分辨率特征图中的详细信息；积分（I）分支聚合局部和全局的上下文信息以解析长距离的依赖关系；衍生（D）分支提取高频特征以预测边界区域。和[20]一样，我们也采用了级联残差块[19]作为骨干，以保证硬件的友好性。此外，P、I和D分支的深度被设定为适中、较深和较浅，以便有效实施。因此，通过加深和加宽模型，产生了一系列的PIDNets（PIDNet-S、M和L）。</p><p>按照[20, 28, 51]，我们在第一个Pag模块的输出端放置一个语义头，以产生额外的语义损失l0，从而更好地优化整个网络。l2和l3代表CE损失，而我们利用边界头的输出对l3采用边界感知CE损失[46]，以协调语义分割和边界检测任务，增强Bag模块的功能。BAS-Loss的计算方法可以写成：</p><p>其中t是指预定义的阈值，bi, si,c和ˆ si,c分别是边界头的输出、分割的真实情况和第i个像素的c类的预测结果。因此，PIDNet的最终损失为：</p><p>根据经验，我们将PIDNet的训练损失参数设定为λ0 = 0.4, λ1 = 20, λ2 = 1, λ3 = 1和t = 0.8。</p><h3 id="32-pag-learning-high-level-semantics-selectively"><a class="markdownIt-Anchor" href="#32-pag-learning-high-level-semantics-selectively"></a> 3.2. Pag: Learning High-level Semantics Selectively</h3><p>在[20, 35, 48]中利用的横向连接增强了不同尺度的特征图之间的信息传递，提高了其模型的表示能力。在PIDNet中，I分支提供的丰富而准确的语义信息对于P和D分支的细节解析和边界检测至关重要，这两个分支包含的层数和通道相对较少。因此，我们将I分支视为其他两个分支的备份，并使其能够为它们提供所需信息。与直接添加所提供的特征图的D分支不同，我们为P分支引入了一个Pixel-attention-guided fusion模块（Pag），如图5所示，以便有选择地从I分支学习有用的语义特征而不被淹没。Pag的基本概念是借用了注意力机制[47]。将P和I分支的特征图中相应像素的向量分别定义为~ vp和~ vi，那么Sigmoid函数的输出可以表示为：</p><p>其中σ表示这两个像素属于同一对象的可能性。如果σ高，我们就更相信~ vi，因为I分支的语义丰富且准确，反之亦然。因此，Pag的输出可以写成：：</p><h3 id="33-pappm-fast-aggregation-of-contexts"><a class="markdownIt-Anchor" href="#33-pappm-fast-aggregation-of-contexts"></a> 3.3. PAPPM: Fast Aggregation of Contexts</h3><p>为了更好地构建全局场景先验，PSPNet[59]引入了金字塔池化模块（PPM），在卷积层之前将多尺度池化图串联起来，形成局部和全局的情境表示。实验结果表明，该模型在全局范围内具有很强的可操作性。然而，DAPPM的计算过程在深度方面不能并行化，这很耗时，而且DAPPM对每个尺度都包含太多的通道，这可能超过了轻量级模型的表现能力。因此，我们修改了DAPPM中的连接，使其可以并行，如图6所示，并将每个规模的通道数量从128个减少到96个。这个新的上下文采集模块被称为并行聚合PPM（PAPPM），并被应用于PIDNet-M和PIDNet-S，以保证其速度。对于我们的深度模型： 对于我们的深度模型：PIDNet-L，考虑到其深度，我们仍然选择DAPPM，但减少其通道数量，以减少计算量和提高速度。</p><p><img src="images/image-20230507150134972.png" alt="image-20230507150134972" /></p><blockquote><p>Figure 6. The parallel structure of PAPPM. Avg (5,2) means average pooling with kernel size of 5×5 and strides of 2.</p></blockquote><h3 id="34-bag-balancing-the-details-and-contexts"><a class="markdownIt-Anchor" href="#34-bag-balancing-the-details-and-contexts"></a> 3.4. Bag: Balancing the Details and Contexts</h3><p>鉴于ADB提取的边界特征，我们采用边界注意力来指导详细（P）和背景（I）表征的融合。具体来说，我们设计了一个边界注意力引导的融合模块（Bag），如图7所示，分别用细节和上下文特征填充高频和低频区域。请注意，上下文分支在语义上是准确的，但它失去了太多的空间和几何细节，特别是对于边界区域和小物体。由于详细分支更好地保留了空间细节，我们迫使模型在边界区域更多地信任详细分支，并利用上下文特征来填补其他区域。将P、I和D特征图的相应像素的向量分别定义为~ vp、~ vi和~ vd，那么Sigmoid、Bag和Light-Bag的输出可以表示为：</p><p>其中f指的是卷积、批量归一化和ReLU的组成。尽管我们在Light-Bag中用两个1×1的卷积代替了Bag中的3×3卷积，但Bag和Light-Bag的功能是相似的，即当σ&gt;0.5时，模型更相信细节特征，否则就会优先考虑上下文信息。</p><p><img src="images/image-20230628233926664.png" alt="image-20230628233926664" /></p><h2 id="4-experiment"><a class="markdownIt-Anchor" href="#4-experiment"></a> 4. Experiment</h2><p>在这一部分，我们的模型将在Cityscapes、CamVid和PASCAL Context基准上进行训练和测试。</p><h3 id="41-datasets"><a class="markdownIt-Anchor" href="#41-datasets"></a> 4.1. Datasets</h3><p><strong>Cityscapes.</strong> Cityscapes[12]是最著名的城市场景解析数据集之一，它包含了从不同城市的汽车视角收集的5000张图像。这些图像被分为数量为2975、500和1525的集合，用于训练、验证和测试。图像分辨率为2048×1024，这对实时模型来说是个挑战。这里只使用了精细注释的数据集。</p><p><strong>CamVid.</strong> CamVid [5] provides 701 images of driving scenes, which is partitioned into 367, 101 and 233 for training, validation and test. The image resolution is of 960×720 and the number of annotated categories is 32, of which 11 classes are used for fair comparison with previous works.</p><p><strong>PASCAL Context.</strong> Semantic labeling for whole scene is provided in PASCAL Context [33], which contains 4998 images for training and 5105 images for validation. While this dataset is mainly used for benchmarking high-accuracy models, we utilized it here to show the generalization ability of PIDNets. Both 59 and 60-class scenarios are evaluated.</p><h3 id="42-implementation-details"><a class="markdownIt-Anchor" href="#42-implementation-details"></a> 4.2. Implementation Details</h3><p><strong>Pretraining.</strong> 在对我们的模型进行微调之前，我们通过ImageNet[41]对其进行预训练，就像大多数以前的工作一样[20,34,35]。在最后阶段，我们去掉D分支，直接合并特征来构建分类模型。训练的总次数为90次，学习率最初为0.1，在第30和60次时乘以0.1。图像被随机裁剪成224×224，并在水平方向上翻转以增加数据。</p><p><strong>Training.</strong> 我们的训练协议与以前的工作[15, 20, 52]几乎相同。具体来说，我们采用poly策略来更新学习率，并在[0.5, 2.0]的范围内进行随机裁剪、随机水平翻转和随机缩放来进行数据扩充。Cityscapes、CamVid和PASCAL Context的训练历时数、初始学习率、权重衰减、裁剪尺寸和批量大小可分别概括为[484, 1e-2, 5e-4, 1024×1024, 12]、[200, 1e-3, 5e-4, 960×720, 12] 和[200, 1e-3, 1e-4, 520×520, 16]。按照[20, 51]，我们对CamVid的Cityscapes预训练模型进行了微调，并在lr&lt;5e-4时停止训练过程以避免过拟合。</p><p><strong>Inference.</strong> 在测试之前，我们的模型由Cityscapes和CamVid的训练集和val集进行训练。我们测量了由单个RTX 3090、PyTorch 1.8、CUDA 11.2、cuDNN 8.0和WindowsConda环境组成的平台上的推理速度。使用[10]提出的测量协议并遵循[20, 35, 45]，我们将批量归一化整合到卷积层中，并将批量大小设置为1来测量推理速度。</p><p>4.3. Ablation Study</p><p><strong>ADB for Two-branch Networks.</strong> 为了证明PID方法的有效性，我们将ADB和Bag与现有模型相结合。在这里，两个有代表性的双分支网络： BiSeNet[52]和DDRNet[20]配备了ADB和Bag，与它们的原始模型相比，在Cityscapes估值集上取得了更高的准确性，如表1所示。然而，额外的计算大大降低了它们的推理速度，这就促使我们建立PIDNet。</p><p><strong>Collaboration of Pag and Bag.</strong> P分支利用Pag模块从I分支学习有用的信息，在融合阶段前不会被淹没，Bag模块被引入指导详细特征和背景特征的融合。如表2所示，横向连接可以显著提高模型的准确性，预训练可以进一步提高其性能。在我们的方案中，增加横向连接和Bag融合模块或Pag横向连接和增加融合模块的组合意义不大，因为细节的保存在整个网络中应该是一致的。因此，我们只需要比较Add + Add和Pag + Bag的性能，表2和表3的实验结果证明了Pag和Bag（或Light-Bag）协作的优越性。图8中特征图的可视化显示，与第二种Pag的Sigmoid图中的大物体相比，小物体的颜色变得更深，其中I分支失去了更多的细节信息。同时，在Bag模块的输出中，边界区域和小物体的特征也大大增强，这在图9中得到说明，也解释了我们选择粗略边界检测的原因。</p><p><strong>Efficiency of PAPPM.</strong> 对于实时模型来说，沉重的上下文聚合模块会大大降低推理速度，并可能超过网络的表示能力。因此，我们提出了PAPPM，它是由并行结构和少量参数构成的。表3中的实验结果显示，PAPPM达到了与DAPPM[20]相同的精度，但对于我们的轻量级模型来说，呈现出9.5FPS的速度提升。</p><p><strong>Effectiveness of Extra losses.</strong> 在PIDNet中引入了三个额外的损失，以促进整个网络的优化并强调每个组件的功能。根据表4，边界损失l1和边界意识损失l3对于更好的性能是必要的，尤其是边界损失（+1.1% mIOU），这有力地证明了D分支的必要性，而在线硬例挖掘（OHEM）[43]进一步提高了准确性。</p><h3 id="43-ablation-study"><a class="markdownIt-Anchor" href="#43-ablation-study"></a> 4.3. Ablation Study</h3><p><strong>ADB for Two-branch Networks.</strong> 为了证明PID方法的有效性，我们将ADB和Bag与现有模型相结合。在这里，两个有代表性的双分支网络： BiSeNet[52]和DDRNet[20]配备了ADB和Bag，与它们的原始模型相比，在Cityscapes估值集上取得了更高的准确性，如表1所示。然而，额外的计算大大降低了它们的推理速度，这就促使我们建立PIDNet。</p><p><img src="images/image-20230628233309064.png" alt="image-20230628233309064" /></p><p><strong>Collaboration of Pag and Bag.</strong> P分支利用Pag模块从I分支学习有用的信息，在融合阶段前不会被淹没，Bag模块被引入指导详细特征和背景特征的融合。如表2所示，横向连接可以显著提高模型的准确性，预训练可以进一步提高其性能。在我们的方案中，增加横向连接和Bag融合模块或Pag横向连接和增加融合模块的组合意义不大，因为细节的保存在整个网络中应该是一致的。因此，我们只需要比较Add + Add和Pag + Bag的性能，表2和表3的实验结果证明了Pag和Bag（或Light-Bag）协作的优越性。图8中特征图的可视化显示，与第二种Pag的Sigmoid图中的大物体相比，小物体的颜色变得更深，其中I分支失去了更多的细节信息。同时，在Bag模块的输出中，边界区域和小物体的特征也大大增强，这在图9中得到说明，也解释了我们选择粗略边界检测的原因。</p><p><img src="images/image-20230628233321100.png" alt="image-20230628233321100" /></p><p><img src="images/image-20230628233331867.png" alt="image-20230628233331867" /></p><p><img src="images/image-20230628233430680.png" alt="image-20230628233430680" /></p><p><img src="images/image-20230628233404236.png" alt="image-20230628233404236" /></p><p><strong>Efficiency of PAPPM.</strong> 对于实时模型来说，沉重的上下文聚合模块会大大降低推理速度，并可能超过网络的表示能力。因此，我们提出了PAPPM，它是由并行结构和少量参数构成的。表3中的实验结果显示，PAPPM达到了与DAPPM[20]相同的精度，但对于我们的轻量级模型来说，呈现出9.5FPS的速度提升。</p><p><strong>Effectiveness of Extra losses.</strong> 在PIDNet中引入了三个额外的损失，以促进整个网络的优化并强调每个组件的功能。根据表4，边界损失l1和边界意识损失l3对于更好的性能是必要的，尤其是边界损失（+1.1% mIOU），这有力地证明了D分支的必要性，而在线硬例挖掘（OHEM）[43]进一步提高了准确性。</p><h3 id="44-comparison"><a class="markdownIt-Anchor" href="#44-comparison"></a> 4.4. Comparison</h3><p><strong>CamVid.</strong> 对于CamVid[5]数据集，只有DDRNet的准确率可以与我们的模型相媲美，所以考虑到我们的平台比他们的平台更先进，我们在我们的平台上用同样的设置测试其速度，以进行公平比较。表5中的实验结果显示，我们所有模型的准确率都超过了80% mIOU，而PIDNet-S-Wider，只是将PIDNetS的通道数量增加了一倍，就达到了最高的准确率，而且比以前的模型有很大的优势。此外，PIDNet-S的准确性超过了以前的先进模型： DDRNet-23-S高出1.5% mIOU，而延迟只增加了约1毫秒。</p><p><img src="images/image-20230628233151656.png" alt="image-20230628233151656" /></p><p><strong>Cityscapes.</strong> 考虑到Cityscapes[12]的高质量注释，以前的实时工作将其作为标准基准。如表6所示，我们在没有任何加速工具的情况下，在同一平台上测试了近两年发表的模型的推理速度，与PIDNets进行公平比较。实验结果显示，PIDNets在推理速度和准确性之间实现了最佳的权衡。具体来说，PIDNet-L在速度和精度方面超过了SFNet(ResNet18)†和DDRNet-39，成为实时领域中最准确的模型，测试精度从80.4%提高到80.64%mIOU。与其他推理速度相似的模型相比，PIDNet-M和PIDNet-S也提供了更高的准确性。从PIDNet-S中移除Pag和Bag模块，我们提供了一个更快速的选择： PIDNet-S-Simple，它的泛化能力较弱，但在延迟小于10ms的模型中仍然呈现出最高的准确性。</p><p><img src="images/image-20230628233204925.png" alt="image-20230628233204925" /></p><p><strong>PASCAL Context.</strong> PAPPM中的Avg(17, 8)路径被移除，因为PASCAL Context[33]中的图像尺寸太小。与其他两个数据集不同的是，这里利用了多尺度和翻转推理，以便与以前的模型进行公平比较。尽管与前两个数据集相比，PASCAL Context中的详细注释较少，但我们的模型仍然在现有的重型网络中取得了有竞争力的性能，如表7所示。</p><p><img src="images/image-20230628233213136.png" alt="image-20230628233213136" /></p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h2><p>本文介绍了一种新颖的三分支网络结构： 用于实时语义分割的PIDNet。PIDNet实现了推理时间和准确性之间的最佳权衡。然而，由于PIDNet利用边界预测来平衡细节和上下文信息，为了获得更好的性能，通常需要大量时间的边界周围精确注释是首选。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTFormer</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/RTformer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/RTformer/</url>
      
        <content type="html"><![CDATA[<h1 id="rtformer"><a class="markdownIt-Anchor" href="#rtformer"></a> RTFormer</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>最近，基于transformer的网络在语义分割方面显示出令人印象深刻的结果。然而，对于实时语义分割来说，由于transformer的计算机制很耗时，基于CNN的纯方法仍然在该领域占主导地位。我们提出了RTFormer，一种用于实时语义分割的高效双分辨率transformer，它在性能和效率之间实现了比基于CNN的模型更好的权衡。为了在类似GPU的设备上实现高推理效率，我们的RTFormer利用了具有线性复杂度的GPU-Friendly Attention，并抛弃了多头机制。此外，我们发现，跨分辨率的注意力通过传播从低分辨率分支学到的高水平知识，更有效地收集高分辨率分支的全局背景信息。在主流基准上的广泛实验证明了我们提出的RTFormer的有效性，它在Cityscapes、CamVid和COCOStuff上达到了最先进的水平，并在ADE20K上显示出有希望的结果。</p><blockquote></blockquote><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>语义分割是一项基本的计算机视觉任务，通常在自动驾驶、移动应用、机器人传感等方面充当关键的感知模块。随着这些应用的发展，对实时语义分割的需求也越来越强烈。现有的实时分割方法主要集中在利用CNN架构，包括通过手工设计高效率的骨干和解码器[52, 46, 45, 17, 22, 13, 6, 30]，以及探索神经架构的搜索方法，在准确性和效率之间找到更好的权衡[51, 24, 23, 9]。而到目前为止，这些伟大的工作已经取得了重大的改进。</p><p><strong>最近，视觉transformer因其强大的视觉识别能力而受到广泛关注[12, 35, 26, 39, 40]。在此基础上，提出了一系列基于transformer的架构，如[55, 42, 48, 32]，并在一般的语义分割任务中显示出非常有前途的性能。与基于CNN的网络相比，这些基于transformer的架构的主要区别在于大量使用了自我注意，而自我注意善于捕捉长距离的上下文信息，这在语义分割中是至关重要的。因此，我们认为注意力结构在实时语义分割任务中也应该是有效的。</strong></p><p>但是到目前为止，只有少数工作[42]探索了注意力在这一领域的应用，而且先进的技术仍然由基于CNN的架构所主导。我们认为在实时环境中应用注意力的主要障碍可能来自以下两个方面。</p><ol><li>是现有的大多数注意力类型的计算特性对GPU喜欢的设备来说不太友好，例如二次复杂性和多头机制。二次方复杂度在处理高分辨率特征时引入了大量的计算负担，尤其是在语义分割这样的密集预测任务中。虽然有一些工作，如[39, 42]缩小了键和值的大小，但二次复杂性的特性仍然存在。而多头机制将矩阵乘法分成多组，这使得注意力操作在类似GPU的设备上很耗时，类似于执行分组卷积的情况。</li><li><strong>另一个问题是，像[42(SegFormer), 48(HRFormer)]那样只对高分辨率特征图本身进行关注可能不是捕捉长距离语境和高水平语义信息的最有效方法，因为来自高分辨率特征图的单个特征向量的感受野是有限的。</strong></li></ol><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130204536536.png" alt="image-20221130204536536" /></p><blockquote><p>图2 ：RTFormer块的说明。对于低分辨率，采用GPU友好关注。对于高分辨率，我们使用交叉分辨率关注，从低分辨率分支中提取K和V。此外，我们用两个3×3的卷积层组成FFN模块和金字塔池模块。SegNet[2]恢复了高清晰度的图像。</p></blockquote><p>我们提出了一个新的transformer块，名为RTFormer块，如图2所示，**旨在通过transformer在类似GPU的设备上实现性能和效率之间的更好权衡。对于低分辨率分支，我们采用了一个新提出的GPU-Friendly Attention，它源自外部注意力[15]。它继承了外部关注的线性复杂度特性，并通过放弃矩阵乘法运算中的通道分割，缓解了类GPU设备的多头机制的弱点。相反，它扩大了外部参数的数量，并将外部关注所提出的双线性运算中的第二次归一化分成多组。这使得GPU-Friendly Attention能够在一定程度上保持多头机制的优势。对于高分辨率分支，我们采用了跨分辨率的关注，而不是只在高分辨率特征本身进行关注。此外，与[36, 17, 48]的多分辨率融合的并行表述不同，我们将两个分辨率分支安排为阶梯式布局。因此，高分辨率分支可以通过从低分辨率分支学到的高层次全局信息的辅助来更有效地增强。**基于提出的RTFormer块，我们构建了一个新的实时语义分割网络，命名为RTFormer。为了学习足够的局部语境，我们仍然在早期阶段使用卷积块，并将RTFormer块放在最后两个阶段。通过大量的实验，我们发现RTFormer可以更有效地利用全局背景，并且比以前的工作取得更好的权衡。图1显示了RTFormer与其他方法在CamVid上的比较。最后，我们将RTFormer的贡献总结为以下三个方面。</p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130204407436.png" alt="image-20221130204407436" style="zoom: 67%;" /><blockquote><p>图1 ：在CamVid[4]测试集上的准确度（mIoU%）与推理速度（FPS）。我们的方法以红点表示，其他方法以蓝点表示。</p></blockquote><ul><li>提出了一种新型的RTFormer模块，它在类似GPU的设备上实现了对语义分割任务的性能和效率的更好权衡。</li><li>提出了一个新的网络架构RTFormer，它可以充分利用全局环境，在不损失效率的情况下，深入利用注意力来改善语义分割。</li><li>RTFormer在Cityscapes、CamVid和COCOStuff上达到了最先进的水平，并在ADE20K上表现出良好的性能。此外，它还为实时语义分割任务的实践提供了一个新的视角。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 Related Work</h2><h5 id="generic-semantic-segmentation"><a class="markdownIt-Anchor" href="#generic-semantic-segmentation"></a> Generic Semantic segmentation.</h5><p>传统的分割方法利用手工制作的特征来解决像素级的标签分配问题，例如，阈值选择[31]、超级像素[1]和图算法[3]。随着深度学习的成功，一系列基于FCN（全卷积神经网络）[28]的方法[7, 2, 54]在各种基准上取得了优异的表现。这些方法从不同方面改进了FCN。Deeplabv3[7]和PSPNet[54]通过引入直角空间金字塔集合模块和金字塔集合模块，扩大了感受野并融合了不同层次的特征。SegNet[2]通过编码器-解码器结构恢复了高分辨率地图。HRNet[36]引入了一个多分辨率结构，该结构在整个网络中保持高分辨率的特征图。OCRNet[47]通过查询全局背景，增强了从骨干网输出的特征。</p><h5 id="real-time-semantic-segmentation"><a class="markdownIt-Anchor" href="#real-time-semantic-segmentation"></a> Real-time Semantic segmentation.</h5><p>为了解决实时分割问题，人们提出了各种方法[52, 46, 45, 17, 13, 9]。ICNet[52]通过使用一个精心设计的多分辨率图像级联网络来解决这个问题。FasterSeg[9]利用神经结构搜索（NAS）来达到平衡高准确性和低延迟的目标。BiSeNetV1[46]和BiSeNetV2[45]采用双流路径网络和特征融合模块，在速度和分割性能之间达到良好的平衡。STDC[13]对BiSeNet进行了重新思考和改进，提出了一种带有细节引导模块的单流结构。DDRNets[17]通过设计一个具有多个双边融合的双深分支网络和一个深度聚合金字塔池模块，实现了更好的性能。</p><h5 id="attention-mechanism"><a class="markdownIt-Anchor" href="#attention-mechanism"></a> Attention mechanism.</h5><p>注意机制在计算机视觉领域得到了有力的发展[41, 49, 19, 20, 14, 43]。由[20]提出的SE块将注意力功能应用于通道并提高了网络的表示能力。[19]使用注意力模块对物体关系进行建模并帮助进行异议检测。[41]提出了一种非局部操作，可以捕捉长距离的依赖关系，并在视频分类任务上显示出有希望的结果。[43]在点云识别任务中使用注意力。自我注意是近年来被广泛使用的注意机制的一个特例[49, 14, 37]。然而，四次方的复杂性限制了它的使用。一些作品[15, 38, 44]对自我注意进行了改革，以实现线性复杂度。但它们对GPU上的推理仍然不友好。受外部注意力[15]的启发，我们开发了一个GPU友好的注意力模块，它在类似GPU的设备上具有低延迟和高性能。</p><h5 id="transformer-in-semantic-segmentation"><a class="markdownIt-Anchor" href="#transformer-in-semantic-segmentation"></a> Transformer in Semantic segmentation.</h5><p>最近，transformer在语义分割中显示出了很好的性能。DPT[32]将transformer作为编码器来提高密集预测任务的性能。SETR[55]提出了一种序列对序列的方法并取得了令人印象深刻的结果。SETR使用预训练的VIT[50]作为其骨干，在空间分辨率上没有降采样。然而，由于其沉重的骨架和极高的分辨率，很难将其用于实时分割任务。SegFormer[42]通过引入一个分层transformer编码器和一个轻量级的全MLP解码器来提高效率。与SETR相比，SegFormer既有更高的效率也有更高的性能。然而，与一些最先进的基于CNN的实时分割模型相比，SegFormer的效率仍然比较低。通过引入我们的RTFormer模块，我们的方法可以利用注意力机制，同时实现实时速度。</p><h2 id="3-methodology"><a class="markdownIt-Anchor" href="#3-methodology"></a> 3 Methodology</h2><h3 id="31-rtformer-block"><a class="markdownIt-Anchor" href="#31-rtformer-block"></a> 3.1 RTFormer block</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130204536536.png" alt="image-20221130204536536" /></p><blockquote><p>图2 ：RTFormer块的说明。对于低分辨率，采用GPU友好关注。对于高分辨率，我们使用交叉分辨率关注，从低分辨率分支中提取K和V。此外，我们用两个3×3的卷积层组成FFN模块和金字塔池模块。SegNet[2]恢复了高清晰度的图像。</p></blockquote><p>RTFormer模块是双分辨率模块，继承了[36, 17, 48]的多分辨率融合范式。与之前的工作不同，RTFormer模块由两种类型的注意力及其前馈网络组成，并以阶梯式布局排列，如图2所示。在低分辨率分支中，我们使用GPU-Friendly Attention来捕捉高水平的全局环境。而在高分辨率分支中，我们引入了一个跨分辨率注意力，将从低分辨率分支中学习到的高水平全局背景广播到每个高分辨率像素，阶梯式布局的作用是将低分辨率分支中更有代表性的特征反馈到跨分辨率注意力中。</p><h5 id="gpu-friendly-attention"><a class="markdownIt-Anchor" href="#gpu-friendly-attention"></a> GPU-Friendly Attention.</h5><p>比较现有的不同类型的注意力，我们发现外部注意力[15(EA)]由于其线性复杂度的可喜特性，可以成为在类GPU设备上执行的潜在选择，而我们的GPU-Friendly Attention（GFA）就是从它衍生出来的。因此，在详细介绍GFA之前，我们首先回顾一下EA。让X∈RN×d表示一个输入特征，其中N是元素数（或图像中的像素），d是特征维度，那么EA的表述可以表示为。</p><p><img src="images/image-20221130173044063.png" alt="image-20221130173044063" /></p><p>其中，K、V∈RM×d为可学习参数，M为参数维度，DN为[15]提出的双归一化操作。</p><p>而多头版的EA可以表示为:</p><p><img src="images/image-20221130173058134.png" alt="image-20221130173058134" /></p><p>其中K′，V′∈RM×d′，d′=d/H，H为头数，Xi为X的第i个头。如图3上部所示，多头机制产生了H个注意力图，以提高EA的容量，这使得矩阵乘法被分割成若干组，这与组卷积相似。尽管EA对不同的头使用了共享的K′和V′，这可以大大加快计算速度，但分割的矩阵乘法仍然存在。</p><p>为了避免在类似于GPU的设备上由于多头机制而导致的延迟减少，我们提出了一个简单有效的GPU友好的注意力。它由公式1表示的基本外部注意演变而来，可以表述为：。</p><p><img src="images/image-20221130173150139.png" alt="image-20221130173150139" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130210301304.png" alt="image-20221130210301304" /></p><blockquote><p>图3：多头外部关注和GFA之间的比较。多头外部关注将矩阵乘法分成几组，而我们的GFA使矩阵乘法被整合，这对类似GPU的设备更加友好。</p></blockquote><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>g</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>g</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><msub><mi>M</mi><mi>g</mi></msub><mo>×</mo><mi>d</mi></mrow></msup><mo separator="true">,</mo><msub><mi>M</mi><mi>g</mi></msub><mo>=</mo><mi>M</mi><mo>×</mo><mi>H</mi></mrow><annotation encoding="application/x-tex">K_g,V_g∈R^{M_g×d},M_g=M\times H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.135216em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span>，GDN表示分组双归一化，它将原双归一化的第二次归一化分成H组，如图3左下部分所示。从公式3我们可以发现，GFA有两个主要的改进。一方面，它使矩阵乘法得到了整合，这对类似GPU的设备来说是相当友好的。受益于此，我们可以将外部参数的大小从（M，d′）扩大到（Mg，d）。因此，更多的参数可以被调整以提高性能。另一方面，它在一定程度上保持了多头机制的优越性，因为它利用了分组双重规范化的优势。为了直观的理解，可以认为GFA也产生了H个不同的注意力图谱来捕捉不同的标记之间的关系，但更多的特征元素参与计算相似度，所有的注意力图谱都对最终的输出有贡献。</p><h5 id="cross-resolution-attention"><a class="markdownIt-Anchor" href="#cross-resolution-attention"></a> Cross-resolution Attention.</h5><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130204536536.png" alt="image-20221130204536536" /></p><blockquote><p>图2 ：RTFormer块的说明。对于低分辨率，采用GPU友好关注。对于高分辨率，我们使用交叉分辨率关注，从低分辨率分支中提取K和V。此外，我们用两个3×3的卷积层组成FFN模块和金字塔池模块。SegNet[2]恢复了高清晰度的图像。</p></blockquote><p>多分辨率融合已被证明对密集预测任务是有效的。对于多分辨率架构的设计，我们可以直观地将GFA独立应用于不同的分辨率分支，并在卷积模块或注意力模块执行后交换特征，如[36, 48]。但在高分辨率分支中，像素更多关注的是局部信息，而不是高层次的全局背景。因此，我们认为直接在高分辨率特征图上进行注意力来学习全局背景是不够有效的。为了更有效地获得全局语境，我们提出了一个跨分辨率的注意力，其目的是充分利用从低分辨率分支学到的高层次语义信息。如图2所示，与GFA不同的是，在高分辨率分支中采用交叉分辨率注意力来收集全局语境。这种跨分辨率注意力的计算方法表示为：。</p><p><img src="images/image-20221130173235894.png" alt="image-20221130173235894" /></p><p>其中Xh、Xl分别表示高分辨率分支和低分辨率分支的特征图，φ是一组矩阵运算，包括分割、置换和重塑，dh表示高分辨率分支的特征维度。值得说明的是，特征图Xc，在下文中表示为交叉特征，是由函数θ从Xl计算出来的，该函数由池化和卷积层组成。而Xc的空间大小表示从Xl中生成的标记的数量。实验中，我们只在注意力图谱的最后一个轴上采用softmax进行归一化，因为当键和值不是外部参数时，单个softmax比双重归一化表现得更好。特别是，为了在类似GPU的设备上进行快速推理，这里也放弃了多头机制。</p><h5 id="feed-forward-network"><a class="markdownIt-Anchor" href="#feed-forward-network"></a> Feed Forward Network.</h5><p>在以前的基于transformer的分割方法中，如[42, 48]，前馈网络(FFN)通常由两个MLP层和一个深度3×3卷积层组成，其中深度3×3层用于补充位置编码或增强定位性。此外，两个MLP层将隐藏维度扩大到输入维度的2到4倍。这种类型的FFN可以用相对较少的参数达到更好的性能。但在需要考虑类似GPU设备的延迟的情况下，典型的FFN结构并不是很有效。为了平衡性能和效率，我们在RTFormer块的FFN中采用了两个3×3的卷积层，没有维度扩展。它显示了比典型的FFN配置更好的结果。</p><h3 id="32-rtformer"><a class="markdownIt-Anchor" href="#32-rtformer"></a> 3.2 RTFormer</h3><p>图4说明了RTFormer的整体架构。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130210607847.png" alt="image-20221130210607847" /></p><blockquote><p>图4：说明了RTFormer的结构。我们把RTFormer模块放在最后两个阶段，用粉色块表示，在早期阶段使用卷积块，用蓝色块表示。此外，我们借鉴了[17]的成功经验，为分割头增加了一个DAPPM模块。</p></blockquote><h5 id="backbone-architecture"><a class="markdownIt-Anchor" href="#backbone-architecture"></a> Backbone Architecture.</h5><p>为了提取高分辨率特征图所需要的足够的局部信息，我们将卷积层与我们提出的RTFormer块结合起来，构建RTFormer。具体来说，我们让RTFormer从一个由两个3×3卷积层组成的干块开始，用几个连续的基本剩余块组成前两个阶段[16]。然后，从第三阶段开始，我们使用双分辨率模块，在高分辨率和低分辨率分支之间进行特征交换，其灵感来自于[17]。对于后三个阶段的高分辨率分支，其特征跨度保持为8不变，而对于低分辨率分支，其特征跨度分别为16、32、32。特别是，我们将双分辨率模块安排为阶梯式布局，以便在低分辨率分支输出的帮助下提升高分辨率特征的语义表示。最重要的是，我们用我们提出的RTFormer模块构建了阶段4和阶段5，如图2所示，用于高效的全局建模，而阶段3仍然由基本的残差模块组成。</p><h5 id="segmentation-head"><a class="markdownIt-Anchor" href="#segmentation-head"></a> Segmentation Head.</h5><p>对于RTFormer的分割头，我们借鉴了[17]的成功经验，在低分辨率输出特征后加入了DAPPM模块。将DAPPM的输出与高分辨率的特征融合后，我们得到了stride=8的输出特征图。最后，这个输出特征被传递到一个像素级分类头，用于预测密集的语义标签。分类头由一个3×3的卷积层和一个1×1的卷积层组成，隐性特征维度与输入特征维度相同。</p><h5 id="instantiation"><a class="markdownIt-Anchor" href="#instantiation"></a> Instantiation.</h5><p>我们用RTFormer-Slim和RTFormerBase来实例化RTFormer的架构，详细配置记录在表1中。对于通道数和块数，每个数组包含5个元素，它们分别对应5个阶段。特别是，有两个数字的元素对应于双分辨率阶段。例如，64/128表示高分辨率分支的通道数为64，低分辨率分支为128。而1/2意味着基本卷积块的数量在高分辨率分支为1，低分辨率分支为2。值得注意的是，块数数组中的最后两个元素表示RTFormer块的数量，对于RTFormer-Slim和RTFormer-Base，它们都是1。对于RTFormer-Slim和RTFormer-Base，交叉特征的空间尺寸分别被设定为64（8×8）和144（12×12）。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201104526844.png" alt="image-20221201104526844" /></p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 Experiments</h2><p>在本节中，我们在Cityscapes[10]、Camvid[4]、ADE20K[56]和COCOStuff[5]上验证RTFormer。我们首先介绍了这些数据集和它们的训练细节。然后，我们在Cityscapes和CamVid上比较了RTFormer与最先进的实时方法。此外，我们还总结了在ADE20K[56]和COCOStuff[5]上的更多实验，以进一步证明我们方法的通用性。最后，我们还提供了在ADE20K[56]上RTFormer块中不同设计模块的消融研究。</p><h3 id="41-implementation-details"><a class="markdownIt-Anchor" href="#41-implementation-details"></a> 4.1 Implementation Details</h3><p>在对语义分割进行微调之前，所有模型都在ImageNet[11]上进行了预训练。而ImageNet[11]的训练细节将在补充材料中提供。我们分别采用mIoU和FPS作为性能和效率的衡量标准，FPS是在默认情况下不使用tensorrt加速的RTX 2080Ti上测量的。</p><h5 id="cityscapes"><a class="markdownIt-Anchor" href="#cityscapes"></a> Cityscapes.</h5><p>Cityscapes[10]是一个广泛使用的城市街道场景解析数据集，它包含19个用于语义分割任务的类。而且它有2975、500和1525张精细注释的图像，分别用于训练、验证和测试。我们使用AdamW优化器训练所有模型，初始学习率为0.0004，权重衰减为0.0125。我们采用功率为0.9的聚能学习策略来降低学习率，并实施数据增强方法，包括随机裁剪为512×1024，在0.5至2.0范围内随机缩放，以及随机水平翻转。所有的模型都是用484个epochs（大约12万次迭代），12个批次大小，以及在四个V100 GPU上的syncBN来训练的。为了与其他算法进行公平比较，没有使用在线硬例挖掘（OHEM）。</p><h5 id="camvid"><a class="markdownIt-Anchor" href="#camvid"></a> CamVid.</h5><p>CamVid[4]包含701个密集注释的框架，每个框架的分辨率为720 × 960。这些帧被分为367张训练图像、101张验证图像和233张测试图像。CamVid[4]有32个类别，其中有11个类别的子集被用于分割实验。我们将训练集和验证集合并进行训练，并在测试集上评估我们的模型。我们设置初始学习率为0.001，权重衰减为0.05。聚合学习策略的功率被设定为1.0。我们对所有模型进行了968次的训练。数据增强包括颜色抖动、随机水平翻转、随机裁剪为720×960和随机缩放为[288, 1152]。与以前的方法[13]不同，我们没有在Cityscapes[10]上预训练我们的模型。所有其他的训练细节都与Cityscapes[10]相同。</p><h5 id="ade20k"><a class="markdownIt-Anchor" href="#ade20k"></a> ADE20K.</h5><p>ADE20K[56]是一个涵盖150个细粒度语义概念的场景解析数据集，它将20K、2K和3K的图像分别拆开进行训练、验证和测试。我们的模型以16个批次的规模进行训练，进行16万次迭代。并且我们将初始学习率设置为0.0001，权重衰减为0.05，其他的训练设置与Cityscapes[10]的设置相同。</p><h5 id="cocostuff"><a class="markdownIt-Anchor" href="#cocostuff"></a> COCOStuff.</h5><p>COCOStuff[5]是一个来自COCO的密集注释数据集。它包含10K图像（9K用于训练，1K用于测试），涉及182个类别，包括91个事物和91个东西类别。其中11个事物类没有注释。我们用AdamW优化器在COCOStuff上训练RTFormer 110 epochs，初始学习率和权重衰减分别设置为0.0001和0.05。在训练阶段，我们首先将图像的短边尺寸调整为640，并随机裁剪640×640的补丁进行增强。而在测试阶段，我们将所有图像的大小调整为640×640。其他训练设置与Cityscapes相同。</p><h3 id="42-comparison-with-state-of-the-arts"><a class="markdownIt-Anchor" href="#42-comparison-with-state-of-the-arts"></a> 4.2 Comparison with State-of-the-arts</h3><p>在这一部分，我们在Cityscapes[10]和CamVid[4]上比较了我们的RTFormer和最先进的方法。表2显示了我们对Cityscapes[10]和CamVid[4]的结果，包括参数、FPS和mIoU。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201104834868.png" alt="image-20221201104834868" /></p><h5 id="results"><a class="markdownIt-Anchor" href="#results"></a> Results.</h5><p>在Cityscapes[10]上，我们的RTFormer在所有其他实时方法中拥有最佳的速度-准确度权衡。例如，我们的RTFormer-Slim在110.0FPS的情况下实现了76.3%的mIoU，与STDC2-Seg75[13]和DDRNet-23-Slim[14]相比，速度更快，提供了更好的mIoU。此外，我们的RTFormer-Base实现了39.1 FPS和79.3%的mIoU，这建立了新的最先进的结果。此外，在CamVid[4]上，仅使用ImageNet[11]预训练，我们的方法就达到了82.5%的mIoU，94.0 FPS，大大超过了所有其他实时方法，包括使用额外Cityscapes[10]预训练的STDC2-Seg[13]。此外，我们的RTFormer-Slim在190.7FPS的情况下仅用4.8M就获得了81.4mIoU，比其他模型如STDC2-Seg[13]的125.6FPS和DDRNet-23[17]的97.1FPS更快、更好。图5显示了CamVid[4]测试集的定性结果，其中RTFormer-base比DDRNet-23[17]提供了更好的细节，特别是对于Column Pole类，它需要更多的全局背景。总之，这些结果证明了RTFormer在实时语义分割方面的准确性、延迟和模型大小方面的优越性。</p><h3 id="43-generalization-capability"><a class="markdownIt-Anchor" href="#43-generalization-capability"></a> 4.3 Generalization Capability</h3><p>为了进一步证明我们的RTFormer在更普遍的场景中的有效性，我们展示了在ADE20K[56]和COCOStuff[5]上的额外结果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201105310712.png" alt="image-20221201105310712" /></p><h5 id="results-2"><a class="markdownIt-Anchor" href="#results-2"></a> Results.</h5><p>表3显示了我们在ADE20K[56]上的结果。我们的RTFormer-Base实现了42.1%的卓越的mIoU和71.4FPS，超过了所有其他方法。对于实例来说，与DDRNet-23-Slim[17]相比，RTFormer-Slim实现了更好的mIoU 36.7%，并保持了几乎相同的速度。图6显示了ADE20K验证集的定性结果。与DDRNet-23[17]相比，我们的RTFormer显示了更好的细节和背景信息。综上所述，这些结果表明，RTFormer在通用场景的实时语义分割上也显示出非常有前途的性能。而在COCOStuff上，如表4所示，我们的RTFormer-Base在143.3 FPS的情况下实现了35.3 mIoU，在推理速度相当的情况下比DDRNet-23高出3%，创造了新的最先进水平。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201105722809.png" alt="image-20221201105722809" /></p><h3 id="44-ablation-study-on-ade20k"><a class="markdownIt-Anchor" href="#44-ablation-study-on-ade20k"></a> 4.4 Ablation study on ADE20K</h3><h5 id="training-setup"><a class="markdownIt-Anchor" href="#training-setup"></a> Training Setup.</h5><p>我们提供了RTFormer-Slim的消融结果。为了进行快速评估，我们从头开始训练RTFormer-slim，初始学习率设置为0.001，其他训练设置与上述ADE20K[56]的实验相同。更多的实验细节和分析在补充材料中阐述。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221201105746412.png" alt="image-20221201105746412" /></p><h5 id="comparison-on-different-types-of-attention"><a class="markdownIt-Anchor" href="#comparison-on-different-types-of-attention"></a> Comparison on different types of attention.</h5><p>为了验证我们提出的注意力的有效性，我们用不同的类型和组合替换了RTFormer块中使用的注意力。如表5a所示，我们给出了多头自我注意、多头外部注意、GPU友好注意和跨分辨率注意的不同组合的结果。例如，&quot;GFA+CA &quot;意味着在低分辨率分支使用GFA，在高分辨率分支使用CA。此外，我们通过M=d×r来调整多头外部关注中的超参数M，其中r是一个减少率。我们可以发现，GPU-友好注意力优于多头外部注意力的所有设置，当M=d时，GPU-友好注意力比最佳设置更快，同时，GPU-友好注意力比多头自我注意力效率更高，性能相当。这表明，在类似GPU的设备上，GPU-友好注意比多头自我注意和多头外部注意在性能和效率之间实现了更好的权衡。当我们引入跨分辨率注意力时，性能进一步提高，而FPS只下降了不到2。</p><h5 id="comparison-on-different-types-of-ffn"><a class="markdownIt-Anchor" href="#comparison-on-different-types-of-ffn"></a> Comparison on different types of FFN.</h5><p>表5b说明了典型的FFN的结果，它由两个MLP层和一个3×3深度卷积层组成，而我们提出的FFN包含两个3×3卷积层。结果显示，我们提出的FFN不仅在mIoU上，而且在FPS上都优于典型的FFN。这表明我们提出的FFN更适用于需要考虑类似GPU设备的延迟的情况。</p><h5 id="influence-of-the-number-of-groups-within-grouped-double-normalization"><a class="markdownIt-Anchor" href="#influence-of-the-number-of-groups-within-grouped-double-normalization"></a> Influence of the number of groups within grouped double normalization.</h5><p>我们研究了在两个分支都使用GPU-Friendly Attention的情况下，分组双重归一化中组的数量的影响。而表5c显示了不同配置的结果。例如，&quot;8+2 &quot;意味着在低分辨率分支使用8个组，在高分辨率使用2个组。特别是，当组数被设置为1时，分组的双重归一化会退化为原始的双重归一化。在这里，当组数为8和2时，实现了最佳的mIoU，这说明分组双归一化比原始双归一化表现得更好。值得注意的是，改变分组双重归一化的组数并不影响推理效率，这使得GPU友好的注意在组数较多时能够保持高FPS。</p><h5 id="influence-of-the-spatial-size-of-cross-feature-in-cross-resolution-attention"><a class="markdownIt-Anchor" href="#influence-of-the-spatial-size-of-cross-feature-in-cross-resolution-attention"></a> Influence of the spatial size of cross-feature in Cross-resolution Attention.</h5><p>我们还研究了交叉分辨率注意力中交叉特征的空间大小，包括应用6×6、8×8和12×12。如表5d所示，根据FPS和mIoU之间的权衡，RTFormer-Slim的交叉特征的空间尺寸为8×8是最好的。在某种程度上，这表明交叉特征的空间尺寸接近于高分辨率特征的尺寸是合适的，因为RTFormer-Slim的高分辨率特征尺寸是64，相当于8×8。</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 Conclusion</h2><p>在本文中，我们提出了RTFormer，它可以有效地捕获全局背景，以提高实时语义分割的性能。广泛的实验表明，我们的方法不仅在实时分割的普通数据集上取得了新的最先进的结果，而且在一般语义分割的挑战性数据集上也显示出卓越的性能。由于RTFormer的效率，我们希望我们的方法能够鼓励用转化器进行实时语义分割的新设计。一个限制是，虽然我们的RTFormer-Slim只有4.8M的参数，但在边缘设备的芯片中可能需要更多的参数效率。我们把它留给未来的工作。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAN</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SAN/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SAN/</url>
      
        <content type="html"><![CDATA[<h1 id="san"><a class="markdownIt-Anchor" href="#san"></a> SAN</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>本文提出了一种利用预先训练好的视觉语言模型（名为 “侧适配器网络”（SAN））进行开放词汇语义分割的新框架。我们的方法将语义分割任务建模为区域识别问题。一个侧边网络连接到一个冻结的 CLIP 模型，该模型有两个分支：一个用于预测mask建议，另一个用于预测注意力偏差，该注意力偏差应用于 CLIP 模型，以识别mask类别。这种解耦设计有利于 CLIP 识别mask建议类别。由于附加侧网络可以重复使用 CLIP 特征，因此可以非常轻便。此外，整个网络可以进行端到端训练，使侧网络适应冻结的 CLIP 模型，从而使预测的mask建议具有 CLIP 感知。我们的方法快速、准确，而且只增加了几个额外的可训练参数。我们在多个语义分割基准上评估了我们的方法。我们的方法明显优于其他同类方法，可训练参数减少了 18 倍，推理速度提高了 19 倍。图 1 显示了 ImageNet 上的一些可视化结果。我们希望我们的方法能成为一个坚实的基线，并为未来的开放词汇语义分割研究提供帮助。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312241416353.png" alt=" " />    <p align="left">    图 1.ImageNet 上的分割结果。对于每幅图像，我们在推理过程中将其类别与 coco 类别结合起来作为词汇，并只对注释类别的mask进行可视化。  </p> </p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>识别和分割任何类别的视觉元素是语义分割的追求。现代语义分割方法[5, 7, 23]依赖于大量的标注数据，但通常数据集往往只有几十到几百个类别，昂贵的数据收集和标注限制了我们进一步扩展类别的可能性。最近，以 CLIP [27] 为代表的大规模视觉语言模型 [17, 27, 36, 37] 实现了图像层面的任意类别识别，即开放词汇图像分类，这一巨大成功激励我们探索其在语义分割中的适应性。</p><p>在开放词汇语义分割中应用 CLIP 模型具有挑战性，因为 CLIP 模型是通过图像级对比学习来训练的。它的学习表示缺乏语义分割所需的像素级识别能力。弥补表征粒度差距的一个解决方案 [12,19] 是在分割数据集上对模型进行微调。然而，分割数据集的数据量远小于视觉语言预训练数据集，因此微调模型在开放词汇识别上的能力往往会大打折扣。</p><p>将语义分割建模为区域识别问题可以绕过上述困难。早期的尝试 [9, 33] 采用两阶段训练框架。在第一阶段，训练一个独立的模型，生成一组mask图像作物作为mask建议。在第二阶段，使用视觉语言预训练模型（如 CLIP）来识别mask图像作物类别。然而，由于mask预测模型完全独立于视觉语言预训练模型，它失去了利用视觉语言预训练模型强大功能的机会，预测的mask图像作物可能不适合识别，从而导致模型笨重、缓慢且性能低下。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312241437069.png" alt=" " />    <p align="left">    图 2.我们的 SAN 概述。红色虚线表示训练过程中的梯度流。在我们的框架中，冻结的 CLIP 模型仍然充当分类器，侧适配器网络生成mask建议和注意偏差，以指导 CLIP 模型的深层预测建议分类对数。在推理过程中，通过 Matmul 将mask建议和建议对数结合起来，得到最终预测结果。  </p> </p><p>这项工作旨在充分发挥视觉语言预训练模型在开放词汇语义分割方面的能力。为了实现这一目标，我们提出了一个新的框架（图 2），称为侧适配器网络（SAN）。由于采用了端到端训练，它的mask预测和识别都能感知 CLIP，而且由于利用了 CLIP 的特性，它可以实现轻量级。</p><p>侧适配器网络有两个分支：一个预测mask建议，另一个预测用于mask类别识别的 CLIP 自我注意块的注意偏差。我们表明，这种解耦设计提高了分割性能，因为用于 CLIP 识别mask的区域可能与mask区域本身不同。为了最大限度地降低 CLIP 的成本，我们进一步提出了一种单向设计：将浅层 CLIP 块的特征融合到 SAN 中，并将其他深层块与注意力偏置相结合，以进行mask识别。由于训练是端到端的，侧适配器网络可以最大限度地适应冻结的 CLIP 模型。</p><p>为了保证公平性和可重复性，我们的研究以正式发布的 CLIP 模型为基础。我们将重点放在已发布的 ViT CLIP 模型上，因为视觉transformer事实上已取代 ConvNet 成为计算机视觉界的主流骨干网，而且为了概念上的一致性和简洁性，侧适配器网络也由视觉transformer实现。</p><p>准确的语义分割需要高分辨率图像，但已发布的 ViT CLIP 模型是为低分辨率图像（如 224 × 224）设计的，直接应用于高分辨率图像的性能较差。为了缓解输入分辨率的冲突，我们在 CLIP 模型中使用低分辨率图像，在侧适配器网络中使用高分辨率图像。我们发现这种非对称输入分辨率非常有效。此外，我们还对 ViT 模型的位置嵌入进行了微调，并注意到了改进之处。</p><p>我们在各种基准上对我们的方法进行了评估。按照以前的工作[22, 33]，我们使用 COCO Stuff [4] 数据集进行训练，使用 Pascal VOC [11]、Pascal Context-59 [25]、Pascal Context-459 [25]、ADE20K150 [41] 和 ADE20K-847 [41] 进行测试。在所有基准上，我们都报告了最先进的性能：使用 CLIP ViT-L/14 模型，我们的方法在 ADE-847 上实现了 12.4 mIoU，在 PC-459 上实现了 15.7 mIoU，在 ADE-150 上实现了 32.1 mIoU，在 PC59 上实现了 57.7 mIoU，在 VOC 上实现了 94.6 mIoU。与之前的最佳方法相比，我们的方法在 ViT-B/16 的 5 个数据集上平均提高了 +1.8 mIoU，在 ViT-L/14 的数据集上平均提高了 +2.3 mIoU。通过进一步应用集合技巧，ViT-B/16 和 ViT-L/14 的平均性能差距分别增至 +2.9 mIoU 和 +3.7 mIoU。</p><p>除了出色的性能，我们的方法只需要 840 万个可训练参数和 64.3 GFLOPs，分别是 [10] 的 13% 和 20%，以及 [22] 的 6% 和不到 1%。</p><h2 id="2-related-works"><a class="markdownIt-Anchor" href="#2-related-works"></a> 2. Related Works</h2><p><strong>大规模视觉语言预训练模型</strong></p><p>视觉语言预训练的目标是学习视觉和语言的通用表征。该领域的早期研究[6, 20, 24, 28]主要遵循这样的模式：首先在中等规模的视觉和语言数据上对模型进行预训练，然后在下游视觉语言任务（如 VQA [2] 和图像字幕）上对模型进行微调，以验证预训练的好处。然而，最近的 CLIP [27] 和 ALIGN [17] 证明，在大规模噪声文本图像对上预先训练的视觉语言模型，除了可以作为下游任务的良好起点外，还具有识别开放词汇的能力。最近的许多研究也证实了这一观点，并在开放词汇图像识别 [1,36,37] 和其他下游任务 [13, 15, 26, 30] 上取得了令人瞩目的成绩。</p><p>我们的工作进一步探索了如何利用视觉语言预训练模型的能力来进行开放词汇的语义分割识别，由于预训练和像素级识别之间存在偏差，这一点更具挑战性。我们特别关注 CLIP 模型，并扩展其在开放词汇语义分割方面的能力。</p><p><strong>下游任务的模型调整</strong></p><p>微调所有模型参数是在下游任务中利用预训练模型的最常见方法。然而，随着预训练模型变得越来越大、越来越强，微调逐渐成为一种低效的方法，并可能损害在预训练阶段学到的模型能力。因此，新的模型调整方法开始受到关注。早期的探索 [16, 18, 21] 首先出现在 NLP 社区。最近，随着大规模视觉模型的出现，计算机视觉领域的探索也变得密集起来。CoOp [43] 通过只训练 CLIP 文本编码器的输入提示，对用于图像分类任务的 CLIP 模型进行了微调。TipAdapter [39] 和 VL-Adapter [35] 将可训练的适配器模块插入到固定的 CLIP 模型中，仅通过少量监督对适配器进行微调。这些方法主要针对图像级识别任务或视觉语言任务。</p><p>与我们最相关的工作是边调谐（Side-Tuning）[38] 及其变体[34]，即在预训练模型上附加一个边网络，最终表示是边网络和预训练模型的组合。然而，这些工作大多是概念性的，不能直接用于开放词汇语义分割。</p><p><strong>开放词汇语义分割</strong></p><p>早期用于开放词汇语义分割的工作[3, 31, 40]侧重于学习图像像素与类别名称/描述之间的联合嵌入空间。最近，由于大规模视觉语言预训练模型在开放词汇识别中的有效性，许多方法都在探索其在开放词汇语义分割中的应用。其中一些方法[12, 19, 22, 42]对视觉语言预训练模型进行了微调，这需要大量的额外数据，或影响视觉语言预训练模型的开放词汇能力。</p><p>SimSeg [33] 提出了一个两阶段框架：首先生成mask图像裁剪，然后通过冻结的 CLIP 识别裁剪。然而，该框架需要大量的mask生成器，而且 CLIP 必须多次转发，这使得它在模型大小和推理速度方面都效率低下。此外，mask生成器无法感知 CLIP，进一步限制了其性能。MaskCLIP [10] 改进了两阶段框架，通过 CLIP 编码器逐步完善预测的mask，并在注意层中应用mask以避免多次转发，这是由 [7] 首次提出的。但是，MaskCLIP 仍然需要一个重型mask生成器，初始mask预测也是 CLIP 不可感知的，而且mask预测和识别是耦合的。</p><p>我们的方法是一个端到端的框架，mask预测是轻量级的，并具有 CLIP 感知，而mask识别与mask预测是分离的。与两阶段方法[10, 33]相比，这些差异使我们的方法能更好地利用 CLIP 的能力。</p><h2 id="3-side-adapter-network"><a class="markdownIt-Anchor" href="#3-side-adapter-network"></a> 3. Side Adapter Network</h2><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312241451658.png" alt=" " />    <p align="left">   图 3.侧适配器网络架构侧适配器网络将输入图像投射到视觉标记上，并在开始时将查询标记附加到视觉标记上。此外，它还将 CLIP 模型的直接特征融合到转换层中间。通过 MLP 层对查询和视觉特征进行编码，从而生成注意力偏差和mask建议。   </p> </p><p>为了充分发挥 CLIP 在开放词汇语义分割方面的能力，我们提出了侧适配器网络（SAN），这是一个端到端的框架，其中mask预测和识别与 CLIP 模型相互交织。SAN 由一个轻量级视觉transformer实现，可充分利用 CLIP 的特性，它有两种输出：mask建议和注意力偏差。注意偏差应用于 CLIP 的自我注意，以识别mask建议类别。在实践中，我们将浅层 CLIP 的特征融合到 SAN 中，并将注意力偏置应用于其余较深的 CLIP 层进行识别。通过这种单向设计，CLIP 模型的成本可以降到最低。</p><p>SAN 的详细结构如图 3 所示。输入图像被分割成 16 × 16 个斑块。线性嵌入层用于将补丁投射为视觉标记。然后将这些视觉标记与 N 个可学习查询连接起来，并输入到后续的转换层中。按照常见的做法[7, 8]，我们在每个transformer块中为视觉标记和查询标记添加绝对位置嵌入。位置嵌入在各层之间共享。</p><p>SAN 有两个输出：mask预测和用于mask识别的相应注意力偏差。在mask预测中，首先由两个独立的 3 层 MLP 将查询令牌和视觉令牌投影为 256 维，我们将投影的查询令牌表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Q</mi><mtext>mask </mtext></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mn>256</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathrm{Q}_{\text {mask }} \in \mathbb{R}^{N \times 256}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">mask </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span>，其中 N 1 是查询令牌的数量；将投影的视觉令牌表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">V</mi><mtext>mask </mtext></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo>×</mo><mn>256</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{V}_{\text {mask }} \in \mathbb{R}^{\frac{H}{16} \times \frac{W}{16} \times 256}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">mask </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.973465em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.973465em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span>，其中 H 和 W 是输入图像的高度和宽度。然后，通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mrow><mi>m</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mrow><mi>m</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">V_{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的内积生成mask：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold">M</mi><mo>=</mo><msub><mi mathvariant="bold">V</mi><mtext>mask</mtext></msub><msubsup><mi mathvariant="bold">Q</mi><mtext>mask</mtext><mi mathvariant="normal">T</mi></msubsup><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/></mrow><annotation encoding="application/x-tex">\mathbf{M}=\mathbf{V}_\text{mask}{ \mathbf{Q}_{\text{mask}} ^ { \mathrm{T}}}\quad\quad\quad\quad\quad\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">M</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">mask</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">mask</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>M </mtext><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\text{M }\in\mathbb{R}^{\frac{H}{16}\times\frac{W}{16}\times N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord text"><span class="mord">M </span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.973465em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.973465em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span>。注意力偏差的产生与mask预测类似。查询词块和视觉词块也由 3 层 MLP 进行投射，分别表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">Q</mi><mrow><mi mathvariant="normal">a</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">n</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mn>256</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{Q}_{\mathrm{attn}}\in\mathbb{R}^{N\times256}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mrow><mi mathvariant="normal">d</mi><mtext> </mtext><msub><mi mathvariant="normal">V</mi><mrow><mi mathvariant="normal">a</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">n</mi></mrow></msub></mrow></mo><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo>×</mo><mi>K</mi><mo>×</mo><mn>256</mn></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathop{\mathrm{d~V_{attn}}}\in\mathbb{R}^{\frac{H}{16}\times\frac{W}{16}\times K\times256},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mord"><span class="mord mathrm">d</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.167905em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.973465em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span>，其中 $K $是 ViT CLIP 模型的注意力头数。通过内生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mrow><mi>a</mi><mi>t</mi><mi>t</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{attn}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mrow><mi>a</mi><mi>t</mi><mi>t</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">V_{attn}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，我们得到了注意力偏差：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold">B</mi><mo>=</mo><msub><mi mathvariant="bold">V</mi><mtext>attn</mtext></msub><msubsup><mi mathvariant="bold">Q</mi><mrow><mi mathvariant="normal">a</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">n</mi></mrow><mi mathvariant="normal">T</mi></msubsup><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/></mrow><annotation encoding="application/x-tex">\mathbf{B}=\mathbf{V}_\text{attn}{ \mathbf{Q}_{\mathrm{attn}}^{\mathrm{T}}}\quad\quad\quad\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">B</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">attn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">n</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">B</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo>×</mo><mi>K</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{B}\in\mathbb{R}^{\frac H{16}\times\frac W{16}\times K\times N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathbf">B</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.973465em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.973465em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span> 。此外，如果需要，注意力偏置将进一步调整为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">B</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>h</mi><mo>×</mo><mi>w</mi><mo>×</mo><mi>K</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{B}\in\mathbb{R}^{h\times w\times K\times N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathbf">B</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span> ，其中 $h <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">和</span></span></span></span> w <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是</mtext><mi>C</mi><mi>L</mi><mi>I</mi><mi>P</mi><mtext>中注意力地图的高度和宽度。实际上，</mtext></mrow><annotation encoding="application/x-tex">是 CLIP 中注意力地图的高度和宽度。实际上，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">注</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">力</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">图</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">高</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">际</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">，</span></span></span></span>Q_{mask}$ 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mrow><mi>a</mi><mi>t</mi><mi>t</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Q_{attn}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以共享，注意力偏置将应用于 CLIP 的多个自我注意层，即偏置在不同的自我注意层中使用。</p><p><img src="images/image-20231224204324677.png" alt="image-20231224204324677" /></p><p>mask预测和识别的解耦设计背后的动机很直观：CLIP 中用于识别mask的兴趣区域可能与mask区域本身不同。我们在表 7 中展示了这种设计的有效性。</p><p><strong>视觉标记的特征融合</strong> ViT 模型由视觉标记和[CLS] 标记组成，但我们只将视觉标记融合到 SAN 中。由于 CLIP 和 SAN 的视觉令牌数量和特征维度可能不同，我们首先将视觉令牌重新排列为特征图，经过 1 × 1 卷积和调整大小操作来调整信道维度和特征图大小，然后通过元素加法将其与 SAN 的相应特征图合并。以 12 层 ViT-B/16 CLIP 模型和 8 层 SAN 模型为例，我们将多次进行特征融合。我们将 CLIP 的 {stem, 3, 6, 9} 层特征与 SAN 的 {stem, 1, 2, 3} 层特征进行融合。</p><p>我们的特征融合具有直观的设计，更复杂的结构可能会提高性能，但这不是这项工作的重点。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312242011244.png" alt=" " />    <p align="left">    图 4.利用 CLIP 中的注意力偏差预测mask的示例。(左图）一组 [SLS] 标记（即阴影 [CLS] 标记副本）被创建并应用于 CLIP。这些 [SLS] 标记会在注意力偏差的影响下进行更新。(右图）该图显示了不同类型标记之间的相互作用。方格的颜色表示查询标记和关键标记之间的关系：黑色表示查询不会被关键标记更新，白色表示查询通常可以被关键标记更新，灰色表示在注意力偏差的影响下查询可以被关键标记更新。  </p> </p><p><strong>带有注意力偏差的mask识别</strong> 最初的 CLIP 模型只能通过[CLS] 标记进行图像级识别。我们的工作在不改变 CLIP 模型参数的情况下，试图通过引导[CLS] 标记在感兴趣区域的注意力图谱来实现准确的mask识别。为了实现这一目标，我们创建了一组阴影[CLS] 标记副本，称为[SLS] 标记（MaskCLIP [10] 采用了类似的设计，详细讨论见附录 A.2）。这些 [SLS] 标记会被视觉标记单向更新，但视觉标记和 [CLS] 标记都不受它们的影响（图 4）。在更新[SLS]标记时，预测的注意力偏差 Bk ∈ Rh×w×N 会被添加到注意力矩阵中：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold">X</mi><mrow><mo stretchy="false">[</mo><mrow><mtext> </mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi></mrow><mo stretchy="false">]</mo></mrow><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>=</mo><mtext>soft</mtext><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold">Q</mi><mrow><mo stretchy="false">[</mo><mrow><mtext> </mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi></mrow><mo stretchy="false">]</mo></mrow><mi>l</mi></msubsup><msubsup><mi mathvariant="bold">K</mi><mrow><mi mathvariant="normal">v</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi></mrow><mi>l</mi></msubsup><mo>+</mo><msub><mi mathvariant="bold">B</mi><mi>k</mi></msub><mo stretchy="false">)</mo><msubsup><mi mathvariant="bold">V</mi><mrow><mo stretchy="false">[</mo><mrow><mtext> </mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi></mrow><mo stretchy="false">]</mo></mrow><mi>l</mi></msubsup><mspace width="1em"/></mrow><annotation encoding="application/x-tex">\mathbf{X}_{[\mathrm{~SLS}]}^{l+1}=\text{soft}\max(\mathbf{Q}_{[\mathrm{~SLS}]}^l\mathbf{K}_{\mathrm{visual}}^l+\mathbf{B}_k)\mathbf{V}_{[\mathrm{~SLS}]}^l\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.404439em;vertical-align:-0.505331em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.369669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span></span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.505331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.4469999999999999em;"></span><span class="mord text"><span class="mord">soft</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span></span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">K</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">v</span><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">u</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">l</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.4469999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span></span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><p>其中，l 表示层数，k 表示第 k 个注意力头，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">Q</mi><mrow><mo stretchy="false">[</mo><mrow><mtext> </mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi></mrow><mo stretchy="false">]</mo></mrow></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><msub><mi mathvariant="bold">W</mi><mi mathvariant="bold">q</mi></msub><msub><mi mathvariant="bold">X</mi><mrow><mo stretchy="false">[</mo><mrow><mtext> </mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi></mrow><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{Q}_{[\mathrm{~SLS}]}~=~\mathbf{W}_\mathbf{q}\mathbf{X}_{[\mathrm{~SLS}]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04131em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">Q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16110799999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mrow><mtext> </mtext><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi></mrow><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\mathrm{~SLS}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mspace nobreak"> </span><span class="mord mathrm">S</span><span class="mord mathrm">L</span><span class="mord mathrm">S</span></span><span class="mclose">]</span></span></span></span>标记的查询嵌入和值嵌入，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">V</mi><mrow><mo stretchy="false">[</mo><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi><mo stretchy="false">]</mo></mrow></msub><mo>=</mo><msub><mi mathvariant="bold">W</mi><mi mathvariant="bold">v</mi></msub><msub><mi mathvariant="bold">X</mi><mrow><mo stretchy="false">[</mo><mi mathvariant="normal">S</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">S</mi><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{V}_{\mathrm{[SLS]}}=\mathbf{W}_\mathbf{v}\mathbf{X}_{\mathrm{[SLS]}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04131em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span><span class="mclose mtight">]</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04131em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">S</span><span class="mclose mtight">]</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>是视觉标记的键嵌入。Wq、Wk、Wv 分别是查询层、键嵌入层和值嵌入层的权重。</p><p>我们注意到，这里的计算复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>T</mi><mtext>visual</mtext></msub><mrow><mo>+</mo><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mi mathvariant="double-struck">C</mi><mtext>LS </mtext><mo stretchy="false">]</mo></mrow></msub></mrow><mo>+</mo><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mtext> SLS </mtext><mo stretchy="false">]</mo></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}((T_\text{visual}{ + T _ { [ \mathbb{C}\text{LS }]}}+T_{[\text{ SLS }]})^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">visual</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mord mathbb mtight">C</span></span><span class="mord text mtight"><span class="mord mtight">LS </span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1693079999999998em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord text mtight"><span class="mord mtight"> SLS </span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mtext>visual</mtext></msub></mrow><annotation encoding="application/x-tex">T_\text{visual}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">visual</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mi mathvariant="double-struck">C</mi><mtext>LS </mtext><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">T _ { [ \mathbb{C}\text{LS }]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight"><span class="mord mathbb mtight">C</span></span><span class="mord text mtight"><span class="mord mtight">LS </span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mtext> SLS </mtext><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">T_{[\text{ SLS }]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord text mtight"><span class="mord mtight"> SLS </span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 是不同类型标记的数量，如果通过将所有类型的标记串联在一起并使用一个屏蔽的自我注意层来实现，计算复杂度为 O((Tvisual+T[CLS]]+T[SLS])2)。但是，我们可以通过交叉注意更新 [SLS] 标记，因为交叉注意与自注意共享嵌入权重。这样，计算复杂度就变成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mtext>visua</mtext><mn>1</mn></mrow></msub><mo>+</mo><mtext> </mtext><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mtext>CLS] </mtext><mo stretchy="false">]</mo></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mtext>SLS</mtext><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mtext>visua</mtext><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>T</mi><mrow><mo stretchy="false">[</mo><mtext>CLS] </mtext><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}((T_{\text{visua}1}+\text{ }T_{[\text{CLS] }]})^{2}+T_{[\text{SLS}]}(T_{\text{visua}1}+T_{[\text{CLS] }]}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">visua</span></span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1693079999999998em;vertical-align:-0.3551999999999999em;"></span><span class="mord text"><span class="mord"> </span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord text mtight"><span class="mord mtight">CLS] </span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord text mtight"><span class="mord mtight">SLS</span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">visua</span></span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord text mtight"><span class="mord mtight">CLS] </span></span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>。</p><p>在注意力偏差的作用下，[SLS] 标记的特征逐渐演变为适合mask预测，通过比较[SLS] 标记与类名的 CLIP 文本嵌入之间的距离/相似度（表示为 P∈ RC×N ，其中 C 为类号），可以轻松获得mask的类预测。</p><p><strong>生成分割图</strong> 有了mask建议 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">M</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\mathbf{M}\in\mathbb{R}\frac{H}{16}\times\frac{W}{16}\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathbf">M</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathbb">R</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 和mask类别预测 $\mathbf{P}\in\mathbb{R}^{C\times N} $后，我们就可以计算分割图：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold">S</mi><mo>=</mo><mi mathvariant="bold">M</mi><mo>×</mo><msup><mi mathvariant="bold">P</mi><mi mathvariant="normal">T</mi></msup><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/></mrow><annotation encoding="application/x-tex">\mathbf{S}=\mathbf{M}\times\mathbf{P}^\mathrm{T}\quad\quad\quad\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76944em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">M</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">P</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">S</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">\mathbf{S}\in\mathbb{R}\frac{H}{16}\times\frac{W}{16}\times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathbf">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathbb">R</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>。它是语义分割的标准输出，因此与主流语义分割评估兼容。</p><p>为了训练我们的模型，我们采用了 [7] 的做法。使用骰子损失 Lmask dice 和二进制交叉熵损失 Lmask bce 对mask生成进行监督。mask识别由交叉熵损失 Lcls 监督。总损失为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">g</mi></mrow></msub><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><msub><mi>L</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">k</mi><mi mathvariant="normal">_</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">e</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mn>2</mn></msub><msub><mi>L</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">k</mi><mi mathvariant="normal">_</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">e</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mn>3</mn></msub><msub><mi>L</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msub><mspace width="1em"/></mrow><annotation encoding="application/x-tex">L_{\mathrm{seg}}=\lambda_{1}L_{\mathrm{mask\_dice}}+\lambda_{2}L_{\mathrm{mask\_bce}}+\lambda_{3}L_{\mathrm{cls}}\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.06144em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">k</span><span class="mord mathrm mtight" style="margin-right:0.02778em;">_</span><span class="mord mathrm mtight">d</span><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">e</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.06144em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">k</span><span class="mord mathrm mtight" style="margin-right:0.02778em;">_</span><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">e</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><p>损失重量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 分别为 5.0、5.0 和 2.0。SAN 的梯度流如图 2 所示。通过端到端训练，侧适配器网络可以最大限度地适应冻结的 CLIP 模型，因此mask建议和注意力偏置都是 CLIP 感知的。</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>在本节中，我们将首先介绍实验中使用的数据集和评估协议（第 4.1 节）。然后，我们将介绍实验的实施细节（第 4.2 节）。最后，我们将把我们的方法与最先进的方法进行比较（第 4.3 节），并评估我们方法的有效性（第 4.4 节）。</p><h3 id="41-dataset-and-evaluation-protocol"><a class="markdownIt-Anchor" href="#41-dataset-and-evaluation-protocol"></a> 4.1. Dataset and Evaluation Protocol</h3><p>我们在 6 个数据集上进行了实验：COCO Stuff [4]、ADE20K-150 [41]、ADE20K-847 [41]、Pascal Context59 [25]、Pascal Context-459 [25] 和 Pascal VOC [11]。按照通常的做法[22, 33]，所有模型都在 COCO Stuff 的训练集上进行训练，然后在其他数据集上进行评估。</p><p><strong>COCO Stuff</strong> 它包含 164K 幅图像和 171 个注释类别，分为训练集、验证集和测试集，分别包含 118K、5K 和 41K 幅图像。在实验中，我们默认使用完整的 118K 训练集作为训练数据。</p><p><strong>ADE20K-150(ADE-150)</strong> 这是一个大型场景理解数据集，包含 20K 幅训练图像和 2K 幅验证图像，共有 150 个注释类别。</p><p><strong>ADE20K-847(ADE-847)</strong> 它的图像与 ADE20K-150 相同，但注释的类别更多（847 个类别），这对开放词汇语义分割来说是一个具有挑战性的数据集。</p><p><strong>Pascal VOC(VOC)</strong> Pascal VOC 包含 20 类语义分割注释，其中训练集和验证集分别包含 1464 幅和 1449 幅图像。</p><p><strong>Pascal Context-59(PC-59)</strong> 这是一个用于语义理解的数据集，包含 5K 幅训练图像、5K 幅验证图像和总共 59 个注释类别。</p><p><strong>Pascal Context-459(PC-459)</strong> 它具有与 Pascal Context-59 相同的图像，但注释的类别更多（459 个类别），也被广泛用于开放词汇语义分割。</p><p><img src="images/image-20231224203403302.png" alt="image-20231224203403302" /></p><p><strong>Dataset Analysis</strong> 不同数据集之间的关系是前一篇论文中仅涉及到的问题。为了澄清并加深我们对开放词汇能力的理解，我们在此通过计算其他数据集与训练数据集 COCO Stuff 之间的类别相似性来进行直接分析。我们用豪斯多夫距离（Hausdorff Distance）计算两个数据集之间的相似性。在计算成对相似性时，我们使用预训练的 CLIP 文本编码器（ViT-L/14）提取每个概念的文本嵌入，并计算余弦相似性。结果见表 1。1.在五个验证数据集中，Pascal VOC 和 Pascal Context-59 的相似度高达 0.9，这意味着它们在测量视觉类别的域内开放词汇能力方面更胜一筹。此外，Pascal Context459、ADE20K-150 和 ADE20K-847 的相似度得分较低，因此它们能更好地评估跨域开放词汇能力。</p><p><strong>Evaluation Protocol</strong> 按照通常的做法[7, 12, 33]，我们使用类际交叉的平均值（mIoU）来衡量模型的性能。对于系统级比较，我们报告了 5 次试验的平均值和方差，以减少随机性。在消融研究中，为了节省成本，我们只报告了 2 次试验的平均结果。</p><h3 id="42-implementation-details"><a class="markdownIt-Anchor" href="#42-implementation-details"></a> 4.2. Implementation Details</h3><p><strong>Training Setting</strong> 默认情况下，侧适配器网络由 8 个变压器块组成，通道尺寸为 240，注意头为 6，补丁大小为 16，查询令牌为 100。对于 ViT-B/16 CLIP 模型（预训练分辨率为 2242），我们使用前 9 个块进行特征融合，后 3 个块进行mask识别，输入分辨率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>32</mn><msup><mn>0</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">320^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。对于 ViT-L/14 模型（在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>33</mn><msup><mn>6</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">336^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">3</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 分辨率下进行预训练），我们使用前 18 个区块进行特征融合，最后 6 个区块进行mask识别，输入分辨率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>44</mn><msup><mn>8</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">448^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。对于 ViT-B/16 和 ViT-L/16，侧适配器网络的输入分辨率均为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><msup><mn>4</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">64^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。</p><p>所有模型均在 COCO Stuff 数据集的训练集上进行训练。我们使用 AdamW 优化器，初始学习率为 1e-4，权重衰减为 1e-4，批量大小为 32，总训练迭代次数为 60K。我们还采用了数据增强方法[7, 22, 33]，在[320,1024]的短边范围内随机调整图像大小，裁剪尺寸为 6402。</p><h3 id="43-system-level-comparison"><a class="markdownIt-Anchor" href="#43-system-level-comparison"></a> 4.3. System level comparison</h3><p><img src="images/image-20231224203506181.png" alt="image-20231224203506181" /></p><p>在表 2 中，我们将我们的方法与其他最先进的方法进行了比较。在表 2 中，我们将我们的方法与其他最先进的方法进行了比较。与其他同样使用 CLIP ViT 模型和 COCO Stuff 数据集的方法相比，在不使用集合技巧2 的情况下，我们的方法在相同设置下分别以 CLIP ViT-B/16 平均+1.8 mIoU 和 ViT-L/14 平均+2.3 mIou 超过了其他方法。进一步应用集合技巧后，CLIP VIT-B/16 和 ViT-L/14 的差距分别扩大到平均 +2.9 mIoU 和 +3.7 mIoU。</p><p>值得注意的是，我们的方法对 ADE-847 的改进更为明显。正如我们在 Tab.我们认为，在 ADE-847 上的更好表现进一步证实了我们的方法具有更强的开放词汇识别能力。</p><p>此外，我们还与其他方法进行了比较：SimSeg [33]、OvSeg [22] 和 MaskCLIP [10]，它们也使用 CLIP ViT 模型，在可训练参数、GFLOPs 和推理时间（FPS）方面进行了比较。为了进行公平比较，我们在相同的环境下测试了所有方法：单个 Titan Xp GPU、Xeon E5 v2 CPU（32 核）、252G 内存、PyTorch 1.9.0 和 CUDA 11.3。所有模型均使用 6402 分辨率的图像，每次推理处理一张图像。结果汇总于表 3。3.我们的方法在各个方面都优于其他方法。</p><p align="center">     <img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202312242036335.png" alt=" " />    <p align="left">      图 6.我们方法的定性结果。(a)和(b)是使用不同词库（分别为 ADE-150 和 ADE-847）处理相同输入图像的结果。</p> </p><p>我们还在图 6 中展示了最佳 ViTL/14 模型的预测结果。图 6(a)和(b)是相同的输入图像，但使用了不同的词汇表（分别来自 ADE-150 和 ADE-847），例如，在 ADE-150 中，“招牌”（sign）被正确分类，但在 ADE-847 中却被误分类为 “广告”（ad）。我们假设该模型不能很好地验证广告和招牌之间的区别。</p><h3 id="44-ablation-studies"><a class="markdownIt-Anchor" href="#44-ablation-studies"></a> 4.4. Ablation Studies</h3><p>我们在 ADE150 上消融了我们方法的关键设计选择。如果没有指定，默认设置为 ViT-B/16 CLIP 模型和特征尺寸为 240、注意头为 6 的 8 层侧适配器网络。</p><p><strong>特征融合的重要性</strong> SAN 轻量级的关键在于利用 CLIP 模型的强大功能。我们在表 4 中通过实验说明了特征融合的重要性。4. 如果不融合 CLIP 特征，mIoU 将从 27.8 降至 21.1。此外，我们还注意到，融合较深层（如第 9 层）的特征比融合较浅层（如茎层）的特征更好，只有融合第 9 层的特征才能达到 27.1 mIoU，比未融合特征的基线高出 6.0 mIoU。这一观察结果与深层特征往往更具语义性的直觉相吻合。此外，与单层特征融合相比，多层特征融合还能进一步提高性能，提高 0.8 mIoU。</p><p><img src="images/image-20231224204105576.png" alt="image-20231224204105576" /></p><p>为了最小化 CLIP 的推理成本，我们采用了单前向设计，即较浅的层用于特征融合，其他较深的层用于mask识别，因此需要进行权衡。表 5 对这一问题进行了研究，当前 9 层用于特征融合，最后 3 层用于mask识别时，性能最佳。此外，我们还与两次前向基线（表 5 第 2 行）进行了比较，没有发现显著差异。</p><p><img src="images/image-20231224204040248.png" alt="image-20231224204040248" /></p><p><strong>感知 CLIP mask预测的重要性。</strong> 与其他两阶段框架[10, 33]不同，我们的方法是一个端到端的训练框架。我们将在表 6 中研究这两种框架的区别。6.由于注意力偏差分支必须通过 CLIP 进行训练，为了便于比较，我们在 CLIP 的自我注意力层中使用了mask建议而不是注意力偏差。如果 CLIP 的梯度被阻断，该方法就会退化为两阶段框架，即mask预测与 CLIP 识别分离。否则，该方法就是单头端到端训练框架，而mask预测是 CLIP 感知的。</p><p>表 6 显示，端到端培训比两阶段基线提高了 4.5 mIoU。表 6 显示，端到端训练比两阶段基线提高了 4.5 mIoU。此外，我们还列出了其他两阶段方法的结果作为参考，表明我们的两阶段基线可以达到合理的性能。</p><p><img src="images/image-20231224204021821.png" alt="image-20231224204021821" /></p><p><strong>脱钩机头的重要性</strong> 我们在表 7 中研究了去耦磁头设计的效果。7.与单一磁头模型相比，去耦磁头模型的性能提高了 +1.7 mIoU。请注意，这两个模型都是端到端训练的，因此它们的mask预测都能感知 CLIP。</p><p><img src="images/image-20231224204006187.png" alt="image-20231224204006187" /></p><p><strong>非对称输入分辨率</strong> 我们以正式发布的 ViT CLIP 模型为基础。它们是为低分辨率输入图像（如 2242）设计的，而语义分割需要高分辨率图像。为了解决输入分辨率上的冲突，我们在 CLIP 模型中使用低分辨率图像，在 SAN 模型中使用高分辨率图像。表 8 显示了 CLIP 模型的不同图像分辨率对性能的影响。此外，在默认情况下，我们对 CLIP 模型的位置嵌入进行了微调，其效果如表 9 所示。</p><p><img src="images/image-20231224203938696.png" alt="image-20231224203938696" /></p><p><strong>关于参数效率的讨论</strong> 表 10 考察了侧适配器网络的容量对性能的影响。我们发现，小模型已经可以达到很好的性能，而大容量模型的性能提升并不明显。我们推测，这是因为我们的方法利用了 CLIP 的特点，因此不需要很大的模型容量。</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h2><p>在这项工作中，我们提出了用于开放词汇语义分割的 SAN 框架。我们的框架成功地利用了冷冻 CLIP 模型和端到端流水线的特点，最大限度地采用了冷冻 CLIP 模型。值得注意的是，在五个语义分割基准测试中，我们提出的框架以更少的可训练参数和更低的计算成本大大超越了之前最先进的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STDC</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/STDC/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/STDC/</url>
      
        <content type="html"><![CDATA[<h1 id="stdc"><a class="markdownIt-Anchor" href="#stdc"></a> STDC</h1><p><a href="zotero://open-pdf/library/items/T7VYH2V8">Rethinking BiSeNet For Real-time Semantic Segmentation</a></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>事实证明，BiSeNet [28, 27] 是一种用于实时分割的流行双流网络。然而，其增加额外路径以编码空间信息的原理非常耗时，而且由于缺乏特定任务的设计，借用预训练任务（如图像分类）的骨干可能会导致图像分割效率低下。为了解决这些问题，我们通过消除结构冗余，提出了一种新颖高效的结构，命名为短期密集串联网络（STDC 网络）。具体来说，我们逐步降低了特征图的维度，并利用特征图的聚合进行图像表示，这构成了 STDC 网络的基本模块。在解码器中，我们提出了细节聚合模块，以单流方式将空间信息的学习整合到低层。最后，将低层特征和深层特征融合起来，预测最终的分割结果。在 Cityscapes 和 CamVid 数据集上进行的大量实验证明了我们方法的有效性，在分割准确性和推理速度之间实现了良好的权衡。在 Cityscapes 数据集上，我们在测试集上实现了 71.9% 的 mIoU，在 NVIDIA GTX 1080Ti 上的推理速度为 250.4 FPS，比最新方法快 45.2%；在更高分辨率的图像上推理时，我们实现了 76.8% 的 mIoU，推理速度为 97.0 FPS。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>语义分割是计算机视觉领域的一个经典基础课题，旨在为图像分配像素级标签。随着深度学习的蓬勃发展，语义分割的性能得到了极大的提升，并取得了各种突破性进展[18, 27, 22, 4]，许多应用领域（如自动驾驶、视频监控、机器人传感等）的需求也随之快速增长。这些应用促使研究人员探索有效和高效的分割网络，尤其是针对移动领域。</p><p>为了满足这些需求，许多研究人员提出设计低延迟、高效率、具有令人满意的分割精度的 CNN 模型。这些实时语义分割方法在各种基准测试中都取得了可喜的成绩。对于实时推理，一些研究（如 DFANet [18] 和 BiSeNetV1 [28]）选择了轻量级骨干网，并研究了特征融合或聚合模块的方法来弥补精度的下降。然而，这些从图像分类任务中借鉴的轻量级骨干网由于缺乏针对具体任务的设计，可能无法完美地用于图像分割问题。除了选择轻量级骨干外，限制输入图像大小也是提高推理速度的常用方法。较小的输入分辨率看似有效，但容易忽略边界和小物体周围的细节外观。为了解决这个问题，如图 2(a) 所示，BiSeNet [28, 27] 采用了多路径框架，将底层细节和高层语义结合起来。然而，增加额外路径来获取低层次特征非常耗时，而且辅助路径总是缺乏低层次信息的引导。</p><p>为此，我们提出了一种新颖的手工制作网络，以达到加快推理速度、结构可解释、性能优于现有方法的目的。首先，我们设计了一种名为 “短期密集连接模块”（STDC 模块）的新型结构，只需几个参数就能获得可扩展的变异感受野。然后，将 STDC 模块无缝集成到 U-net 架构中，形成 STDC 网络，大大提高了网络在语义分割任务中的性能。</p><p>具体来说，如图 3 所示，我们将多个连续层的响应图串联起来，每个连续层以不同的尺度和各自的场对输入图像/特征进行编码，从而实现多尺度特征表示。为了加快处理速度，我们会逐渐缩小各层滤波器的大小，但分割性能的损失几乎可以忽略不计。STDC 网络的详细结构见表 2。</p><p>在解码阶段，如图 2(b)所示，我们没有使用额外的耗时路径，而是采用了细节引导（Detail Guidance）来引导低层网络学习空间细节。我们首先利用细节聚合模块生成细节基础真相。然后，利用二元交叉熵损失和骰子损失来优化细节信息的学习任务，这被视为侧信息学习的一种。需要注意的是，推理时并不需要这些侧信息。最后，来自低层的空间细节信息和来自深层的语义信息被融合在一起，以预测语义分割结果。我们方法的整体架构如图 4 所示。</p><p>我们的主要贡献可概括如下：</p><ul><li>我们设计了一个短期密集串联模块（STDC 模块），以提取具有可扩展感受野和多尺度信息的深度特征。该模块以可承受的计算成本提升了 STDC 网络的性能。</li><li>我们提出了 &quot;细节聚合 &quot;模块来学习解码器，从而更精确地保留低层次的空间细节，而不增加推理时间的计算成本。</li><li>我们进行了大量实验，以展示我们方法的有效性。实验结果表明，STDC 网络在 ImageNet、Cityscapes 和 CamVid 上取得了新的先进成果。具体来说，我们的 STDC1-Seg50 在 Cityscapes 测试集上实现了 71.9% 的 mIoU，在一块 NVIDIA GTX 1080Ti 显卡上以 250.4 FPS 的速度运行。在相同的实验设置下，我们的 STDC2-Seg75 在 97.0 FPS 的速度下实现了 76.8% 的 mIoU。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><h3 id="21-efficient-network-designs"><a class="markdownIt-Anchor" href="#21-efficient-network-designs"></a> 2.1. Efficient Network Designs</h3><p>模型设计在计算机视觉任务中起着重要作用。SqueezeNet[16]使用火模块和某些策略来减少模型参数。MobileNet V1 [13] 利用深度可分离卷积来减少推理阶段的FLOPs。ResNet[9][10]采用了残差构建层来实现出色的性能。MobileNet V2[25]和ShuffleNet[29]利用分组卷积来减少计算成本，同时保持相当的准确性。这些作品是特别为图像分类任务设计的，它们对语义分割应用的扩展应仔细调整。</p><h3 id="22-generic-semantic-segmentation"><a class="markdownIt-Anchor" href="#22-generic-semantic-segmentation"></a> 2.2. Generic Semantic Segmentation</h3><p>传统的分割算法，如阈值选择、超级像素，利用手工制作的特征来分配图像中的像素级标签。随着卷积神经网络的发展，基于FCN[23]的方法[3, 1, 32, 14]在各种基准上取得了令人瞩目的性能。Deeplabv3[3]采用了一个抽象的空间金字塔集合模块来捕捉多尺度的背景。SegNet[1]利用编码器-解码器结构来恢复高分辨率的特征图。PSPNet[32]设计了一个金字塔池，以捕获扩张骨干上的局部和全局背景信息。扩张骨干和编码器-解码器结构都可以同时学习低级细节和高级语义。然而，由于高分辨率的特征和复杂的网络连接，大多数方法需要大量的计算成本。在本文中，我们提出了一个高效的架构，在速度和准确性之间实现了良好的权衡。</p><h3 id="23-real-time-semantic-segmentation"><a class="markdownIt-Anchor" href="#23-real-time-semantic-segmentation"></a> 2.3. Real-time Semantic Segmentation</h3><p>最近，实时语义分割的实际应用正在快速增长。在这种情况下，有两个主流来设计高效的分割方法。(i) 轻量级骨干网。DFANet[18]采用了轻量级骨干网来降低计算成本，并设计了一个跨级特征聚合模块来提高性能。DFNet[21]利用 &quot;部分顺序修剪 &quot;算法获得轻量级骨干网和高效解码器。(ii) 多分支结构。ICNet[31]设计了多尺度图像级联，实现了良好的速度精度权衡。BiSeNetV1[28]和BiSeNetV2[27]分别提出了低层次细节和高层次背景信息的双流路径。在本文中，我们提出了一个高效的轻量级骨干网，以提供可扩展的接收场。此外，我们设置了一个单路径解码器，它使用细节信息指导来学习低级别的细节。</p><h2 id="3-proposed-method"><a class="markdownIt-Anchor" href="#3-proposed-method"></a> 3. Proposed Method</h2><p>BiSeNetV1 [28] 利用 ResNet18 等轻量级骨干网和空间路径作为编码网络，形成双流分割架构。然而，由于结构冗余，分类骨干网和双流架构可能效率不高。在本节中，我们首先介绍了我们提出的 STDC 网络的细节。然后，我们将详细介绍单流方法的整个架构。</p><h3 id="31-design-of-encoding-network"><a class="markdownIt-Anchor" href="#31-design-of-encoding-network"></a> 3.1. Design of Encoding Network</h3><p><img src="images/image-20240121231104646.png" alt="image-20240121231104646" /></p><blockquote><p>图 3.(a) 一般 STDC 网络架构。 ConvX操作指的是Conv-BN-ReLU。 (b) 我们的网络中使用的短期密集连接模块（STDC 模块）。 M表示输入通道的维度，N表示输出通道的维度。每个块都是具有不同内核大小的 ConvX 操作。 © STDC 模块，步长=2。</p></blockquote><h4 id="311-short-term-dense-concatenate-module"><a class="markdownIt-Anchor" href="#311-short-term-dense-concatenate-module"></a> 3.1.1 Short-Term Dense Concatenate Module</h4><p>我们提出的网络的关键组件是短期密集串联模块（STDC 模块）。图 3(b) 和 © 展示了 STDC 模块的布局。具体来说，每个模块都被分成若干块，我们用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>n</mi><mi>v</mi><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">ConvX_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 块的操作。因此，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个模块的输出计算如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>v</mi><msub><mi>X</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_i=ConvX_i(x_{i-1},k_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x_i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 分别是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个模块的输入和输出。ConvX 包括一个卷积层、一个批处理归一化层和 ReLU 激活层，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是卷积层的核大小。</p><p>给定 STDC 模块输出的通道数 N，除最后一个卷积层的滤波器数与前一个卷积层的滤波器数相同外，第 i 个卷积层的滤波器数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">N/2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span>。在图像分类任务中，通常的做法是在较高层使用更多通道。但在语义分割任务中，我们关注的是可扩展的感受野和多尺度信息。低级层需要足够多的通道来编码更细粒度的信息，而高级层具有较大的感受野，更侧重于高级信息的归纳，与低级层设置相同的通道可能会造成信息冗余。向下采样只发生在 Block2 中。为了丰富特征信息，我们通过跳过路径将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的特征图连接起来，作为 STDC 模块的输出。如图 3（c）所示，在连接之前，STDC 模块中不同区块的响应图会通过平均池化操作（池化大小为 3 × 3）下采样到相同的空间大小。在我们的设置中，STDC 模块的最终输出为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_{output}=F(x_1,x_2,...,x_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{output}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示 STDC 模块的输出，F 是我们方法中的融合操作，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_1、x_2......x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是来自所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个区块的特征图。考虑到效率问题，我们采用连接作为融合操作。在我们的方法中，我们使用了 4 个区块的 STDC 模块。</p><p><img src="images/image-20240121231523830.png" alt="image-20240121231523830" /></p><blockquote><p>表 1. STDC 模块中块的感受野。 RF表示感受野，S表示stride，注意，如果stride=2，则Block1的1×1 RF通过Average Pool操作变成3×3 RF。</p></blockquote><p>表 1 列出了 STDC 模块中各区块的感受野，因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{output}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 收集了所有区块的多尺度信息。我们认为 STDC 模块有两个优点：</p><p>（1）我们精心调整了区块的滤波器大小，以几何级数的方式逐渐减小，从而显著降低了计算复杂度。</p><p>（2）STDC 模块的最终输出是由所有区块串联而成，从而保留了可扩展的各自场和多尺度信息。</p><p>给定输入通道维数 M 和输出通道维数 N，STDC 模块的参数数为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left right" columnspacing="0em 1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>S</mi><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>m</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>M</mi><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>1</mn></msup></mfrac><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>2</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mfrac><mi>N</mi><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mfrac><mo>×</mo><mn>3</mn><mo>×</mo><mn>3</mn><mo>×</mo><mfrac><mi>N</mi><msup><mn>2</mn><mi>i</mi></msup></mfrac><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mfrac><mo>×</mo><mn>3</mn><mo>×</mo><mn>3</mn><mo>×</mo><mfrac><mi>N</mi><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>N</mi><mi>M</mi></mrow><mn>2</mn></mfrac><mo>+</mo><mfrac><mrow><mn>9</mn><msup><mi>N</mi><mn>2</mn></msup></mrow><msup><mn>2</mn><mn>3</mn></msup></mfrac><mo>×</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>3</mn></mrow></munderover><mfrac><mn>1</mn><msup><mn>2</mn><mrow><mn>2</mn><mi>i</mi></mrow></msup></mfrac><mo>+</mo><mfrac><mrow><mn>9</mn><msup><mi>N</mi><mn>2</mn></msup></mrow><msup><mn>2</mn><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msup></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>N</mi><mi>M</mi></mrow><mn>2</mn></mfrac><mo>+</mo><mfrac><mrow><mn>3</mn><msup><mi>N</mi><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo>×</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><msup><mn>2</mn><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>3</mn></mrow></msup></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}S_{param}&amp; =M\times1\times1\times\frac N{2^1}+\sum_{i=2}^{n-1}\frac N{2^{i-1}}\times3\times3\times\frac N{2^i}+\frac{N}{2^{n-1}}\times3\times3\times\frac{N}{2^{n-1}} \\&amp;=\frac{NM}2+\frac{9N^2}{2^3}\times\sum_{i=0}^{n-3}\frac1{2^{2i}}+\frac{9N^2}{2^{2n-2}} \\&amp;=\frac{NM}2+\frac{3N^2}2\times(1+\frac1{2^{2n-3}})&amp;   \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.234672em;vertical-align:-4.367336em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.867336000000001em;"><span style="top:-6.867336000000001em;"><span class="pstrut" style="height:3.8011130000000004em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.4885540000000006em;"><span class="pstrut" style="height:3.8011130000000004em;"></span><span class="mord"></span></span><span style="top:-0.4197770000000006em;"><span class="pstrut" style="height:3.8011130000000004em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.367336em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.867336000000001em;"><span style="top:-6.867336000000001em;"><span class="pstrut" style="height:3.8011130000000004em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.750664em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.750664em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.4885540000000006em;"><span class="pstrut" style="height:3.8011130000000004em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.750664em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.4197770000000006em;"><span class="pstrut" style="height:3.8011130000000004em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.367336em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-1.8902279999999996em;"><span style="top:-0.10977200000000031em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.367336em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>如公式 3 所示，STDC 模块的参数数主要取决于预定义的输入和输出通道维度，而块的数量对参数大小的影响很小。特别是当 n 达到最大极限时，STDC 模块的参数数几乎保持不变，仅由 M 和 N 定义。</p><h4 id="312-network-architecture"><a class="markdownIt-Anchor" href="#312-network-architecture"></a> 3.1.2 Network Architecture</h4><p><img src="images/image-20240121232251611.png" alt="image-20240121232251611" /></p><blockquote><p>表 2. STDC 网络的详细架构。请注意，表中显示的 ConvX 指的是 Conv-BN-ReLU。 Stage 3、4、5的基本模块是STDC模块。 KSize 表示内核大小。 S、R、C 分别表示步幅、重复次数和输出通道。</p></blockquote><p>图 3(a) 展示了我们的网络架构。除输入层和预测层外，它由 6 个阶段组成。一般来说，阶段 1∼5 分别以 2 的步长对输入的空间分辨率进行下采样，阶段 6 通过一个 ConvX、一个全局平均池化层和两个全连接层输出预测对数。</p><p>阶段 1 和阶段 2 通常被视为外观特征提取的底层。为了追求效率，我们只在第 1 和第 2 阶段各使用一个卷积块，根据我们的经验，这已经足够了。在我们的网络中，第 3、4、5 阶段的 STDC 模块数量是经过仔细调整的。在这些阶段中，每个阶段的第一个 STDC 模块以 2 的步长对空间分辨率进行下采样。</p><p>我们用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">N_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示级的输出通道数，其中$ l $是级的索引。在实际应用中，我们根据经验将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">N_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 设为 1024，并仔细调整其余级的通道数，直到在精度和效率之间取得良好的平衡。由于我们的网络主要由短期密集串联模块组成，因此我们称之为 STDC 网络。表 2 显示了 STDC 网络的详细结构。</p><h3 id="32-design-of-decoder"><a class="markdownIt-Anchor" href="#32-design-of-decoder"></a> 3.2. Design of Decoder</h3><h4 id="321-segmentation-architecture"><a class="markdownIt-Anchor" href="#321-segmentation-architecture"></a> 3.2.1 Segmentation Architecture</h4><p><img src="images/image-20240121232401141.png" alt="image-20240121232401141" /></p><blockquote><p>图 4. STDC 分段网络概述。 ARM表示注意力优化模块，FFM表示[28]中的特征融合模块。红色虚线框中的操作就是我们的STDC网络。蓝色虚线框中的操作是明细聚合模块。</p></blockquote><p>我们使用预训练的 STDC 网络作为编码器的骨干，并采用 BiSeNet [28] 的上下文路径对上下文信息进行编码。如图 4(a)所示，我们使用阶段 3、4、5 分别生成下采样率为 1/8、1/16、1/32 的特征图。然后，我们使用全局平均池化技术提供具有大感受野的全局上下文信息。在编码阶段，我们采用 U 型结构对源自全局特征的特征进行上采样，并将每个特征与后两个阶段（阶段 4 和 5）的对应特征相结合。按照 BiSeNet [28]，我们使用注意力提炼模块来提炼每两个阶段的组合特征。对于最终的语义分割预测，我们采用 BiSeNet [28] 中的特征融合模块，将编码器中第三阶段的 1/8 下采样特征与解码器中的对应特征进行融合。我们认为这两个阶段的特征处于不同的特征表示层次。来自编码主干的特征保留了丰富的细节信息，而来自解码器的特征则包含了全局池化层输入的上下文信息。具体来说，Seg Head 包括一个 3 × 3 Conv-BN-ReLU 算子，然后进行 1 × 1 卷积，以获得输出维度 N，并将其设置为类别数。我们采用交叉入口损失和在线硬示例挖掘来优化语义分割学习任务。</p><h4 id="322-detail-guidance-of-low-level-features"><a class="markdownIt-Anchor" href="#322-detail-guidance-of-low-level-features"></a> 3.2.2 Detail Guidance of Low-level Features</h4><p><img src="images/image-20240121232437128.png" alt="image-20240121232437128" /></p><blockquote><p>图 5. 空间路径和第 3 阶段中的要素的视觉解释（有和没有详细指导）。带有下标 D 的列表示带有详细指导的结果。可视化显示，空间路径可以比主干的低层层编码更多的空间细节，例如边界、角点，而我们的细节指导模块可以做同样的事情，而无需额外的计算成本。</p></blockquote><p>图 5（b）展示了 BiSeNet 空间路径的特点。与相同下采样率的骨干网底层（阶段 3）相比，空间路径可以编码更多的空间细节，如边界、角落等。基于这一观察结果，我们提出了一个细节引导模块，以引导低级层以单流方式学习空间信息。我们将细节预测建模为二元分割任务。如图 4（c）所示，我们首先通过拉普拉斯算子从分割GT生成细节图GT。如图 4（a）所示，我们在第 3 阶段插入细节头生成细节特征图。然后，我们使用细节GT作为细节特征图的指导，引导低层学习空间细节特征。如图 5(d)所示，与图 5©中的结果相比，带有细节引导的特征图可以编码更多的空间细节。最后，学习到的细节特征与解码器深度块中的上下文特征融合，用于分割预测。</p><p>细节GT生成： 如图 4（c）中蓝色虚线框所示，我们通过细节聚合模块从语义分割基本事实中生成二进制细节基本事实。这一操作可以通过名为拉普拉斯核的二维卷积核和可训练的 1 × 1 卷积来完成。我们使用图 4（e）中所示的拉普拉斯算子生成不同步长的软细细节特征图，从而获得多尺度细节信息。然后，我们将细节特征图上样到原始尺寸，并与可训练的 1 × 1 卷积进行融合，以实现动态重织。最后，我们采用 0.1 的阈值将预测的细节转换为最终的二进制细节GT，并包含边界和角落信息。</p><p>细节损失：由于细节像素的数量远远少于非细节像素，细节预测是一个类平衡问题。由于加权交叉熵总是会导致粗略的结果，因此根据文献[7]，我们采用二元交叉熵和骰子损失来共同优化细节学习。骰子损失衡量的是预测图与GT之间的重叠程度。同时，它对前景/背景像素的数量不敏感，这意味着它可以缓解类不平衡问题。因此，对于高度为 H、宽度为 W 的预测细节图，细节损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi>i</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{detail}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的计算公式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi>i</mi><mi>l</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>d</mi></msub><mo separator="true">,</mo><msub><mi>g</mi><mi>d</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>L</mi><mrow><mi>d</mi><mi>i</mi><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>d</mi></msub><mo separator="true">,</mo><msub><mi>g</mi><mi>d</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>L</mi><mrow><mi>b</mi><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>d</mi></msub><mo separator="true">,</mo><msub><mi>g</mi><mi>d</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{detail}(p_d,g_d)=L_{dice}(p_d,g_d)+L_{bce}(p_d,g_d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中，pd ∈ RH×W 表示预测的细节，gd ∈ RH×W 表示相应的细节GT。Lbce 表示二进制交叉熵损失，而 Ldice 表示骰子损失，其计算公式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>d</mi><mi>i</mi><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>d</mi></msub><mo separator="true">,</mo><msub><mi>g</mi><mi>d</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mn>2</mn><munderover><mo>∑</mo><mi>i</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></munderover><msubsup><mi>p</mi><mi>d</mi><mi>i</mi></msubsup><msubsup><mi>g</mi><mi>d</mi><mi>i</mi></msubsup><mo>+</mo><mi>ϵ</mi></mrow><mrow><munderover><mo>∑</mo><mi>i</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></munderover><mo stretchy="false">(</mo><msubsup><mi>p</mi><mi>d</mi><mi>i</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><munderover><mo>∑</mo><mi>i</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></munderover><mo stretchy="false">(</mo><msubsup><mi>g</mi><mi>d</mi><mi>i</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mi>ϵ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">L_{dice}(p_d,g_d)=1-\frac{2\sum_i^{H\times W}p_d^ig_d^i+\epsilon}{\sum_i^{H\times W}(p_d^i)^2+\sum_i^{H\times W}(g_d^i)^2+\epsilon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.84348em;vertical-align:-1.172539em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8064639999999998em;"><span style="top:-2.398692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8064639999999998em;"><span style="top:-2.398692em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4168920000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ϵ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.172539em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个像素，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>是一个拉普拉斯平滑项，以避免零除法。本文设置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\epsilon = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p><p>如图 4(b)所示，我们使用细节头生成细节图，引导浅层对空间信息进行编码。细节头包括一个 3 × 3 Conv-BN-ReLU 算子，然后进行 1 × 1 卷积，得到输出细节图。实验证明，细节头能有效增强特征表示。需要注意的是，该分支在推理阶段会被丢弃。因此，这种侧信息可以轻松提高分割任务的准确性，而无需在推理中付出任何代价。</p><h2 id="4-experimental-results"><a class="markdownIt-Anchor" href="#4-experimental-results"></a> 4. Experimental Results</h2><p>我们在三个数据集上实施了我们的方法：我们分别在 ImageNet [6]、Cityscapes [5] 和 CamVid [2] 三个数据集上实施了我们的方法，以评估我们提出的骨干网和分割网的有效性。我们首先介绍了数据集和实现细节。然后，我们报告了与其他算法相比，我们在不同基准上的准确性和速度结果。最后，我们将讨论我们提出的方法中各组成部分的影响。</p><h3 id="41-benchmarks-and-evaluation-metrics"><a class="markdownIt-Anchor" href="#41-benchmarks-and-evaluation-metrics"></a> 4.1. Benchmarks and Evaluation Metrics</h3><p>ImageNet ILSVRC [6] 2012 是最流行的图像分类数据集。该数据集包含 120 万张用于训练的图像和 5 万张用于验证的图像，共有 1000 个类别。该数据集还被广泛用于训练预训练模型，以完成物体检测或语义分割等下游任务。</p><p>城市景观 城市景观 [5] 是一个语义场景解析数据集，从汽车的角度进行解析。该数据集包含 5000 张精细标注的图像，分为训练集、验证集和测试集，分别有 2975 张、500 张和 1525 张图像。注释包括 30 个类别，其中 19 个用于语义分割任务。这些图像的分辨率高达 2,048 × 1,024，因此对实时语义分割具有挑战性。为了进行公平比较，我们在实验中只使用了精细注释的图像。</p><p>CamVid. 剑桥驾驶标记视频数据库（Cambridge-driving Labeled Video Database，Camvid）[2] 是一个道路场景数据集，从汽车驾驶的角度进行采集。该数据集包含从视频序列中提取的 701 幅标注图像，其中 367 幅用于训练，101 幅用于验证，233 幅用于测试。图像的分辨率为 960 × 720，有 32 个语义类别，其中 11 个类别的子集用于分割实验。</p><p>评估指标。在分类评估中，我们按照文献[9]的方法，使用评估最高-1 准确率作为评估指标。在分割评价方面，我们采用了类与类之间的平均相交值（mean of class-wise intersection over union，mIoU）和每秒帧数（Frames Per Second，FPS）作为评价指标。</p><h3 id="42-implementation-details"><a class="markdownIt-Anchor" href="#42-implementation-details"></a> 4.2. Implementation Details</h3><p>图像分类。我们使用小批量随机梯度下降法（SGD）训练模型，批量大小为 64，动量为 0.9，权重衰减为 1e-4。我们采用了 [11] 中的三种训练方法，包括学习率预热、余弦学习率策略和标签平滑。前 5 个 epoch 采用预热策略，总 epoch 数为 300，学习率从 0.001 到 0.1。分类块前的 dropout 设置为 0.2。我们没有使用其他特殊的数据增强方法，所有方法都与 [9] 相同。</p><p>语义分割。我们使用小批量随机梯度下降算法（SGD），动量为 0.9，权重衰减为 5e-4。对于 Cityscapes 和 CamVid 数据集，批次大小分别设置为 48 和 24。作为常用配置，我们采用了 &quot;poly &quot;学习率策略，即初始学习率乘以（1 - iter max iter ）幂。功率设置为 0.9，初始学习率设置为 0.01。此外，我们对城市景观和 CamVid 数据集分别进行了 60,000 次和 10,000 次迭代训练，其中在最初的 1000 次和 200 次迭代中采用了热身策略。</p><p>数据增强包括颜色抖动、随机水平翻转、随机裁剪和随机调整大小。在训练 Cityscapes 时，比例范围为 [0.125, 1.5]，裁剪分辨率为 1024 × 512。在训练 CamVid 时，比例范围为 [0.5, 2.5]，裁剪分辨率为 960 × 720。</p><p>在所有实验中，我们都是基于 docker 上的 pytorch-1.1 进行的。我们在英伟达™（NVIDIA®）GTX 1080Ti GPU 的 CUDA 10.0、CUDNN 7.6.4 和 TensorRT 5.0.1.5 下执行所有实验，批量大小为 1，以衡量我们方法的计算能力。</p><h3 id="43-ablation-study"><a class="markdownIt-Anchor" href="#43-ablation-study"></a> 4.3. Ablation Study</h3><p>本节介绍了消融实验，以验证我们方法中每个组件的有效性。</p><p>**STDC模块的有效性。**我们调整了STDC2中STDC模块的块数，结果见图7。根据我们的公式3，随着组数的增加，FLOPs明显减少。最好的性能是在4个块中。更多的块的好处变得非常小，更深的网络对并行计算和FPS是不利的。因此，在本文中，我们将STDC1和STDC2的块数设置为4。</p><p><img src="images/image-20230708233931686.png" alt="image-20230708233931686" /></p><blockquote><p>Figure 7. 在ImageNet上使用不同块数的STDC2的比较。</p></blockquote><p>**我们骨干网的有效性。**为了验证我们为实时分割设计的骨干网的有效性，我们采用了最新的轻量级骨干网，它与STDC2相比具有相当的分类性能，与我们的解码器一起制定了一个语义分割网络。如表3所示，与其他轻量级骨干网相比，我们的STDC2产生了最佳的速度精度权衡。</p><p><img src="images/image-20230708234146988.png" alt="image-20230708234146988" /></p><blockquote><p>表3. 轻量级骨干网在Cityscapes值集上的比较。所有体验者利用相同的解码器和相同的实验设置。</p></blockquote><p>细节指导的有效性。我们首先将第三阶段的特征图的热图可视化，如图6所示。与没有细节指导的阶段3相比，有细节指导的阶段3的特征编码了更多的空间信息。因此，对小物体和边界的最终预测更加精确。我们在表4中显示了一些定量的结果。为了验证我们的细节引导的有效性，我们展示了STDC2-Seg在Cityscapes val数据集上的不同细节引导策略的比较。为了进一步证明细节引导的能力，我们首先使用BiSeNetV1[28]中的空间路径来编码空间信息，然后使用空间路径产生的特征来替代阶段3D的特征。使用空间路径的实验设置与其他实验完全相同。如表4所示，STDC2-Seg中的Detail Guidance可以在不影响推理速度的情况下提高mIoU。添加空间路径来编码空间信息也可以提高准确性，但同时也增加了计算成本。同时，我们发现我们的细节聚合模块可以编码丰富的细节信息，并在聚合1x、2x、4x细节特征时产生最高的mIoU。</p><p><img src="images/image-20230708234250432.png" alt="image-20230708234250432" /></p><blockquote><p>图6. 我们对城市景观的详细指导值集的视觉比较。带有下标D的一列表示使用细节指导的结果。第一行（a）显示的是输入图像。(b)和©显示的是没有和有细节指导的第三阶段的热图。(d)和(e)显示了没有和有详细指导的预测结果。(f)是输入图像的真实情况。</p></blockquote><p><img src="images/image-20230708234314486.png" alt="image-20230708234314486" /></p><blockquote><p>表4. 城市景观值集的细节信息比较。SP指的是带有空间路径的方法，DG指的是细节指导，其中1x，2x，4x指的是细节聚合模块中不同的下采样步长的细节特征。</p></blockquote><h3 id="44-compare-with-state-of-the-arts"><a class="markdownIt-Anchor" href="#44-compare-with-state-of-the-arts"></a> 4.4. Compare with State-of-the-arts</h3><p>在本部分中，我们将在 ImageNet、Cityscapes 和 CamVid 这三个基准上比较我们的方法和其他现有的先进方法。</p><p>在 ImageNet 上的结果。如表 5 所示，与其他轻量级骨干网相比，我们的 STDC 网络实现了更高的速度和精度。与用于实时分割的轻量级骨干网络（如 DF1Net）相比，在 ImageNet 验证集上，我们的 STDC1 网络的 top-1 分类准确率比基线高 4.1%。与流行的轻量级网络（如 EfficientNet-B0）相比，STDC2 网络的 FPS 比基线网络高 83.7%，分类结果也很有竞争力。</p><p>城市景观结果。如表 6 所示，我们展示了我们提出的方法在 Cityscapes 验证集和测试集上的分割准确率和推理速度。按照之前的方法[27, 22]，我们使用训练集和验证集来训练模型，然后再提交到 Cityscapes 在线服务器。在测试阶段，我们首先将图像调整为固定大小的 512 × 1024 或 768 × 1536 进行推理，然后将结果向上采样到 1024 × 2048。总体而言，在所有方法中，我们的方法在速度和准确性之间取得了最佳平衡。我们在方法名称后分别使用 50 和 75 表示输入尺寸 512 × 1024 和 768 × 1536。例如，使用 STDC1 主干网和 512 × 1024 输入大小，我们将方法命名为 STDC1-Seg50。如表 6 所示，我们的 STDC1-Seg50 实现了明显快于基线的速度，即 250.4 FPS，并且在测试集上仍有 71.9% 的 mIoU，比亚军快 45.2% 以上。我们的 STDC2-Seg50 采用 512 × 1024 输入尺寸，以 188.6 FPS 实现了 73.4% 的 mIOU，在性能和速度之间达到了最先进的平衡。对于 768 × 1536 的输入尺寸，我们的 STDC2-Seg75 在验证集和测试集上分别以 77.0% 和 76.8% 的 mIOU 和 97.0 FPS 的成绩获得最佳。</p><p>CamVid 上的结果 我们还在 CamVid 数据集上评估了我们的方法。表 7 显示了与其他方法的比较结果。在输入尺寸为 720 × 960 的情况下，STDC1-Seg 的 mIoU 为 73.0%，FPS 为 197.6，在性能和速度之间达到了最先进的平衡。这进一步证明了我们方法的卓越能力。</p><h2 id="5-conclusions"><a class="markdownIt-Anchor" href="#5-conclusions"></a> 5. Conclusions</h2><p>在本文中，我们重新审视了经典的分割架构 BiSeNet [28, 27]，对其结构进行了优化。一般来说，BiSeNet 的分类骨干和额外空间路径极大地阻碍了推理效率。因此，我们提出了一种新颖的短期密集串联模块，以提取具有可扩展感受野和多尺度信息的深度特征。以 STDC 网络为骨干，我们的细节引导 STDC-Seg 在实时语义分割中实现了最先进的速度-精度权衡。广泛的实验和可视化结果表明了我们提出的 STDC-Seg 网络的有效性。未来，我们将从以下几个方面扩展我们的方法：(i) 在更多任务中验证骨干网络，例如对象检测。(ii) 我们将深入探讨在语义分割任务中如何利用空间边界。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SegFormer</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SegFormer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SegFormer/</url>
      
        <content type="html"><![CDATA[<h1 id="segformer"><a class="markdownIt-Anchor" href="#segformer"></a> SegFormer</h1><blockquote><p><a href="zotero://open-pdf/library/items/VVUV6RPD">文章链接</a></p></blockquote><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>我们提出了SegFormer，这是一个简单、高效而强大的语义分割框架，它将Transformer与轻量级多层感知器（MLP）解码器统一起来。SegFormer有两个吸引人的特点。1）SegFormer包括一个新颖的分层结构的Transformer编码器，输出多尺度特征。它不需要位置编码，从而避免了位置编码的插值，当测试分辨率与训练不同时，插值会导致性能下降。2) SegFormer避免了复杂的解码器。所提出的MLP解码器聚合了来自不同层的信息，从而结合了局部注意和全局注意，呈现出强大的表征。我们表明，这种简单和轻量级的设计是在Transformer上进行高效分割的关键。我们扩大了我们的方法，得到了从SegFormer-B0到SegFormer-B5的一系列模型，达到了比以前的同类模型明显更好的性能和效率。例如，SegFormer-B4在ADE20K上实现了50.3%的mIoU，参数为64M，比之前的最佳方法小5倍，好2.2%。我们最好的模型，SegFormer-B5，在Cityscapes验证集上实现了84.0%的mIoU，并在Cityscapes-C上显示了出色的零点稳定性。</p><h2 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1 介绍</h2><p>语义分割是计算机视觉中的一项基本任务，可以实现许多下游应用。它与图像分类有关，因为它产生了每个像素的类别预测，而不是图像级别的预测。这一关系在一项开创性的工作中被指出并进行了系统的研究[1]，作者将全卷积网络（FCN）用于语义分割的任务。从那时起，FCN激发了许多后续工作，并成为密集预测的一个主要设计选择。</p><p>由于分类和语义分割之间有很强的关系，许多先进的语义分割框架是ImageNet上流行的图像分类架构的变体。因此，设计骨干架构仍然是语义分割的一个活跃领域。事实上，从使用VGG的早期方法[1, 2]开始，到具有明显更深、更强大的骨干的最新方法[3]，骨干的演变极大地推动了语义分割的性能边界。除了骨干架构，另一条工作路线是将语义分割作为一个结构化的预测问题，并专注于设计模块和运算符，这些模块和运算符可以有效地捕捉上下文信息。这个领域的一个代表性例子是扩张卷积[4，5]，它通过用孔 &quot;膨胀 &quot;内核来增加感受野。</p><p>见证了自然语言处理（NLP）的巨大成功，最近出现了将Transformer引入视觉任务的兴趣高潮。Dosovitskiy等人[6]提出了用于图像分类的视觉变换器（ViT）。遵循NLP中的Transformer设计，作者将一幅图像分割成多个线性嵌入的patches，并将它们送入一个带有位置嵌入（PE）的标准Transformer中，从而在ImageNet上取得了令人印象深刻的表现。在语义分割方面，Zheng等人[7]提出了SETR来证明在这个任务中使用Transformer的可行性。</p><p>SETR采用ViT作为主干，并结合了几个CNN解码器来扩大特征分辨率。尽管性能良好，但ViT也有一些限制。1）ViT输出单尺度的低分辨率特征，而不是多尺度的。2）它在大图像上有很高的计算成本。为了解决这些局限性，Wang等人[8]提出了金字塔视觉变换器（PVT），这是ViT的自然扩展，采用金字塔结构进行密集预测。PVT在物体检测和语义分割上比ResNet对应的方法有相当大的改进。然而，连同其他新兴的方法，如Swin Transformer[9]和Twins[10]，这些方法主要考虑Transformer编码器的设计，忽略了解码器对进一步改进的贡献。</p><p>本文介绍了SegFormer，这是一个用于语义分割的前沿Transformer框架，共同考虑了效率、准确性和鲁棒性。与以前的方法相比，我们的框架同时重新设计了编码器和解码器。我们方法的主要创新之处在于：</p><ul><li><p>一种新型的无位置编码和分层的Transformer编码器。</p></li><li><p>一个轻量级的全MLP解码器设计，在没有复杂和计算要求高的模块的情况下，产生了强大的表示。</p></li><li><p>如图1所示，SegFormer在三个公开的语义分割数据集中，在效率、准确性和稳健性方面都达到了新的水平。</p></li></ul><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221127131039434.png" alt="image-20221127131039434" /></p><blockquote><p>图1: ADE20K上的性能与模型效率。所有的结果都是在单一模型和单一规模推理下报告的。SegFormer实现了新的最先进的51.0%的mIoU，同时比以前的方法明显更有效率。</p></blockquote><p>首先，提议的编码器在对分辨率与训练分辨率不同的图像进行推理时，避免了内插位置编码。因此，我们的编码器可以很容易地适应任意的测试分辨率而不影响其性能。此外，分层部分使编码器能够生成高分辨率的精细特征和低分辨率的粗略特征，这与ViT相反，后者只能生成固定分辨率的单一低分辨率特征图。其次，我们提出了一个轻量级的MLP解码器，其关键思想是利用Transformer引起的特征，即低层的注意力倾向于留在本地，而最高层的注意力是高度非本地的。通过聚合来自不同层的信息，MLP解码器结合了局部和全局的注意力。因此，我们得到了一个简单明了的解码器，它能演绎出强大的表征。</p><p>我们在三个公开可用的数据集上证明了SegFormer在模型大小、运行时间和准确性方面的优势。ADE20K、Cityscapes和COCO-Stuff。在Citysapces上，我们的轻量级模型SegFormer-B0，在没有TensorRT等加速实现的情况下，在48FPS下产生了71.9%的mIoU，**与ICNet[11]相比，在延迟和性能上分别有60%和4.2%的相对改善。**我们最大的模型，SegFormer-B5，产生了84.0%的mIoU，这代表了相对1.8%的mIoU改进，同时比SETR[7]快5倍。在ADE20K上，这个模型创造了一个新的最先进的51.8% mIoU，同时比SETR小4倍。此外，我们的方法对常见的损坏和扰动的鲁棒性明显高于现有的方法，因此适用于安全关键的应用。代码将被公开提供。</p><h2 id="2-相关工作"><a class="markdownIt-Anchor" href="#2-相关工作"></a> 2 相关工作</h2><h4 id="语义分割"><a class="markdownIt-Anchor" href="#语义分割"></a> 语义分割</h4><p>语义分割可以被看作是图像分类从图像层面到像素层面的延伸。在深度学习时代[12-16]，FCN[1]是语义分割的基础工作，它是一个完全卷积网络，以端到端的方式进行像素到像素的分类。之后，研究者们专注于从不同方面改进FCN，如：扩大感受野[17-19, 5, 2, 4, 20]；完善上下文信息[21-29]；引入边界信息[30-37]；设计各种注意模块[38-46]；或使用AutoML技术[47-51]。这些方法大大改善了语义分割的性能，但代价是引入了许多经验模块，使产生的框架在计算上要求很高，而且很复杂。最近的方法已经证明了基于Transformer的架构对于语义分割的有效性[7, 46]。然而，这些方法在计算上仍然要求很高。</p><h4 id="transformer-backbones"><a class="markdownIt-Anchor" href="#transformer-backbones"></a> Transformer backbones.</h4><p>ViT[6]是第一个证明纯Transformer可以在图像分类中取得最先进性能的工作。ViT将每张图像视为一个标记序列，然后将其送入多个Transformer层来进行分类。随后，DeiT[52]进一步探索了一种数据高效的训练策略和ViT的提炼方法。最近的方法如T2T ViT[53]、CPVT[54]、TNT[55]、CrossViT[56]和LocalViT[57]对ViT引入了量身定做的改变，以进一步提高图像分类性能。</p><p>在分类之外，PVT[8]是第一个在Transformer中引入金字塔结构的工作，证明了纯Transformer骨干与CNN对应的密集预测任务相比的潜力。之后，Swin[9]、CvT[58]、CoaT[59]、LeViT[60]和Twins[10]等方法增强了特征的局部连续性，去除固定大小的位置嵌入，提高了Transformer在密集预测任务中的性能。</p><h4 id="transformers-for-specific-tasks"><a class="markdownIt-Anchor" href="#transformers-for-specific-tasks"></a> Transformers for specific tasks.</h4><p>DETR[52]是第一个使用Transformer构建无非最大抑制（NMS）的端到端物体检测框架的工作。其他工作也在各种任务中使用Transformer，如跟踪[61, 62]、超分辨率[63]、ReID[64]、着色[65]、检索[66]和多模式学习[67, 68]。对于语义分割，SETR[7]采用ViT[6]作为骨干来提取特征，取得了令人印象深刻的性能。然而，这些基于Transformer的方法效率很低，因此，很难部署在实时应用中。</p><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> 3 Method</h2><p>本节介绍了SegFormer，我们高效、稳健、强大的分割框架，没有手工制作和计算要求高的模块。如图2所示，SegFormer由两个主要模块组成：</p><p>（1）一个分层的Transformer编码器，生成高分辨率的粗特征和低分辨率的细特征；</p><p>（2）一个轻量级的All-MLP解码器，融合这些多层次的特征，产生最终的语义分割掩码。</p><p>与使用16×16大小的patch的ViT相反，使用较小的patch有利于密集的预测任务。然后将这些patches作为分层Transformer编码器的输入，以获得原始图像分辨率的{1/4, 1/8, 1/16, 1/32}的多层次特征。然后，我们将这些多级特征传递给All-MLP解码器，以预测<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>4</mn></mfrac><mo>×</mo><msub><mi>N</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\frac{H}{4}×\frac{W}{4}×N_{cls}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分辨率下的分割掩码，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{cls}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是类别的数量。在本节的其余部分，我们详细介绍了提出的编码器和解码器设计，并总结了我们的方法和SETR之间的主要区别。</p><p><img src="images/image-20221127195816201.png" alt="image-20221127195816201" /></p><blockquote><p>图2：拟议的SegFormer框架由两个主要模块组成。一个分层的Transformer编码器来提取粗略和精细的特征；一个轻量级的All-MLP解码器来直接融合这些多层次的特征并预测语义分割掩码。&quot;FFN &quot;表示前馈网络。</p></blockquote><h3 id="31-hierarchical-transformer-encoder"><a class="markdownIt-Anchor" href="#31-hierarchical-transformer-encoder"></a> 3.1 Hierarchical Transformer Encoder</h3><p>我们设计了一系列混合Transformer编码器（MiT），MiT-B0到MiT-B5，结构相同但尺寸不同。MiT-B0是我们的轻型模型，用于快速推理，而MiT-B5是最大的模型，用于最佳性能。我们对MiT的设计部分受到ViT的启发，但为语义分割进行了定制和优化。</p><h4 id="层次化特征表示"><a class="markdownIt-Anchor" href="#层次化特征表示"></a> 层次化特征表示。</h4><p>不像ViT只能生成单一分辨率的特征图，这个模块的目标是，给定一个输入图像，生成类似CNN的多层次特征。这些特征提供了高分辨率的粗略特征和低分辨率的细粒度特征，通常能提高语义分割的性能。更确切地说，给定一个分辨率为H×W×3的输入图像，我们进行patch合并，得到一个分辨率为H 2i+1×W 2i+1×Ci的层次特征图Fi，其中i∈{1，2，3，4}，Ci+1比Ci大。</p><h4 id="overlapped-patch-merging"><a class="markdownIt-Anchor" href="#overlapped-patch-merging"></a> Overlapped Patch Merging.</h4><p>给定一个图像patch，ViT中使用的patch合并过程将一个N×N×3的patch统一为一个1×1×C的向量。这可以很容易地扩展到将一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn><mo>×</mo><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">2×2×C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的特征路径统一为一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><msub><mi>C</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1×1×C_i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的向量，以获得分层特征图。利用这一点，我们可以将我们的分层特征从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mfrac><mi>H</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>4</mn></mfrac><mo>×</mo><msub><mi>C</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_1(\frac{H}{4}\times \frac{W}{4}\times C_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>缩减到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mi>H</mi><mn>8</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>8</mn></mfrac><mo>×</mo><msub><mi>C</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_2(\frac{H}{8}\times \frac{W}{8}\times C_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，然后对分层的任何其他特征图进行迭代。这个过程最初被设计为结合非重叠的图像或特征patches。因此，它未能保留这些patches周围的局部连续性。相反，我们使用了一个重叠的patch合并过程。为此，我们定义了K、S和P，其中K是patch大小，S是两个相邻patch之间的间距，P是填充大小。在我们的实验中，我们设定K=7，S=4，P=3，以及K=3，S=2，P=1来进行重叠patch合并，产生与非重叠过程相同大小的特征。</p><h4 id="efficient-self-attention"><a class="markdownIt-Anchor" href="#efficient-self-attention"></a> Efficient Self-Attention.</h4><p>编码器的主要计算瓶颈是自注意层。在原来的多头自注意力过程中，每个头Q、K、V都有相同的尺寸N×C，其中N=H×W是序列的长度，自注意力估计为。</p><p><img src="images/image-20221127131504191.png" alt="image-20221127131504191" /></p><p>这个过程的计算复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，这对大图像分辨率来说是令人望而却步的。相反，我们使用[8]中介绍的序列减少过程。这个过程使用一个减少率R来减少序列的长度，如下所示。</p><p><img src="images/image-20221127131512402.png" alt="image-20221127131512402" /></p><p>其中，K是要减少的序列，Reshape(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>N</mi><mi>R</mi></mfrac><mo separator="true">,</mo><mi>C</mi><mo separator="true">⋅</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">\frac{N}{R} , C · R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>)(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>)是指将K重塑为具有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>N</mi><mi>R</mi></mfrac><mo>×</mo><mi>C</mi><mo separator="true">⋅</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">\frac{N}{R}\times C · R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>形状的序列，Linear<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(C_{in}, C_{out})(·)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span>是指一个线性层将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>维的张量作为输入，生成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{out}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>维的张量作为输出。因此，新的K具有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>N</mi><mi>R</mi></mfrac><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">\frac{N}{R}\times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的维度。因此，自我注意机制的复杂性从O（N^2）减少到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mfrac><msup><mi>N</mi><mn>2</mn></msup><mi>R</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\frac{N^2}{R})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.36292em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>。在我们的实验中，从阶段1到阶段4，我们将R设置为[64, 16, 4, 1]。</p><h4 id="mix-ffn"><a class="markdownIt-Anchor" href="#mix-ffn"></a> Mix-FFN.</h4><p>ViT使用位置编码（PE）来引入位置信息。然而，PE的分辨率是固定的。因此，当测试分辨率与训练分辨率不同时，需要对位置编码进行内插，这往往导致精度下降。为了缓解这个问题，CPVT[54]使用3×3 Conv与PE一起实现了一个数据驱动的PE。我们认为，位置编码对于语义分割实际上是没有必要的。相反，我们引入了Mix-FFN，它考虑了零填充对泄露位置信息的影响[69]，直接在前馈网络（FFN）中使用3×3 Conv。Mix-FFN可以被表述为。<img src="images/image-20221127131547577.png" alt="image-20221127131547577" /></p><p>其中Xin是来自自我注意模块的特征。Mix-FFN将一个3×3的卷积和一个MLP混合到每个FFN中。在我们的实验中，我们将表明3×3卷积足以为Transformers提供位置信息。特别是，我们使用深度卷积来减少参数的数量并提高效率。</p><h3 id="32-lightweight-all-mlp-decoder"><a class="markdownIt-Anchor" href="#32-lightweight-all-mlp-decoder"></a> 3.2 Lightweight All-MLP Decoder</h3><p>SegFormer包含了一个仅由MLP层组成的轻量级解码器，这就避免了其他方法中通常使用的手工制作和计算要求的组件。实现这样一个简单的解码器的关键是，我们的分层Transformer编码器比传统的CNN编码器具有更大的有效接收域（ERF）。</p><p>拟议的All-MLP解码器由四个主要步骤组成。首先，来自MiT编码器的多层次特征Fi经过MLP层来统一通道维度。然后，在第二步中，特征被上采样为1/4并串联在一起。第三，采用一个MLP层来融合串联的特征F。最后，另一个MLP层采用融合的特征来预测具有H 4×W 4×Ncls分辨率的分割掩码M，其中Ncls是分类的数量。这使我们可以将解码器表述为：</p><p><img src="images/image-20221127131624816.png" alt="image-20221127131624816" /></p><p>其中，M指的是预测的掩码，Linear(Cin, Cout)(-)指的是线性层，Cin和Cout分别是输入和输出矢量尺寸。</p><h4 id="effective-receptive-field-analysis"><a class="markdownIt-Anchor" href="#effective-receptive-field-analysis"></a> Effective Receptive Field Analysis.</h4><p>**对于语义分割来说，保持大的感受野以包括背景信息一直是一个核心问题[5, 19, 20]。**在这里，我们使用有效感受野（ERF）[70]作为工具箱来可视化和解释为什么我们的MLP解码器设计对Transformer如此有效。在图3中，我们将DeepLabv3+和SegFormer的四个编码器阶段和解码器头的ERF可视化。我们可以做出以下观察。</p><ul><li>DeepLabv3+的ERF即使在阶段4，即最深的阶段也是相对较小的。</li><li>SegFormer的编码器在较低的阶段自然产生类似于卷积的局部注意，同时能够输出高度非局部的注意，有效地捕捉阶段4的上下文。</li><li>如图3中放大的patches所示，MLP头的ERF（蓝框）与Stage-4（红框）不同，除了非局部注意外，局部注意也明显加强。</li></ul><p><img src="images/image-20221127203645702.png" alt="image-20221127203645702" /></p><blockquote><p>图3：城市景观的有效接收场（ERF）（100张图片的平均值）。最上面一行。Deeplabv3+。底排：Deeplabv3+。SegFormer。两个架构的四个阶段和解码器头的ERF都是可视化的。放大后观看效果最佳。</p></blockquote><p><strong>CNN中有限的接受域要求人们求助于上下文模块，如ASPP[18]，这些模块扩大了接受域，但不可避免地变得沉重。我们的解码器设计得益于Transformers中的非局部注意，导致了更大的接收区域而不复杂。然而，同样的解码器设计在CNN主干上并不能很好地工作，因为整体的感受野被阶段-4的有限感受野所限制，我们将在后面的表1d中验证这一点。</strong></p><p>更重要的是，我们的解码器设计基本上利用了Transformer诱导的特征，即同时产生高度局部和非局部的注意。通过统一它们，我们的MLP解码器通过增加少量的参数来渲染互补的和强大的表征。这是激励我们设计的另一个关键原因。正如表1d所验证的那样，仅仅从阶段4中获取非局部注意力并不足以产生好的结果。</p><h3 id="33-relationship-to-setr"><a class="markdownIt-Anchor" href="#33-relationship-to-setr"></a> 3.3 Relationship to SETR.</h3><p>与SETR[7]相比，SegFormer包含多个更高效和强大的设计。</p><ul><li>我们只使用ImageNet-1K进行预训练。SETR中的ViT是在较大的ImageNet-22K上预训练的。</li><li>SegFormer的编码器有一个分层结构，它比ViT小，可以同时捕捉高分辨率的粗略特征和低分辨率的精细特征。相比之下，SETR的ViT编码器只能生成单一的低分辨率特征图。</li><li>我们在编码器中去掉了位置嵌入，而SETR使用固定形状的位置嵌入，当推理时的分辨率与训练时的不同时，会降低准确性。</li><li>我们的MLP解码器比SETR中的解码器更紧凑，计算要求更低。这导致了可忽略不计的计算开销。相比之下，SETR需要有多个3×3卷积的重型解码器。</li></ul><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 Experiments</h2><h3 id="41-experimental-settings"><a class="markdownIt-Anchor" href="#41-experimental-settings"></a> 4.1 Experimental Settings</h3><h4 id="datasets"><a class="markdownIt-Anchor" href="#datasets"></a> Datasets:</h4><p>我们使用了三个公开可用的数据集。Cityscapes [71], ADE20K [72] 和COCOStuff [73]。ADE20K是一个涵盖150个细粒度语义概念的场景解析数据集，由20210张图像组成。Cityscapes是一个用于语义分割的驱动数据集，包括5000张精细注释的高分辨率图像，有19个类别。COCO-Stuff涵盖172个标签，由16400张图像组成。118k用于训练，5k用于验证，20k用于测试开发，20k用于测试挑战。</p><h4 id="implementation-details"><a class="markdownIt-Anchor" href="#implementation-details"></a> Implementation details:</h4><p>我们使用mmsegmentation1代码库，在有8个Tesla V100的服务器上进行训练。我们在Imagenet-1K数据集上对编码器进行了预训练，并随机初始化了解码器。在训练过程中，我们通过比例为0.5-2.0的随机调整大小、随机水平翻转和随机裁剪，将ADE20K、Cityscapes和COCO-Stuff的数据分别增加到512×512、1024×1024和512×512。按照[9]，我们将ADE20K上最大的模型B5的裁剪尺寸设置为640×640。我们使用AdamW优化器在ADE20K和Cityscapes上对模型进行了16万次迭代，在COCO-Stuff上进行了8万次迭代。特殊情况下，在消融研究中，我们对模型进行了40K的迭代训练。我们对ADE20K和COCO-Stuff使用了16个批次，而对Cityscapes使用了8个批次。学习率被设置为0.00006的初始值，然后使用默认的系数为1.0的 &quot;聚 &quot;LR计划。为了简单起见，我们没有采用广泛使用的技巧，如OHEM、辅助损失或类平衡损失。在评估过程中，我们将图像的短边重新调整为训练剪裁尺寸，并保持ADE20K和COCO-Stuff的长宽比。对于Cityscapes，我们使用滑动窗口测试，通过裁剪1024×1024的窗口进行推理。我们使用平均相交于联合（mIoU）来报告语义分割的性能。</p><h2 id="42-ablation-studies"><a class="markdownIt-Anchor" href="#42-ablation-studies"></a> 4.2 Ablation Studies</h2><h4 id="influence-of-the-size-of-model"><a class="markdownIt-Anchor" href="#influence-of-the-size-of-model"></a> Influence of the size of model.</h4><p>我们首先分析了增加编码器的尺寸对性能和模型效率的影响。图1显示了ADE20K的性能与模型效率作为编码器尺寸的函数，并且，表1a总结了三个数据集的结果。这里首先要观察的是与编码器相比，解码器的大小。如图所示，对于轻型模型，解码器只有0.4M的参数。对于MiT-B5编码器，解码器只占模型中总参数数的4%。就性能而言，我们可以观察到，总的来说，增加编码器的大小在所有的数据集上都会产生一致的改进。我们的轻量级模型SegFormer-B0在保持有竞争力的性能的同时，也是紧凑和高效的，这表明我们的方法对于实时应用是非常方便的。另一方面，我们的SegFormer-B5，最大的模型，在所有三个数据集上都取得了最先进的结果，显示了我们Transformer编码器的潜力。</p><p><img src="images/image-20221127204031661.png" alt="image-20221127204031661" /></p><h4 id="influence-of-c-the-mlp-decoder-channel-dimension"><a class="markdownIt-Anchor" href="#influence-of-c-the-mlp-decoder-channel-dimension"></a> Influence of C, the MLP decoder channel dimension.</h4><p>我们现在分析MLP解码器中通道维度C的影响，见第3.2节。在表1b中，我们显示了性能、flops和参数与该维度的关系。我们可以看到，设置C=256提供了一个非常有竞争力的性能和计算成本。性能随着C的增加而增加；然而，它导致了更大和更低效的模型。有趣的是，这种性能在通道尺寸大于768的情况下趋于平稳。鉴于这些结果，我们为我们的实时模型SegFormer-B0、B1选择了C=256，其余的选择C=768。</p><h4 id="mix-ffn-vs-positional-encoder-pe"><a class="markdownIt-Anchor" href="#mix-ffn-vs-positional-encoder-pe"></a> Mix-FFN vs. Positional Encoder (PE).</h4><p>在这个实验中，我们分析了去除Transformer编码器中的位置编码，而使用提议的Mix-FFN的效果。为此，我们用位置编码（PE）和提议的混合FFN训练Transformer编码器，并对两种不同图像分辨率的城市景观进行推理。768×768使用滑动窗口，1024×2048使用整个图像。</p><p>表1c显示了这个实验的结果。如图所示，在给定的分辨率下，我们使用Mix-FFN的方法明显优于使用位置编码。此外，我们的方法对测试分辨率的差异不太敏感：当使用较低分辨率的位置编码时，准确率下降了3.3%。相比之下，当我们使用提议的Mix-FFN时，性能下降仅为0.7%。从这些结果中，我们可以得出结论，使用拟议的Mix-FFN比使用位置编码的编码器产生更好、更稳健的编码器。</p><h4 id="effective-receptive-field-evaluation"><a class="markdownIt-Anchor" href="#effective-receptive-field-evaluation"></a> Effective receptive field evaluation.</h4><p>在第3.2节中，我们认为我们的MLP解码器得益于Transformer与其他CNN模型相比具有更大的有效接收场。为了量化这种效果，在这个实验中，我们比较了我们的MLP-解码器与基于CNN的编码器（如ResNet或ResNeXt）一起使用时的性能。如表1d所示，将我们的MLP-解码器与基于CNN的编码器结合使用，其准确度明显低于与拟议的Transformer编码器结合使用。直观地说，由于CNN的感受野比Transformer小（见第3.2节的分析），MLP-解码器不足以进行全局推理。相比之下，将我们的Transformer编码器与MLP解码器结合起来，就能获得最佳性能。此外，对于Transformer编码器来说，有必要将低层次的局部特征和高层次的非局部特征结合起来，而不是仅有高层次的特征。</p><h3 id="43-comparison-to-state-of-the-art-methods"><a class="markdownIt-Anchor" href="#43-comparison-to-state-of-the-art-methods"></a> 4.3 Comparison to state of the art methods</h3><p>We now compare our results with existing approaches on the ADE20K [72], Cityscapes [71] and COCO-Stuff [73] datasets.</p><h4 id="ade20k-and-cityscapes"><a class="markdownIt-Anchor" href="#ade20k-and-cityscapes"></a> ADE20K and Cityscapes:</h4><p>表2总结了我们的结果，包括ADE20K和Cityscapes的参数、FLOPS、延迟和精度。在表的上半部分，我们报告了实时方法，包括最先进的方法和我们使用MiT-B0轻量级编码器的结果。在下半部分，我们关注性能，并报告我们的方法和使用更强大的编码器的相关工作的结果。</p><p>如图所示，在ADE20K上，SegFormer-B0仅用3.8M的参数和8.4G的FLOPs就能产生37.4%的mIoU，在参数、flops和延迟方面优于其他所有的实时同行。例如，与DeeplabV3+（MobileNetV2）相比，SegFormer-B0为7.4FPS，速度更快，保持3.4%的mIoU。此外，SegFormer-B5超过了所有其他方法，包括之前最好的SETR，并建立了一个新的最先进的51.8%，比SETR好1.6%的mIoU，同时效率明显提高。</p><p>如表2所示，我们的结果也适用于Cityscapes。SegFormer-B0产生了15.2 FPS和76.2%的mIoU（输入图像的短边为1024），这意味着与DeeplabV3+相比有1.3%的mIoU改进和2倍的速度提升。此外，在输入图像的短边为512时，SegFormer-B0的运行速度为47.6FPS，产生71.9%的mIoU，比ICNet快17.3FPS，提高4.2%。SegFormer-B5的最佳IOU为84.0%，比所有现有的方法至少高出1.8%的mIoU，它的运行速度比SETR[7]快5倍，体积小4倍。</p><p>在Cityscapes测试集上，我们遵循常见的设置[20]，将验证图像合并到训练集上，并使用Imagenet-1K预训练和使用Mapillary Vistas[76]报告结果。如表3所示，仅使用Cityscapes精细数据和Imagenet-1K预训练，我们的方法就获得了82.2%的mIoU，超过了所有其他方法，包括使用ImageNet-22K预训练和额外的Cityscapes粗略数据的SETR。使用Mapillary预训练，我们的方法设定了一个新的最先进的结果，即83.1% mIoU。图4显示了Cityscapes的定性结果，SegFormer提供了比SETR更好的细节，比DeeplabV3+更平滑的预测。</p><h4 id="coco-stuff"><a class="markdownIt-Anchor" href="#coco-stuff"></a> COCO-Stuff.</h4><p>最后，我们在完整的COCO-Stuff数据集上评估SegFormer。为了进行比较，由于现有的方法没有在这个数据集上提供结果，我们重现了最具代表性的方法，如DeeplabV3+、OCRNet和SETR。在这种情况下，这个数据集上的flops与ADE20K的报告相同。如表4所示，SegFormer-B5仅用84.7M的参数就达到了46.7%的mIoU，比SETR好0.9%，小4倍。总之，这些结果证明了SegFormer在语义分割方面的准确性、计算成本和模型大小方面的优越性。</p><h3 id="44-robustness-to-natural-corruptions"><a class="markdownIt-Anchor" href="#44-robustness-to-natural-corruptions"></a> 4.4 Robustness to natural corruptions</h3><p>模型的鲁棒性对于许多安全关键任务（如自动驾驶）非常重要[77]。在这个实验中，我们评估了SegFormer对常见的损坏和扰动的鲁棒性。为此，我们遵循[77]并生成了Cityscapes-C，它用来自噪声、模糊、天气和数字类别的16种算法生成的损坏扩展了Cityscapes验证集。我们将我们的方法与DeeplabV3+的变体和[77]中报告的其他方法进行比较。这个实验的结果总结在表5中。</p><p>我们的方法明显优于以前的方法，在高斯噪声上产生了高达588%的相对改进，在雪天气上产生了高达295%的改进。这些结果表明SegFormer具有很强的鲁棒性，我们设想在鲁棒性很重要的安全关键型应用中受益。</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 Conclusion</h2><p>在本文中，我们提出了SegFormer，一种简单、干净而强大的语义分割方法，它包含一个无位置编码的、分层的Transformer编码器和一个轻量级的AllMLP解码器。它避免了以往方法中常见的复杂设计，导致了高效率和高性能。SegFormer不仅在常见的数据集上取得了新的成果，而且还显示了强大的零点稳定性。我们希望我们的方法可以作为语义分割的一个坚实的基线，并激励进一步的研究。一个限制是，尽管我们最小的3.7M参数模型比已知的CNN模型要小，但它是否能在只有100K内存的边缘设备的芯片中很好地工作还不清楚。我们把它留给未来的工作。</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="a-details-of-mit-series"><a class="markdownIt-Anchor" href="#a-details-of-mit-series"></a> A Details of MiT Series</h3><p>在本节中，我们列出了我们的混合Transformer（MiT）编码器的一些重要的超参数。通过改变这些参数，我们可以轻松地将我们的编码器从B0扩展到B5。</p><p>综上所述，我们的MiT的超参数列举如下。</p><ul><li>Ki：第i阶段中重叠patch嵌入的patch尺寸。</li><li>Si：第i阶段中的重叠patch嵌入的跨度。</li><li>Pi：第i阶段中重叠patch嵌入的填充尺寸；</li><li>Ci：第i阶段输出的通道编号。</li><li>Li：第i阶段的编码器层数。</li><li>Ri：第i阶段中高效自注意力的还原率。</li><li>Ni：第i阶段的高效自适应的头数。</li><li>Ei：阶段i中前馈层[78]的扩展率。</li></ul><p>表6显示了我们MiT系列的详细信息。为了便于有效讨论，我们为MiT编码器分配了B0到B5的代号，其中B0是为实时设计的最小模型，而B5是为高性能设计的最大模型。</p><h3 id="b-more-qualitative-results-on-mask-predictions"><a class="markdownIt-Anchor" href="#b-more-qualitative-results-on-mask-predictions"></a> B More Qualitative Results on Mask Predictions</h3><p>在图5中，我们在Cityscapes、ADE20K和COCO-Stuff上展示了与SETR和DeepLabV3+相比的更多定性结果。</p><p>与SETR相比，我们的SegFormer预测的掩模在物体边界附近的细节明显更细，因为我们的Transformer编码器可以捕获比SETR高得多的分辨率特征，从而保留了更详细的纹理信息。与DeepLabV3+相比，SegFormer减少了长距离的错误，这得益于Transformer编码器比ConvNet更大的有效接收域。</p><h3 id="c-more-visualization-on-effective-receptive-field"><a class="markdownIt-Anchor" href="#c-more-visualization-on-effective-receptive-field"></a> C More Visualization on Effective Receptive Field</h3><p>在图6中，我们选择了一些有代表性的图像和DeepLabV3+和SegFormer的有效感受野（ERF）。除了更大的ERF之外，SegFormer的ERF对图像的背景更加敏感。我们看到SegFormer的ERF学会了道路、汽车和建筑物的模式，而DeepLabV3+的ERF显示出相对固定的模式。结果还表明，我们的Transformer编码器比ConvNets有更强的特征提取能力。</p><h3 id="d-deeplabv3和segformer在cityscapes-c上的更多比较"><a class="markdownIt-Anchor" href="#d-deeplabv3和segformer在cityscapes-c上的更多比较"></a> D DeeplabV3+和SegFormer在Cityscapes-C上的更多比较</h3><p>在这一节中，我们详细展示了与SegFormer和DeepLabV3+相比的零照度。按照[77]，我们对4种 &quot;噪声 &quot;测试了3种严重程度，对其余12种腐败和扰动测试了5种严重程度。</p><p>如图7所示，随着严重程度的增加，DeepLabV3+显示出相当大的性能下降。相比之下，SegFormer的性能则相对稳定。此外，SegFormer在所有腐败/扰动和所有严重程度上都比DeepLabV3+有明显的优势，显示了出色的零点稳健性。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SegNeXt</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SegNeXt/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SegNeXt/</url>
      
        <content type="html"><![CDATA[<h1 id="segnext"><a class="markdownIt-Anchor" href="#segnext"></a> SegNeXt</h1><blockquote><p><a href="zotero://open-pdf/library/items/HUI65XBR">文章链接</a></p></blockquote><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>我们提出了SegNeXt，一个用于语义分割的简单卷积网络架构。由于自我注意在编码空间信息方面的效率，最近基于transformer的模型在语义分割领域占主导地位。在本文中，我们表明卷积注意是一种比transformer中的自我注意机制更有效率和效果的编码上下文信息的方式。通过重新审视成功的分割模型所拥有的特征，我们发现了导致分割模型性能提高的几个关键成分。这促使我们设计了一个新颖的卷积注意力网络，它使用廉价的卷积操作。在没有任何附加条件的情况下，我们的SegNeXt大大改善了以前最先进的方法在流行基准上的性能，包括ADE20K、Cityscapes、COCO-Stuff、Pascal VOC、Pascal Context和iSAID。值得注意的是，SegNeXt的性能优于EfficientNet-L2 w/NAS-FPN，在Pascal VOC 2012测试排行榜上只用了它的1/10的参数就达到了90.6%的mIoU。与最先进的方法相比，SegNeXt在ADE20K数据集上以相同或更少的计算量平均实现了约2.0%的mIoU改进。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128143048861.png" alt="image-20221128143048861" /></p><blockquote><p>表1 我们从成功的语义分割方法中观察到有利于提升模型性能的属性。这里，n指的是像素或token的数量。强编码器表示强骨干，如ViT[17]和VAN[24]。</p></blockquote><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>作为计算机视觉中最基本的研究课题之一，语义分割旨在为每个像素分配一个语义类别，在过去十年中引起了极大的关注。从早期基于CNN的模型，如FCN[53]和DeepLab系列[4, 6, 8]，到最近基于transformer的方法，如SETR[96]和SegFormer[80]，语义分割模型在网络结构方面经历了重大变革。</p><p>通过重新审视以前成功的语义分割工作，我们总结了不同模型所拥有的几个关键属性，如表1所示。1. 基于上述观察，</p><p><strong>我们认为一个成功的语义分割模型应该具有以下特点：</strong></p><p>(i) **强大的骨干网络作为编码器。**与之前基于CNN的模型相比，基于transformer的模型的性能提升主要来自于更强的骨干网络。</p><p>(ii) **多尺度信息交互。**与图像分类任务大多识别单一物体不同，语义分割是一个密集的预测任务，因此需要处理单一图像中不同大小的物体。</p><p>(iii) **空间注意力。**空间注意力允许模型通过对语义区域内的区域进行优先排序来进行分割。</p><p>(iv) **低计算复杂性。**在处理遥感和城市场景的高分辨率图像时，这一点尤其关键。</p><p>考虑到上述分析，在本文中，我们重新思考了卷积注意的设计，并提出了一个用于语义分割的高效而有效的编码器-解码器架构。与之前的基于transformer的模型不同，我们的方法是将解码器中的卷积作为特征细化器，倒置了transformer-卷积编码器-解码器架构。<strong>具体来说，对于我们编码器中的每个块，我们翻新了传统卷积块的设计，并利用多尺度的卷积特征，通过一个简单的元素明智的乘法来唤起空间注意力，遵循[24]。我们发现这样一种简单的建立空间注意力的方法比标准卷积和空间信息编码中的自我注意力都要有效。对于解码器，我们从不同的阶段收集多层次的特征，并使用Hamburger[21]来进一步提取全局背景。在这种情况下，我们的方法可以获得从局部到全局的多尺度背景，实现空间和通道维度的适应性，并从低级到高级的信息聚合。</strong></p><p>我们的网络被称为SegNeXt，除了解码器部分，大部分由卷积运算组成，其中包含一个基于分解的Hamburger模块[21]（Ham）用于全局信息提取。这使得我们的SegNeXt比以前严重依赖transformer的分割方法要高效得多。如图1所示，SegNeXt明显优于最近基于transformer的方法。特别是我们的SegNeXt-S在处理Cityscapes数据集中的高分辨率城市场景时，只用了大约1/6（124.6G vs. 717.1G）的计算成本和1/2的参数（13.9M vs. 27.6M）就超过了SegFormer-B2（81.3% vs. 81.0%）。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128150139749.png" alt="image-20221128150139749" /></p><blockquote><p>图1 在Cityscapes（左）和ADE20K（右）验证集上的性能-计算曲线。计算FLOPs时，Cityscapes的输入尺寸为2，048×1，024，ADE20K为512×512。圆圈的大小表示参数的数量。更大的圆圈意味着更多的参数。我们可以看到，我们的SegNeXt实现了分割性能和计算复杂性之间的最佳权衡。</p></blockquote><p>我们的贡献可以概括为以下几点：</p><ul><li>我们确定了一个好的语义分割模型应该拥有的特征，并提出了一个新颖的定制网络架构，称为SegNeXt，它通过多尺度卷积特征唤起空间注意。</li><li>我们表明，一个具有简单而廉价的卷积的编码器仍然可以比视觉transformer表现得更好，特别是在处理物体细节时，而它所需要的计算成本要低得多。</li><li>我们的方法在各种分割基准上，包括ADE20K、Cityscapes、COCO-Stuff、Pascal VOC、Pascal Context和iSAID，将最先进的语义分割方法的性能提高了很多。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 Related Work</h2><h3 id="21-semantic-segmentation"><a class="markdownIt-Anchor" href="#21-semantic-segmentation"></a> 2.1 Semantic Segmentation</h3><p>语义分割是一项基本的计算机视觉任务。自FCN[53]提出以来，卷积神经网络（CNN）[1, 64, 86, 94, 19, 87, 71, 20, 45]取得了巨大的成功，成为语义分割的流行架构。最近，基于transformer的方法[96, 80, 88, 65, 63, 44, 11, 10]已经显示出巨大的潜力，并超过了基于CNN的方法。</p><p>在深度学习时代，分割模型的结构可以大致分为两部分：编码器和解码器。对于编码器，研究人员通常采用流行的分类网络（如ResNet[27]、ResNeXt[81]和DenseNet[32]），而不是定制的架构。然而，语义分割是一种密集预测任务，它与图像分类不同。分类的改进可能不会出现在具有挑战性的分割任务中[28]。因此，出现了一些定制的编码器，包括Res2Net[20]、HRNet[71]、SETR[96]、SegFormer[80]、HRFormer[88]、MPViT[38]、DPT[63]，等等。对于解码器来说，它经常与编码器合作使用，以达到更好的效果。针对不同的目标，有不同类型的解码器，<strong>包括实现多尺度感受野[94, 7, 78]，收集多尺度语义[64, 80, 8]，扩大感受野[5, 4, 62]，加强边缘特征[95, 2, 16, 42, 90]，以及捕捉全局背景[19, 34, 89, 40, 23, 26, 91]。</strong></p><p>在本文中，我们总结了那些为语义分割设计的成功模型的特点，并提出了一个基于CNN的模型，命名为SegNeXt。与我们的论文最相关的工作是[62]，它将k×k卷积分解为一对k×1和1×k卷积。虽然这项工作表明大卷积核在语义分割中很重要，但它忽略了多尺度感受野的重要性，也没有考虑如何利用这些由大卷积核提取的多尺度特征，以注意力的形式进行分割。</p><h3 id="22-multi-scale-networks"><a class="markdownIt-Anchor" href="#22-multi-scale-networks"></a> 2.2 Multi-Scale Networks</h3><p>设计多尺度网络是计算机视觉中的一个流行方向。对于分割模型，多尺度块出现在编码器[71, 20, 67]和解码器[94, 86, 6]两部分。GoogleNet[67]是与我们的方法最相关的多尺度架构之一，它使用多分支结构来实现多尺度特征提取。另一项与我们方法相关的工作是HRNet[71]。在深层阶段，HRNet也保留了高分辨率的特征，与低分辨率的特征进行聚合，从而实现多尺度的特征提取。</p><p>与之前的方法不同，SegNeXt除了在编码器中捕获多尺度特征外，还引入了一个有效的注意力机制，并采用了更便宜和更大的内核卷积。这些使我们的模型能够达到比上述分割方法更高的性能。</p><h3 id="23-attention-mechanisms"><a class="markdownIt-Anchor" href="#23-attention-mechanisms"></a> 2.3 Attention Mechanisms</h3><p><strong>注意机制是一种自适应的选择过程，其目的是使网络集中于重要的部分。一般来说，它在语义分割中可以分为两类[25]，包括通道注意和空间注意。不同类型的注意起着不同的作用。例如，空间注意主要关心重要的空间区域[17, 14, 57, 51, 22]。不同的是，使用通道注意的目的是使网络有选择地注意那些重要的物体，这在以前的工作中已经被证明是很重要的[30, 9, 72]。说到最近流行的视觉transformer[17, 51, 82, 74, 73, 50, 80, 33, 49, 88]，它们通常忽略了通道维度的适应性。</strong></p><p><strong>视觉注意力网络（VAN）[24]是与SegNeXt最相关的工作</strong>，它也提出利用大核注意力（LKA）机制来建立通道和空间注意力。虽然VAN在图像分类中取得了很好的表现，但它在网络设计过程中忽略了多尺度特征聚合的作用，而这对于类似分割的任务是至关重要的。</p><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> 3 Method</h2><p>在本节中，我们将详细描述所提出的SegNeXt的结构。基本上，我们采用了一个编码器-解码器的架构，这与以前的大多数工作一样，简单易行。</p><h3 id="31-convolutional-encoder"><a class="markdownIt-Anchor" href="#31-convolutional-encoder"></a> 3.1 Convolutional Encoder</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128151220385.png" alt="image-20221128151220385" /></p><blockquote><p>图2 作者对提出的MSCA和MSCAN的说明。这里，d，k1×k2意味着使用内核大小为k1×k2的深度卷积（d）。我们使用卷积提取多尺度特征，然后利用它们作为注意力权重来重新权衡MSCA的输入。</p></blockquote><p>我们的编码器采用了金字塔结构，这与之前的大多数工作[80, 5, 19]相同。对于我们编码器中的构件，我们采用了与ViT[17, 80]类似的结构，但不同的是，我们没有使用自我注意机制，而是设计了一个新颖的多尺度卷积注意（MSCA）模块。如图2(a)所示，MSCA包含三个部分：一个深度卷积来聚集局部信息，多分支深度卷积来捕捉多尺度背景，以及一个1×1卷积来模拟不同通道之间的关系。1×1卷积的输出被直接用作注意力权重，以重新权衡MSCA的输入。在数学上，我们的MSCA可以写成：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128151537212.png" alt="image-20221128151537212" /></p><p>其中F代表输入特征。Att和Out分别为注意图和输出。⊗是逐元的矩阵乘法运算。DW-Conv表示深度卷积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>c</mi><mi>a</mi><mi>l</mi><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Scale_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，i∈{0，1，2，3}，表示图2（b）中的第i个分支。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>c</mi><mi>a</mi><mi>l</mi><msub><mi>e</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">Scale_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是身份连接。按照[62]，在每个分支中，我们使用两个深度带状卷积来近似于大核的标准深度卷积。这里，每个分支的核大小分别被设定为7、11和21。我们选择深度带状卷积的原因有两个方面。一方面，带状卷积是轻量级的。为了模仿核大小为7×7的标准二维卷积，我们只需要一对7×1和1×7的卷积。另一方面，在分割场景中存在一些条状物体，如人和电线杆。因此，条状卷积可以作为网格卷积的补充，有助于提取条状特征[62, 29]。</p><p>将一连串的构件堆叠在一起，就得到了提议的卷积编码器，命名为MSCAN。对于MSCAN，我们采用一个普通的分层结构，它包含四个阶段，空间分辨率依次为H 4 ×W 4,H 8 ×W 8,H 16 ×W 16和H 32 ×W 32。这里，H和W分别是输入图像的高度和宽度。如上所述，每个阶段都包含一个下采样块和一个堆叠的构建块。下采样块有一个跨度为2、核大小为3×3的卷积，然后是一个批量归一化层[35]。请注意，在MSCAN的每个构建块中，我们使用批量归一化而不是层归一化，因为我们发现批量归一化对分割性能有更大的好处。</p><p>我们设计了四个不同规模的编码器模型，分别命名为MSCAN-T、MSCAN-S、MSCAN-B和MSCAN-L。相应的整体分割模型分别称为SegNeXt-T, SegNeXt-S, SegNeXt-B, SegNeXt-L。详细的网络设置显示在Tab. 2.</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128151941878.png" alt="image-20221128151941878" /></p><blockquote><p>表2 提出的SegNeXt的不同规模的详细设置。在这个表中，'e.r.'代表前馈网络中的扩展率。'C’和’L’分别是通道和构建块的数量。'解码器尺寸’表示解码器中的MLP尺寸。'参数’是在ADE20K数据集上计算的[98]。由于不同的数据集中类别的数量不同，参数的数量可能略有变化。</p></blockquote><h3 id="32-decoder"><a class="markdownIt-Anchor" href="#32-decoder"></a> 3.2 Decoder</h3><p>在分割模型[80, 96, 5]中，编码器大多是在ImageNet数据集上预训练的。为了捕捉高层次的语义，通常需要一个解码器，它被应用在编码器上。在这项工作中，我们研究了三种简单的解码器结构，如图3所示。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128152147431.png" alt="image-20221128152147431" /></p><blockquote><p>图3 Three different decoder designs.</p></blockquote><p><strong>第一种，在SegFormer[80]中采用，是一种纯粹的基于MLP的结构。第二种是主要采用基于CNN的模型。在这种结构中，编码器的输出被直接用作重型解码器头的输入，如ASPP[5]、PSP[94]和DANet[19]。最后一种是我们的SegNeXt中采用的结构。我们将后三个阶段的特征聚集起来，并使用一个轻量级的Hamburger[21]来进一步建立全局背景模型。结合我们强大的卷积编码器，我们发现使用一个轻量级的解码器可以提高性能-计算效率。</strong></p><p>值得一提的是，与SegFormer不同的是，SegFormer的解码器聚合了第一阶段到第四阶段的特征，而我们的解码器只接收最后三个阶段的特征。这是因为我们的SegNeXt是基于卷积的。第一阶段的特征包含了太多的低层次信息，会影响性能。此外，对第一阶段的操作带来了沉重的计算开销。在实验部分，我们将展示我们的卷积SegNeXt比最近最先进的基于transformer的SegFormer[80]和HRFormer[88]表现得更好。</p><h3 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 Experiments</h3><h4 id="dataset"><a class="markdownIt-Anchor" href="#dataset"></a> Dataset.</h4><p>我们在七个流行的数据集上评估了我们的方法，包括ImageNet-1K [15], ADE20K [98], Cityscapes [13], Pascal VOC [18], Pascal Context [58], COCO-Stuff [3] 和iSAID [76]。ImageNet[15]是最著名的图像分类数据集，它包含1000个类别。与大多数分割方法类似，我们用它来预训练我们的MSCAN编码器。ADE20K[98]是一个具有挑战性的数据集，包含150个语义类别。它由20,210/2,000/3,352张图像组成的训练、验证和测试集。Cityscapes[13]主要关注城市场景，包含5,000张高分辨率图像和19个类别。在训练、验证和测试中分别有2,975/500/1,525张图像。Pascal VOC[18]涉及20个前景类和一个背景类。扩增后，它有10，582/1，449/1，456张图像，分别用于训练、验证和测试。Pascal Context[58]包含59个前景类和一个背景类。训练集和验证集分别包含4,996和5,104张图像。COCO-Stuff[3]也是一个具有挑战性的基准，它包含172个语义类别和总共164k张图像。iSAID[76]是一个大规模的航空图像分割基准，它包括15个前景类和一个背景类。其训练、验证和测试集分别涉及1,411/458/937张图像。</p><p>实施细节。我们通过使用Jittor[31]和Pytorch[61]进行实验。我们的实现是基于timm（Apache-2.0）[77]和mmsegmentation（Apache-2.0）[12]库，分别用于分类和分割。我们的分割模型的所有编码器都在ImageNet-1K数据集[15]上进行了预训练。我们分别采用Top-1准确率和平均交集大于联盟（mIoU）作为分类和分割的评价指标。所有的模型都是在一个有8个RTX 3090 GPU的节点上训练的。</p><p>对于ImageNet预训练，我们的数据增强方法和训练设置与DeiT[70]相同。对于分割实验，我们采用了一些常见的数据增强方法，包括随机水平翻转、随机缩放（从0.5到2）和随机裁剪。城市景观数据集的批量大小被设置为8，其他所有数据集的批量大小为16。AdamW[54]被用来训练我们的模型。我们将初始学习率设置为0.00006，并采用多学习率衰减策略。我们对ADE20K、Cityscapes和iSAID数据集进行了16万次迭代训练，对COCO-Stuff、Pascal VOC和Pascal Context数据集进行了8万次迭代。在测试过程中，我们同时使用了单尺度（SS）和多尺度（MS）的翻转测试策略来进行公平的比较。更多细节可以在我们的补充材料中找到。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128155151998.png" alt="image-20221128155151998" /></p><h3 id="41-encoder-performance-on-imagenet"><a class="markdownIt-Anchor" href="#41-encoder-performance-on-imagenet"></a> 4.1 Encoder Performance on ImageNet</h3><p>ImageNet预训练是训练分割模型的一个常见策略[94, 6, 80, 88, 5]。在这里，我们将我们的MSCAN与最近流行的几个基于CNN和基于transformer的分类模型的性能进行比较。如表3所示，我们的MSCAN比最近最先进的基于CNN的方法ConvNeXt[52]取得了更好的结果，并且超过了流行的基于transformer的方法，如Swin Transformer[51]和SegFormer[80]的编码器MiT。</p><h3 id="42-ablation-study"><a class="markdownIt-Anchor" href="#42-ablation-study"></a> 4.2 Ablation study</h3><h4 id="ablation-on-msca-design"><a class="markdownIt-Anchor" href="#ablation-on-msca-design"></a> Ablation on MSCA design.</h4><p>我们在ImageNet和ADE20K数据集上进行MSCA设计的消融研究。K×K分支包含1×K的深度卷积和K×1的深度卷积。1×1 conv指的是通道混合操作。注意是指元素-明智的乘积，这使得网络获得自适应能力。结果显示在表6。6. 我们可以发现，每个部分都对最终的性能做出了贡献。</p><h4 id="global-context-for-decoder"><a class="markdownIt-Anchor" href="#global-context-for-decoder"></a> Global Context for Decoder.</h4><p>解码器在为分割模型整合来自多尺度特征的全局背景方面发挥着重要作用。在这里，我们研究了不同的全局背景模块对解码器的影响。正如大多数以前的工作[75，19]所示，基于注意力的解码器对CNN的性能比金字塔结构[94，5]更好，因此我们只展示使用基于注意力的解码器的结果。具体来说，我们展示了4种不同类型的基于注意力的解码器的结果，包括复杂度为O(n2)的非局部（NL）注意力[75]和复杂度为O(n)的CCNet[34]、EMANet[40]和HamNet[21]。如表5所示，Ham在复杂性和性能之间实现了最佳的权衡。因此，我们在解码器中使用Hamburger[21]。</p><h4 id="decoder-structure"><a class="markdownIt-Anchor" href="#decoder-structure"></a> Decoder Structure.</h4><p>与图像分类不同，分割模型需要高分辨率的输出。我们消减了三种不同的解码器设计用于分割，所有这些设计都已在图3中显示。相应的结果列于表7。我们可以看到SegNeXt©取得了最好的性能，计算成本也很低。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128155415972.png" alt="image-20221128155415972" /></p><h4 id="importance-of-our-msca"><a class="markdownIt-Anchor" href="#importance-of-our-msca"></a> Importance of Our MSCA.</h4><p>在这里，我们进行实验来证明MSCA对于分割的重要性。作为比较，我们跟随VAN[24]，用一个大核的单一卷积来代替我们的MSCA中的多个分支。如表8和表9所示。8和Tab.3，我们可以观察到，虽然两个编码器在ImageNet分类中的性能接近，但SegNeXt w/MSCA产生的结果比设置w/o MSCA要好得多。这表明多尺度特征的聚合对编码器的语义分割至关重要。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221128155616645.png" alt="image-20221128155616645" /></p><h3 id="43-comparison-with-state-of-the-art-methods"><a class="markdownIt-Anchor" href="#43-comparison-with-state-of-the-art-methods"></a> 4.3 Comparison with state-of-the-art methods</h3><p>在本小节中，我们将我们的方法与最先进的基于CNN的方法，如HRNet[71]、ResNeSt[92]和EfficientNet[69]，以及基于transformer的方法，如Swin Transformer[51]、SegFormer[80]、HRFormer[88]、MaskFormer[11]和Mask2Former[10]进行比较。</p><h4 id="performance-computation-trade-off"><a class="markdownIt-Anchor" href="#performance-computation-trade-off"></a> Performance-computation trade-off.</h4><p>ADE20K和Cityscapes是语义分割中两个广泛使用的基准。如图1所示，我们绘制了不同方法在Cityscape和ADE20K验证集上的性能-计算曲线。显然，与其他最先进的方法，如SegFormer[80]、HRFormer[88]和MaskFormer[11]相比，我们的方法实现了性能和计算量之间的最佳平衡。</p><h4 id="comparison-with-state-of-the-art-transformers"><a class="markdownIt-Anchor" href="#comparison-with-state-of-the-art-transformers"></a> Comparison with state-of-the-art transformers.</h4><p>我们在ADE20K、Cityscapes、COCO-Stuff和Pascal Context基准上将SegNeXt与最先进的transformer模型进行比较。如表9所示，SegNeXt-L超过了Mask2Former。在 ADE20K 数据集上，SegNeXt-L 在参数和计算成本相似的情况下，以 3.3 mIoU (51.0 v. 47.7) 的优势超越了以 Swin-T 为骨干的 Mask2Former。此外，与SegFormer-B2相比，SegNeXt-B在ADE20K数据集上只用了56%的计算量就获得了2.0 mIoU的改善（48.5 v. 46.5）。特别是，由于SegFormer[80]中的自我关注是二次复杂的，而我们的方法使用卷积，这使得我们的方法在处理Cityscapes数据集的高分辨率图像时表现得非常好。例如，SegNeXt-B比SegFormer-B2增加了1.6 mIoU（81.0 v. 82.6），但使用的计算量减少了40%。在图4中，我们还展示了与SegFormer的定性比较。我们可以看到，由于提出了MSCA，我们的方法在处理物体细节时识别得很好。</p><h4 id="comparison-with-state-of-the-art-cnns"><a class="markdownIt-Anchor" href="#comparison-with-state-of-the-art-cnns"></a> Comparison with state-of-the-art CNNs.</h4><p>如表4所示。4, Tab.10和Tab.12，我们在Pascal VOC 2012、Pascal Context和iSAID数据集上将我们的SegNeXt与最先进的CNN如ResNeSt-269[92]、EfficientNet-L2[99]和HRNetW48[71]进行比较。SegNeXt-L在使用更少的参数和计算的情况下超过了流行的HRNet（OCR）[71, 87]模型（60.3 v. 56.3），它是为分割任务精心设计的。此外，SegNeXt-L在Pascal VOC 2012测试排行榜上的表现甚至优于EfficientNet-L2（NAS-FPN），后者在额外的3亿张不可用图像上进行了预训练。值得注意的是，EfficientNet-L2（NAS-FPN）有485M的参数，而SegNeXt-L只有48.7M的参数。</p><h4 id="comparison-with-real-time-methods"><a class="markdownIt-Anchor" href="#comparison-with-real-time-methods"></a> Comparison with real-time methods.</h4><p>除了最先进的性能外，我们的方法也适合于实时部署。即使没有任何特定的软件或硬件加速，SegNeXt-T在处理768×1,536尺寸的图像时，使用单个3090 RTX GPU实现了每秒25帧（FPS）。如表11所示，我们的方法创造了最先进的技术。如表11所示，我们的方法在Cityscapes测试集的实时分割方面创造了新的最先进的结果。</p><h3 id="5-conclusions-and-discussion"><a class="markdownIt-Anchor" href="#5-conclusions-and-discussion"></a> 5 Conclusions and Discussion</h3><p>在本文中，我们分析了以前成功的分割模型，并找到它们所拥有的良好特性。基于这些发现，我们提出了一个量身定做的卷积注意模块MSCA和一个CNN式网络SegNeXt。实验结果表明，SegNeXt在相当大的程度上超过了目前最先进的基于transformer的方法。</p><p>最近，基于transformer的模型在各种分割排行榜上占主导地位。相反，本文表明，当使用适当的设计时，基于CNN的方法仍然可以比基于transformer的方法表现得更好。我们希望本文能够鼓励研究人员进一步研究CNN的潜力。</p><p>我们的模型也有其局限性，例如，将此方法扩展到具有100M以上参数的大规模模型以及在其他视觉或NLP任务上的表现。这些将在我们未来的工作中得到解决。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Squeeze-and-Excitation Networks</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Squeeze-and-Excitation-Networks/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Squeeze-and-Excitation-Networks/</url>
      
        <content type="html"><![CDATA[<h1 id="squeeze-and-excitation-networks"><a class="markdownIt-Anchor" href="#squeeze-and-excitation-networks"></a> Squeeze-and-Excitation Networks</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>卷积神经网络是建立在卷积操作之上的，它通过在局部感受野内将空间和通道信息融合在一起来提取信息特征。为了提高网络的表示能力，最近的一些方法显示了加强空间编码的好处。在这项工作中，我们专注于通道关系，并提出了一个新的结构单元，我们称之为 “挤压和激励”（SE）块，它通过明确地模拟通道之间的相互依赖性来适应性地重新校准通道方面的特征反应。我们证明，通过将这些模块堆叠在一起，我们可以构建SENet架构，该架构在具有挑战性的数据集上具有非常好的通用性。最重要的是，我们发现SE块对现有的最先进的深度架构产生了明显的性能改进，而额外的计算成本却很小。SENets构成了我们2017年ILSVRC分类提交的基础，它赢得了第一名，并将前五名的误差大大降低到2.251%，比2016年的获奖作品实现了25%的相对改进。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>卷积神经网络（CNN）已被证明是处理各种视觉任务的有效模型[21, 27, 33, 45]。对于每个卷积层，学习一组滤波器来表达沿输入通道的局部空间连接模式。换句话说，卷积滤波器有望通过在局部感受野内将空间和通道的信息融合在一起而成为信息组合。通过将一系列卷积层与非线性和下采样交错堆叠，CNN能够捕捉到具有全局感受野的分层模式，作为强大的图像描述。最近的工作表明，网络的性能可以通过明确地嵌入学习机制来提高，这些机制有助于捕捉空间相关性，而不需要额外的监督。其中 一种方法是由Inception架构[16, 43]推广的，它表明网络可以通过在其模块中嵌入多尺度过程来实现有竞争力的准确性。最近的工作试图更好地模拟空间依赖性[1，31]，并纳入空间注意力[19]。</p><p>在本文中，我们通过引入一个新的架构单元来研究架构设计的不同方面–通道关系，我们称之为 “挤压和激发”（SE）块。我们的目标是通过明确地模拟其卷积特征的通道之间的相互依赖关系来提高网络的表示能力。<strong>为了实现这一目标，我们提出了一种机制，允许网络进行特征再校准，通过这种机制，它可以学会使用全局信息来有选择地强调信息性特征，并抑制不太有用的特征。</strong></p><p>SE构件的基本结构如图1所示。对于任何给定的变换$$F_{tr} : X → U, X ∈ R<sup>{H</sup>{′}×W<sup>{′}×C</sup>{′}} , U ∈ R^{H×W ×C}$$ , (例如一个卷积或一组卷积)，我们可以构建一个相应的SE模块来进行特征再校准，具体如下。特征U首先通过一个挤压操作，该操作在空间维度H×W上聚集特征图，产生一个通道描述符。这个描述符包含了通道特征响应的全局分布，使网络的全局接受领域的信息能够被其下层所利用。随后是激励操作，在此过程中，通过基于通道依赖性的自我门控机制为每个通道学习的特定样本激活，管理每个通道的激励。然后，特征图U被重新加权以产生SE块的输出，然后可以直接输入后续层。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image_l1_kanvK3G.png" alt="Figure 1: A Squeeze-and-Excitation block." title="Figure 1: A Squeeze-and-Excitation block." /></p><blockquote><p>Figure 1: A Squeeze-and-Excitation block.</p></blockquote><p><strong>一个SE网络可以通过简单地堆叠SE构件的集合来生成</strong>。SE构件也可以在架构的任何深度作为原始构件的落地替换。然而，虽然构件的模板是通用的，正如我们在第6.4节中所展示的那样，它在不同深度所扮演的角色是适应网络的需要的。<strong>在早期层，它学会了以一种与类别无关的方式激发信息特征，加强了共享的低层表征的质量。在后期，SE块变得越来越专门化，并以高度特定的方式对不同的输入做出反应。因此，由SE块进行的特征再校准的好处可以通过整个网络累积。</strong></p><p>开发新的CNN架构是一项具有挑战性的工程任务，通常涉及许多新的超参数和层配置的选择。相比之下，上面概述的SE块的设计很简单，可以直接用于现有的最先进的架构，其模块可以通过直接替换成SE的对应模块来加强。</p><p>此外，如第4节所示，SE块在计算上是轻量级的，只对模型的复杂性和计算负担有轻微的增加。为了支持这些说法，我们开发了几个SENets，并对ImageNet 2012数据集[34]进行了广泛的评估。为了证明它们的普遍适用性，我们还提出了ImageNet以外的结果，表明所提出的方法不限于特定的数据集或任务。</p><p>使用SENets，我们在ILSVRC 2017分类比赛中赢得了第一名。我们表现最好的模型集合在测试集上达到了2.251%的前5名误差1。这代表了与前一年的冠军作品（前五名误差为2.991%）相比，有25%的相对改进。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>**Deep architectures. ** VGGNets[39]和Inception模型[43]证明了增加深度的好处。批量规范化（BN）[16]通过插入调节层输入的单元来改进梯度传播，稳定了学习过程。ResNets[10, 11]显示了通过使用基于身份的跳过连接学习更深的网络的有效性。公路网络[40]采用了一种门控机制来调节捷径连接。网络层间连接的重构[5, 14]已被证明可以进一步改善深度网络的学习和表征特性。</p><p>另一条研究路线是探索如何调整网络的模块化组件的功能形式。分组卷积可以用来增加cardinality（变换集合的大小）[15, 47]。多分支卷积可以被解释为这一概念的一般化，使运算符的组合更加灵活[16, 42, 43, 44]。最近，以自动方式学习的组合[26, 54, 55]显示了有竞争力的性能。跨通道相关性通常被映射为新的特征组合，要么独立于空间结构[6, 20]，要么通过使用标准卷积滤波器[24]与1×1卷积联合。这些工作大多集中在降低模型和计算复杂性的目标上，反映了一种假设，即通道关系可以被表述为具有局部感受野的实例诊断函数的组成。相比之下，我们主张为单元提供一种机制，利用全局信息对通道之间的动态、非线性依赖关系进行明确建模，可以缓解学习过程，并大大增强网络的表现力。</p><p><strong>Attention and gating mechanisms.</strong> 广义上讲，注意力可以被看作是一种工具，将可用的处理资源分配给输入信号中最有信息量的部分[17, 18, 22, 29, 32]。这种机制的好处已经在一系列的任务中显示出来，从图像中的定位和理解[3, 19]到基于序列的模型[2, 28]。它通常与一个门控函数（如softmax或sigmoid）和序列技术相结合来实现[12, 41]。最近的工作表明它适用于图像字幕[4, 48]和唇语阅读[7]等任务。在这些应用中，它通常被用在一个或多个代表更高层次抽象的层之上，用于模式之间的适应。Wang等人[46]使用沙漏模块[31]引入了一个强大的主干和掩码注意力机制。这个高容量的单元被插入到中间阶段之间的深层剩余网络中。相比之下，我们提出的SE块是一个轻量级的门控机制，专门用于以计算效率高的方式模拟通道间的关系，旨在提高整个网络中基本模块的表示能力。</p><h2 id="3-squeeze-and-excitation-blocks"><a class="markdownIt-Anchor" href="#3-squeeze-and-excitation-blocks"></a> 3. Squeeze-and-Excitation Blocks</h2><p>挤压和激发块是一个计算单元，可以为任何给定的转换构建<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">F</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub><mo>:</mo><mi mathvariant="bold">X</mi><mo>→</mo><mi mathvariant="bold">U</mi><mo separator="true">,</mo><mi mathvariant="bold">X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>H</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>×</mo><msup><mi>W</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>×</mo><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msup><mo separator="true">,</mo><mi mathvariant="bold">U</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow></msup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathbf{F}_{t r}: \mathbf{X} \rightarrow \mathbf{U}, \mathbf{X} \in \mathbb{R}^{H^{\prime} \times W^{\prime} \times C^{\prime}}, \mathbf{U} \in \mathbb{R}^{H \times W \times C}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbf">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.13692em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">U</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mord">.</span></span></span></span>为简单起见，在下面的符号中，我们取  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{tr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是一个卷积算子。设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy="false">[</mo><mi>v</mi><mn>1</mn><mo separator="true">,</mo><mo separator="true">,</mo><mi>v</mi><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>v</mi><mi>C</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">V=[v1,,v2,\dots,v_C ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 表示所学的滤波器核集，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">v_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指的是第c个滤波器的参数。然后我们可以把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{tr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的输出写成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><mo stretchy="false">[</mo><mi>u</mi><mn>1</mn><mo separator="true">,</mo><mi>u</mi><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>u</mi><mi>C</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">U = [u1, u2, . . . , u_C ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">u</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">u</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>, where<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">u</mi><mi>c</mi></msub><mo>=</mo><msub><mi mathvariant="bold">v</mi><mi>c</mi></msub><mo>∗</mo><mi mathvariant="bold">X</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><msubsup><mi mathvariant="bold">v</mi><mi>c</mi><mi>s</mi></msubsup><mo>∗</mo><msup><mi mathvariant="bold">x</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{u}_{c}=\mathbf{v}_{c} * \mathbf{X}=\sum_{s=1}^{C^{\prime}} \mathbf{v}_{c}^{s} * \mathbf{x}^{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3820900000000003em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0823800000000001em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span>.这里∗表示卷积。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">v</mi><mi>c</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><msubsup><mi mathvariant="bold">v</mi><mi>c</mi><mn>1</mn></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">v</mi><mi>c</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi mathvariant="bold">v</mi><mi>c</mi><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{v}_{c}=\left[\mathbf{v}_{c}^{1}, \mathbf{v}_{c}^{2}, \ldots, \mathbf{v}_{c}^{C^{\prime}}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span>and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">X</mi><mo>=</mo><mrow><mo fence="true">[</mo><msup><mi mathvariant="bold">x</mi><mn>1</mn></msup><mo separator="true">,</mo><msup><mi mathvariant="bold">x</mi><mn>2</mn></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi mathvariant="bold">x</mi><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{X}=\left[\mathbf{x}^{1}, \mathbf{x}^{2}, \ldots, \mathbf{x}^{C^{\prime}}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span>(为了简化符号，省略了偏置项），而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>v</mi><mi>c</mi><mi>s</mi></msubsup></mrow><annotation encoding="application/x-tex">v^s_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.911392em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>是一个二维空间核，因此代表vc的一个通道，它作用于X的相应通道。由于输出是通过所有通道的求和产生的，通道依赖性隐含在vc中，但这些依赖性与滤波器捕获的空间相关性相纠缠。我们的目标是确保网络能够提高其对信息特征的敏感性，以便它们能够被后续的转换所利用，并抑制不太有用的特征。我们建议通过明确地模拟通道的相互依赖性来实现这一目标，在将滤波器的响应输入到下一个转换之前，分两个步骤重新校准，即挤压和激励。图1是一个SE构件的示意图。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image_l1_kanvK3G.png" alt="Figure 1: A Squeeze-and-Excitation block." title="Figure 1: A Squeeze-and-Excitation block." /></p><h3 id="31-squeeze-global-information-embedding"><a class="markdownIt-Anchor" href="#31-squeeze-global-information-embedding"></a> 3.1. Squeeze: Global Information Embedding</h3><p>为了解决利用通道依赖性的问题，我们首先考虑输出特征中每个通道的信号。每个学习到的滤波器都在一个局部的接受域内运行，因此，转换输出U的每个单元都无法利用这个区域之外的上下文信息。这是一个在网络下层变得更加严重的问题，因为这些网络的接受场大小是很小的。</p><p>为了缓解这一问题，我们建议将全局空间信息挤压到通道描述符中。这是通过使用全局平均池来生成通道统计量来实现的。从形式上看，统计量z∈RC是通过空间维度H×W缩减U产生的，其中z的第c个元素通过以下方式计算:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>c</mi></msub><mo>=</mo><msub><mi mathvariant="bold">F</mi><mrow><mi>s</mi><mi>q</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">u</mi><mi>c</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>H</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>W</mi></msubsup><msub><mi>u</mi><mi>c</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_{c}=\mathbf{F}_{s q}\left(\mathbf{u}_{c}\right)=\frac{1}{H \times W} \sum_{i=1}^{H} \sum_{j=1}^{W} u_{c}(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></p><p><strong>Discussion.</strong> 变换后的输出U可以被解释为局部描述符的集合，其统计数据对整个图像具有表达力。利用这种信息在特征工程工作中很普遍[35, 38, 49]。我们选择了最简单的全局平均集合，同时注意到这里也可以采用更复杂的聚合策略。</p><h3 id="32-excitation-adaptive-recalibration"><a class="markdownIt-Anchor" href="#32-excitation-adaptive-recalibration"></a> 3.2. Excitation: Adaptive Recalibration</h3><p>为了利用挤压操作中汇总的信息，我们在它之后进行了第二项操作，目的是充分捕捉渠道方面的依赖性。为了实现这一目标，该函数必须满足两个标准：首先，它必须是灵活的（特别是，它必须能够学习通道之间的非线性相互作用）；其次，它必须学习一种非相互排斥的关系，因为我们希望确保允许多个通道被强调，而不是单一的激活。为了满足这些标准，我们选择采用一个简单的门控机制，即乙字形激活。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">s</mi><mo>=</mo><msub><mi mathvariant="bold">F</mi><mrow><mi>e</mi><mi>x</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo separator="true">,</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo separator="true">,</mo><mi mathvariant="bold">W</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">W</mi><mn>2</mn></msub><mi>δ</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">W</mi><mn>1</mn></msub><mi mathvariant="bold">z</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{s}=\mathbf{F}_{e x}(\mathbf{z}, \mathbf{W})=\sigma(g(\mathbf{z}, \mathbf{W}))=\sigma\left(\mathbf{W}_{2} \delta\left(\mathbf{W}_{1} \mathbf{z}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">s</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">z</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">z</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">z</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>,</p><p>其中δ指ReLU[30]函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>1</mn></msub><mo>∈</mo><msup><mi>R</mi><mrow><mfrac><mi>C</mi><mi>r</mi></mfrac><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W_1∈R^{\frac{C}{r}×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.973465em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.973465em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>w</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>C</mi><mo>×</mo><mfrac><mi>C</mi><mi>r</mi></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">W_w∈R^{C×\frac{C}{r}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.973465em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.973465em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8720928571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span>。为了限制模型的复杂性和帮助泛化，我们通过在非线性周围的两个全连接（FC）层形成一个瓶颈来对门控机制进行参数化，即一个具有降低比率r的参数W1的降维层（这个参数的选择将在第6.4节讨论），一个ReLU，然后是一个具有参数W2的增维层。块的最终输出是通过重新缩放转换输出U与激活得到的:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo stretchy="true">~</mo></mover><mi>c</mi></msub><mo>=</mo><msub><mi mathvariant="bold">F</mi><mtext>scale </mtext></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">u</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>c</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msub><mi>s</mi><mi>c</mi></msub><mo>⋅</mo><msub><mi mathvariant="bold">u</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\widetilde{\mathbf{x}}_{c}=\mathbf{F}_{\text {scale }}\left(\mathbf{u}_{c}, s_{c}\right)=s_{c} \cdot \mathbf{u}_{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.44444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">scale </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="bold">X</mi><mo stretchy="true">~</mo></mover><mo>=</mo><mrow><mo fence="true">[</mo><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo stretchy="true">~</mo></mover><mn>1</mn></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo stretchy="true">~</mo></mover><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo stretchy="true">~</mo></mover><mi>C</mi></msub><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\widetilde{\mathbf{X}}=\left[\widetilde{\mathbf{x}}_{1}, \widetilde{\mathbf{x}}_{2}, \ldots, \widetilde{\mathbf{x}}_{C}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94611em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94611em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span></span></span><span class="svg-align" style="width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.68611em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.44444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.44444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.44444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>u</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{scale}(u_c, s_c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 指的是特征图的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>c</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">u_c ∈ R^{H×W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>and the scalar <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">s_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通道相乘.</p><p> 讨论。激活作为适应输入特定描述符z的通道权重。在这方面，SE块内在地引入了以输入为条件的动态，有助于提高特征的可识别性。</p><h3 id="33-exemplars-se-inception-and-se-resnet"><a class="markdownIt-Anchor" href="#33-exemplars-se-inception-and-se-resnet"></a> 3.3. Exemplars: SE-Inception and SE-ResNet</h3><p>将SE块应用于AlexNet[21]和VGGNet[39]是很直接的。SE块的灵活性意味着它可以直接应用于标准卷积之外的转换。为了说明这一点，我们通过将SE块集成到具有复杂设计的现代架构中来开发SENets。</p><p>对于非驻留网络，如Inception网络，SE块的构建是通过将转换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{tr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>作为整个Inception模块来进行的（见图2）。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image_HKt0C7C_l6.png" alt="Figure 2: The schema of the original Inception module (left) and the SE-Inception module (right)." title="Figure 2: The schema of the original Inception module (left) and the SE-Inception module (right)." /></p><blockquote><p>Figure 2: The schema of the original Inception module (left) and the SE-Inception module (right).</p></blockquote><p>通过对架构中的每一个这样的模块进行这种改变，我们构建了一个SE-Inception网络。此外，SE块有足够的灵活性，可用于剩余网络。</p><p> 图3描述了一个SEResNet模块的模式。这里，SE块转换Ftr被认为是剩余模块的非同一性分支。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image_0J9E8T5-4V.png" alt="Figure 3: The schema of the original Residual module (left) and the SE-ResNet module (right)." title="Figure 3: The schema of the original Residual module (left) and the SE-ResNet module (right)." /></p><blockquote><p>Figure 3: The schema of the original Residual module (left) and the SE-ResNet module (right).</p></blockquote><p>挤压和激发都是在与身份分支相加之前进行的。更多与ResNeXt[47]、Inception-ResNet[42]、MobileNet[13]和ShuffleNet[52]集成的变体可以按照类似方案构建。我们在表1中描述了SE-ResNet-50和SE-ResNeXt-50的架构。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image_2vdMtwLSCI.png" alt="" /></p><blockquote><p>Table 1: (Left) ResNet-50. (Middle) SE-ResNet-50. (Right) SE-ResNeXt-50 with a 32×4d template. 剩余构件的形状和操作的具体参数设置列在括号内，一个阶段中的堆积块的数量列在括号外。fc后面的内括号表示SE模块中两个全连接层的输出尺寸。</p></blockquote><p>4. Model and Computational Complexity</p><p>为了使提议的SE块在实践中可行，它必须在模型的复杂性和性能之间提供一个有效的权衡，这对可扩展性很重要。除另有说明外，我们在所有的实验中都将还原率r设定为16（更多的讨论可以在第6.4节找到）。为了说明模块的成本，我们以ResNet-50和SE-ResNet-50的比较为例，其中SE-ResNet-50的精度优于ResNet-50，接近于更深的ResNet101网络的精度（如表2所示）。对于224×224像素的输入图像，ResNet-50在单次前向传递中需要3.86GFLOPs∼。每个SE块在挤压阶段利用全局平均池化操作，在激励阶段利用两个小的全连接层，然后再进行廉价的通道明智的缩放操作。总的来说，SE-ResNet-50需要3.87 GFLOPs，相当于比原来的ResNet-50相对增加了0.26%。</p><p><img src="images/image-20221026144725491.png" alt="image-20221026144725491" /></p><blockquote><p>Table 2: ImageNet验证集上的单作物错误率（%）和复杂性比较。原始栏指的是原始论文中报告的结果。为了能够进行公平的比较，我们重新训练了基线模型，并在重新实施一栏中报告了分数。SENet列指的是添加了SE块的相应架构。括号中的数字表示比重新实施的基线的性能改进。†表示模型已经在验证集的非黑名单子集上进行了评估（这在文献[42]中有更详细的讨论），这可能会稍微改善结果。VGG-16和SE-VGG-16是用批量归一化训练的。</p></blockquote><p>在实践中，在256张图像的训练小批中，通过ResNet-50向前和向后的单次传递需要190毫秒，而SE-ResNet-50需要209毫秒（这两个时间是在有8个NVIDIA Titan X GPU的服务器上进行的）。我们认为，这代表了合理的开销，特别是由于全局池和小型内积操作在现有的GPU库中没有得到优化。此外，由于其对嵌入式设备应用的重要性，我们还对每个模型的CPU推理时间进行了基准测试：对于224×224像素的输入图像，ResNet-50需要164毫秒，而SE-ResNet-50则需要167毫秒。SE块所需的少量额外计算开销因其对模型性能的贡献而显得合理。</p><p>接下来，我们考虑由提议的区块引入的额外参数。所有这些参数都包含在门控机制的两个FC层中，它们只占总网络容量的一小部分。更确切地说，引入的额外参数的数量由以下几点给出。 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2</mn><mi>r</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><mi>S</mi></msubsup><msub><mi>N</mi><mi>s</mi></msub><mo>⋅</mo><msubsup><mi>C</mi><mi>s</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\frac{2}{r} \sum_{s=1}^{S} N_{s} \cdot C_{s}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 其中r表示缩减率，S指阶段数（每个阶段指在共同空间维度的特征图上操作的块的集合），Cs表示输出通道的维度，Ns表示阶段s的重复块数。这些参数大部分来自于网络的最后一个阶段，在这个阶段，激励是在最大的通道尺寸上进行的。然而，我们发现，相对昂贵的SE块的最后阶段可以在性能上付出边际成本（在ImageNet上&lt;0.1%的top-1误差），将相对的参数增加减少到4%∼，这在参数使用是一个关键考虑因素的情况下可能是有用的（见6.4节的进一步讨论）。</p><h3 id="5-implementation"><a class="markdownIt-Anchor" href="#5-implementation"></a> 5. Implementation</h3><p>每个普通网络和其相应的SE对应网络都是用相同的优化方案进行训练的。在ImageNet的训练过程中，我们遵循标准的做法，并通过随机尺寸裁剪[43]来进行数据扩充，即224×224像素（Inception-ResNet-v2[42]和SE-Inception-ResNet-v2为299×299）和随机水平翻转。输入的图像通过平均通道减法进行规范化处理。此外，我们采用了[36]中描述的数据平衡策略进行小批量采样。网络在我们的分布式学习系统 &quot;ROCS &quot;上进行训练，该系统被设计用来处理大型网络的有效并行训练。优化是使用同步SGD进行的，动量为0.9，小批量大小为1024。初始学习率被设置为0.6，每30个历时减少10倍。所有的模型都从头开始训练了100个历时，使用的是[9]中描述的权重初始化策略。</p><p>在测试时，我们对验证集进行中心裁剪评估，从每张图像中裁剪出224×224像素，其短边首先被调整为256（对于Inception-ResNet-v2和SE-Inception-ResNet-v2，从每张图像的短边首先被调整为352）。</p><h2 id="6-experiments"><a class="markdownIt-Anchor" href="#6-experiments"></a> 6. Experiments</h2><h3 id="61-imagenet-classification"><a class="markdownIt-Anchor" href="#61-imagenet-classification"></a> 6.1. ImageNet Classification</h3><p>ImageNet 2012数据集由128万张训练图像和来自1000个类别的5万张验证图像组成。我们在训练集上训练网络并报告前1名和前5名的错误。</p><p><strong>Network depth.</strong> 我们首先比较了SE-ResNet与不同深度的ResNet架构。表2中的结果显示，SE块在不同深度的情况下，在计算复杂度增加极小的情况下，性能持续提高。</p><p>值得注意的是，SE-ResNet-50实现了6.62%的单作物前5名验证误差，比ResNet-50（7.48%）高出0.86%，并接近更深的ResNet-101网络（6.52%的前5名误差）的性能，而计算开销只有其一半（3.87GFLOPs vs. 7.58GFLOPs）。这种模式在更大的深度上重复，SE-ResNet-101（6.07%的最高5级错误）不仅与更深的ResNet-152网络（6.34%的最高5级错误）相匹配，而且超过了0.27%。图4描述了SE-ResNet-50和ResNet-50的训练和验证曲线（更多网络的曲线显示在补充材料中）。虽然应该注意到SE块本身增加了深度，但它们是以一种极其有效的计算方式进行的，甚至在扩展基础架构的深度实现收益递减的时候也能产生良好的回报。此外，我们看到，性能的提高在不同深度的训练中是一致的，这表明SE块引起的改进可以与增加基本架构的深度结合起来使用。</p><p><img src="images/image-20221026145120284.png" alt="image-20221026145120284" /></p><blockquote><p>Figure 4: Training curves of ResNet-50 and SE-ResNet-50 on ImageNet.</p></blockquote><p><strong>Integration with modern architectures.</strong> 我们接下来研究将SE块与另两个最先进的架构Inception-ResNet-v2[42]和ResNeXt（使用32×4d的设置）[47]相结合的效果，这两个架构都在模块中引入先验结构。</p><p>我们构建了这些网络的SENet等价物：SEInception-ResNet-v2和SE-ResNeXt（表1给出了SE-ResNeXt-50的配置）。表2中的结果说明，当SE块被引入到这两个架构中时，性能得到了明显的改善。特别是，SE-ResNeXt-50的前5名误差为5.49%，优于其直接对应的ResNeXt-50（前5名误差为5.90%）以及更深入的ResNeXt-101（前5名误差为5.57%），这个模型的参数数量和计算开销几乎是其两倍。至于Inception-ResNetv2的实验，我们猜测裁剪策略的不同可能会导致他们报告的结果与我们重新实施的结果之间的差距，因为他们的原始图像大小在[42]中没有明确，而我们从一个相对较大的图像（其中较短的边缘被调整为352）中裁剪了299×299区域。SE-Inception-ResNet-v2 (4.79% top-5 error)比我们重新实现的Inception-ResNet-v2 (5.21% top-5 error)高出0.42%（相对提高8.1%），也比[42]中的报告结果高出0.42%。</p><p>我们还通过对VGG-16[39]和BN-Inception架构[16]进行实验，评估SE块在非留存网络上运行时的效果。由于深度网络的优化很棘手[16, 39]，为了便于从头开始训练VGG-16，我们在每次卷积后添加了一个批量归一化层。我们应用相同的方案来训练SE-VGG-16。比较的结果显示在表2中，表现出与剩余架构中出现的相同现象。</p><p>最后，我们在表3中对两个有代表性的高效架构MobileNet[13]和ShuffleNet[52]进行了评估，显示SE块可以在计算成本增加最小的情况下持续地提高准确性。这些实验表明，由SE块引起的改进可以与广泛的架构结合使用。此外，这一结果对残差和非残差基础都是成立的。</p><p><img src="images/image-20221026145243146.png" alt="image-20221026145243146" /></p><blockquote><p>Table 3: Single-crop error rates (%) on the ImageNet validation set and complexity comparisons. Here, MobileNet refers to “1.0 MobileNet-224” in [13] and ShuffleNet refers to “ShuffleNet 1 × (g = 3)” in [52].</p></blockquote><p><strong>Results on ILSVRC 2017 Classification Competition.</strong> SENets构成了我们提交给比赛的基础，我们赢得了第一名。我们的获奖作品由一个小型的SENets组合组成，它采用了标准的多尺度和多作物融合策略，在测试集上获得了2.251%的前5名误差。我们的一个高性能网络，我们称之为SENet-154，是通过将SE块与修改后的ResNeXt[47]进行整合而构建的（详情见补充材料），其目的是在不强调模型复杂性的情况下达到最好的精度。我们在表4中把它与ImageNet验证集上表现最好的公开模型进行了比较。我们的模型使用224×224的中心作物评估，取得了18.68%的前1名误差和4.47%的前5名误差。为了能够进行公平的比较，我们提供了一个320×320的中心作物评价，显示了对先前工作的显著性能改进。比赛结束后，我们用更大的输入尺寸320×320来训练SENet-154，在top-1（16.88%）和top-5（3.58%）的误差指标下都取得了较低的误差率。</p><h3 id="62-scene-classification"><a class="markdownIt-Anchor" href="#62-scene-classification"></a> 6.2. Scene Classification</h3><p>我们在Places365-Challenge数据集[53]上进行了场景分类的实验。它包括800万张训练图像和36,500张跨越365个类别的验证图像。相对于分类，场景理解的任务可以更好地评估模型的泛化和处理抽象的能力，因为它需要捕捉更复杂的数据关联和对更大程度的外观变化的稳健性。 </p><p>我们使用ResNet-152作为强基线来评估SE块的有效性，并遵循《训练和评估协议》[37]。表5显示了ResNet-152和SE-ResNet-152的结果。具体来说，SE-ResNet152(11.01%的前5名错误)取得了比ResNet-152(11.61%的前5名错误)更低的验证错误，提供了SE块可以在不同数据集上表现良好的证据。这个SENet超过了之前最先进的模型Places365-CNN/[37]，后者在这个任务上的前5名误差为11.48%。</p><h3 id="63-object-detection-on-coco"><a class="markdownIt-Anchor" href="#63-object-detection-on-coco"></a> 6.3. Object Detection on COCO</h3><h3 id="64-analysis-and-interpretation"><a class="markdownIt-Anchor" href="#64-analysis-and-interpretation"></a> 6.4. Analysis and Interpretation</h3><p>**Reduction ratio. **公式（5）中引入的还原率r是一个重要的超参数，它允许我们改变模型中SE块的容量和计算成本。为了研究这种关系，我们在SE-ResNet-50的基础上进行了一系列不同r值的实验。表7中的比较显示，性能并没有随着容量的增加而单调地提高。这可能是由于使SE块过度拟合训练集的信道相互依赖性的结果。特别是，我们发现设置r = 16在准确性和复杂性之间取得了良好的平衡，因此，我们在所有的实验中都使用了这个值。</p><p><strong>The role of Excitation.</strong> 虽然SE块已经被经验证明可以改善网络性能，但我们也想了解自门控激励机制在实践中是如何运作的。为了更清楚地了解SE块的行为，在本节中，我们研究了来自SE-ResNet-50模型的激活实例，并考察了它们在不同块上对不同类别的分布。具体来说，我们从ImageNet数据集中抽取了四个表现出语义和外观多样性的类别，即金鱼、哈巴狗、飞机和悬崖（这些类别的例子图片见补充材料）。然后，我们从验证集中为每个类别抽出50个样本，计算每个阶段最后一个SE块（紧接下采样之前）中50个均匀采样的通道的平均激活度，并在图5中绘制其分布。作为参考，我们还绘制了所有1000个类别的平均激活分布。</p><p><img src="images/image-20221026145157089.png" alt="image-20221026145157089" /></p><blockquote><p>Figure 5: Activations induced by Excitation in the different modules of SE-ResNet-50 on ImageNet. The module is named as “SE stageID blockID”.</p></blockquote><p>我们对激励的作用做了以下三点观察。首先，不同类别的分布在低层几乎是相同的，例如SE 2 3。这表明，在网络的早期阶段，特征通道的重要性很可能被不同的类别所共享。然而，有趣的是，第二个观察结果是，在更大的深度，每个通道的价值变得更有阶级针对性，因为不同的阶级对特征的判别价值表现出不同的偏好，例如SE 4 6和SE 5 1。这两个观察结果与以前的工作[23, 50]中的发现一致，即低层的特征通常更普遍（即在分类的背景下不分阶级），而高层的特征具有更大的特殊性。因此，表征学习从SE块引起的重新校准中受益，SE块在需要的程度上适应性地促进了特征的提取和专门化。最后，我们在网络的最后阶段观察到一个有点不同的现象。SE 5 2表现出一种有趣的饱和状态的趋势，其中大部分激活接近于1，其余的接近于0。在所有激活值都为1的时候，这个块将成为一个标准的剩余块。在SE 5 3的网络末端（紧接着是分类器之前的全局集合），在不同的类别上出现了类似的模式，直到规模的轻微变化（这可能是由分类器调整的）。这表明SE 5 2和SE 5 3在为网络提供重新校准方面不如前几块重要。这一发现与第4节中的经验调查结果一致，该调查表明，通过去除最后阶段的SE块，可以大大减少整体参数的数量，而只是在性能上有一点损失。</p><h2 id="7-conclusion"><a class="markdownIt-Anchor" href="#7-conclusion"></a> 7. Conclusion</h2><p>在本文中，我们提出了SE块，这是一个新颖的结构单元，旨在通过使其能够执行动态的通道特征重新校准来提高网络的表示能力。广泛的实验证明了SENets的有效性，它在多个数据集上实现了最先进的性能。此外，他们对以前的架构在建立通道特征依赖性方面的局限性提供了一些见解，我们希望这可能会被证明对其他需要强鉴别性特征的任务有用。最后，由SE块引起的特征重要性可能对相关领域有帮助，如用于压缩的网络剪枝。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TopFormer Token Pyramid Transformer for Mobile Semantic Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/TopFormer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/TopFormer/</url>
      
        <content type="html"><![CDATA[<h1 id="topformer-token-pyramid-transformer-for-mobile-semantic-segmentation"><a class="markdownIt-Anchor" href="#topformer-token-pyramid-transformer-for-mobile-semantic-segmentation"></a> TopFormer: Token Pyramid Transformer for Mobile Semantic Segmentation</h1><blockquote><p><a href="zotero://open-pdf/library/items/YSWHMLFG">文章链接</a></p></blockquote><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>尽管vision transformers（ViTs）在计算机视觉领域取得了巨大的成功，但沉重的计算成本阻碍了它们在密集预测任务中的应用，如移动设备上的语义分割。在本文中，我们提出了一个名为Token Pyramid Vision Transformer（TopFormer）的移动友好架构。所提出的TopFormer将不同尺度的Token作为输入，以产生尺度感知的语义特征，然后将其注入到相应的Token中以增强表示。实验结果表明，我们的方法在几个语义分割数据集上明显优于基于CNN和ViT的网络，并且在准确性和延迟之间实现了良好的权衡。在ADE20K数据集上，TopFormer在基于ARM的移动设备上以较低的延迟实现了比MobileNetV3高5%的mIoU精度。此外，TopFormer的微小版本在基于ARM的移动设备上实现了具有竞争力的实时推理结果。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>vision transformers（ViTs）在少数视觉任务中表现出相当强的效果，如图像分类[11]、物体检测[28]和语义分割[58]。尽管取得了成功，但具有注意力机制的transformers架构[42]需要强大的计算资源，超出了许多移动和嵌入式设备的能力。在本文中，我们旨在探索一种专门为密集预测任务（如语义分割）设计的移动友好型vision transformers。</p><p>为了使vision transformers适应各种密集的预测任务，最近的vision transformers，如PVT[43]、CvT[45]、LeViT[12]、MobileViT[31]采用了分层结构，这通常用于卷积神经网络（CNN），例如AlexNet[23]、ResNet[15]。这些vision transformers在高分辨率的标记上应用全局自我注意及其变体，由于标记数量的二次复杂性，带来了沉重的计算成本。</p><p>为了提高效率，最近的一些作品，例如Swin Transformer[28]、Shuffle Transformer[19]、Twins[7]和HR-Former[51]，在局部/窗口区域内计算自我注意。然而，在移动设备上，窗口分区是令人惊讶的耗时。此外，Token slimming[40]和Mobile-Former[6]通过减少Token的数量来降低计算能力，但牺牲了它们的识别精度。</p><p>在这些vision transformers中，MobileViT[31]和Mobile-Former[6]是专门为移动设备设计的。它们都结合了CNN和ViTs的优势。对于图像分类，MobileViT在参数数量相近的情况下取得了比MobileNets[16, 36]更好的性能。Mobile-Former在较少的FLOPs数量下取得了比MobileNets更好的性能。然而，与MobileNets相比，它们在移动设备上的实际延迟方面没有显示出优势，正如[31]中所报告的那样。这提出了一个问题。有没有可能设计出在移动语义分割任务上比MobileNets有更好的性能、更低延迟的移动友好网络？</p><p><strong>受MobileViT和Mobile-Former的启发，我们也利用了CNN和ViT的优势。一个基于CNN的模块，表示为Token Pyramid模块，用来处理高分辨率的图像，以快速产生局部特征<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>金字塔。考虑到移动设备的计算能力非常有限，这里我们使用一些堆叠的轻量级MobileNetV2块，采用快速下采样策略来建立一个标记金字塔。为了获得丰富的语义和大的感受野，我们采用了基于ViT的模块，称为语义提取器，并将标记作为输入。为了进一步降低计算成本，使用平均池运算法则，将tokens减少到极小的数量，例如，输入大小的1/(64×64)。与ViT[11]、T2T-ViT[49]和LeViT[12]使用嵌入层的最后输出作为输入标记不同，我们将来自不同规模（阶段）的标记汇集成极小的数字（分辨率）并沿通道维度串联。然后，新的标记被送入transformer块以产生全局语义。由于Transformer块中的剩余连接，学习到的语义与标记的尺度有关，表示为scaleeaware全局语义。</strong></p><p>为了获得密集预测任务的强大层次特征，标度感知的全局语义被来自不同标度的标记通道所分割，然后标度感知的全局语义与相应的标记融合以增强表示。增强后的标记被用作分割头的输入。</p><p><img src="images/image-20221205003950603.png" alt="image-20221205003950603" /></p><blockquote><p>图1 ADE20K估值集上的延迟、mIoU性能与模型大小的关系。以前的模型被标记为红点，而我们的模型则显示为蓝点。我们的方法实现了更好的延迟/准确度权衡。延迟是在单个高通骁龙865上测量的，输入尺寸为512×512，只使用了一个ARM CPU内核进行速度测试。没有使用其他加速手段，例如，GPU或量化。*表示输入尺寸为448×448。</p></blockquote><p>为了证明我们方法的有效性，我们在具有挑战性的分割数据集上进行了实验。ADE20K [59], Pascal Context [33] 和COCOStuff [1]. 我们考察了硬件上的延迟，即一个现成的基于ARM的计算核心。如图1所示，我们的方法以较低的延迟获得了比MobileNets更好的结果。为了证明我们方法的通用性，我们还对COCO[27]数据集进行了物体检测的实验。总结一下，我们的贡献如下。</p><ul><li>所提出的TopFormer将来自不同尺度的标记作为输入，并将这些标记汇集成非常小的数字，以便以非常低的计算成本获得尺度感知的语义。</li><li>所提出的语义注入模块可以将标度感知的语义注入到相应的标记中，以建立强大的分层特征，这对于密集的预测任务至关重要。</li><li>在ADE20K数据集上，所提出的基础模型可以达到比MobileNetV3好5%的mIoU，并且在基于ARM的移动设备上的延迟更低。微型版本可以在基于ARM的移动设备上进行实时分割，结果具有竞争力。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>在本节中，我们从三个方面来回顾最近的方法。1）轻量级vision transformers，2）高效卷积神经网络，3）移动语义分割。</p><h3 id="21-轻量-vision-transformers"><a class="markdownIt-Anchor" href="#21-轻量-vision-transformers"></a> 2.1. 轻量 Vision Transformers</h3><p>对于在图像识别中使用transformers结构，有许多探索[18, 44, 55]。ViT[11]是第一个将纯transformers应用于图像分类的工作，取得了最先进的性能。在这之后，DeiT[41]引入了基于tokens的蒸馏，以减少训练transformers所需的数据量。T2T-ViT[49]通过递归地将相邻的tokens聚合为一个tokens来减少tokens的长度，将图像结构化为tokens。Swin Transformer[28]在每个局部窗口内计算自我注意，从而使输入标记的数量产生线性计算复杂性。然而，这些vision transformers和后续产品往往有大量的参数和沉重的计算复杂性。</p><p>为了建立一个轻量级的vision transformers，LeViT[12]设计了一个混合架构，使用堆叠的标准卷积层与stride-2来减少标记物的数量，然后附加一个改进的vision transformers来提取语义。对于分类任务，LeViT在CPU上的表现明显优于EfficientNet。MobileViT[31]采用了相同的策略，并使用MobilenetV2块而不是标准的卷积层对特征图进行下采样。Mobile-Former采用了带有双向桥的并行结构，并利用了MobileNet和transformer的优势。然而，在移动设备上，MobileViT和其他基于ViT的网络明显比MobileNets[16, 17, 36]慢，这在[31]中有所报道。对于分割任务，输入图像总是高分辨率的。因此，基于ViT的网络要比MobileNets执行得更快就更具有挑战性。在本文中，我们的目标是设计一个轻量级的vision transformers，它可以在分割任务中以较低的延迟胜过移动网络。</p><h3 id="22-efficient-convolutional-neural-networks"><a class="markdownIt-Anchor" href="#22-efficient-convolutional-neural-networks"></a> 2.2. Efficient Convolutional Neural Networks</h3><p>在移动和嵌入式设备上部署视觉模型的需求越来越大，这鼓励了对高效卷积神经网络设计的研究。MobileNet[16,17,36]提出了一个倒置的瓶颈结构，它将深度和点的卷积堆叠起来。IGCNet[53]和ShuffleNet[30,54]使用通道洗牌/permutation操作符来使多组卷积层的信息跨组流动。GhostNet[13]使用更便宜的算子，深度卷积，以产生更多的特征。AdderNet[2]利用加法来交换大量的乘法。MobileNeXt[60]翻转了倒置残差块的结构，提出了一个连接高维表征的构建块来代替。EfficientNet[38, 39]和TinyNet[14]研究深度、宽度和分辨率的复合缩放。</p><h3 id="23-mobile-semantic-segmentation"><a class="markdownIt-Anchor" href="#23-mobile-semantic-segmentation"></a> 2.3. Mobile Semantic Segmentation</h3><p>最准确的分割网络通常需要数十亿FLOPs的计算，这可能超过移动和嵌入式设备的计算能力。为了加快分割速度并降低计算成本，ICNet[56]使用多尺度图像作为输入，并使用级联网络，以提高工作效率。DFANet[24]利用轻量级骨干网来加快其网络速度，并提出了一个跨级别的特征聚合来提高准确性。SwiftNet[35]利用横向连接作为低成本的解决方案，在保持速度的同时恢复预测分辨率。BiSeNet[47]引入了空间路径和语义路径以减少计算量。AlignSeg[20]和SFNet[25]将相邻层次的特征图对齐，并使用特征金字塔框架进一步增强特征图。ESPNets[32]通过将标准卷积分解为点状卷积和扩张卷积的空间金字塔来节省计算量。AutoML技术[5, 10, 34]被用来搜索场景解析的有效架构。NRD[52]用动态卷积滤波网络动态地生成神经表征。LRASPP[16]采用MobileNetV3作为编码器，并提出了一个新的高效分割解码器Lite Reduced Atrous Spatial Pyramid Pooling（LR-ASPP），它仍然是移动语义分割的强大基线。</p><h2 id="3-architecture"><a class="markdownIt-Anchor" href="#3-architecture"></a> 3. Architecture</h2><p>我们的整体网络结构如图2所示。我们可以看到，我们的网络由几个部分组成。标记金字塔模块、语义提取器、语义注入模块和分割头。代号金字塔模块将图像作为输入并产生代号金字塔。vision transformers被用作语义提取器，它将tokens金字塔作为输入并产生标度器语义。语义注入模块将语义注入到相应比例的标记中，以增强表示。最后，分割头使用增强的标记金字塔来执行分割任务。接下来，我们介绍这些模块的细节。</p><p><img src="images/image-20221205004024508.png" alt="image-20221205004024508" /></p><h3 id="31-token-pyramid-module"><a class="markdownIt-Anchor" href="#31-token-pyramid-module"></a> 3.1. Token Pyramid Module</h3><p>受MobileNets[36]的启发，提议的Token Pyramid Module由堆叠的MobileNet块组成[36]。与MobileNets不同的是，Token Pyramid Module不以获得丰富的语义和大的接受域为目的，而是使用较少的块来构建一个token pyramid。我们在第3.4节中展示了Token Pyramid模块的层设置。</p><p>如图2所示，以图像I∈R3×H×W为输入，其中3、H、W分别表示I的RGB通道、高度、宽度，我们的标记金字塔模块首先将图像通过一些MobileNetV2块[36]，产生一系列标记{T1，…，TN }，其中N表示尺度的数量2。之后，标记{T1, …, TN }，被平均汇集到目标尺寸，例如，R H 64 × W 64。最后，来自不同尺度的标记沿着通道维度被串联起来，产生新的标记。新的标记将被送入视觉transformer，以产生规模感知语义。由于新标记的数量很少，即使新标记的通道很大，视觉transformer也能以很低的计算成本运行。</p><h3 id="32-vision-transformer-as-scale-aware-semantics-extractor"><a class="markdownIt-Anchor" href="#32-vision-transformer-as-scale-aware-semantics-extractor"></a> 3.2. Vision Transformer as Scale-aware Semantics Extractor</h3><p>Scale-aware Semantics Extractor由一些堆叠的Transformer块组成。Transformer块的数量为L。Transformer块由多头注意模块、前馈网络（FFN）和剩余连接组成。为了保持标记的空间形状并减少重塑的数量，我们用一个1×1的卷积层代替线性层。此外，TopFormer的所有非线性激活都是ReLU6[17]，而不是ViT的GELU函数。</p><p>对于多头注意力模块，我们遵循LeViT[12]的设置，将键K和查询Q的头尺寸设置为D=16，将值V的头设置为2D=32通道。减少K和Q的通道可以减少计算注意力图和输出时的计算成本。同时，我们还放弃了层归一化层，并在每个卷积中附加了一个批归一化。批量归一化可以在推理过程中与前面的卷积合并，这样可以比层归一化运行得更快。</p><p>对于前馈网络，我们遵循文献[19，48]，通过在两个1×1卷积层之间插入一个深度卷积层来增强vision transformers的局部连接。为了降低计算成本，FFN的扩展系数被设置为2。transformers块的数量为L，然后头的数量将在3.4小节给出。</p><p>如图2所示，vision transformers将来自不同尺度的标记作为输入。为了进一步减少计算量，使用平均池运算法则将来自不同尺度的tokens数量减少到输入大小的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>64</mn><mo>×</mo><mn>64</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{64×64}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span><span class="mbin mtight">×</span><span class="mord mtight">6</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。来自不同尺度的集合标记具有相同的分辨率，它们被串联起来作为vision transformers的输入。视觉transformer可以获得全图像的接受域和丰富的语义。更具体地说，全局性的自我注意沿着空间维度在标记之间交换信息。1×1卷积层将在来自不同尺度的标记之间交换信息。在每个Transformer块中，在交换了所有尺度的标记的信息后，学会了残差映射，然后残差映射被添加到标记中，以增强表示和语义。最后，在通过几个transformer块之后，就得到了尺度感知的语义。</p><h3 id="33-semantics-injection-module-and-segmentation-head"><a class="markdownIt-Anchor" href="#33-semantics-injection-module-and-segmentation-head"></a> 3.3. Semantics Injection Module and Segmentation Head</h3><p>在获得标度感知语义后，我们直接将它们与其他标记<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>T</mi><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">T^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span>一起加入。然而，在标记<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msup><mi>T</mi><mn>1</mn></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>T</mi><mi>N</mi></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">{\{T^1, ..., T^N\}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span>和标度意识语义之间存在着明显的语义差距。为此，在融合这些标记之前，引入语义注入模块来缓解语义差距。如图2所示，<strong>语义注入模块（SIM）将tokens金字塔模块的本地tokens和视觉transformer的全局语义作为输入。本地标记通过1×1卷积层，然后进行批量归一化，产生要注入的特征。全局语义被送入1×1卷积层，然后是批量归一化层和sigmoid层以产生语义权重，同时，全局语义也通过1×1卷积层，然后是批量归一化。三个输出具有相同的大小。然后，全局语义通过Hadamard生产注入到本地标记中，全局语义也在注入后与特征相加。几个SIM的输出共享相同数量的通道，表示为M。</strong></p><p>在语义注入后，来自不同尺度的增强标记同时捕获了丰富的空间和语义信息，这对语义分割至关重要。<strong>此外，语义注入还缓解了标记之间的语义差距。所提出的分割头首先将低分辨率的标记上采样到与高分辨率的标记相同的大小，并将所有尺度的标记进行元素加和。最后，该特征通过两个卷积层来产生最终的分割图。</strong></p><h3 id="34-architecture-and-variants"><a class="markdownIt-Anchor" href="#34-architecture-and-variants"></a> 3.4. Architecture and Variants</h3><p>为了定制各种复杂度的网络，我们分别引入了TopFormer-T（TopFormer-T）、TopFormer-Small（TopFormer-S）和TopFormer-Base（TopFormer-B）。</p><p>表1中给出了基础、小型和微型模型的尺寸和FLOPs。基本型、小型和微型模型在每个多头自留地模块中分别有8个、6个和4个头，并有M=256、M=192和M=128作为目标通道数。关于网络配置的更多细节，请参考补充材料。</p><p>为了在准确性和实际延迟之间取得更好的权衡，我们选择最后三个标度T2、T3和T4的标记作为SIM和分割头的输入。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126200902245.png" alt="image-20221126200902245" /></p><blockquote><p>表1 ADE20K值集的结果。延迟和GFLOPs计算采用512×512分辨率的图像作为输入。†表示以448×448分辨率作为输入的结果。延迟是基于单个高通Snapdragon 865处理器测量的。所有结果都是在单线程下评估的。按照MMSegmentation的设置，基于CNN的方法使用了批量大小=32。为了与Segformer进行公平的比较，TopFormer使用了批处理规模=16。mIoU是在单尺度推理中报告的。</p></blockquote><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>在这一节中，我们首先对几个公共数据集进行了实验。我们描述了实施细节，并将结果与其他作品的语义分割任务进行比较。然后我们进行消融研究，分析不同部分的有效性和效率。最后，我们报告了在物体检测任务上的表现，以显示我们方法的通用能力。</p><h3 id="41-semantic-segmentation"><a class="markdownIt-Anchor" href="#41-semantic-segmentation"></a> 4.1. Semantic Segmentation</h3><h4 id="411-datasets"><a class="markdownIt-Anchor" href="#411-datasets"></a> 4.1.1 Datasets</h4><p>我们在三个数据集上进行了实验，ADE20K[59]，PASCAL Context[33]和COCO-Stuff[1]。类间交集的平均值被设定为我们的评价指标。全精度TopFormer模型被转换为TNN[9]，然后在一个基于ARM的计算核心上测量延迟。ADE20K。ADE20K数据集总共包含25K图像，涵盖150个类别。所有图像被分成20K/2K/3K，用于训练、验证和测试。PASCAL Context: Pascal Context数据集有4998张用于训练的场景图像和5105张用于测试的图像。有59个语义标签和1个背景标签。COCO-Stuff。COCO-Stuff[1]数据集用像素级的东西注释来增强COCO数据集。有10000张从COCO中选出的复杂图像。训练集和测试集分别由9K和1K图像组成。</p><h4 id="412-implementation-details"><a class="markdownIt-Anchor" href="#412-implementation-details"></a> 4.1.2 Implementation Details</h4><p>我们的实现是建立在MMSegmentation[8]和Pytorch之上的。它利用ImageNet预训练的TopFormer3作为骨干。标准的BatchNorm[21]层被Synchronize BatchNorm取代，以便在训练期间收集多个GPU上的BatchNorm的平均值和标准偏差。对于ADE20K数据集，我们按照Segformer使用160K调度器，批次大小为16。COCO-Stuff和PASCAL Context的训练迭代为80K。对于所有的方法和数据集，初始学习率被设定为0.00012，权重衰减为0.01。使用系数为1.0的 &quot;聚 &quot;学习率计划。在ADE20K上，我们采用与[46]相同的数据增强策略进行公平比较。训练图像首先被随机缩放，然后从结果图像中随机裁剪出固定大小的斑块。此外，我们还应用随机调整大小、随机水平翻转、随机裁剪等。在COCO-Stuff和PASCAL Context上，我们使用[8]的默认增强策略。在训练过程中，我们将PASCAL Context的图像大小调整为480×480，COCO-Stuff为512×512。最后，我们报告了验证集上的单一比例结果，以与其他方法进行比较。在推理过程中，我们遵循常见的策略，将ADE20K和COCO-Stuff的图像短边重新缩放为训练用的裁剪尺寸。至于PASCAL Context，图像被调整为480×480，然后输入我们的网络。</p><h4 id="413-experiments-on-ade20k"><a class="markdownIt-Anchor" href="#413-experiments-on-ade20k"></a> 4.1.3 Experiments on ADE20K</h4><p>我们在表1中对我们的TopFormer和以前的方法在ADE20K验证集上进行了比较。实际的延迟是在装有单个高通骁龙865处理器的移动设备上测量的。在这里，我们选择轻量级的vision transformers（ViT）[10, 22, 30, 46]和高效的卷积神经网络（CNN）[15, 16, 36, 37]作为编码器。此外，各种解码器也包括在表1中。在表1的所有方法中，基于MobilenetV2的Deeplabv3+实现了最好的mIoU（38.1%），然而，延迟超过1000毫秒，这限制了它在移动设备上的应用。</p><p>在这些基于CNN的基线中，采用mobilenetV3-large[16]作为编码器，LR-ASPP作为解码器的方法，在计算（2.0 GFLOPs）和精度（33.1 mIoU）之间实现了良好的权衡。继[16]之后，我们还在最后阶段减少了所有特征层的通道数，以进一步降低计算成本，表示为MobileNetV3-Large-reduce。基于较轻的骨干网，LR-ASPP可以在较低的延迟（81毫秒）下达到32.3%的mIoU。与具有可比延迟的LR-ASPP模型相比，我们的小版本TopFormer的准确度提高了3.8%。与LR-ASPP相比，微小版本的TopFormer能以2倍的计算量（0.6G vs. 1.3G）达到相当的性能。Lite-ASPP[4]是Deeplabv3+的缩减通道版本。</p><p>在这些基于ViT的基线中，HR-NAS-B[10]使用搜索技术将Transformer块引入HRNet[37]的设计中，也在计算量（2.2 GFLOPs）和精度（34.9 mIoU）之间实现了良好的权衡。与HR-NAS-B模型相比，我们的小版本TopFormer在计算量较少的情况下，准确度提高了1.2%。SegFormer[46]以较少的参数（3.8M）取得了很好的性能（37.4 mIoU），<strong>尽管SegFormer采用了高效的多头自关注，但由于大量的tokens，计算量仍然很大。与SegFormer相比，我们的基本版本TopFormer可以实现相当的性能，但计算量却减少了4倍以上（1.8GFLOPs对8.4GFLOPs）。</strong></p><p>为了在基于ARM的移动设备上实现实时分割，我们将输入图像的大小调整为448×448，并将其送入TopFormer-tiny，推理时间减少到32ms，性能略有下降。据我们所知，这是第一个基于ViT的方法可以在基于ARM的移动设备上实现实时分割，并取得有竞争力的结果。</p><h4 id="414-ablation-study"><a class="markdownIt-Anchor" href="#414-ablation-study"></a> 4.1.4 Ablation Study</h4><p>我们首先进行消融实验，讨论不同组件的影响，包括标记金字塔、语义注入模块和分割头。在不丧失一般性的情况下，所有的结果都是通过在训练集上训练和在验证（val）集上评估得到的。</p><h5 id="符号金字塔的影响"><a class="markdownIt-Anchor" href="#符号金字塔的影响"></a> 符号金字塔的影响。</h5><p>这里，我们从两个方面来讨论Token Pyramid，即把Token Pyramid作为输入的影响和从不同尺度选择Token作为输出的影响。如表2所示，我们分别进行了将不同尺度的叠加标记作为语义提取器的输入，以及将最后一个标记作为语义提取器的输入的实验。为了进行公平的比较，我们附加了一个1×1的卷积层，将通道扩大到与堆积的标记相同。实验结果证明了使用tokens金字塔作为输入的有效性。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126201924930.png" alt="image-20221126201924930" /></p><p>在获得标度感知语义后，SIM将把语义注入到本地Tokens中。为了在准确性和计算成本之间追求更好的权衡，我们尝试选择不同规模的tokens进行注入。如表3所示，使用{ 1 4, 1 8, 1 16 , 1 32 }中的代币可以在最繁重的计算中达到最佳性能。使用{ 1 16 , 1 32 }中的tokens，在最轻的计算中实现了更差的性能。为了在准确性和计算成本之间实现良好的权衡，我们在所有其他实验中选择使用{ 1 8, 1 16 , 1 32 }中的tokens。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126201935606.png" alt="image-20221126201935606" /></p><h5 id="规模感知语义提取器的影响"><a class="markdownIt-Anchor" href="#规模感知语义提取器的影响"></a> 规模感知语义提取器的影响。</h5><p>在这里，我们在Topformer-T上进行了实验来检验SASE。结果显示在表4中。这里，我们使用没有SASE的Topformer作为基线。添加SASE带来了大约10%的mIoU收益，这是一个显著的改进。为了验证Transformer块中的多头自我注意模块（MHSA），我们删除了所有的MHSA模块，并增加了更多的FFN，以进行公平的比较。结果表明，MHSA可以带来大约2.4%的mIoU收益，在精心的架构设计下，这是一个高效和有效的模块。同时，我们将SASE与流行的上下文模型，如ASPP和PPM，在TPM的基础上进行比较。如表 4 所示，&quot;+SASE &quot;比 &quot;+PSP &quot;和 &quot;+ASPP &quot;能以更少的计算成本实现更好的性能。实验结果表明，SASE更适合于在移动设备中使用。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126202153212.png" alt="" /></p><h5 id="语义注入模块和分割头的影响"><a class="markdownIt-Anchor" href="#语义注入模块和分割头的影响"></a> 语义注入模块和分割头的影响。</h5><p>由于语义注入模块和分割头的密切关系，我们将这两者放在一起讨论。这里，我们首先讨论语义注入模块的设计。如表5所示，在一个Sigmoid层之后，将本地标记和语义相乘，表示为 “SigmoidAttn”。将语义提取器的语义添加到相应的本地标记中，表示为 “SemInfo”。与 &quot;SigmoidAttn &quot;和 &quot;SemInfo &quot;相比，同时添加 &quot;SigmoidAttn &quot;和 &quot;SemInfo &quot;可以带来相当大的改进，只需进行少量的额外计算。</p><p>这里，我们讨论一下分割头的设计。在将特征传入语义注入模块（Semantic Injection Module）之后，输出的分层特征既具有强大的语义，又具有丰富的空间细节。拟议的分割头只是将它们加在一起，然后使用两个1×1卷积层来预测分割图。我们还设计了另外两个分割头，如图4所示。Sum Head &quot;与SIM中只添加 &quot;SemInfo &quot;完全相同。Concat Head &quot;使用一个1×1的卷积层来减少SIM输出的通道，然后将这些特征串联起来。与 &quot;并集头 &quot;和 &quot;和集头 &quot;相比，目前的分割头可以达到更好的性能。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126202318278.png" alt="image-20221126202318278" /></p><h5 id="sim中宽度的影响"><a class="markdownIt-Anchor" href="#sim中宽度的影响"></a> SIM中宽度的影响。</h5><p>在本文中，我们把SIM中的通道数定为M。在这里，我们研究了SIM中不同M的影响，并找到一个合适的M来实现良好的权衡。如表7所示，M=256、192、128以非常接近的计算量实现了类似的性能。因此，我们在微小模型、小模型和基本模型中分别设定M=128、192、256。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126202349244.png" alt="image-20221126202349244" /></p><h5 id="输出跨度的影响"><a class="markdownIt-Anchor" href="#输出跨度的影响"></a> 输出跨度的影响。</h5><p>来自不同阶段的tokens被汇集到固定的分辨率，即输出跨度。表8显示了不同分辨率的结果。s32, s64, s128表示汇集的标记的分辨率为输入尺寸的1 32×32, 1 64×64, 1 128×128。考虑到计算和精度的权衡，我们选择s64作为语义提取器的输入标记的输出跨度。</p><h5 id="计算-参数和延迟的统计"><a class="markdownIt-Anchor" href="#计算-参数和延迟的统计"></a> 计算、参数和延迟的统计。</h5><p>这里，我们对所提出的TopFormer-Tiny的计算、参数和延迟进行了统计。如图3所示，虽然语义提取器的参数最多（74%），但语义提取器的FLOPs和实际延迟却相对较低（约10%）。</p><h4 id="415-experiments-on-pascal-context"><a class="markdownIt-Anchor" href="#415-experiments-on-pascal-context"></a> 4.1.5 Experiments on Pascal Context</h4><p>我们在表9中把我们的TopFormer和以前的方法在Pascal Context测试集上进行比较。我们分别评估了59个类别和60个类别（包括背景）的性能。很明显，我们的方法比之前所有基于CNNs或ViT的方法在较少的计算量下取得了更好的性能。为了更好地理解，我们分别测量了主干和头部的FLOPs。所提出的方法能以最轻的骨干和头部实现最佳性能。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126202412885.png" alt="image-20221126202412885" /></p><h4 id="416-experiments-on-coco-stuff"><a class="markdownIt-Anchor" href="#416-experiments-on-coco-stuff"></a> 4.1.6 Experiments on COCO-Stuff</h4><p>我们在表10中对我们的TopFormer和以前的COCO-Stuff验证集的方法进行了比较。分别测量了骨干网和头部的FLOPs。可以看出，我们的方法取得了最好的性能，与计算量相当的MobileNetV3模型相比，TopFormer的基础版本的准确度提高了8%。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126202428264.png" alt="image-20221126202428264" /></p><h3 id="42-object-detection"><a class="markdownIt-Anchor" href="#42-object-detection"></a> 4.2. Object Detection</h3><p>为了进一步证明所提出的TopFormer的泛化能力，我们对COCO数据集进行了物体检测任务。COCO由118K图像组成，用于训练，5K用于验证，20K用于测试。我们在train2017分集上训练所有模型，在val2017集上评估所有方法。我们选择RetinaNet[26]作为物体检测方法，并采用不同的骨架来产生特征金字塔。我们的实现是建立在MMdetection[3]和Pytorch之上。对于提议的TopFormer，我们用RetinaNet中的检测头代替分割头。如表11所示，基于TopFormer的RetinaNet能够以较低的计算量取得比MobileNetV3和ShuffleNet更好的性能。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221126202438751.png" alt="image-20221126202438751" /></p><h2 id="5-conclusion-and-limitations"><a class="markdownIt-Anchor" href="#5-conclusion-and-limitations"></a> 5. Conclusion and Limitations</h2><p>在本文中，我们提出了一个用于移动视觉任务的新架构。结合CNN和ViT的优势，所提出的TopFormer在准确性和计算成本之间实现了良好的权衡。TopFormer的微小版本可以在基于ARM的移动设备上产生具有竞争力的实时推理结果。实验结果证明了该方法的有效性。TopFormer的主要限制是对物体检测的微小改进。我们将继续提高物体检测的性能。此外，我们将在未来的工作中探索TopFormer在密集预测中的应用。</p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>We use ‘features’ and ‘tokens’ interchangeably here. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‘Squeeze &amp; excite’ guided few-shot segmentation of volumetric images</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Squeeze-excite-guided-few-shot-segmentation-of-volumetric-images/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Squeeze-excite-guided-few-shot-segmentation-of-volumetric-images/</url>
      
        <content type="html"><![CDATA[<h1 id="squeeze-excite-guided-few-shot-segmentation-of-volumetric-images"><a class="markdownIt-Anchor" href="#squeeze-excite-guided-few-shot-segmentation-of-volumetric-images"></a> ‘Squeeze &amp; excite’ guided few-shot segmentation of volumetric images</h1><blockquote><p><a href="zotero://open-pdf/library/items/F3FET4A6">文章链接</a></p></blockquote><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=1">摘要</a></h2><p>深度神经网络能够实现高度精确的图像分割，但需要大量的人工注释数据进行监督训练。小样本学习的目的是通过从小样本有注释的支持实例中学习一个新的类别来解决这个缺点。我们介绍了一个新颖的小样本框架，用于分割只有几个注释的切片的体积医学图像。与计算机视觉领域的其他相关工作相比，<strong>主要的挑战是缺乏预训练的网络和医学扫描的体积性质。<strong>我们通过提出一个新的架构来解决这些挑战，该架构用于小样本的分割，其中包括 &quot;挤压和激发 &quot;块。我们的双臂结构包括一个调节器臂，它处理注释的支持输入并产生一个特定的任务表示。这个表征被传递给分割器臂，它使用这些信息来分割新的查询图像。为了促进调节器和分割器臂之间的有效互动，我们建议使用 &quot;通道挤压和空间激励 &quot;模块–轻量级的计算模块–使两个臂之间的互动更加频繁，而模型复杂性的增加可以忽略不计。这一贡献使我们能够在</strong>不依赖预训练模型的情况下进行图像分割</strong>，而预训练模型通常在医学扫描中是不可用的。此外，我们提出了一种高效的体积分割策略，即把支持体积的几个片子与查询体积的所有片子进行最佳配对。我们在内脏数据集的全身对比度增强的CT扫描上进行了器官分割的实验。我们提出的模型在分割精度方面优于多个基线和现有的方法，有很大的优势。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=1">1. introduction</a></h2><p>完全卷积神经网络（F-CNN）在自然图像和医学图像的语义图像分割中都取得了最先进的性能。尽管它们在图像分割方面取得了巨大的成功，但当只有小样本标记的图像可用时，它们的作用有限。一般来说，F-CNN是高度复杂的模型，有数百万个可训练的权重参数，需要数以千计的密集注释的图像进行训练才能有效。一个更好的策略可能是调整一个已经训练好的F-CNN模型，以便从小样本标记的图像中分割出一个新的语义类别。这种策略在计算机视觉应用中往往效果很好，在这种应用中，预先训练好的模型被用来提供一个良好的初始化，随后用新的数据进行微调，使其适应新的语义类别。然而，在不存在过度拟合风险的情况下对现有的预训练网络进行微调，仍然需要相当数量的注释图像（至少在数百张的数量级）。当处理极低的数据制度时，即只有新类别的单一或小样本注释图像可用时，这种基于微调的迁移学习往往会失败，并可能导致过度拟合。</p><p>小样本学习是一种机器学习技术，旨在解决这样的情况：现有的模型需要用小样本的例子快速地归纳到一个未知的语义类别（Fei-Fei等人，2006；Miller等人，2000；Fei-Fei，2006）。小样本学习的基本概念是由人类的学习过程所激发的，在这个过程中，利用从过去的经验中获得的强大的先验知识，用很少的观察来快速学习新的语义。虽然用于图像分类和物体检测的小样本学习是一个很好的研究课题，但用神经网络进行语义图像分割的小样本学习最近才被提出（Shaban等人，2017；Rakelly等人，2018）。在这样一个极低的数据体系中进行密集的像素级高维预测是一个巨大的挑战。但同时，小样本学习可以对医学图像分析产生很大的影响，因为它解决了从几乎没有注释的数据中学习的问题，而这是由于依赖医学专家进行人工标注的常态。在这篇文章中，我们提出了一个专门为分割体积医学扫描而设计的小样本分割框架。实现这一目标的关键是将最近提出的 &quot;挤压和激发 &quot;区块整合到我们新颖的小样本架构的设计中（Roy等人，2018b）。</p><h3 id="11-background-on-few-shot-segmentation"><a class="markdownIt-Anchor" href="#11-background-on-few-shot-segmentation"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=2">1.1. Background on few-shot segmentation</a></h3><p>小样本学习算法试图通过利用以前从不同的标记训练数据中获得的知识，将一个模型推广到一个新的、以前未见过的类别。图1说明了整体设置，我们想在新的扫描中对肝脏进行分割，因为只有一个切片中的肝脏注释。一个小样本的分割网络架构（Shaban等人，2017；Rakelly等人，2018）通常由三部分组成：（i）一个调节器臂，（ii）一组交互块，和（iii）一个分割臂。在推理过程中，模型被提供一个支持集（Is，Ls(α)），由一个图像Is组成，新的语义类（或器官）α被概述为二进制掩码表示为Ls(α)。此外，还提供了一个查询图像Iq，其中要对新的语义类别进行分割。调理器接收支持集并执行前向传递。这在调节器臂的所有中间层中产生了支持集的多个特征图。这组特征图被称为任务表示，因为它们编码了分割新语义类别所需的信息。任务表示由交互块承担，其作用是将相关信息传递给分割臂。分割臂将查询图像作为输入，利用交互块提供的任务信息，为查询输入Iq生成一个分割掩码Mq。因此，交互块将信息从调理器传递给分割器，并形成了小样本语义图像分割的主干。现有的方法在网络的瓶颈或最后一层使用单一连接的弱交互（Shaban等人，2017；Rakelly等人，2018）。</p><h3 id="12-challenges-for-medical-few-shot-segmentation"><a class="markdownIt-Anchor" href="#12-challenges-for-medical-few-shot-segmentation"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=2">1.2. Challenges for medical few-shot segmentation</a></h3><p>计算机视觉中关于小样本分割的现有工作处理二维RGB图像，并为分割器和调节臂使用预训练模型来帮助训练（Shaban等人，2017；Rakelly等人，2018）。预先训练的模型在训练开始时就提供了一个强大的先验知识，具有更强大的功能。因此，调节器和分割器之间的弱互动足以有效地训练模型。由于缺乏预训练的模型，直接扩展到医学图像是具有挑战性的。相反，调节器和分割器都需要从头开始训练。然而，在没有预先训练好的模型的情况下，用弱的交互作用来训练网络很容易出现不稳定和模式崩溃。</p><p>我们建议在两个臂之间的多个位置进行强互动，而不是弱互动。强相互作用有利于有效的梯度流动在两个臂上，这就简化了两个臂的训练，不需要任何预先训练的模型。<strong>为了实现互动，我们提出了最近引入的 “通道挤压和空间激励”（sSE）模块（Roy等人，2018a; 2018b）</strong>。<strong>在我们以前的工作中，我们使用sSE块对特征图进行自适应的自我重新校准，以帮助单一分割网络的分割。在这里，我们使用sSE块在小样本分割网络的2个臂之间进行通信。该块将学到的条件特征图作为输入，并执行 &quot;通道挤压 &quot;以学习空间图。这被用来对分割器特征图进行 “空间激发”。我们在所有的编码器、瓶颈和解码器模块之间使用sSE模块。SE块很适合于实现手臂之间的互动，因为它们是轻量级的，因此只略微增加了模型的复杂性。尽管它是轻量级的，但它们可以通过重新校准对分割器的特征产生强烈的影响。</strong></p><p>现有的小样本分割工作集中在二维图像上，而我们要处理的是容积式医疗扫描。在三维图像的所有切片上手动注释器官是很耗时的。遵循小样本学习的理念，注释应该发生在几个稀疏选择的片子上。为此，我们提出了一种体积分割策略，将支持体积的几个注释片与查询体积的所有片子适当配对，保持分割的片间一致性。</p><h3 id="13-contributions"><a class="markdownIt-Anchor" href="#13-contributions"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=3">1.3. Contributions</a></h3><p>In this work, we propose:</p><ol><li>一种新型的体积医学扫描的小样本分割框架。</li><li>在调节器和分割器臂之间的多个位置有强烈的相互作用，而不是在最后一层只有一个相互作用。</li><li>挤压和激励 &quot;模块用于实现互动。</li><li>从无到有的稳定训练，不需要预先训练的模型。</li><li>一种体积分割策略，对查询卷和支持卷的切片进行最佳配对。</li></ol><h3 id="14-overview"><a class="markdownIt-Anchor" href="#14-overview"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=3">1.4. Overview</a></h3><p>我们在第2节中讨论了相关的工作，在第3节中介绍了我们的小样本分割算法，在第4节中介绍了实验设置，在第5节中介绍了实验结果和讨论。最后，我们在第6节中对我们的贡献进行了总结。</p><h2 id="2-prior-work"><a class="markdownIt-Anchor" href="#2-prior-work"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=3">2. Prior work</a></h2><h3 id="21-few-shot-learning"><a class="markdownIt-Anchor" href="#21-few-shot-learning"></a> 2.1. Few-shot learning</h3><p>小样本学习的方法可以大致分为三组。</p><p>第一组方法是使基础分类器适应新的类别（Bart和Ullman，2005；Fei-Fei等人，2006；Hariharan和Girshick，2017）。这些方法往往容易过度拟合，因为它们试图在小样本新样本上拟合一个复杂的模型。</p><p><strong>第二组的方法旨在预测接近基础分类器的分类器，以防止过度拟合。其基本思想是使用双分支网络，其中第一分支预测一组动态参数，由第二分支用来产生预测（Bertinetto等人，2016；Wang和Hebert，2016）。</strong></p><p>第三组包含使用度量学习的算法。他们试图将数据映射到一个嵌入空间，其中不相似的样本被映射得很远，相似的样本被映射得很近，形成聚类。为此，标准方法依赖于连体结构（Koch等人，2015；Vinyals等人，2016）。</p><h3 id="22-few-shot-segmentation-using-deep-learning"><a class="markdownIt-Anchor" href="#22-few-shot-segmentation-using-deep-learning"></a> 2.2. Few-shot segmentation using deep learning</h3><p>用深度神经网络进行小样本分割的工作最近才被探索出来。在最早的一项工作中，Caelles等人（2017）利用有限的数据对预训练模型进行微调的想法。鉴于第一帧的注释，作者进行了视频分割。虽然他们的模型在这个应用中表现充分，但这种方法容易过拟合，适应一个新的类别需要重新训练，这阻碍了适应的速度。Shaban等人（2017）使用了一个双臂架构，第一臂看新的样本和它的标签，为第二臂回归分类权重，第二臂接收查询图像并生成其分割。Dong和Xing（2018）扩展了这项工作，以同时处理多个未知类别，进行多类分割。Rakelly等人（2018）把它带到了一个极其困难的情况，即支持集的监督只提供给前景和背景的几个选定的地标，而不是一个密集注释的二进制掩码。在PASCAL VOC计算机视觉基准上评估了现有的小样本分割方法（Shaban等人，2017；Rakelly等人，2018）。他们报告了较低的分割分数（平均相交大于联合约40%），证实了小样本的分割是一项非常具有挑战性的任务。</p><p>上述所有的论文都依赖于预训练的模型来开始训练过程。尽管对于计算机视觉应用来说，获得预训练的模型相对容易，但对于医学成像应用来说，没有预训练的模型可用。此外，它们使用的是二维RGB图像，而我们处理的是三维体积医学扫描。这更具挑战性，因为没有既定的策略来选择和配对支持切片与查询体积。这可能会导致查询切片与支持切片有很大的不同，甚至可能根本不包含目标类别的情况。</p><p>在医学图像分割领域，最近Zhao等人（2019）等人使用了一个学习到的变换来高度增强一个单一的注释体积进行一次分割。这与我们的方法有两点不同：</p><p>（i）他们使用单一的完全注释的体积，而我们只使用几个切片的注释；</p><p>（ii）他们使用学习到的表示来高度增强单一注释的体积进行分割，而我们使用单独的数据集，为其他类提供注释。</p><p>我们遵循Shaban等人（2017）在计算机视觉PASCAL VOC基准中定义的实验设置。</p><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=3">3. Method</a></h2><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210252033062.png" alt="" /></p><blockquote><p>图1.小样本分割框架的概述。支持集由图像切片<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">I_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和新语义类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_s(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span>的相应注释组成（这里α是类肝）。我们通过调节器臂传递支持集，其信息通过交互块传达给分割器臂。分割器臂使用这些信息，为生成标签图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>q</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_q(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span>的类别分割查询输入图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">I_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。除了支持集之外，小样本分割器以前从未见过肝脏的注释。</p></blockquote><p>在本节中，我们首先介绍了问题的设置，然后详细介绍了我们的网络结构和训练策略，最后描述了分割体积扫描的评估策略。</p><h3 id="31-problem-setup-for-few-shot-segmentation"><a class="markdownIt-Anchor" href="#31-problem-setup-for-few-shot-segmentation"></a> 3.1. Problem setup for few-shot segmentation</h3><p>小样本分割的训练数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msubsup><mrow><mo stretchy="false">(</mo><msubsup><mi>I</mi><mi>T</mi><mi>i</mi></msubsup><mo separator="true">,</mo><msubsup><mi>L</mi><mi>T</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup></mrow><annotation encoding="application/x-tex">D_{Train} = {(I^{i}_{T}, L^{i}_{T}(α))}^{N}_{i=1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.380926em;vertical-align:-0.32503099999999996em;"></span><span class="mord"><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.424669em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.055895em;"><span style="top:-2.374969em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.277564em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32503099999999996em;"><span></span></span></span></span></span></span></span></span></span>包括<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>对输入图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">I_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和其对应的关于语义类（或器官）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>的二元标签图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_T(α)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span>。所有存在于标签图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>L</mi><mi>T</mi><mi>i</mi></msubsup><mo>∈</mo><msub><mi>D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L^i_T∈D_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0999949999999998em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的语义类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>都属于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi></mrow></mrow><annotation encoding="application/x-tex">L_{Train}={1, 2, \dots,k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span>，也就是说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>∈</mo><msub><mi>L</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">α∈L_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。这里<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>表示训练集中注释的类（器官）的数量。我们的目标是从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中学习一个模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(.)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">.</span><span class="mclose">)</span></span></span></span>，这样，给定一个支持集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><msub><mi>I</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi>L</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>α</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo>∈</mo><msub><mi>D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">（I_s, L_s( \hat{\alpha})) /∈D_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的新语义类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>α</mi><mo>^</mo></mover><mo>∈</mo><msub><mi>L</mi><mrow><mi>T</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{α}∈L_{Test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和查询图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">I_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，可以推断出查询的二元分割<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>q</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>α</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_q(\hat{α})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。图1说明了CT扫描中测试类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>α</mi><mo>^</mo></mover><mo>=</mo></mrow><annotation encoding="application/x-tex">\hat{α}=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span>肝脏的设置。训练和测试的语义类别是互斥的，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∩</mo><msub><mi>L</mi><mrow><mi>T</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>=</mo><mtext>∅</mtext></mrow><annotation encoding="application/x-tex">L_{Train} ∩L_{Test} = ∅</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>。</p><p>小样本分割与小样本分类或物体检测的一个根本区别是，测试类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>T</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{Test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可能已经作为背景类出现在训练数据中。例如，网络已经在许多冠状CT切片上看到肝脏作为背景类的一部分，尽管肝脏不是训练类的一部分。这有可能形成先验知识，在测试过程中可以加以利用，而此时只提供了几个带肝脏注释的例子。</p><h3 id="32-architectural-design"><a class="markdownIt-Anchor" href="#32-architectural-design"></a> 3.2. Architectural design</h3><p>如前所述，我们的网络架构由三个构件组成：<strong>（i）一个调节器臂，（ii）与sSE模块的交互块，以及（iii）一个分割器臂</strong>。调节器臂处理支持集，以模拟一个新的语义类别（器官）在图像中的样子。它通过交互块将信息有效地传达给分割器臂。分割器臂通过利用交互块提供的信息在新的查询图像中分割新的语义类别。图2和图3进一步详细说明了该架构，下文也将对此进行描述。</p><p>在我们的框架中，我们选择分割器和调节器采用对称布局，即两者都有四个编码器和解码器块，由一个瓶颈块分开。对称的布局有助于在匹配块之间产生强烈的互动，因为特征图具有相同的空间分辨率。在现有的方法中，调节器和分割器只通过最后一层互动，在生成分割图之前（Shaban等人，2017；Rakelly等人，2018）。这种在单一位置的弱互动对他们的应用来说是足够的，因为他们能够使用一个预先训练好的模型，该模型已经提供了相当好的特征。由于我们没有预训练的网络，我们建议通过在多个位置纳入sSE块来建立一个强互动。这种互动有利于从头开始训练模型。</p><h4 id="321-调节器臂"><a class="markdownIt-Anchor" href="#321-调节器臂"></a> 3.2.1. 调节器臂</h4><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210311458024.png" alt="" /></p><blockquote><p>图2：小样本分割器的结构说明。在左边，我们展示了一个方框图，用箭头说明了基于编码器-解码器的调节器臂（底部）和分割器臂（顶部）。它们之间的相互作用由SE块显示，详见图3。在右边，提供了编码器块、解码器块、瓶颈块和分类器块的操作细节。</p></blockquote><p>调节器的任务是通过融合支持图像Is的视觉信息和注释Ls来处理支持集，并生成特定任务的特征图，能够捕捉到查询图像Iq中应该被分割的内容。我们将调理器的中间特征图称为任务表示。我们通过堆叠Is和二元图Ls(α)向调节器臂提供一个2通道的输入。这与Shaban等人（2017）不同，他们将Is和Ls（α）相乘来产生输入。他们的动机是抑制背景像素，以便调节器可以集中在物体内的模式（如猫类中的眼睛或鼻子模式）。由于器官类中的纹理模式有限，这在我们的扫描中并不成立。例如，肝脏内的体素强度是相当均匀的，边缘有限。因此，我们将支持集的两部分都送入网络，让它学习最佳融合，为查询图像提供最佳的分割。</p><p>调节器臂有一个基于编码器-解码器的结构，由四个编码器块和四个解码器块组成，由一个瓶颈层分隔，见图2。编码器和解码器区块都由一个通用区块构成，该区块的卷积层核大小为5×5，跨度为1，有16个输出特征图，然后是一个参数化的ReLU激活函数（He等人，2015）和一个批量归一化层。在编码器区块中，通用区块之后是一个2×2、步长为2的最大集合层，它将空间维度减少一半。在解码器块中，通用块之前有一个非池化层（Noh等人，2015）。在最大池操作过程中的池化指数被存储起来，并用于解码器块的相应解池阶段，用于对特征图进行上采样。解池操作不仅是无参数的，从而降低了模型的复杂性，而且还有助于保持细粒度分割的空间一致性。此外，必须指出的是，与标准的U-net架构不同，编码器和解码器块之间没有使用跳过连接（Ronneberger等人，2015）。这一重要设计选择的原因将在第5.2节讨论。</p><h4 id="322-使用-挤压和激励-模块的互动块"><a class="markdownIt-Anchor" href="#322-使用-挤压和激励-模块的互动块"></a> 3.2.2. 使用 &quot;挤压和激励 &quot;模块的互动块</h4><p>交互区块在小样本的分割框架中起着关键作用。这些块将条件器的任务表示作为输入，并将它们传达给分割器，以引导对查询图像的分割。理想情况下，这些块应该 (i)轻量级的，只略微增加模型的复杂性和计算时间；(ii)通过改善梯度流来简化网络的训练。</p><p>为此，我们使用最近推出的 “挤压和激励”（SE）模块。SE模块是实现任何CNN内特征图的自适应再校准的计算单元<a href="zotero://open-pdf/library/items/EUM8RJTP">Hu等人，2018</a>。SE模块可以提高CNN的性能，同时只稍微增加模型的复杂性。对于分类<a href="zotero://open-pdf/library/items/EUM8RJTP">Hu等人，2018</a>，特征图在空间上被挤压，以学习通道描述符，用于激发（或重新校准）特征图，强调某些重要通道。我们把它称为空间挤压和通道激发块（cSE）。在我们最近的工作中，我们将这一想法扩展到分割，通过通道挤压和空间激励（sSE）进行重新校准，强调相关的空间位置<a href="zotero://open-pdf/library/items/7YXV46TT">Roy等人，2018b; 2018a</a>。在这两种情况下，SE块都用于自我重新校准，即同一特征图被用作挤压和激发操作的输入。然而，在这里，我们建议将SE块用于调节器和分割器之间的互动。调节器的特征图被作为挤压操作的输入，其输出被用来激发分割特征图，详见下文。</p><p>通道挤压和空间激发（sSE） sSE块沿通道挤压调节器特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi></mrow></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi><mtext>′</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">U_{con}∈R^{H×W×C′}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，并在空间上激发相应的分割器特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>s</mi><mi>e</mi><mi>g</mi></mrow></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">U_{seg}∈R^{H×W×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，传达支持集的信息，以帮助查询图像的分割。H，W是特征图的高度和宽度，C′和C分别是支持器和分割器特征图的通道数。这里，我们考虑用一种特殊的切片策略来表示输入张量$U_{con} = [u^{1,1}<em>{con}, u^{1,2}</em>{con},\dots, u<sup>{j,i}_{con},\dots,u</sup>{H,W}<em>{con} ] <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，其中</mtext></mrow><annotation encoding="application/x-tex">，其中</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span></span></span></span>u<sup>{j,i}_{con}∈R</sup>{1×1×C′}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，</mtext></mrow><annotation encoding="application/x-tex">，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span></span></span></span>j∈{1, 2, . . . , H}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">和</span></span></span></span>i∈{1, 2, . . , W }<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">.</mi><mtext>同样，对于分割器特征图</mtext></mrow><annotation encoding="application/x-tex">. 同样，对于分割器特征图</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">割</span><span class="mord cjk_fallback">器</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span><span class="mord cjk_fallback">图</span></span></span></span>U</em>{seg} = [u^{1,1}<em>{seg}, u^{1,2}</em>{seg},\dots, u<sup>{j,i}_{seg},\dots,u</sup>{H,W}_{seg} ]$ 。空间挤压操作是使用卷积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>=</mo><msub><mi>W</mi><mrow><mi>s</mi><mi>q</mi></mrow></msub><mo>∗</mo><msub><mi>U</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">q = W_{sq}*U_{con}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>s</mi><mi>q</mi></mrow></msub><mo>∈</mo><msup><mi>R</mi><mrow><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mi>C</mi><mtext>′</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">W_{sq}∈R^{1×1×C′}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，产生一个投影张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">q∈R^{H×W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>。这个投影q通过一个sigmoid门控层σ ( - )，将激活的比例重新调整到[0, 1]，用来重新校准或激发<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>s</mi><mi>e</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{seg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的空间，以产生</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251844587.png" alt="" /></p><p>该模块的结构细节见图3。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210311500621.png" alt="" /></p><blockquote><p>图3：通道挤压和空间激励&quot;（sSE）模块的结构图，该模块被用作小样本分割器的交互块。该模块将条件特征图Ucon和分割器特征图Useg作为输入。对Ucon进行 “通道挤压”，生成空间图σ（q），用于Useg的 “空间激发”，从而促进互动。</p></blockquote><h4 id="323-segmenter-arm"><a class="markdownIt-Anchor" href="#323-segmenter-arm"></a> 3.2.3. Segmenter arm</h4><p>分割器臂的目标是利用调节器传递的信息，将给定的查询图像Iq与一个新的、未知的类别α进行分割，调节器捕捉到了关于以前未见过的类别α的高级信息。 交互块中的sSE模块压缩了调节器的任务表示，并通过空间激励自适应地重新校准分割器的特征图。</p><p>分割器的编码器-解码器结构与调节器相似，但有一些区别。首先，分割器中编码器和解码器块的卷积层有64个输出特征图，而调节器中只有16个。这为分割器部分提供了比调节器部分更高的模型复杂性。我们将在第5.3节中论证这一选择。其次，与调节器臂不同，分割器臂提供了一个分割图作为输出，见图2。因此，增加了一个分类器块，包括一个1×1的卷积层，有两个输出特征图（前景、背景），然后是一个用于推断分割的软最大函数。第三，在分割器中，在每个编码器、解码器和瓶颈块之后，交互块重新校准特征图，而在调节器臂中则没有这种情况。</p><h3 id="33-training-strategy"><a class="markdownIt-Anchor" href="#33-training-strategy"></a> 3.3. Training strategy</h3><p>我们使用与Shaban等人（2017）类似的训练策略。我们用训练数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>模拟一次性分割任务，如下所述。它包括两个阶段（i）使用批量采样器选择一个迷你批次；（ii）使用选定的迷你批次训练网络。</p><p>批量取样器为了模拟训练过程中的一次性分割任务，我们需要一个特定的策略来选择小批量的样本，这与传统的监督训练不同。对于每个迭代，我们按照下面的步骤来生成批量样本。</p><ol><li>我们首先随机抽取一个标签<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>∈</mo><msub><mi>L</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">α∈L_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>接下来，我们从训练数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中随机选择2个图像片及其相应的标签图，其中包含语义标签<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>。</li><li>标签图被二进制化，代表语义类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>为前景，其余为背景。</li><li>一对构成支持集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>I</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi>L</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(I_s, L_s(α))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，另一对构成查询集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>I</mi><mi>q</mi></msub><mo separator="true">,</mo><msub><mi>L</mi><mi>q</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(I_q, L_q(α))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>q</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_q(α)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span>作为计算损失的基础真实分割。</li></ol><p><strong>训练网络接收支持对（Is, Ls(α)）和查询对（Iq, Lq(α)）作为训练的批次</strong>。<strong>支持对（Is, Ls(α)）被串联起来，作为双通道输入提供给调节器臂</strong>。查询图像Iq作为输入被提供给分割臂。有了这两个臂的输入，一个前馈通道被执行以预测标签α的查询图像Iq的分割Mq(α)。我们使用Dice损失（Milletari等人，2016）作为成本函数，它在预测Mq(α)和地面实况Lq(α)之间计算为</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251847771.png" alt="" /></p><p>其中x对应的是预测图的像素。网络的可学习权重参数使用随机梯度下降法（SGD）进行优化，使LDice最小。在每个迭代中，批量采样器提供对应于不同α的不同样本，计算该特定α的损失并相应地更新权重。随着目标类别α在每次迭代中不断变化，网络就会收敛。因此，在收敛之后，我们可以说预测变得与所选的α无关。也就是说，对于一个新的α，网络应该能够进行分割，这也是我们在推理一次性分割框架时所期望的。</p><h3 id="34-volumetric-segmentation-strategy"><a class="markdownIt-Anchor" href="#34-volumetric-segmentation-strategy"></a> 3.4. Volumetric segmentation strategy</h3><p>如上一节所述，网络是用二维图像作为支持集和查询来训练的。但是，在测试阶段，需要对三维查询体进行分割。因此，从支持体积中，我们需要选择一个稀疏的注释切片集，形成支持集。对查询体进行分割的直接扩展是具有挑战性的，因为没有既定的策略将上述选定的支持片与查询体的所有片子配对，这将产生最佳的分割。在本节中，我们提出了一个解决这个问题的策略。</p><p>假设我们有预算在支持卷中只注释k个片断，查询卷按照程序进行分割:</p><ol><li><p>给定一个语义类，我们首先指出器官所在的支持量和查询量的切片范围（沿着一个固定的方向）。让我们假设支持体的范围是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msup><mi>S</mi><mi>s</mi></msup><mo separator="true">,</mo><msup><mi>S</mi><mi>e</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[S^s, S^e]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，查询体的范围是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msup><mi>Q</mi><mi>s</mi></msup><mo separator="true">,</mo><msup><mi>Q</mi><mi>e</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[Q^s, Q^e]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。这里的上标表示开始<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>和结束<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>的切片索引。</p></li><li><p>基于预算k，两个范围<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msup><mi>S</mi><mi>s</mi></msup><mo separator="true">,</mo><msup><mi>S</mi><mi>e</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[S^s, S^e]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msup><mi>Q</mi><mi>s</mi></msup><mo separator="true">,</mo><msup><mi>Q</mi><mi>e</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[Q^s, Q^e]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>都被划分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个等距的片组。让我们分别用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msubsup><mi>S</mi><mn>1</mn><mi>i</mi></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>S</mi><mi>k</mi><mi>i</mi></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[{S^{i}_{1}},\dots,{S^{i}_{k}}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1077719999999998em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4518920000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4168920000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msubsup><mi>Q</mi><mn>1</mn><mi>i</mi></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>Q</mi><mi>k</mi><mi>i</mi></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[{Q^{i}_{1}},\dots,{Q^{i}_{k}}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1077719999999998em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>来表示这些组。这里的下标表示组号。</p></li><li><p>在每一个k个支持体积组中，中心片<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msubsup><mi>S</mi><mn>1</mn><mi>c</mi></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>S</mi><mi>k</mi><mi>c</mi></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[{S^{c}_{1}},\dots,{S^{c}_{k}}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.033108em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>被注释为支持集。</p></li><li><p>我们将注释过的中心片<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mi>c</mi><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">S_{c}^{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>与所有i∈{1, … …, k}的组{Qi j}的所有片子配对。, k}. 这就形成了分割器和调节器的输入，以生成最终的体积分割。</p></li></ol><p>图4说明了体积评估的整体过程。在我们的实验中，我们观察到，如果支持切片和查询切片相似，那么分割性能就比它们非常不相似的情况要好。因此，如果扫描的整体对比度（即强度值或相互信息）相似，是有好处的。这可以直观地理解为支持切片的质量对分割器的性能有很大影响。在我们的评估策略中，对于一个固定的预算k，我们确保支持切片和相应的查询切片之间的不相似性是最小的。必须指出的是，在评估策略中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>Q</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi>Q</mi><mi>e</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[Q_s, Q_e]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>必须提供查询量。在我们的实验中，我们使用目标器官的标签掩码预先计算了它们。在实践中，这可以通过快速扫描切片手动完成，或者使用一个简单的自动工具，可以为此目的进行训练。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210311536316.png" alt="" /></p><blockquote><p>图4：k=3的几张照片的体积分割策略的说明。我们把查询卷和支持卷都分成k组切片。支持体中第i组的注释中心片与查询体中第i组的所有片子配对，以推断其分割。这是对i∈{1，2，3}所做的，并被传递给几张照片的分割器来分割整个卷。</p></blockquote><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image.png" alt="" /></p><h2 id="4-dataset-and-experimental-setup"><a class="markdownIt-Anchor" href="#4-dataset-and-experimental-setup"></a> <a href="zotero://open-pdf/library/items/F3FET4A6?page=6">4. Dataset and experimental setup</a></h2><h3 id="41-dataset-description"><a class="markdownIt-Anchor" href="#41-dataset-description"></a> 4.1. Dataset description</h3><p>我们选择了从对比度增强CT（ceCT）扫描中进行器官分割这一具有挑战性的任务，以评估我们的少许体积分割框架。我们使用内脏数据集（Jimenez-del Toro等人，2016），它由两部分组成（i）银色语料库（有65张扫描）和（ii）金色语料库（20张扫描）。所有的扫描都被重新取样到2毫米3的体素分辨率。</p><h3 id="42-problem-formulation"><a class="markdownIt-Anchor" href="#42-problem-formulation"></a> 4.2. Problem formulation</h3><p>由于目前还没有针对体积医学图像的小样本分割的基准，我们制定了自己的实验设置来进行评估。我们使用银色语料库扫描进行训练（DTrain）。对于测试，我们使用黄金语料库数据集。一个卷被用来创建支持集（卷ID：10000132_1_CTce_ThAb），14个卷被用来作为验证集，5个卷作为测试集。各卷的ID在手稿的末尾报告。在第5.1-5.4节提出的实验中，我们使用验证集，因为我们使用这些结果来确定架构配置，以及支持片的数量。最后，我们使用这些结果并在第5.5节中与测试集上的现有方法进行比较。</p><p>在我们的实验中，我们考虑将以下六个器官作为语义类别：</p><ol><li>肝脏</li><li>脾脏</li><li>右肾</li><li>左肾</li><li>右腰部肌肉</li><li>左腰部肌肉</li></ol><p>我们用4个卷进行实验，这样，每个器官在每个卷中都被视为一个未知的语义类别。表1中报告了每个折叠的训练和测试标签。</p><h3 id="43-hyperparameters-for-training-the-network"><a class="markdownIt-Anchor" href="#43-hyperparameters-for-training-the-network"></a> 4.3. Hyperparameters for training the network</h3><p>由于缺乏预训练的模型，我们无法使用Shaban等人（2017）的设置进行训练。因此，我们需要定义我们自己的超参数设置，列于表2。请注意，超参数是通过手动尝试不同的组合来估计的，而不是采用超参数优化框架，这可能会导致更好的结果，但同时也很耗时。</p><h2 id="5-experimental-results-and-discussion"><a class="markdownIt-Anchor" href="#5-experimental-results-and-discussion"></a> 5. Experimental results and discussion</h2><h3 id="51-squeeze-excitation-based-interaction"><a class="markdownIt-Anchor" href="#51-squeeze-excitation-based-interaction"></a> 5.1. ‘Squeeze &amp; excitation’ based interaction</h3><p>在本节中，我们研究了SE块的最佳位置以促进交互，并比较了cSE和sSE块的性能。在这里，我们将调节器臂的卷积核数设定为16，分割器臂的卷积核数设定为64。我们使用来自支持体的k=12个支持片。由于本实验的目的是评估SE块的位置和类型，我们保持上述参数固定，但以后再评估。有了放置SE块的四种不同的可能性和两种类型的cSE或sSE，我们总共有8种不同的基线配置。表3中报告了每个基线的配置和它们相应的每个折叠的分割性能。</p><p>首先，人们观察到，带有sSE的BL-1、3、5、7有一个体面的性能（超过0.4 Dice分），而BL-2、4、6、8的性能非常差（低于0.1 Dice分）。这表明，在这种小样本分割的应用中，sSE交互模块远远优于cSE模块。我们很难理解网络的动态，无法确定为什么会观察到这种行为。我们的直觉是，使用通道SE块的性能不佳与它使用的全局平均池化层有关，它将空间响应平均到一个标量值。在我们的应用中（或一般的医疗扫描），目标语义类别覆盖了支持切片的一小部分（大约5-10%）。当对所有的像素进行平均时，最终的数值会受到背景激活的高度影响。交互块的作用是将目标类的语义信息从调节器传达给分割器。通过使用通道SE作为全局平均池，类别信息大多丢失，因此不能将相关信息传达给分割器。</p><p>表3的第二个结论是，在交互块的所有可能位置中，BL-7，即所有编码器、瓶颈和解码器块之间的sSE块，取得了最高的Dice分数，即0.567。这一结果在所有褶皱中都是一致的。BL7在Fold-1（肝脏）、Fold2（脾脏）、Fold-3（左/右肾脏）和Fold-4（左/右腰肌）的表现优于其余基线，差距在0.1到0.8个Dice点。这可能与每个器官相关的相对难度有关。由于对比度和大小的关系，与脾脏、肾脏和腰肌相比，肝脏是相对容易分割的。另外，与BL-7相比，BL-1、3和5的表现很差。这表明，更多的互动有助于更好的训练。比较BL-1、BL-3和Bl-5，我们发现BL-1的性能更好。这表明编码器的互动比瓶颈或解码器的互动强大得多。但是，由于BL-7的性能比BL-1、BL-3和BL-5高得多，我们认为编码器、瓶颈和解码器的交互作用为分割器提供了互补的信息，使查询的分割更加准确。从这些结果中，我们得出结论，基于sse的交互块是最有效的，我们在随后的实验中使用了所有编码器、瓶颈和解码器块之间基于sse的交互。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221026124906839.png" alt="image-20221026124906839" /></p><blockquote><p>表3 在网络的不同位置（编码器、瓶颈和解码器），使用sSE或cSE模块，我们的几枪分割器的性能（每折和平均Dice得分）。左边和右边被缩写为L.和R.腰肌被缩写为P.M.。</p></blockquote><h3 id="52-effect-of-skip-connections-in-the-architecture"><a class="markdownIt-Anchor" href="#52-effect-of-skip-connections-in-the-architecture"></a> 5.2. Effect of skip connections in the architecture</h3><p>由于U-net架构的成功（Ronneberger等人，2015），在F-CNN模型中使用跳过连接已经成为一个非常普遍的设计选择。通过跳过连接，编码器块的输出特征图与具有相同空间分辨率的解码器块的输入连接起来。一般来说，这种连接有助于实现卓越的分割性能，因为它在解码阶段提供了大量的上下文信息，并促进了梯度流动。在我们的实验中，我们凭直觉开始在调节器臂和分割器臂中都有跳过的连接，但在预测的查询分割掩码中观察到了一个意外的行为。通过包括跳过连接，网络大多将支持集的二进制掩码复制到输出中。在训练集和测试集的所有褶皱中都观察到了这一点。我们把这种现象称为复制效应。图5是每个折叠的定性例子，我们看到，尽管支持图像和查询图像的形状不同，但查询图像的预测几乎与支持二进制掩码相同。我们还进行了定量分析，以观察由于这种复制效应对Dice分数的影响。表4报告了有无跳过连接的性能，我们观察到由于添加了跳过连接，Dice分数下降了3%。我们还进行了实验，在调节器和分割器臂中分别加入了跳过连接。我们观察到，仅在调节器臂中加入跳过连接会使性能降低6%的Dice点，而仅在分割器臂中加入跳过连接会使训练变得不稳定。在这次评估中，调节器和分割器的卷积核数量分别固定为16和64，评估是在k=12支持片的情况下进行的。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221026124739177.png" alt="image-20221026124739177" /></p><blockquote><p>图5 有跳过连接和无跳过连接的几张照片分割器的定性结果，以证明复制的效果。子图（a-d）分别是指肝脏、脾脏、左肾和右腰肌这些褶皱中的例子。对于每个子图，第一列表示带有器官手动轮廓的支持图像，第二列表示带有手动注释的查询图像，第三列表示带有跳过连接的查询图像的预测结果，第四列表示没有跳过连接的查询图像的预测结果（提议的方法）。所有的注释都显示为绿色。在分析支持注释的掩码和带跳过连接的预测时，可以观察到所有的褶皱都有明显的复制效应。(关于本图例中对颜色的解释，请读者参考本文的网络版）。</p></blockquote><h3 id="53-model-complexity-of-the-conditioner-arm"><a class="markdownIt-Anchor" href="#53-model-complexity-of-the-conditioner-arm"></a> 5.3. Model complexity of the conditioner arm</h3><p>一个重要的设计选择是决定与分割器臂相比，调节器臂的相对模型复杂性。正如第1.1节中提到的，调节器接受支持实例并学习生成任务表征，通过交互块传递给分割器臂。分割器利用这一点对查询图像进行分割。我们将分割器臂的卷积层（每个编码器、瓶颈和解码器）的核数固定为64。我们使用这个设置，因为这在我们之前的不同数据集的分割工作中被证明效果良好（Roy等人，2019年，2018年b）。接下来，我们改变调节器臂的内核数量为{8、16、32、64}。支持片的数量仍然固定为k = 12。我们在表5中报告了这些设置的分割结果。在具有16个卷积核的调节器上观察到了最佳性能。一个可能的解释是，太低的调节器复杂性（如8）会导致一个非常弱的任务表示，从而不能可靠地支持分割器臂。而更高的调节器臂复杂度，32和64个内核（与分割器复杂度相同），可能会导致不适当的训练，因为在有限的训练数据和互动下，复杂性增加。在下面的实验中，我们将调节器卷积核的数量固定为16。</p><h3 id="54-effect-of-the-number-of-support-slice-budget"><a class="markdownIt-Anchor" href="#54-effect-of-the-number-of-support-slice-budget"></a> 5.4. Effect of the number of support slice budget</h3><p>在本节中，我们研究了改变从支持体积中选择的支持片数k的预算时的性能，以便对所有查询体积进行分割。这里，k可以被认为是体积分割的 “镜头数”。在以前的所有实验中，我们固定k=12。在这里，我们在{1，3，5，7，10，12，15，17，20}之间变化k，并在表7中报告了验证集上的每折和总体平均分割性能。每一折的性能分析显示，要达到适当的准确度所需的最小切片数随要分割的目标器官的大小而变化。</p><p>对于褶皱-1（肝脏），一次性体积分割（k=1）产生的Dice分数为0.678，在k=20时增加到0.701。我们观察到，只有12片时，性能就达到了饱和（Dice分数为0.70）。分割性能只随着k值的增加而稍有提高。对于Fold-2（脾脏），分割性能最初随着k值的增加而增加，然后性能在k≥10时达到饱和，Dice分数为0.60。脾脏比肝脏更难分割，因此需要更多的支持。对于折叠3（右/左肾），我们观察到与折叠2类似的行为。分割性能最初随着k值的增加而增加，然后在k≥10时，Dice得分达到0.46（这是左肾和右肾两类的平均值），达到饱和。同样对于Fold-4（右/左腰肌），我们看到K=10时Dice得分在0.50时达到饱和。在k=10的情况下，所有褶皱的总体平均Dice得分也饱和于0.56。</p><p>基于这些结果，我们得出结论，k = 10是我们的应用所需的最大支持片数。因此，我们在接下来的实验中使用这种配置。我们还在表6中报告了每个器官的测试体积中的平均切片数，以表明为体积评估而选择的切片的稀疏程度。</p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210311545821.png" alt="image-20221026130939811" style="zoom:150%;" /><blockquote><p>表6 内脏数据集中不同目标器官的切片范围（冠状轴）。</p></blockquote><h3 id="55-comparison-with-existing-approaches"><a class="markdownIt-Anchor" href="#55-comparison-with-existing-approaches"></a> 5.5. Comparison with existing approaches</h3><p><strong>在本节中，我们将我们提出的框架与其他现有的小样本的分割方法进行比较。必须指出的是，所有现有的方法都是为计算机视觉应用而提出的，因此不能直接与我们的方法进行比较，如第1.2节所解释的。因此，我们修改了每个现有的方法以适应我们的应用。结果总结在表8中。此外，我们还对5个测试查询卷的结果进行了评估。</strong></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221026125535834.png" alt="image-20221026125535834" /></p><blockquote><p>表8 我们提出的几张照片分割器与现有方法的比较。对于每种方法，报告了测试集的每折和平均Dice得分以及平均表面距离（以毫米为单位）。分类器回归（Shaban等人，2017）训练导致模式崩溃，因此没有报告Dice得分。特征融合缩写为F.F.，分类器回归缩写为C.R.。所有褶皱的最佳平均Dice得分/平均表面距离用粗体表示。</p></blockquote><p>首先，我们尝试与Shaban等人（2017）进行比较。他们的主要贡献是，调节器臂对卷积权重进行回归，这些权重被分割器的分类器块用来推断查询图像的分割。由于我们的应用没有任何预训练的模型，与Shaban等人（2017）不同，我们在分割器和调节器臂上使用与我们提出的方法相同的架构。除了最后的分类器权重回归外，没有使用任何中间的交互作用。我们尝试在我们的数据集上用广泛的超参数训练网络，但所有的设置都导致了训练时的不稳定。必须指出的是，一个可能的不稳定来源可能是我们没有使用预训练的模型，与原始方法不同。因此，我们无法将我们提出的方法与这种方法进行比较。</p><p>接下来，我们将我们的方法与Rakelly等人（2018）进行比较。同样，由于缺乏预训练的模型，这个方法与我们的方法没有直接的可比性。他们的方法的主要贡献之一是分割器和调节器之间的互动策略，使用一种叫做特征融合的技术。他们将调理器的特征图拼接在一起，并与分割器的特征图相连接。他们的实现只在一个单一的位置（瓶颈）引入了互动。我们尝试了同样的配置，但网络没有收敛。因此，我们修改了模型，在调节器和分割器臂之间的多个位置引入了基于连接的特征融合（而不是我们的sSE模块）。由于我们有一个对称的结构，所以不需要铺设。与我们提出的方法类似，我们在每个编码器、瓶颈和解码器块都引入了这种基于特征融合的互动。在这个实验中，我们将基于空间SE的交互方法与基于串联的特征融合方法进行比较。结果在表8中报告。我们观察到，我们的方法的Dice点高出21%，平均表面距离降低10毫米。</p><p>接下来，我们试图通过将上述适应的特征融合方法（Rakelly等人，2018）与分类器权重回归方法（Shaban等人，2017）相结合，创建混合基线。我们观察到，通过这样做，性能增加了3%的Dice点。不过，与我们提出的方法相比，它的Dice得分还是低得多（18%的Dice分）。</p><p>作为最后的基线，我们将我们提出的框架与类似于Caelles等人（2017）的微调策略进行比较。为了进行公平的比较，我们只使用银色语料库扫描（DTrain ）和支持卷（10000132_1_CTce_ThAb）的10个注释切片进行训练。作为一个架构上的选择，我们使用我们的分割器臂，没有SE块。我们使用DTrain对模型进行预训练，以分割LTrain的类别。在预训练之后，我们使用这个模型的学习权重来初始化所有的层，除了分类器块。然后，我们使用支持体的10个注释片对其进行微调，支持体有一个来自LTest的新类别。我们在表8中展示了分割性能。微调是以10-3的低学习率在10个历时中仔细进行的。在训练过程中，使用平移（左、右、上、下）和旋转（-15、+15度）对10个选定的切片进行了增强。除了褶皱1（肝脏，Dice得分0.30），其他所有褶皱的Dice得分都&lt;0.01。总的来说，这个实验证实了这样一个事实：在这种低数据制度下的微调是无效的，而我们的小样本的分割技术则要有效得多。</p><h3 id="56-comparison-with-upper-bound-model"><a class="markdownIt-Anchor" href="#56-comparison-with-upper-bound-model"></a> 5.6. Comparison with upper bound model</h3><p>在这一节中，我们研究了我们的小样本分割框架与完全监督的上限模型的性能。为了训练这个上界模型，我们使用了银色语料库的所有扫描结果（包括所有目标器官的注释），并在金色语料库上部署了训练好的模型。我们使用标准的U-Net（Ronneberger等人，2015）架构进行分割。分割结果显示在表9中。</p><p>我们观察到，与我们的小样本的分割框架相比，这个上界模型的Dice点高出20-40%，平均表面距离低1-7毫米。必须指出的是，这种性能上的差异是可以预期的，因为来自65个完全注释的扫描的所有切片都被用于训练。相比之下，在我们的方法中只使用了来自单一容积的10个注释切片。如果可以获得许多有充分注释的切片，我们总是建议使用完全监督的训练。每当需要从几个切片中学习一个新的类别时，我们的小样本分割框架就很出色。值得一提的是，这种性能下降也可以在计算机视觉的PASCAL VOC基准中观察到，使用DeepLabv3架构的完全监督上界的IoU为0.89，而小样本分割的IoU为0.4（Shaban等人，2017）。</p><h3 id="57-qualitative-results"><a class="markdownIt-Anchor" href="#57-qualitative-results"></a> 5.7. Qualitative results</h3><p>我们在图6(ad)中分别展示了一组对褶皱1-4的定性分割结果。在图6（a）中，我们展示了肝脏的分割结果。从左到右，我们展示了带有手工注释的支持集、带有手工注释的查询输入以及对查询输入的预测。我们观察到一个可接受的分割，尽管肝脏的形状和大小在支持片和查询片中存在差异。请注意，网络拥有的关于器官的唯一信息是来自单一的支持切片。在图6（b）中，我们展示了脾脏的类似结果。这是一个具有挑战性的案例，脾脏的形状在支持片和查询片中非常不同。此外，支持片和查询片之间的图像对比度也有差异。脾脏有轻微的分割不足，但考虑到支持度较弱，分割效果出乎意料地好。在图6（c）中，我们展示了左肾的结果。在这里，我们再次观察到肾脏在支持片和查询片中的大小存在巨大差异。肾脏在支持片中显示为一个小点，使其成为一个非常困难的案例。在图6(d)中，我们显示了右腰肌的分割情况。在这种情况下，支持片和查询片在视觉上是非常相似的。我们的框架的预测显示在腰肌边界有一点过度包容，但有一个体面的定位和形状。总的来说，定性结果直观地显示了我们的框架在简单和非常具有挑战性的条件下的有效性。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20240102213502428.png" alt="image-20240102213502428" /></p><blockquote><p>图6.我们的几张照片分割器的定性结果。子图（a-d）分别指的是肝脏、脾脏、左肾和右腰肌的各个褶皱的例子。在每个子图中，第一列表示带有器官手动轮廓的支持图像，第二列表示带有手动注释的查询图像，第三列表示查询图像的预测分割结果。所有的注释都显示为绿色。(关于本图例中对颜色的解释，请读者参考本文的网络版）。</p></blockquote><h3 id="58-dependence-on-support-set"><a class="markdownIt-Anchor" href="#58-dependence-on-support-set"></a> 5.8. Dependence on support set</h3><p>在我们以前的所有实验中，有一个卷（10000132_1_CTce_ThAb）被用作支持卷，其余19个卷作为查询卷用于评估。在本节中，我们研究了分割性能对支持卷的选择的敏感性。在这个实验中，我们从验证集中随机选择5个卷作为支持集。我们每次选择一个，并对剩余的15个卷进行评估（验证集和测试集的其余部分结合起来），并在表10中报告了每折和全局的Dice得分。</p><p>我们观察到，改变支持体积确实对分割性能有影响。在Fold-1（肝）中，在所有5个选定的支持体积中，性能变化了6%的Dice点。在折叠2（脾脏）、折叠3（R/L肾脏）、折叠4（R/L腰肌）中，这一变化分别为5%、8%和5%的Dice点。总的平均Dice分值相差4%点。我们的结论是，选择一个适当的支持体是很重要的，它可以代表整个查询集。然而，一个好的选择策略仍然是未来的工作。然而，我们的框架显示了对选择的一些稳健性。</p><h3 id="59-discussion-on-spatial-se-as-interaction-blocks"><a class="markdownIt-Anchor" href="#59-discussion-on-spatial-se-as-interaction-blocks"></a> 5.9. Discussion on spatial SE as interaction blocks</h3><p>关于使用空间SE块进行交互的一个关注点可能是支持和查询图像之间的目标类的空间排列。虽然在我们的应用中，支持和查询片之间存在一些目标器官的部分重叠，但我们相信基于SSE的交互也能够处理没有这种重叠的情况。我们承认，空间位置的相似性对我们的应用有帮助。然而，这并不是驱动分割的唯一因素。在表3中，我们提出了一个表示为BL-3的配置的实验。在这个设计中，我们只在Segmenter和Conditioner之间的瓶颈处保持sSE块的交互。请注意，瓶颈特征图的空间分辨率非常低（在我们的案例中，尺寸为16×32）。这种配置可以被认为是一种空间不变的融合。在这种情况下，我们也取得了一个体面的分割分数。通过在所有的编码器和解码器区块中加入SSE，这一点得到了进一步提升。sSE的一个重要方面是它在激励前的末端有一个sigmoidal门控函数。这意味着在任何位置，它都有能力使所有的神经元饱和（即所有的输出特征图激活变成1），从而保持分割器特征图不变。考虑这样一种情况，在编码器/解码器的特征图是不变的，只是对瓶颈进行校准。这将类似于BL-3的实验，显示出体面的性能。因此，我们认为正弦波门控将控制sSE块，只在必要时重新校准特征图。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221026124906839.png" alt="image-20221026124906839" /></p><h2 id="6-conclusion"><a class="markdownIt-Anchor" href="#6-conclusion"></a> 6. Conclusion</h2><p>在这篇文章中，我们介绍了一个针对体积医学扫描的小样本的分割框架。主要的挑战是缺乏预训练的模型来开始，以及扫描的体积性质。我们建议使用 &quot;通道挤压和空间激励 &quot;块来帮助我们的框架从头开始进行适当的训练。此外，我们提出了一种体积分割策略，通过对二维切片的适当配对，将查询体积扫描与支持体积扫描进行战略性分割。我们在内脏数据集的对比度增强的CT扫描上评估了我们提出的框架和几个基线。我们将我们基于sSE的模型与基于特征融合的现有方法Rakelly等人（2018）、分类器回归Shaban等人（2017）及其组合进行了比较。我们的框架在很大程度上胜过了之前的所有方法。</p><p>除了与现有的方法进行比较，我们还提供了关于SE块、模型复杂性和跳过连接的架构选择的详细实验。我们还研究了通过改变支持体积和支持体积的预算片数对我们的小样本分割性能的影响。</p><p>我们提出的小样本分割法有以下限制。首先，对于一个新的查询卷，需要指出目标器官的开始和结束切片来进行分割。这可能需要手动操作。其次，由于监督极其有限以及这项任务的难度，使用小样本的分割法无法实现非常精确的分割。如果应用需要高度精确的分割，我们建议采用传统的监督学习方式，通过获取更多的注释进行训练。</p><p>尽管有这些限制，我们提出的方法的阐述是非常通用的，可以很容易地扩展到其他小样本的分割应用。我们的方法是独立于预训练模型的，这使得它对非计算机视觉应用非常有用。</p><h2 id="list-of-ids-in-the-visceral-dataset"><a class="markdownIt-Anchor" href="#list-of-ids-in-the-visceral-dataset"></a> List of IDs in the Visceral Dataset</h2><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202210251911083.png" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U-Net Convolutional Networks for Biomedical Image Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/U-Net/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/U-Net/</url>
      
        <content type="html"><![CDATA[<h1 id="u-net-convolutional-networks-for-biomedical-image-segmentation"><a class="markdownIt-Anchor" href="#u-net-convolutional-networks-for-biomedical-image-segmentation"></a> <a href="zotero://open-pdf/library/items/44RRZVXD">U-Net: Convolutional Networks for Biomedical Image Segmentation</a></h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>There is large consent that successful training of deep networks requires many thousand annotated training samples. In this paper, we present a network and training strategy that relies on the strong use of data augmentation to use the available annotated samples more efficiently. The architecture consists of a contracting path to capture context and a symmetric expanding path that enables precise localization. We show that such a network can be trained end-to-end from very few images and outperforms the prior best method (a sliding-window convolutional network) on the ISBI challenge for segmentation of neuronal structures in electron microscopic stacks. Using the same network trained on transmitted light microscopy images (phase contrast and DIC) we won the ISBI cell tracking challenge 2015 in these categories by a large margin. Moreover, the network is fast. Segmentation of a 512x512 image takes less than a second on a recent GPU.</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>In the last two years, deep convolutional networks have outperformed the state of the art in many visual recognition tasks, e.g. [7]. While convolutional networks have already existed for a long time [8], their success was limited due to the size of the available training sets and the size of the considered networks. The breakthrough by Krizhevsky et al. [7] was due to supervised training of a large network with 8 layers and millions of parameters on the ImageNet dataset with 1 million training images. Since then, even larger and deeper networks have been trained [12].</p><p>The typical use of convolutional networks is on classification tasks, where the output to an image is a single class label. However, in many visual tasks, especially in biomedical image processing, the desired output should include localization, i.e., a class label is supposed to be assigned to each pixel. Moreover, thousands of training images are usually beyond reach in biomedical tasks. Hence, Ciresan et al. [2] trained a network in a sliding-window setup to predict the class label of each pixel by providing a local region (patch) around that pixel as input. First, this network can localize. Secondly, the training data in terms of patches is much larger than the number of training images. The resulting network won the EM segmentation challenge at ISBI 2012 by a large margin.</p><p>Obviously, the strategy in Ciresan et al. [2] has two drawbacks. First, it is quite slow because the network must be run separately for each patch, and there is a lot of redundancy due to overlapping patches. Secondly, there is a trade-off between localization accuracy and the use of context. Larger patches require more maxpooling layers that reduce the localization accuracy, while small patches allow the network to see only little context. More recent approaches [11,4]proposeda classifier output that takes into account the features from multiple layers. Good localization and the use of context are possible at the same time.</p><p>In this paper, we build upon a more elegant architecture, the so-called “fully convolutional network” [9]. We modify and extend this architecture such that it works with very few training images and yields more precise segmentations; see Figure 1. The main idea in [9] is to supplement a usual contracting network by successive layers, where pooling operators are replaced by upsampling operators. Hence, these layers increase the resolution of the output. In order to localize, high resolution features from the contracting path are combined with the upsampled output. A successive convolution layer can then learn to assemble a more precise output based on this information.</p><p>One important modification in our architecture is that in the upsampling part we have also a large number of feature channels, which allow the network to propagate context information to higher resolution layers. As a consequence, the expansive path is more or less symmetric to the contracting path, and yields a u-shaped architecture. The network does not have any fully connected layers and only uses the valid part of each convolution, i.e., the segmentation map only contains the pixels, for which the full context is available in the input image. This strategy allows the seamless segmentation of arbitrarily large images by an overlap-tile strategy (see Figure 2). To predict the pixels in the border region of the image, the missing context is extrapolated by mirroring the input image. This tiling strategy is important to apply the network to large images, since otherwise the resolution would be limited by the GPU memory.</p><p>As for our tasks there is very little training data available, we use excessive data augmentation by applying elastic deformations to the available training images. This allows the network to learn invariance to such deformations, without the need to see these transformations in the annotated image corpus. This is particularly important in biomedical segmentation, since deformation used to be the most common variation in tissue and realistic deformations can be simulated efficiently. The value of data augmentation for learning invariance has been shown in Dosovitskiy et al. [3] in the scope of unsupervised feature learning.</p><p>Another challenge in many cell segmentation tasks is the separation of touching objects of the same class; see Figure 3. To this end, we propose the use of a weighted loss, where the separating background labels between touching cells obtain a large weight in the loss function.</p><p>The resulting network is applicable to various biomedical segmentation problems. In this paper, we show results on the segmentation of neuronal structures in EM stacks (an ongoing competition started at ISBI 2012), where we outperformed the network of Ciresan et al. [2]. Furthermore, we show results for cell segmentation in light microscopy images from the ISBI cell tracking challenge 2015. Here we won with a large margin on the two most challenging 2D transmitted light datasets.</p><h2 id="2-network-architecture"><a class="markdownIt-Anchor" href="#2-network-architecture"></a> 2 Network Architecture</h2><p>The network architecture is illustrated in Figure 1. It consists of a contracting path (left side) and an expansive path (right side). The contracting path follows the typical architecture of a convolutional network. It consists of the repeated application of two 3x3 convolutions (unpadded convolutions), each followed by a rectified linear unit (ReLU) and a 2x2 max pooling operation with stride 2 for downsampling. At each downsampling step we double the number of feature channels. Every step in the expansive path consists of an upsampling of the feature map followed by a 2x2 convolution (“up-convolution”) that halves the number of feature channels, a concatenation with the correspondingly cropped feature map from the contracting path, and two 3x3 convolutions, each followed by a ReLU. The cropping is necessary due to the loss of border pixels in every convolution. At the final layer a 1x1 convolution is used to map each 64-component feature vector to the desired number of classes. In total the network has 23 convolutional layers.</p><p>To allow a seamless tiling of the output segmentation map (see Figure 2), it is important to select the input tile size such that all 2x2 max-pooling operations are applied to a layer with an even x- and y-size.</p><h2 id="3-training"><a class="markdownIt-Anchor" href="#3-training"></a> 3 Training</h2><p>The input images and their corresponding segmentation maps are used to train the network with the stochastic gradient descent implementation of Caffe [6]. Due to the unpadded convolutions, the output image is smaller than the input by a constant border width. To minimize the overhead and make maximum use of the GPU memory, we favor large input tiles over a large batch size and hence reduce the batch to a single image. Accordingly we use a high momentum (0.99) such that a large number of the previously seen training samples determine the update in the current optimization step.</p><p>The energy function is computed by a pixel-wise soft-max over the final feature map combined with the cross entropy loss function. The soft-max is defined as pk (x)=exp(ak (x))/ (∑K k′=1 exp(ak′ (x)) ) where ak(x) denotes the activation in feature channel k at the pixel position x ∈ Ω with Ω ⊂ Z2. K is the number of classes and pk(x) is the approximated maximum-function. I.e. pk(x) ≈ 1for the k that has the maximum activation ak(x)andpk(x) ≈ 0 for all other k.The cross entropy then penalizes at each position the deviation of p(x)(x)from1 using</p><p>where  : Ω →{1,…,K} isthetruelabelofeachpixelandw : Ω → R is a weight map that we introduced to give some pixels more importance in the training.</p><p>We pre-compute the weight map for each ground truth segmentation to compensate the different frequency of pixels from a certain class in the training data set, and to force the network to learn the small separation borders that we introduce between touching cells (See Figure 3c and d).</p><p>The separation border is computed using morphological operations. The weight map is then computed as</p><p>where wc : Ω → R is the weight map to balance the class frequencies, d1 : Ω → R denotes the distance to the border of the nearest cell and d2 : Ω → R the distance to the border of the second nearest cell. In our experiments we set w0 =10and σ ≈ 5pixels.</p><p>In deep networks with many convolutional layers and different paths through the network, a good initialization of the weights is extremely important. Otherwise, parts of the network might give excessive activations, while other parts never contribute. Ideally the initial weights should be adapted such that each feature map in the network has approximately unit variance. For a network with our architecture (alternating convolution and ReLU layers) this can be achieved by drawing the initial weights from a Gaussian distribution with a standard deviation of √2/N ,whereN denotes the number of incoming nodes of one neuron [5]. E.g. for a 3x3 convolution and 64 feature channels in the previous layer N =9· 64 = 576.</p><h3 id="31-data-augmentation"><a class="markdownIt-Anchor" href="#31-data-augmentation"></a> 3.1 Data Augmentation</h3><p>Data augmentation is essential to teach the network the desired invariance and robustness properties, when only few training samples are available. In case of microscopical images we primarily need shift and rotation invariance as well as robustness to deformations and gray value variations. Especially random elastic deformations of the training samples seem to be the key concept to train a segmentation network with very few annotated images. We generate smooth deformations using random displacement vectors on a coarse 3 by 3 grid.</p><p>The displacements are sampled from a Gaussian distribution with 10 pixels standard deviation. Per-pixel displacements are then computed using bicubic interpolation. Drop-out layers at the end of the contracting path perform further implicit data augmentation.</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 Experiments</h2><p>We demonstrate the application of the u-net to three different segmentation tasks. The first task is the segmentation of neuronal structures in electron microscopic recordings. An example of the data set and our obtained segmentation is displayed in Figure 2. We provide the full result as Supplementary Material. The data set is provided by the EM segmentation challenge [14,1]thatwas started at ISBI 2012 and is still open for new contributions. The training data is a set of 30 images (512x512 pixels) from serial section transmission electron microscopy of the Drosophila first instar larva ventral nerve cord (VNC). Each image comes with a corresponding fully annotated ground truth segmentation map for cells (white) and membranes (black). The test set is publicly available, but its segmentation maps are kept secret. An evaluation can be obtained by sending the predicted membrane probability map to the organizers. The evaluation is done by thresholding the map at 10 different levels and computation of the “warping error”, the “Rand error” and the “pixel error” [14].</p><p>The u-net (averaged over 7 rotated versions of the input data) achieves without any further pre- or postprocessing a warping error of 0.0003529 (the new best score, see Table 1) and a rand-error of 0.0382.</p><p>This is significantly better than the sliding-window convolutional network result by Ciresan et al. [2], whose best submission had a warping error of 0.000420 and a rand error of 0.0504. In terms of rand error the only better performing algorithms on this data set use highly data set specific post-processing methods1 applied to the probability map of Ciresan et al. [2].</p><p>We also applied the u-net to a cell segmentation task in light microscopic images. This segmenation task is part of the ISBI cell tracking challenge 2014 and 2015 [10,13]. The first data set “PhC-U373”2 contains Glioblastoma-astrocytoma U373 cells on a polyacrylimide substrate recorded by phase contrast microscopy (see Figure 4a,b and Supp. Material). It contains 35 partially annotated training images. Here we achieve an average IOU (“intersection over union”) of 92%, which is significantly better than the second best algorithm with 83% (see Table 2). The second data set “DIC-HeLa”3 are HeLa cells on a flat glass recorded by differential interference contrast (DIC) microscopy (see Figure 3, Figure 4c,d and Supp. Material). It contains 20 partially annotated training images. Here we achieve an average IOU of 77.5% which is significantly better than the second best algorithm with 46%.</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 Conclusion</h2><p>The u-net architecture achieves very good performance on very different biomedical segmentation applications. Thanks to data augmentation with elastic deformations, it only needs very few annotated images and has a very reasonable training time of only 10 hours on a NVidia Titan GPU (6 GB). We provide the full Caffe[6]-based implementation and the trained networks4. We are sure that the u-net architecture can be applied easily to many more tasks.</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transformers in Medical Image Analysis A Review</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Transformers-in-Medical-Image-Analysis-A-Review/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Transformers-in-Medical-Image-Analysis-A-Review/</url>
      
        <content type="html"><![CDATA[<h1 id="transformers-in-medical-image-analysis-a-review"><a class="markdownIt-Anchor" href="#transformers-in-medical-image-analysis-a-review"></a> Transformers in Medical Image Analysis: A Review</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>Transformer 在自然语言处理领域占据了主导地位，最近又对计算机视觉领域产生了影响。在医学图像分析领域，Transformer 也已成功应用于全栈临床应用，包括图像合成/重建、配准、分割、检测和诊断。我们的论文旨在促进医学图像分析领域对 Transformer 的认识和应用。具体来说，我们首先概述了内置于 Transformer 和其他基本组件中的注意力机制的核心概念。其次，我们回顾了为医学影像应用量身定制的各种 Transformer 架构，并讨论了它们的局限性。在这篇综述中，我们围绕 Transformer 在不同学习范式中的使用、提高模型效率以及与其他技术的耦合等方面的关键挑战进行了研究。我们希望这篇综述能让医学图像分析领域的读者对 Transformer 有一个全面的了解。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 INTRODUCTION</h2><p>Transformer [1] 在自然语言处理（NLP）领域占据主导地位，包括语音识别 [2]、合成 [3]、文本到语音的翻译 [4] 和自然语言生成 [5]。作为深度学习架构的一个引人注目的实例，Transformer 最早被引入处理 NLP 中的顺序推理任务。递归神经网络（RNN）[6]（如长短时记忆网络（LSTM）[7]）明确使用序列推理过程，而 Transformer 则通过堆叠的自我注意层显著捕捉序列数据的长期依赖性。通过这种方式，Transformer 既能高效地一次性解决顺序学习问题，又能通过堆叠深度模型而提高效率。在大规模架构上训练的几种 Transformer 架构已在解决 NLP 任务中广泛流行，如 BERT [8] 和 GPT [9], [10] - 仅举几例。</p><p><strong>卷积神经网络（CNN）及其变体在一些计算机视觉（CV）任务中达到了最先进的水平[11]，这部分归功于它们逐渐扩大的感受野，可以学习作为语义的结构化图像表征层次。捕捉图像中的视觉语义通常被认为是构建成功计算机视觉网络的核心思想[12]。然而，CNN 忽略了图像中的长期依赖关系，如图像中物体的非局部相关性。Dosovitskiy 等人[13]受上述Transformer在 NLP 中成功应用的启发，提出了视觉Transformer（ViT），将图像分类表述为图像补丁（区域）序列的序列预测任务，从而捕捉输入图像内部的长期依赖关系。ViT 及其衍生实例在多个基准数据集上取得了一流的性能。Transformer 已在图像分类 [13]、检测 [14]、分割 [15]、生成 [16] 和字幕 [17] 等广泛的计算机视觉任务中大受欢迎。此外，Transformer 还在基于视频的应用中发挥着重要作用 [18]。</strong></p><p><img src="images/image-20240201172005406.png" alt="image-20240201172005406" /></p><blockquote><p>图 1. Transformers 在医学图像分析中的发展。这些图显示了分类、检测、分割和合成应用中选定的方法。</p></blockquote><p>最近，Transformer 还交叉渗透到医学图像分析领域，用于疾病诊断 [19]、[20]、[21] 和其他临床用途。例如，[22]、[23] 中的作品利用 Transformer 通过计算机断层扫描（CT）或 X 射线图像区分了 COVID19 和其他类型的肺炎，满足了快速有效治疗 COVID-19 患者的迫切需要。此外，Transformer 还成功应用于图像分割[24]、检测[25]和合成[26]，取得了令人瞩目的先进成果。图 1 按时间顺序展示了 Transformer 在不同医学影像应用中的适应性，并将在第 3 节中进一步讨论。</p><p>尽管许多研究都致力于将 Transformer 应用于医学图像分析任务，但这种定制化带来的新挑战仍未解决。为了鼓励和促进基于 Transformer 的医学图像分析应用的发展，我们广泛回顾了该领域现有的 170 多种基于 Transformer 的方法，为医学应用提供了解决方案，并展示了 Transformer 在各种临床环境中的应用情况。此外，我们还深入讨论了如何设计基于 Transformer 的方法来解决更复杂的实际任务，包括弱监督/多任务/多模态学习范式。本文包括 Transformer 与 CNN 之间的比较，并讨论了提高 Transformer 网络效率和解释能力的新方法。</p><p>以下各节的内容安排如下。</p><p>第 2 节介绍 Transformer 的前言及其在视觉领域的发展。</p><p>第 3 节回顾了 Transformer 在医学图像分析中的最新应用。</p><p>第 4 节讨论了 Transformer 未来的潜在发展方向。</p><p>第 5 节为本文的结论。</p><h2 id="2-transformers"><a class="markdownIt-Anchor" href="#2-transformers"></a> 2 TRANSFORMERS</h2><h3 id="21-preliminaries"><a class="markdownIt-Anchor" href="#21-preliminaries"></a> 2.1 Preliminaries</h3><p>典型的 Transformer 利用了神经网络中的注意力机制。因此，我们首先介绍注意力机制的核心原理，然后详细介绍 Transformer 的工作原理。</p><h4 id="211-attention-mechanism"><a class="markdownIt-Anchor" href="#211-attention-mechanism"></a> 2.1.1 Attention mechanism</h4><p>在日常生活中，人类在探索信息时通常会利用 &quot;注意力机制 &quot;来过滤无关信息，同时关注数据中有意义的部分。受这一观察结果的启发，研究人员为深度学习设计了一种注意力机制，这种机制可以渗入同质数据，同时关注最重要的组成部分或元素。Bahdanau 注意力。</p><p>注意力机制最初是由 Bahdanau 等人[27] 针对语言翻译任务提出的，即 Bahdanau 注意力。这种注意力机制是通过所有注释（即编码器生成的每个输入结果）和上一个解码器的加权和来计算的。</p><h4 id="212-attention-mechanism-in-computer-vision"><a class="markdownIt-Anchor" href="#212-attention-mechanism-in-computer-vision"></a> 2.1.2 Attention mechanism in computer vision</h4><p>计算机视觉领域也提出了类似的概念。例如，Hu 等人[28] 引入了一种新颖的注意力机制，即 “挤压-激发”（Squeeze-and-Excitation），用于执行特征再校准，即强调对特定视觉任务有参考价值的特征，而将其余特征视为不那么重要的特征。</p><p><img src="images/image-20240201173310849.png" alt="image-20240201173310849" /></p><blockquote><p>图 2. 自注意力机制的简要说明。</p></blockquote><p><strong>Self-attention.</strong> 在 [1] 中，注意力机制被重新定义为一个处理查询、键和值的函数，这些查询、键和值都来自模块的输入向量，这与 Bahdanau 注意机制不同。输出被定义为值的加权和，其中每个值的权重是根据查询和键之间的注意力计算得出的。</p><p>自注意力操作通常以矩阵形式进行，以加速并行计算。为了简要说明自关注度的概念，我们首先以元素形式来描述它。</p><p>对于每个输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>c</mi></msup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">x_{i}\in\mathbb{R}^{c},i=1,..,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span>，其对应的查询<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub><mo>∈</mo><msubsup><mi mathvariant="double-struck">R</mi><mi>q</mi><mi>d</mi></msubsup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">q_i\in\mathbb{R}_q^d.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.232216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span>、密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub><mo>∈</mo><msubsup><mi mathvariant="double-struck">R</mi><mi>k</mi><mi>d</mi></msubsup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">k_i\in\mathbb{R}_k^d.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.132216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span> 和值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo>∈</mo><msubsup><mi mathvariant="double-struck">R</mi><mi>v</mi><mi>d</mi></msubsup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">v_i\in\mathbb{R}_v^d.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span> 向量分别通过参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mi>q</mi></msup></mrow><annotation encoding="application/x-tex">W^q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">W^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mi>v</mi></msup></mrow><annotation encoding="application/x-tex">W^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span></span></span> 生成。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>q</mi><mi>i</mi></msub><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>×</mo><msup><mi>W</mi><mi>q</mi></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>W</mi><mi>q</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msub><mi>d</mi><mi>q</mi></msub></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>k</mi><mi>i</mi></msub><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>×</mo><msup><mi>W</mi><mi>k</mi></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>W</mi><mi>k</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msub><mi>d</mi><mi>k</mi></msub></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>v</mi><mi>i</mi></msub><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>×</mo><msup><mi>W</mi><mi>v</mi></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>W</mi><mi>v</mi></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>c</mi><mo>×</mo><msub><mi>d</mi><mi>v</mi></msub></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>d</mi><mi>q</mi></msub><mo>=</mo><msub><mi>d</mi><mi>k</mi></msub><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rl}q_i=x_i\times W^q,&amp;W^q\in\mathbb{R}^{c\times d_q},\\k_i=x_i\times W^k,&amp;W^k\in\mathbb{R}^{c\times d_k},\\v_i=x_i\times W^v,&amp;W^v\in\mathbb{R}^{c\times d_v},\\d_q=d_k.\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.827324em;vertical-align:-2.163662em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.663662em;"><span style="top:-4.814554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-3.6054459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.396338em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-1.1963380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.163662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.663662em;"><span style="top:-4.814554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-3.6054459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.396338em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9636619999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>输出也是一个概率，由计算出的加权值的加权和计算得出、</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mo stretchy="false">(</mo><mfrac><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>j</mi></munder><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo></mrow></mfrac><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\alpha_{ij}=\mathrm{Softmax}(\frac{\alpha_{ij}^{\prime}}{\sqrt{d_k}})=\frac{\exp(\frac{\alpha_{ij}^{\prime}}{\sqrt{d_k}})}{\sum_j\exp(\frac{\alpha_{ij}^{\prime}}{\sqrt{d_k}})}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.466664em;vertical-align:-0.93em;"></span><span class="mord"><span class="mord mathrm">S</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.536664em;"><span style="top:-2.25278em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6948600000000003em;vertical-align:-1.57996em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1149em;"><span style="top:-2.14494em;"><span class="pstrut" style="height:3.1869em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15196em;"><span style="top:-2.5864385em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622307142857143em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222307142857144em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17776928571428574em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.63282em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7416285714285715em;"><span style="top:-2.177714285714286em;margin-left:-0.0037em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46117142857142857em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-3.4169em;"><span class="pstrut" style="height:3.1869em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.1149000000000004em;"><span class="pstrut" style="height:3.1869em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1869em;"><span style="top:-2.5864385em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622307142857143em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222307142857144em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17776928571428574em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.214em;margin-left:-0.0037em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.57996em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">.</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msub><mi>q</mi><mi>i</mi></msub><mo>×</mo><msubsup><mi>k</mi><mi>j</mi><mi mathvariant="normal">T</mi></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\alpha_{ij}^{\prime}=q_i\times k_j^\mathrm{T},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.274439em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\alpha_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 衡量输入的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个元素对输出的第$ i$ 个元素的贡献。通过这一操作，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\alpha_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>被视为分配给元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的关注度。因此，最终的输出关注度可以按以下方式计算为所有值的加权和：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><munder><mo>∑</mo><mi>j</mi></munder><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>×</mo><msub><mi>v</mi><mi>j</mi></msub><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">z_i=\sum_j\alpha_{ij}\times v_j.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></p><p>元素自关注度可以扩展到矩阵。在大多数情况下，每个输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的查询 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、键<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都是通过并行矩阵计算生成的。让 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>s</mi><mo>×</mo><mi>c</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X\in\mathbb{R}^{s\times c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span></span> 表示输入矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span></span></span></span> 表示查询矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 表示密钥矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 表示值矩阵，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span> 是样本数，每个矩阵由元素组成，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">;</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">;</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">;</mo><msub><mi>x</mi><mi>s</mi></msub><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">X=[x_{1};x_{2};\cdots;x_{s}]^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span> 。同样，我们计算注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 和输出矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 的方法如下、</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>=</mo><mtext>Attention</mtext><mo stretchy="false">(</mo><mi>Q</mi><mo>×</mo><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator="true">,</mo><mi>K</mi><mo>×</mo><msubsup><mi>W</mi><mi>i</mi><mi>K</mi></msubsup><mo separator="true">,</mo><mi>V</mi><mo>×</mo><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">Z_i=\text{Attention}(Q\times W_i^Q,K\times W_i^K,V\times W_i^V),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">Attention</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.236103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592389999999998em;"><span style="top:-2.4231360000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="sans-serif">M</mi><mi mathvariant="sans-serif">u</mi><mi mathvariant="sans-serif">l</mi><mi mathvariant="sans-serif">t</mi><mi mathvariant="sans-serif">i</mi><mi mathvariant="sans-serif">H</mi><mi mathvariant="sans-serif">e</mi><mi mathvariant="sans-serif">a</mi><mi mathvariant="sans-serif">d</mi></mrow><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mi mathvariant="sans-serif">C</mi><mi mathvariant="sans-serif">o</mi><mi mathvariant="sans-serif">n</mi><mi mathvariant="sans-serif">c</mi><mi mathvariant="sans-serif">a</mi><mi mathvariant="sans-serif">t</mi></mrow><mo stretchy="false">(</mo><msub><mi>Z</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>Z</mi><mi>h</mi></msub><mo stretchy="false">)</mo><msup><mi>W</mi><mi>O</mi></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathsf{MultiHead}(Q,K,V)=\mathsf{Concat}(Z_1,\cdots,Z_h)W^O,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathsf">M</span><span class="mord mathsf">u</span><span class="mord mathsf">l</span><span class="mord mathsf">t</span><span class="mord mathsf">i</span><span class="mord mathsf">H</span><span class="mord mathsf">e</span><span class="mord mathsf">a</span><span class="mord mathsf">d</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathsf">C</span><span class="mord mathsf">o</span><span class="mord mathsf">n</span><span class="mord mathsf">c</span><span class="mord mathsf">a</span><span class="mord mathsf">t</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>**Multi-head self-attention.**文献 [1] 中的研究表明，对同一输入应用多个自注意力可以更好地捕捉分层特征。这些自注意力层的工作原理与卷积层中的多核类似。在给定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span> 个自注意力（头部）的情况下，模块通过连接计算出的注意力输出最终结果。</p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator="true">,</mo><msubsup><mi>W</mi><mi>i</mi><mi>J</mi></msubsup><mo separator="true">,</mo><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup></mrow><annotation encoding="application/x-tex">W_i^Q,W_i^J,W_i^V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.236103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.959239em;"><span style="top:-2.4231360000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span> 表示线性投影矩阵，分别将矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mtext>、</mtext><mi>K</mi><mtext>、</mtext><mi>V</mi></mrow><annotation encoding="application/x-tex">Q、K、V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>映射到不同的子空间。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mi>O</mi></msup></mrow><annotation encoding="application/x-tex">W^O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span></span></span></span></span></span></span> 是输出投影矩阵，它将所有注意力头的自我注意力输出汇总在一起。</p><h3 id="22-architecture"><a class="markdownIt-Anchor" href="#22-architecture"></a> 2.2 Architecture</h3><p><img src="images/image-20240201173210530.png" alt="image-20240201173210530" /></p><blockquote><p>图 3. 典型 Transformer 架构的简要说明 [29]。</p></blockquote><p>在 [1] 中，作者提出了一种典型的编码器-解码器结构的 Transformer 网络。编码器将输入序列 {x1, . , xn} 映射到相同长度的输出序列 {z1, - - , zn}。解码器根据编码后的 z 表示，以元素为单位生成输出 {y1, - - , ym}，并将之前的输出作为额外的输入。典型的 Transformer 架构如图 3 所示，下文将对其进行介绍。</p><h4 id="221-encoder"><a class="markdownIt-Anchor" href="#221-encoder"></a> 2.2.1 Encoder</h4><p>典型 Transformer 中的编码器有 n = 6 个堆叠块，由两种类型的层组成，即多头注意层和前馈层。残差连接层和层归一化层也与上述层结合在一起。具体来说，在每个区块中，首先计算多头注意力，然后进行层归一化，计算多头注意力的输入和输出之和。然后，执行前馈层，再对前馈层的输入和输出之和进行分层归一化。</p><h4 id="222-decoder"><a class="markdownIt-Anchor" href="#222-decoder"></a> 2.2.2 Decoder</h4><p>解码器也有 n = 6 个区块，与编码器类似，但略有改动。具体来说，在编码输出的顶部插入了一个额外的自注意层。由于预测是基于已知的状态，因此在第一个自保持层中采用了屏蔽技术，以阻断后续对前一位置状态的贡献。在解码器输出之后插入一个线性层和一个 Softmax 层，以生成最终输出。</p><h3 id="23-vision-transformer"><a class="markdownIt-Anchor" href="#23-vision-transformer"></a> 2.3 Vision Transformer</h3><p>Transformer 在 NLP 领域的成功传播到了计算机视觉（CV）研究领域，该领域已经做出了许多努力，使 Transformer 适应视觉任务。到目前为止，基于Transformer的视觉模型已经以前所未有的速度发展起来，其中最有代表性的是DEtection TRansformer（DETR）[14]、Vision Transformers（ViT）[13]、Data-efficient image Transformers（DeiT）[30]和Swin-Transformer[31]。DETR 由 Carion 等人提出的 DETR[14]是第一个将Transformer应用于 CV 任务的作品，特别是用于物体检测任务。与传统的物体检测方法不同，DETR 是一种端到端的检测模型，它利用Transformer编码器来模拟 CNN 骨干网提取的图像特征之间的关系，利用Transformer解码器来生成物体查询，并利用前馈网络来分配标签和绑定物体周围的方框。</p><p><img src="images/image-20240201173504548.png" alt="image-20240201173504548" /></p><blockquote><p>图 4. ViT 的典型架构 [13]。它使用顺序图像块作为输入，使用 Transformer Encoder 对其进行处理，并通过 MLP 头输出类预测。 Transformer 编码器由 N 个 Transformer 块构建。</p></blockquote><p>**ViT。**继 DETR 之后，Dosovitskiy 等人[13] 提出了视觉Transformer（ViT），如图 4 所示。ViT 是一种图像分类模型，基本采用了传统 Transformer 的架构。在 ViT 中，输入图像被转换成一系列补丁，每个补丁都与位置编码方法相结合，对每个补丁的空间位置进行编码，以提供空间信息。然后，补丁与类标记一起被输入 Transformer，以计算 MHSA 并输出学习到的补丁嵌入。ViT 输出的类标记状态可作为图像表示。最后，使用多层感知（MLP）对学习到的图像表示进行分类。除了原始图像，CNN 的特征图也可以输入 ViT 进行关系映射。</p><p><strong>DeiT.</strong> 为了解决 ViT 所需的大规模训练数据问题，Touvron 等人[30] 提出了 DeiT，以确保其在小规模数据上的性能。他们采用了师生配制的知识蒸馏框架，在输入序列后附加一个蒸馏标记（这是一个术语，指 Transformer），从教师模型的输出中学习。此外，他们还认为，利用 CNN 作为教师模型可以促进作为学生网络的 Transformer 继承归纳偏差的训练。</p><p>**Swin-Transformer。**为了降低计算高分辨率图像注意力的成本，并处理场景理解任务（如分割）中不同大小的补丁，Liu 等人[31] 提出了 Swin-Transformer 方法。他们引入了窗口自注意力来降低计算复杂度，并使用移动窗口注意力来模拟跨窗口关系。此外，他们还将这些注意块与补丁合并块连接起来，用于合并相邻的补丁，从而产生一种分层表示法，以处理视觉实体尺度的变化。</p><h3 id="24-other-techniques"><a class="markdownIt-Anchor" href="#24-other-techniques"></a> 2.4 Other techniques</h3><p>同时，近期的一些研究也验证了基于 MLP 的模型，并考察了 CNN 或 ViT 中注意力机制、卷积和其他模块的有效性。虽然 CNN 和 ViT 在相当长的一段时间内占据主导地位，但一些基于 MLP 的模型的成功也引起了巨大反响。MLPPMixer [32] 就是其中的代表作。MLP-Mixer 由 Tolstikhin 等人[32] 于 2021 年 5 月提出，它采用了简单的纯深度 MLP 架构，但表现出了极具竞争力的性能。MLPMixer 采用按补丁扁平化而非完全扁平化，同时不像 ViT 那样在补丁序列中添加位置编码和类标记。在补丁嵌入学习之后，混合器 MLP 块由令牌混合 MLP 和通道混合 MLP 组成，前者用于聚合补丁间特征，后者用于整合补丁内特征。最终的类别将根据全局平均池化后获得的特征进行预测。</p><p>与 MLP-Mixer 同时或之后，许多其他基于 MLP 的模型也被提出，如 gMLP [33]、ResMLP [34]、ASMLP [35]、CycleMLP [36]等。MLP-Mixer 不仅启发了人们对基于 MLP 的模型的进一步探索，还推动了 CV 神经架构的进一步发展。由于 Transformer、CNN 和 MLP 在性能上相互竞争，目前仍没有证据表明哪种架构更适合特定的 CV 学习任务。对于医学图像分析，我们还将在第 4 节 C 部分讨论 CNN 和 Transformer 的比较。</p><h2 id="3-transformers-in-medical-image-applications"><a class="markdownIt-Anchor" href="#3-transformers-in-medical-image-applications"></a> 3 TRANSFORMERS IN MEDICAL IMAGE APPLICATIONS</h2><p><img src="images/image-20240201174424967.png" alt="image-20240201174424967" /></p><blockquote><p>图 5. Transformers 在医学图像分析中的应用，如本工作所述。</p></blockquote><p>Transformer已广泛应用于全栈临床应用。在本节中，我们首先介绍基于 Transformer 的医学图像分析应用，包括分类、分割、图像到图像的转换、检测、配准以及基于视频的应用。我们根据学习任务对这些应用进行分类，如图 5 所示。</p><h3 id="31-classification"><a class="markdownIt-Anchor" href="#31-classification"></a> 3.1 Classification</h3><p><img src="images/image-20240201174533344.png" alt="image-20240201174533344" /></p><blockquote><p>表 1 用于医学图像分类任务的 Transformer。</p></blockquote><p>利用 Transformer 进行疾病诊断和预后的方法都被制定为分类任务，可分为三类，包括：</p><ul><li>将 ViTs 直接应用于医学图像；</li><li>将 ViTs 与卷积相结合，以实现更具代表性的局部特征学习；</li><li>将 ViTs 与图表示相结合，以更好地处理复杂数据。</li></ul><p>本节将全面介绍用于医学图像分类任务的上述三类 Transformer（表 1）。</p><h4 id="311-applications-of-pure-transformers"><a class="markdownIt-Anchor" href="#311-applications-of-pure-transformers"></a> 3.1.1 Applications of pure Transformers</h4><p>我们把类似于最初提出的 ViT [13] 称为纯粹的 Transformer。这些方法通常不包含重大的结构变化。我们按图像模式介绍纯Transformer的文献，如 X 光[48]、[44]、计算机断层扫描[20]、[19]、磁共振成像[21]、超声波[61]、OCT[71]等。</p><p>X 射线。X 射线是一种廉价、便捷的成像技术，被广泛应用于多种疾病的筛查和诊断，如乳腺癌、肺炎、骨折等，特别是在 COVID-19 大流行期间，X 射线在疾病筛查中发挥了非常重要的作用，因此是人工智能研究人员在设计基于 Transformer 的方法时常用的一种模式。Liu 等人[48] 提出了 Vision Outlooker (VOLO)，这是一种 ViT 模型，用 outlooker attention 取代了原有的注意机制[72]。他们的模型在诊断 COVID-19 时达到了最先进（SOTA）的性能，而无需在 ImageNet 上进行预训练。Shome 等人[50] 提出了一种基于 ViT 的 COVID-19 诊断模型，方法是在自收集的大型 COVID-19 胸部 X 光图像数据集上训练该模型。他们还使用 Grad-CAM [73] 来显示 COVID-19 的进展。Krishnan 等人[51] 以胸部 X 光图像的斑块为输入，应用经过 ImageNet 训练的 ViT-B/32 网络来区分 COVID-19。尽管 ViT 对 COVID-19 很有效，Tanzi 等人[44] 还是应用 ViT 模型对股骨骨折进行了分类。他们的研究利用聚类方法验证了 ViT 提取特征的能力，并将其性能与 CNN 进行了比较。上述模型揭示了大数据规模数据集的重要性，它能增强 Transformer 的性能。因此，由于 COVID-19 相关任务[48]、[50]、[73]、[51] 的数据集规模大于股骨骨折任务[44]，COVID-19 相关任务的性能也更高。</p><p>计算机断层扫描。基于气体和组织之间的高对比度，CT 通常用于胸部疾病诊断。因此，纯 Transformer 对 CT 图像的应用主要集中在胸部疾病方面。例如，Than 等人[40] 研究了用于 COVID-19 和肺部疾病分类任务的 ViT 补丁大小。他们发现，补丁尺寸越大，性能越低，这表明局部信息和全局信息之间存在权衡，而 32 × 32 补丁的准确率最高。Costa 等人[22] 建议使用 ViT 及其变体来区分 COVID-19 肺炎和其他肺炎与正常病例。通过比较几种模型的性能，他们发现数据高效图像Transformer（DeiT）[30] 等预训练模型取得了有竞争力的结果。同时，传统的 ViT 及其使用 Performer 编码器的变体即使没有经过预训练也取得了很好的效果。Li 等人[39] 设计了一个基于 ViT 的 COVID-19 诊断平台。他们将 CT 图像转换成一系列扁平化的斑块，以适应 ViT 的诊断输入。他们还采用了师生模型，从自然图像预训练的 CNN 中提炼知识。Gao 等人[19] 将 ViT 应用于二维和三维 CT 扫描，以诊断 COVID-19。他们建议通过提取固定数量的切片来构建图像子卷，从而对切片数量不同的成像序列进行 &quot;归一化 &quot;处理。他们还证明，ViT 的性能优于具有竞争力的 CNN 模型 DenseNet。Zhang 等人[20] 在 CT 图像上训练了流行的 Swin-Transformer 。具体来说，该框架首先通过 Unet 对肺部进行分割，然后将肺部区域输入特征提取器。这种策略有助于减轻 Transformer 框架的计算负担。上述研究表明，由于 CT 图像比 X 射线图像更难获取，因此预训练对于 CT 图像分类任务非常重要。此外，由于 CT 图像体积庞大，通过注意力机制降低计算复杂度的方法对 CT 图像至关重要。</p><p>磁共振成像 磁共振成像（MRI）具有更好的成像质量，尤其适用于包括血管和神经在内的细微解剖结构，但其获取耗时较长。由于核磁共振成像是一种强大的非侵入性软组织成像技术，因此常用于神经成像研究。例如，He 等人[21] 提出了一种用于脑年龄估计的双通道网络。全局通路旨在捕捉大脑核磁共振成像的全局上下文信息，而局部通路则负责捕捉局部斑块的细粒度信息。然后，通过全局-局部注意机制融合局部和全局上下文表征。接下来，融合后的特征和局部斑块会被送入一个经过修订的全局-局部 Transformer。此外，核磁共振成像的临床应用范围很广，例如癌症诊断，这使其成为训练 ViT 的有力候选模式。</p><p>超声波 使用护理点 (POC) 的超声波扩大了适用范围，因为获取图像不需要特定的位置。Perera 等人[61] 的研究提出了一种基于 Transformer 的架构，可根据超声片段诊断 COVID-19。为确保内存和时间效率，他们提出用 Linformer 代替标准 ViTs，将空间时间复杂度从传统自我注意机制的 O(n2) 降低到 O(n)。此外，超声以其易用性、低成本和安全性成为乳腺癌成像的重要方式。Gheflati 等人[62] 利用 ViTs 对超声图像中的正常、恶性和良性乳腺组织进行了分类。他们还比较了不同配置的 ViT 与 CNN 的性能，以证明其效率。</p><p>其他 除上述成像模式外，其他成像技术也被用于特定疾病的检查和诊断，如皮肤镜图像[66]、眼底图像[74]、组织病理学图像[59]。例如，Xie 等人[66] 利用皮肤镜图像检测黑色素瘤。他们建议将 Swin-Transformer 与无参数注意力模块 SimAM 结合起来，为目标分类任务学习更好的特征。考虑到输入分类器的特征包含丰富的语义信息但缺乏细节信息，他们将前三个 Swin-Transformer 块的输出分别设计为三个 SimAM 块的输入，然后将包括最终特征图在内的所有 SimAM 块输出串联在一起形成新的最终特征图，作为最终分类层的输入。Li 等人[67] 评估了 Transformer 在医学图像分析中的分布外检测任务上的性能。他们的工作包括原始的视觉Transformer和具有多头、软蒸馏和硬蒸馏的数据高效图像Transformer。这些模型在皮肤病变数据集 HAM10000 和 DermNet 上的表现显示了 Transformer 在 OOD 检测任务中的有限性能和安全关键问题。Ikromjanov 等人[59] 应用 ViT 协助病理学家根据格里森分级系统对整张组织病理图像上的前列腺癌（PCa）进行分级，结果令人鼓舞。</p><p>如表 1 所示，尽管纯 Transformer 在 COVID-19 XRays 等几个案例中表现出色，但在其他任务中也有必要进一步开发。</p><h4 id="312-applications-of-hybrid-transformers"><a class="markdownIt-Anchor" href="#312-applications-of-hybrid-transformers"></a> 3.1.2 Applications of hybrid Transformers</h4><p>尽管纯粹的 ViT 不需要太多修改就能取得很好的效果，但人们仍在努力探索将 ViT 与其他学习组件相结合，以更好地捕捉复杂的数据分布或获得更好的性能。典型的案例是 Transformer 与 1) 卷积层和 2) 图表示的组合。接下来，我们将介绍这两个类别。带有卷积层的 Transformer。视觉Transformer更注重数据内部全局关系的建模，而传统的 CNN 则更关注局部纹理。这种差异促使研究人员将视觉Transformer和 CNN 的优势结合起来。此外，医学图像分析不仅涉及图像中各区域的相关性，还涉及微妙的纹理。因此，许多研究都致力于探索这种 CNN-ViT 组合。</p><p>大多数应用集中在胸部疾病的诊断上，尤其是 COVID-19 或其他相关疾病。Van 等人[23] 利用 ViT 的特征整合能力，使用 Transformer 对未注册的医学图像进行多视角分析，对胸部 X 光片进行分类。他们提出了基于 Transformer 的方法，通过可训练的注意力机制，在特征层考虑不同视图的空间信息。他们将 Transformer 应用于 CNN 生成的中间特征图，以检索一个视图中的特征，并将其转移到另一个视图中。因此，无需像素对应，就能为原始视图添加额外的上下文。他们的研究还提出用较少的视觉标记来替代源像素，从而降低了计算复杂度。Verenich 等人[45] 将 ViTs 中的全局空间信息引入 CNN，用于肺病分类，同时保持空间不变性和等差性。Liang 等人[37] 利用 CNN 挖掘有效特征，并利用 Transformer 进行特征聚合。此外，他们还采用了有效的数据采样策略来减少输入的大小，同时保留足够的诊断信息。Park 等人[43] 为 COVID-19 诊断设计了一个预训练 CNN 主干网和一个 ViT。模型预训练使用了大规模的 CXR 分类公共数据集。对于胸腔疾病分类这一简单任务，现有方法简单而有效，即先使用 CNN 提取特征，然后使用 Transformer 捕捉高级信息。</p><p>除 COVID-19 诊断外，Yassine 等人[38] 通过将提取的特征输入 ViT，将多个 CNN 与 ViT 结合起来。他们将 CNN 的数量及其预训练配置与 CNN-ViT 混合模型进行了比较。值得一提的是，他们在 ImageNet 数据集生成的图像上对 CNN 进行了预训练[12]，使用的是在脑 CT 图像上预训练的生成对抗网络 (GAN)。他们声称，在生成的图像上进一步预训练，可以为目标计算机断层扫描数据集带来更好的归纳偏差，因为两个域的不相似性降低了。Zhao 等人[53]考虑利用 CNN 和 Transformer 的组合，使用多相对比增强磁共振成像（CEMRI）对肝细胞癌（HCC）进行多指标量化。他们提出了 mrTrans-Net，其中有三个并行编码器，每个编码器后都有一个非本地 Transformer，从动脉相位、PV 相位和延迟相位提取特征。接着，添加一个相位感知 Transformer，以量化每个相位与目标多相 CERMI 信息融合和选择的相关性。量化不仅在相位感知 Transformer 之后进行，还在那些非局部 Transformer 之后进行，以形成一个增强的损失函数来约束量化任务。Jiang 等人[65] 将 ViTs 和 CNNs 视为基础学习器，探索了集合学习的有效性，以根据 B 淋巴细胞前体和白血病 B 淋巴细胞的显微图像诊断急性淋巴细胞白血病。他们提出了一种基于 ViT 和 EfficientNet 的集合模型。由于这两个基础模型是互补的，因此集合结果显示出了一定的改进。他们还提出了一种数据增强方法，以处理每幅图像中正常细胞/癌细胞不平衡的问题。Chen 等人[56] 提出了多尺度视觉 Transformer 模型，如图 6 所示，称为 GasHis-Transformer，用于处理胃组织病理学图像分类。他们设计了全局信息模块（GIM）和局部信息模块（LIM）（基于 CNN）来提取特征。此外，他们还借鉴了 InceptionV3 的并行结构来学习多尺度局部表征。此外，他们的模型对十种不同的对抗性攻击或传统噪声具有鲁棒性，并可推广到其他癌症组织病理学图像分类任务中。Gao 等人[55] 提出了基于实例的 Vison Transformer（iViT），用于乳头状肾细胞癌的亚型分类。iViT 首先从实例级斑块中提取并选择实例特征，这些斑块包括一个核、周围背景的一部分以及核的等级。然后，它汇总这些特征，进一步捕捉细胞级和细胞层级特征。最后，该模型将这两种精细获取的特征编码到最终的图像级表示中，其中嵌入了等级和位置，以便进行子类型划分。Wang 等人[54] 提出了一种 3D Transformer，以超越 3D CNN。他们利用三维卷积层提取三维块的特征，并利用师生网络从 CNN 教师那里学习 Transformer 权重。Xia 等人[42] 提出了用于胰腺癌筛查的解剖感知 Transformer，并证明赢得了放射科医生的青睐。Zeid 等人[57] 在公开的 CRC 组织学数据集上验证了 ViTs 及其变体 Compact Convolutional Transformer 在多类结直肠癌（CRC）组织学图像分类任务中的有效性。Zhao 等人[60] 将驯服Transformer与 T2T-ViT 相结合，处理了宫颈癌分类任务中图像质量不一致的不平衡样本。Yu 等人[68] 采用 Transformer 编码器对皮肤病变特征之间的依赖性进行建模，以检测黑色素瘤识别中的丑小鸭标志。Yang 等[70] 通过联合采用 CNN 和 Transformer 模型，提出了一种 Transformer Eye（TransEye）细粒度眼底疾病图像分类。Wu 等人[69] 提出了 ScATNet，用于在多个输入尺度上对斑块间和尺度间表示建模，以诊断活检图像中的黑色素细胞病变。这些用于各种应用的混合 Transformer 包含丰富的创新，包括结构改进、设计新颖的 ViT 模块、CNN 模块，以及预训练和集合的学习策略。</p><p>带图的 Transformer。图学习是 MIA 中的常见做法。图学习的核心概念是学习每个样本的紧凑表示（如嵌入），同时通过数据图保留样本间的内在关系[75]。作为一种基于注意力的网络，Transformer 适合对图数据进行操作，包括聚合节点特征和计算节点关系。</p><p>在网络神经科学领域，大脑网络被建模为一个图，其中每个节点表示一个感兴趣的解剖区域（ROI），连接两个节点的边表示它们之间的相互作用（如神经发射）。大脑图谱在促进我们了解大脑作为高度相互关联的系统在健康和疾病中的作用方面发挥着重要作用[76], [77]。Kim 等人[52]的研究利用了功能连接（FC）网络的动态特性，将动态特征整合到紧凑的脑图表示中。具体来说，他们提出了时空注意力图同构网络（STAGIN），用于学习具有时空注意力的大脑连接组的动态图表示。GNN 用于在每个时间步提取大脑功能连接组的图级表示。最后，模型使用 Transformer 编码器获得动态图序列的最终表示。具体来说，他们将编码的时间戳与节点特征串联起来，以嵌入时间信息。他们声称，Transformer 的使用不仅提高了分类性能，还改善了时空可解释性。这类方法验证了 Transformer 在挖掘复杂图的特征和关系两方面的能力，从而引起了更多人对这一方法的关注。</p><p>我们对 Transformer 在医学图像分类任务中的应用总结如下：</p><p>与 CNN 相比，Transformer 在大多数任务中都取得了相当或更好的性能。</p><p>Transformer 对大规模数据集有一定的渴求，这在一定程度上限制了其适用性，尤其是在医学图像分析领域。预训练可以作为缓解这一问题的替代方案。</p><p>在大型图像上训练 Transformer 时，计算负担很重。因此，降低模型复杂度和开发轻量级模型是提高其效率的关键因素。</p><p>混合 Transformer 从传统网络（即 CNN 和 GNN）和 Transformer 两方面都获益匪浅，因此受到越来越多的关注。</p><h3 id="32-segmentation"><a class="markdownIt-Anchor" href="#32-segmentation"></a> 3.2 Segmentation</h3><p>基于 Transformer 的方法还被应用于多种分割任务，包括腹部多器官分割 [83]、[84]、[85]、[87]、[102]、[25]、[118]、[119]、[124]、[126]、[98]、[111]、[99]、[91]、[101]、胸部多器官分割 [119]、心脏分割 [83]、 [85]、[89]、[92]、[102]、[118]、[124]、[126]、[127]、[111]、[99]、[91]、[101]、胰腺分割[86]、[123]、脑肿瘤/组织分割[87]、 [93], [105], [112], [123], [128], [129], [130], [131], [132], [122], [113], [91], [133], [134], 息肉分割 [96], [108]、 [125], [135], [136], 肝脏和肝脏病变分割 [98], [137], [138], [139], [122], [91], [140], 肾脏肿瘤分割 [138], [91], 皮肤病变分割 [96], [108], [114], [125], [141], [122], [136], 前列腺分割 [96], [140], 腺体分割 [24], [105]、 [125]、[114]、[100]、细胞核分割[24]、[105]、[114]、[125]、[100]、细胞分割[108]、[142]、[143]、脾脏分割[112]、肺野/COVID-19 肺炎病灶分割[114]、视网膜血管分割[144]和高光谱病理图像分割[145]。表 2 详细列出了几种杰出的方法。</p><p>在大多数医学图像分割任务中，被称为 Unet 的 U 型卷积神经网络架构取得了巨大成功。然而，由于使用卷积操作，Unet 在模拟长期依赖关系方面也受到了限制。为了克服这一局限，研究人员在设计与 Unet 架构相结合的鲁棒混合 Transformer 方面做出了努力，这将在第一部分中介绍。此外，也有几种方法将纯 Transformer 应用于分割任务，将在本节的第二部分介绍。</p><h4 id="321-hybrid-transformers"><a class="markdownIt-Anchor" href="#321-hybrid-transformers"></a> 3.2.1 Hybrid Transformers</h4><p>为了构建与流行的 U 型架构相匹配的 Transformer，我们发现现有研究最关注以下三个问题，包括</p><p>在 U 型架构的不同层次插入 Transformer 层；</p><p>使用不同的策略将 Transformer 和 CNN 结合起来；</p><p>使用多尺度特征或注意力机制。</p><p>下面我们将分别详细介绍这三类研究。</p><h5 id="location-of-transformer-in-u-shaped-architecture"><a class="markdownIt-Anchor" href="#location-of-transformer-in-u-shaped-architecture"></a> Location of Transformer in U-shaped architecture.</h5><p>要在 U 型架构中插入 Transformer 层，一个直观的想法是在编码器和解码器模块之间插入一个完整的 Transformer，以建立高层次视觉概念之间的长期依赖关系。按照这一思路，Chen 等人[83] 提出了 TransUNet，如图 7 所示，它通过 CNN 提取高分辨率空间特征，然后通过 Transformer 对全局上下文进行编码。然后将 Transformer 编码的自注意特征进行上采样，并与利用跳接从编码路径中提取的多尺度特征相结合，以实现精确定位。与 V-Net、AttnUNet 和 ViT 相比，TransUNet 在多器官和心脏分割任务中取得了优异的性能。与 TransUNet 类似，Yao 等人[84] 将 Transformer 网络与 Claw Unet 架构相结合，在突触多器官分割中的表现优于 TransUnet。又如，Xu 等人[85] 提出了 LeViT-UNet，将 LeViT Transformer 集成到 Unet 架构中。在[86]中，Sha 等人通过在 Unet 中添加 Transformer 模块设计了 Transformer-Unet，其性能优于 TransUnet。</p><p>与上述在编码器模块后直接插入 Transformer 的研究不同，Li 等人[87] 在解码器中加入了注意力升采样（AU）组件。他们还提出了在局部窗口工作的窗口注意力解码器（WAD）和窗口注意力升采样（WAU），以减少内存和计算成本。Gao 等人[89] 提出的UTNet 在编码器和解码器模块中都应用了自注意模块，以最小的开销捕捉多尺度的长距离依赖关系。他们提出了一种高效的自注意机制以及相对位置编码，从而将自注意操作的复杂度从 O(n2) 显著降低到近似 O(n)。他们工作的升级版，即 UTNetV2 [92]，进一步提出了高效的双向注意（BMHA）。Fu 等人[91] 提出了 TF-Unet，它是建立在卷积和 Transformer 多尺度交织的骨干上的。此外，还有一些作品提出了改进特征串联的策略[127]、[98]。</p><h5 id="strategies-of-bridging-transformer-and-cnn"><a class="markdownIt-Anchor" href="#strategies-of-bridging-transformer-and-cnn"></a> Strategies of bridging Transformer and CNN.</h5><p>与上述在单一推理路径中结合 Transformer 和 U 形架构的方法不同，其他作品探索了不同的 TransformerCNN 耦合策略。Sun 等人[93] 使用 Unet 和 Transformer 编码器独立生成表示，然后整合它们的表示进行后续解码。同样，Li 等人[170] 提出了 X-Net，使用 CNN 和 Transformer 同时提取局部和全局特征。Zhang 等人[96] 提出的 TransFuse 也是以并行的方式将 Transformer 和 Unet 结合在一起。比上述研究更好的是，他们提出了一种新颖的融合技术，即 BiFusion 模块，以有效地融合来自两个分支的多层次特征。Luo 等人[100] 也使用双向交叉注意来融合卷积运算提取的局部信息和自注意机制学习到的全局信息。Liu 等[101] 提出了 PHTrans，在深度阶段引入并行 hybird 模块，卷积块和修改后的 3D Swin Transformer 分别学习局部特征和全局依赖关系，然后通过序列到卷积操作统一输出的维度，实现特征聚合。</p><p>Zhou 等人[102]称，最近提出的大多数基于 Transformer 的分割方法只是将 Transformer 作为辅助模块，帮助在卷积表征中对全局上下文进行编码，而没有研究如何将自注意力与卷积进行优化组合。为了解决这个问题，他们引入了 nnFormer，这种交错架构基于自注意和卷积的经验组合。Xu 等人[99] 提出了 ECT-NAS 方法，基于多尺度空间搜索为医学图像分割搜索高效的 CNNTransformers 架构。</p><p>多尺度。MIA 中 Transformers 的多尺度策略以多尺度方式使用特征或以多尺度图像作为输入。</p><p>(1) 多分辨率图像。Zhang 等人[24] 提出了一种金字塔网络架构，即金字塔医学Transformer（PMTrans），它通过对多分辨率图像的处理来捕捉多范围关系。Valanarasu 等人[105] 在编码器中添加了门控轴向 Transformer 层，其中包含高度和宽度门控多头注意力块的基本构件。他们利用整幅图像和斑块来学习全局和局部特征，并提出了局部-全局训练策略（LoGo），以进一步提高整体性能。</p><p>(2) 多尺度特征。与 TransUNet 仅使用 Transformer 处理上一层学习到的低分辨率特征图不同，Xie 等人[25] 提出了一种可变形 Transformer（DeTrans）来处理多尺度和高分辨率特征图。Ji 等人[108] 提出了多尺度卷积Transformer（Multi-Compound Transformer，MCTrans），它将多尺度卷积特征嵌入为标记序列，并执行尺度内和尺度间的自注意。与这些使用 CNN 提取特征的研究不同，Hatamizadeh 等人[112] 引入了 UNEt Transformers（UNETR），利用纯 Transformer 作为编码器来学习输入卷的序列表示。Transformer 编码器通过不同分辨率的跳接直接连接到解码器，以计算最终的语义分割输出。Zhang 等人[122]提出了 S2WinTOUnet，利用星形 Window 自我注意力获取细粒度细节和粗粒度语义信息。</p><p>(3) 多层次注意。Chen 等人[114]提出了 TransAttUnet，其中多层次引导注意和多尺度跳转连接的联合设计有效增强了传统的 U 型架构。Transformer Self Attention（TSA）和 Global Spatial Attention（GSA）都被纳入 TransAttUnet，以有效学习编码特征之间的非局部交互。Wang 等人[118] 提出了混合Transformer模块（MTM），通过精心设计的局部-全局高斯加权自注意力（LGG-SA）计算自相似性，然后通过外部注意力（EA）挖掘数据样本之间的相互联系。Wu 等人[111]提出了 Dilated Transformer，对局部和全局范围内交替捕捉的成对补丁关系进行自注意。</p><p>(4) 多轴融合。Yan 等人[119]应用轴向融合 Transformer 融合了片间和片内信息，降低了在三维空间计算自注意的计算复杂度。</p><p>总之，上述方法都利用了通过特征融合策略学习到的附加特征，从而提高了学习效率。</p><h4 id="322-pure-transformer"><a class="markdownIt-Anchor" href="#322-pure-transformer"></a> 3.2.2 Pure Transformer</h4><p>除去上述结合了 Transformer 和卷积的 Unet 架构变体，Karimi 等人[123] 尝试在相邻图像补丁之间使用简单的自注意，而不进行卷积操作。三维图像被划分为 n3 个三维补丁（n = 3 或 5），每个补丁学习一个一维嵌入。网络通过对图像补丁嵌入之间的自我关注，输出中心补丁的分割结果。这种假设下的方法很容易被识别为纯粹的 Transformer。</p><p>Cao 等人[124]提出了一种用于医学图像分割的类 Unet 纯 Transformer，方法是将标记化的图像补丁送入类 Transformer 的 U 型编码器-解码器架构中，通过跳转连接以局部-全局的方式进行语义特征学习。Lin 等人[125] 更进一步提出了 DS-TransUNet，它首先采用基于 SwinTransformer 的双尺度编码器子网络来提取不同语义尺度的粗粒度和细粒度特征表征。同时，还提出了一个精心设计的 Transformer 交互融合（TIF）模块，通过自关注机制有效建立不同尺度特征之间的全局依赖关系。为了更好地利用 Transformer 的天然多尺度特征分层，Huang 等人[126] 提出了 MISSFormer，它有两个吸引人的设计： 1) 增强型 Transformer Block 作为前馈网络，具有更好的特征一致性、长距离依赖性和局部上下文；以及 2) 增强型 Transformer Context Bridge 用于对分层 Transformer 编码器生成的多尺度特征的长距离依赖性和局部上下文进行建模。</p><h3 id="33-image-to-image-translation"><a class="markdownIt-Anchor" href="#33-image-to-image-translation"></a> 3.3 Image-to-image translation</h3><p>Transformer 模型在图像合成 [16]、重建 [171] 和超分辨率 [172] 等许多图像到图像转换应用中也展示了其强大的学习能力。不过，在医学图像分析领域，最近开始出现图像到图像转换的研究成果（如 [26], [147]）。在此，我们在表 3 中列出了现有的基于 Transformer 的图像到图像转换方法及其评价指标。</p><h4 id="331-image-synthesis"><a class="markdownIt-Anchor" href="#331-image-synthesis"></a> 3.3.1 Image synthesis</h4><p>在医学领域，由于受试者之间的差异性以及解剖幻觉（如在脑部核磁共振成像中出现白点的幻觉）可能会对诊断任务造成损害，因此图像合成仍然非常具有挑战性。近年来，生成对抗学习被广泛用于处理图像合成任务。因此，Transformer 与生成对抗学习范式被结合起来用于图像合成。例如，Hu 等人[150] 提出了一种用于跨模态医学图像合成的双尺度判别器 GAN，由基于Transformer的全局判别器和基于 CNN 的局部判别器组成。Watanabe 等人[26]提出了一种基于 Transformer 解码块的生成模型架构，这得益于其在时间序列建模方面的强大能力。在数据处理过程中，他们通过特异性/非特异性结合率（SNBR）对单光子发射计算机断层扫描（SPECT）图像的像素值进行归一化处理。在训练过程中，他们采用 Transformer 解码器构建自动回归模型，并在帕金森病进行性标记主动数据库的[123 I]FP-CIT SPECT 图像上以非配对方式训练模型。训练后的模型能生成具有帕金森病患者特征的 SPECT 图像。Kamran 等人[147] 提出了一种基于 Transformer 的条件生成对抗网络，如图 9 所示，可同时执行从眼底照片到荧光素血管造影（FA）的半监督图像合成，用于视网膜疾病诊断。</p><p>针对正电子发射断层扫描（PET）的强度范围通常较宽且密集，甚至严重偏向零的问题，Shin 等人[149] 利用双向编码器表征（BERT），即 GANBERT，构建了一个生成式对抗网络，从 MRI 图像生成 PET 图像。Luo 等人[173] 提出了一种三维Transformer GAN，用于在低剂量下重建高质量 PET 图像。为了克服难以获得大型医疗数据集的限制，Korkmaz 等人[151] 引入了一种基于零点学习对抗Transformer（SLATER）的无监督重建方法来进行 MRI 合成。SLATER 是一种无条件对抗结构，由合成器、判别器和映射器组成。合成器采用交叉注意 Transformer 块来捕捉长程关系，映射器则将噪声和潜变量映射到 MR 图像上。Ristea 等人[153]提出了一种基于生成对抗卷积Transformer的架构–CyTran，并集成了周期一致性损失，用于对比度和非对比度 CT 扫描之间的非配对计算机断层扫描（CT）图像转换。</p><p>除了两种模态之间的图像合成工作，Transformer 模型还成功地应用于多模态医学图像合成。例如，Dalmaz 等人[154] 提出了一种用于多模态医学图像合成的生成对抗方法，即 ResViT。ResViT 中的生成器基于编码器-解码器架构，其中心瓶颈由能够协同保存局部和全局上下文的聚合残差Transformer（ART）块组成。</p><h4 id="332-image-super-resolution"><a class="markdownIt-Anchor" href="#332-image-super-resolution"></a> 3.3.2 Image super-resolution</h4><p>超分辨率成像（SR）是一类提高成像系统分辨率的技术，也是图像合成的一个热门子领域。Transformer 模型在医学图像分析的超分辨率任务上做出了突出贡献。例如，Feng 等人[159] 引入了一种任务 Transformer 网络（T2Net）来联合学习核磁共振成像中的图像重建和超分辨率任务。这是一个多任务框架，包括超分辨率分支和普通分辨率分支，作者设计了 Transformer 模块来嵌入相似性并对齐两个分支之间的差距。Zhang 等人[160] 提出了一种基于 Pyramid Transformer（PTNet）的高分辨率合成器，并用于婴儿大脑的 MRI 合成。PTNet 由执行编码器（PE）、执行解码器（PD）和 Transformer 瓶颈组成，后者继承了 U 结构以及多分辨率金字塔结构。</p><h4 id="333-image-denoising"><a class="markdownIt-Anchor" href="#333-image-denoising"></a> 3.3.3 Image denoising</h4><p>图像去噪是指去除图像中的噪声。它是多种临床应用的基本步骤。例如，Wang 等人[162] 首次将 Transformer 用于低剂量 CT（LDCT）去噪。他们开发了一种基于令牌到令牌（T2T）视觉 Transformer 的编码器-解码器去噪网络，即 TED-net。TED-net 也是一个 U 型结构模型，它利用 T2T 阶段的扩张来扩大感受野。Luthra 等人[164]提出了基于边缘增强的 Transformer（Eformer），它利用 Transformer 块构建了一个用于医学图像去噪的编码器-解码器架构。变压器模型及其在低剂量 CT（LDCT）去噪任务中的应用仍然很少。</p><h3 id="34-detection"><a class="markdownIt-Anchor" href="#34-detection"></a> 3.4 Detection</h3><p>在技术和临床领域，&quot;检测 &quot;的含义和术语各不相同。在技术领域，它通常指检查是否存在疾病或病变，而在临床实践中，它通常指诊断或疾病分类，如上所述。在计算机视觉领域，检测的目的是识别输入图像中物体的位置并预测其类别。在本节中，检测指的是物体检测的应用。</p><p>利用医学图像处理检测任务的 Transformer 通常与 CNN 块相结合，其中 CNN 用于从医学图像中提取特征，而 Transformer 架构则用于增强提取的特征，以便进行下游检测。Shen 等人[166] 提出了一种基于 DETR 的结肠息肉检测模型，即 COTR。DETR [14]是计算机视觉中物体检测的入门方法。COTR 由用于特征提取的 CNN、与卷积层交错的用于特征编码和重新校准的 Transformer 编码层、用于对象查询的 Transformer 解码层和用于检测预测的前馈网络组成。他们建议在 Transformer 编码器中插入卷积层，以实现高级图像特征重建和收敛加速。Ma 等人[167] 提出了一种结合 CNN 和 Transformer 网络的 TR 网络，用于检测多平面重新格式化（MPR）图像中的明显狭窄。他们的模型采用浅层 3D-CNN 提取冠状动脉区域的局部语义特征，同时确保模型的效率。接下来，利用 Transformer 编码器学习冠状动脉每个位置的局部狭窄不同区域之间的相关性。因此，在汇总局部语义特征和全局语义特征的信息后，TR-Net 可以准确地检测狭窄。Jiang 等人[165]构建了一个基于 YOLOv5s 的龋齿检测 Transformer，称为 RDFNet。该模型使用 FReLU 激活函数激活图像的复杂视觉空间信息，以提高效率。Kong 等人[168] 提出了一种用于 X 光图像端到端胸部异常检测的 contextaware 混合 Transformer–CT-CAD。Tao 等人[169] 设计了一种脊柱Transformer，用于解决任意视场脊柱 CT 中椎骨的自动检测和定位问题。他们将检测表述为一对一集合预测问题。</p><h3 id="35-registration"><a class="markdownIt-Anchor" href="#35-registration"></a> 3.5 Registration</h3><p>Transformer在图像配准任务中具有一些优势，这得益于它们的自我注意机制，这种机制可以在运动图像和固定图像之间实现更精确的空间映射。Chen 等人首创了用于图像配准的 Transformer。受 TransUnet [83] 架构的启发，他们提出了 ViT-V-Net [29]，通过简单改变 VoxelMorph（传统配准网络）[174] 的网络架构，将 ViT 和 V-Net 结合在一起。与基准方法相比，ViT-V-Net 的性能更胜一筹。之后，他们扩展了自己的工作，提出了用于体积医学影像配准的 TransMorph [175]。在这种方法中，Swin-Transformer[31] 被用作编码器网络，以捕捉输入移动图像和固定图像之间的空间对应关系。接着，ConvNet 解码器将Transformer编码器提供的信息映射到密集的位移场上。为了保持编码器和解码器阶段之间的本地信息流，采用了长跳接连接。显然，基于 Transformer 的配准方法并不多见，需要更多的探索和研究。</p><h3 id="36-video-based-applications"><a class="markdownIt-Anchor" href="#36-video-based-applications"></a> 3.6 Video-based applications</h3><p>由于感受野有限，CNN 无法充分利用连续视频帧中的全局时空信息，而 Transformer 则可以克服这种缺陷。Ji 等人[176] 提出了 PNS-Net（渐进归一化自注意网络），用于从结肠镜检查视频中准确分割息肉。Kondo 等人[177] 提出用 LapFormer 检测腹腔镜手术视频中的手术工具。Czempiel 等人[178] 采用 OperA 从长视频序列中预测手术阶段。Reynaud 等人[179] 首次采用了 Transformer 架构，该架构包含一个残差自动编码器网络和一个 BERT 模型，用于分析任意长度的视频。Long 等人[180] 首次应用 Transformer 估算手术场景深度。</p><h2 id="4-discussion"><a class="markdownIt-Anchor" href="#4-discussion"></a> 4 DISCUSSION</h2><p>Transformer 已成功应用于医学图像分析的几乎所有领域。然而，在实际临床应用中部署机器学习方法可能会因一些挑战而导致性能不佳。其中，最紧迫的挑战在于标签稀缺，尤其是在场景理解任务中，如分割和检测，通常需要像素级的精确标签。从有噪声的标签中学习是一个更大的挑战。此外，建立先进的 CADx 方法需要以多任务的方式使用多模态临床数据–尽管如此，这种通用的学习方法在设计上仍有困难。</p><h3 id="41-transformers-under-different-learning-scenarios"><a class="markdownIt-Anchor" href="#41-transformers-under-different-learning-scenarios"></a> 4.1 Transformers under different learning scenarios</h3><h4 id="411-multi-task-learning"><a class="markdownIt-Anchor" href="#411-multi-task-learning"></a> 4.1.1 Multi-task learning</h4><p>建立具有多重任务的模型有助于提高模型的通用性，而这正是医学图像分析领域所亟需的。一个常用的框架是将分类和分割统一为一个模型。[187], [188]. 例如，Chen 等人[188] 提出了多任务跨UNet（MT-TransUNet）来联合学习皮肤病变的分割和分类。通过 CNN 和 ViT 提取局部细节（如皮肤颜色、纹理）和长程上下文（如皮损形状、物理尺寸），该方法实现了 SOTA 性能，并在模型参数和推理速度方面获得了高效改进。此外，Sui 等人[189] 将检测任务与分割任务相结合，提出了一种新颖的迁移学习方法，即 CST，并采用基于 Transformer 的框架联合进行结直肠癌区域检测和肿瘤分割。在检测方面，输入图像生成的区域建议以及编码器-解码器模块获得的位置特征被用作 DETR 网络的输入。在分割方面，该模型使用图像片段作为输入，并将其投射到嵌入序列中。</p><h4 id="412-multi-modal-learning"><a class="markdownIt-Anchor" href="#412-multi-modal-learning"></a> 4.1.2 Multi-modal learning</h4><p>使用多种模式数据可为诊断提供互补证据。例如，研究人员探索了结合光学相干断层扫描（OCT）和视野（VF）测试来辅助诊断眼科疾病。Song 等人[71] 提出采用 Transformer 进行青光眼诊断。提出的模型利用注意力机制来模拟 OCT 特征和 VF 特征之间的配对关系。然后，再次应用注意力机制计算视野区域和视网膜神经纤维层象限之间的特征区域关系。利用 Transformer 模型将互补信息从一种模式传递到另一种模式。</p><p>Monajatipoor 等人[184] 提出了一种基于 Transformer 的视觉语言模型，该模型将高效的 PixelHop++ 模型与 BERT 模型相结合。具体来说，BERT 模型是利用领域内知识进行预训练的。事实证明，该模型在小规模数据集上的训练是有效的。提取的视觉特征和词嵌入被送入 Transformer 进行最终诊断。虽然该模型减少了对大量医学图像注释的需求，但语言模型的预训练仍需要大量临床报告。Jacenk ́ ow 等人[186] 将文本与 CXR 结合起来进行疾病分类。他们观察到，图像的解释和报告受扫描请求文本的影响，而扫描请求文本是放射报告中的指示字段。Zheng 等人[182] 通过考虑潜在的模态间相关性，重点研究了多模态信息的特征融合。他们提出了类似 Transformer 的模态注意特征融合方法（MaFF），在挖掘模态间关系的同时从每种模态中提取丰富的信息。然后，利用自适应图学习机制（AGL），基于融合特征为下游任务构建潜在鲁棒图。该方法大大提高了对注意力缺失症和自闭症的预测能力。Dai 等人[185] 提出了用于诊断腮腺肿瘤的 TransMed 方法。TransMed 结合了 CNN 和 Transformer 网络的优势，既能捕捉低级纹理，又能捕捉跨模态的高级关系。该模型首先将多模态图像处理为序列，通过链式处理并将其发送至 CNN 进行特征提取。然后将特征序列输入 Transformer，以学习序列之间的关系并进行特征融合。他们的研究利用 Transformer 从不同模态的图像中捕捉互信息，显示出更好的性能和效率。Nguyen 等人[181] 尝试模仿放射科医生和全科医生之间的互动，对膝关节骨关节炎进行诊断和预后判断。他们提出了一个具有三Transformer架构的临床启发多代理Transformer（CLIMAT）框架。首先，结合 Transformer 和 CNN 的特征提取器用于预测疾病的当前状态。接着，将非图像辅助信息输入另一个Transformer，以提取上下文嵌入。最后，另一个基于 Transformer 的全科医生模块会根据当前状态和上下文嵌入预测疾病轨迹。</p><p>总之，Transformer 被认为是连接 CV 和 NLP 任务的一种有前途的方法[190]。在此假设下，Radford 等人[191] 建立了一个多模态 Transformer，即 CLIP，它能在不进行图像标注的情况下，根据图像的文本描述识别图像，实现零误差能力。这种优势也为建立更强大、更准确的计算机辅助诊断（CADx）方法提供了潜在的途径，因为在实际临床应用中，多种数据类型（如临床、实验室和成像数据）都被视为不同的信息源。</p><h4 id="413-weakly-supervised-learning"><a class="markdownIt-Anchor" href="#413-weakly-supervised-learning"></a> 4.1.3 Weakly-supervised learning</h4><p>医学图像中的一种弱监督情况是，某种疾病的 ROI 在图像中相对较小，而只能进行图像级标记。为解决这一问题，多实例学习（MIL）被作为一种合适的解决方案。在多实例学习中，训练样本是一组实例，称为袋。只对包提供监督，而不提供包中所含实例的单个标签[200]。</p><p>尽管许多现有的 MIL 方法都假定正负实例是从正负分布中独立采样的 [200]，但包中的实例是相关的，尤其是在医学图像分析中。MIL 的学习场景并不遵循 i.i.d 假设，因为实例之间的关系不会被忽视。在这种情况下，可以利用 ViTs 来建立实例之间的相关性，从而获得更好的高层表征。Li 等人[192]提出了基于Transformer的 MIL 框架，其中的诱导关注块在计算关注度的同时，绕过了成对点乘所带来的二次计算复杂性。该框架的特征聚合器也是基于多头注意力。它将前面提到的特征合并成袋表示。Yang 等人[194] 将患者的多个肺结节视为一个包，每个结节视为一个实例。不同于传统的 MIL 方法使用池化操作来获得袋级表征，他们提出使用 3D DenseNet 在体素级学习单个结节级表征。接下来，生成的表示被输入 Transformer，以学习同一患者的结节关系。为了减轻计算负担，他们应用了从分裂通道特征中提取的组内缩放点生产注意力。Shao 等人[196] 重点研究了不同实例之间的相关性，而不是简单地假设实例是独立且同分布的。为此，他们提出了基于 Transformer 的 MIL 框架来处理整个幻灯片图像分类问题。他们的框架使用 Transformer 层来聚合形态信息，并提出了金字塔位置编码生成器（PPEG）来提取空间信息。此外，他们还采用 Nystrom 方法计算近似自注意力，从而将计算复杂度从 O(n2) 降低到 O(n)。Rymarczyk 等人[193] 对注意力机制给予了更多关注。他们的工作有助于修订基于注意力的 MIL 池（AbMILP），该方法可以聚合来自不同数量实例的信息。他们提出了基于注意力的自注意力 MILPooling（SA-AbMILP），以模拟袋中不同实例之间的依赖关系。他们还建议通过引入不同的内核来扩展注意力的计算，这些内核起到了与点生成相同的作用。他们在组织学、微生物学和视网膜数据集上评估了他们的工作。Yu 等人[195] 的研究探讨了 ViTs 在眼底图像视网膜疾病分类中的适用性。他们提出了多实例学习增强型视觉Transformer（MIL-VT），在 ViT 上添加了一个即插即用的多实例学习头，以利用从单个斑块中提取的特征。</p><p>另一个弱监督的例子是半监督学习，它只需要少量的标记数据，就能利用大量未标记数据中的知识。Luo 等人[201]首次将 CNN 和 Transformer 结合起来用于半监督医学图像分割。他们引入了 CNN 和 Transformer 之间的交叉教学，将一个网络的预测作为伪标签来监督另一个网络。Zhao 等人[202] 提出了一种名为 CA-Net 的上下文感知网络，用于从三维核磁共振图像中进行半监督 LA 分割。CA-Net 包含两个主要模块，一个是结合 Transformer 和 V-Net 来学习上下文信息的 Trans-V 模块，另一个是计算对抗损失的判别器，用于学习未标记的数据。Xiao 等人[203] 同时使用 CNN 和 Transformer 的 Dual-Teacher 结构来指导学生分割模型。</p><h4 id="414-self-supervised-learning"><a class="markdownIt-Anchor" href="#414-self-supervised-learning"></a> 4.1.4 Self-supervised learning</h4><p>Transformer 的成功训练依赖于大规模的注释数据，而这些数据在实际临床设施中很少能获得。自我监督学习（SSL）就是为了解决这一问题而诞生的。自我监督学习旨在通过转移相关无监督上游任务（即视觉概念学习）中的知识来提高下游任务（如分类、检测和分割）的性能，并利用未标注数据中的自含信息对模型进行预训练[204]。训练 SLL ViT 的做法一般是在 ImageNet 上对模型进行预训练，然后在目标医学图像数据集上进行微调。与 CNN 相比，这提高了 ViT 的性能，并达到了 SOTA 准确率[205]、[206]、[207]、[208]。</p><p>Truong 等人的研究[198] 评估了医疗图像中自监督特征的可转移性。他们使用自监督 ViT DINO 对特征进行了预训练。他们将 ViT 作为骨干，结果显示其与 SimCLR 和 SwAV 相比表现更优。Park 等人[43] 建议使用公开的大规模 CXR 分类数据集来预训练骨干网络。然后将预训练骨干网模型提取的特征输入 ViT，诊断 COVID-19。Jun 等人[129] 提出了一种自监督迁移学习框架，该框架能更好地表示三维容积图像中的空间关系，从而为下游任务提供便利。他们将三维容积图像转换成三视图的二维图像切片序列，并将其输入由卷积编码器和 Transformer 组成的预训练骨干网络。Transformer 的预训练通过屏蔽编码矢量实现，作为 SSL 的代理任务。下游任务包括利用三维容积图像进行脑疾病诊断、脑年龄预测和脑肿瘤分割。他们还为三维医学图像探索了一种参数高效的迁移学习框架。Wang 等人[197] 收集了一个大型公共组织病理学图像数据集，对他们提出的混合 CNN-Transformer 框架进行预训练。此外，他们还设计了标记聚集和激励（TAE）模块，通过考虑所有标记来进一步提高全局权重关注度。Sriram 等人[199] 探索了 Transformer 在 COVID-19 预后中的应用。他们提出了一个多图像预测 (MIP) 模型，将图像序列和相应的扫描时间作为输入。为了处理缺失的 COVID-19 图像，他们使用了动量对比学习（Momentum Contrast Learning），这是一种预训练特征提取网络的自我监督方法。除了从 X 射线中提取的特征外，他们还提出了连续位置嵌入（CPE）来添加基于时间步长的信息。特征和连续位置嵌入的串联被输入 Transformer，以预测不良事件发生的可能性。Chen 等人[209]的研究表明，使用基于 DINO 的知识提炼的视觉 Transformer 能够通过训练各种自监督模型，并在不同的弱监督组织表型任务上进行验证，从而学习组织学图像中数据高效且可解释的特征。值得注意的是，他们在学习不同形态表型的同时，还在 ViT 的不同注意头上发挥了出色的性能。</p><h3 id="42-model-improvement-quantification-acceleration-and-interpretation"><a class="markdownIt-Anchor" href="#42-model-improvement-quantification-acceleration-and-interpretation"></a> 4.2 Model-improvement: quantification, acceleration and interpretation</h3><p>在医学影像领域，有几项研究重点关注模型的效率。一个自然的思路是简化注意力机制，因为它是 Transformer 中工作量最大的部分。Gao 等人[89] 提出了一种高效的自我注意机制和位置编码，将自我注意操作的复杂度从 O(n2) 大幅降低到近似 O(n)。这规避了 Transformer 需要海量数据来学习视觉归纳偏差的障碍。他们的混合层设计将 Transformer 初始化为卷积网络，无需预训练。此外，Liu 等人[48] 采用的前述视觉展望器（VOLO）用展望关注取代了标准的自我关注，后者执行内部自我关注机制，降低了原有的时空复杂度。Li 等人[210] 在其作品 TransBTSV2 中重新设计了 Transformer 块，与传统的基于 Transformer 的方法相比，追求一种更浅但更宽的架构。Wu 等人[111] 受扩张卷积核的启发，以扩张的方式进行全局自注意，在不增加补丁的情况下扩大了感受野，降低了计算成本。Xu 等人[99] 构建了一个由多分支并行搜索块组成的多尺度搜索空间，并行连接 CNN 和 Transformer。他们还提出了一种高效的资源受限搜索策略，以同时优化模型的精度和成本（如参数和 FLOPs）。</p><p>我们看到，尝试在 MIA 而非 CV 中解决模型效率问题的作品较少。然而，随着医学影像尺寸越来越大、数量越来越少，该领域迫切需要解决这一问题。因此，我们希望在这个特定的研究方向上看到更多的作品。</p><h3 id="43-comparison-with-convolutional-neural-networks"><a class="markdownIt-Anchor" href="#43-comparison-with-convolutional-neural-networks"></a> 4.3 Comparison with convolutional neural networks</h3><p>在 ViTs 出现之前，卷积神经网络在 CV（包括医学图像分析领域）中占据主导地位。为了提高基于 CNN 的分类器在自然和医学图像中的性能，人们投入了大量精力。有几项研究提出了基于 CNN 的方法是否仍能在 ViTs 上发挥作用。同时，由于 ViTs 在多个基准测试中名列前茅，很多研究都集中在 ViTs 和 CNN 的性能比较上。要利用 Transformer 获得理想的性能，需要大规模的数据集。然而，在医学图像分析领域，可用的图像和注释非常有限。为了缓解这一问题，许多方法在 ViTs 中采用了卷积层来提高有限医学图像的性能，同时还利用了迁移学习和自我监督学习的力量。Matsoukas 等人[205]探讨了迁移学习和自我监督学习机制是否能使 ViTs 受益。他们使用不同的初始化策略进行了多项实验，比较了 CNN（即 ResNet50）和 ViT（即 DEIT-S）的性能： 1) 随机初始化权重；2) 使用 ImageNet 预训练权重进行迁移学习；3) 在目标数据集上进行自我监督预训练，并在 2) 中采用相同的初始化。他们在 APTOS 2019、ISIC 2019 和 CBIS-DDSM 数据集上对这些方法进行了评估。可以得出结论：标准程序，例如使用 ImageNet 预训练权重进行初始化，以及利用自监督学习，可以缩小 CNN 和 ViT 之间的性能差距。Krishnamurthy 等人[211] 在 CNN 和 ViT 中都采用了迁移学习方案来诊断肺炎。他们首先在 ImageNet 上对模型进行预训练，然后在自己的私人数据集上对分类器进行微调。然而，他们的比较是基于冻结骨干层的微调，这限制了适应目标领域时特征提取的性能。Truong 等人[198] 评估了医疗成像任务中自我监督特征的可转移性。他们选择 ResNet-50 作为骨干层，并使用 SimCLR、SwAV 和 DINO 三种自监督方法对其进行预训练。DINO 使用 ViT 作为骨干，其性能一直远远优于其他自监督技术和监督基线。他们提出了一种与模型无关的技术，即动态视觉元嵌入（DVME），将多种自我监督学习方法的预训练特征与自我关注相结合。针对多尺度细胞图像分类任务，Liu 等人[212] 提出了一个实验平台，用于比较多种深度学习方法，包括 CNN 和 ViT。他们通过改变图像的内部细胞比例，验证了深度学习模型在标准数据和缩放数据上的性能。结果表明，包括 ViTs 在内的深度学习模型对宫颈细胞病理学图像内部细胞比率的变化具有鲁棒性。在肩部植入物 X 光制造商分类方面，Zhou 等人[213] 比较了各种模型的性能，包括传统机器学习方法、基于 CNN 的深度学习方法和 ViTs。结果表明，ViT 在这些任务中取得了最佳性能，而迁移学习对 ViT 的改进幅度较大。Altay 等人[214] 的目标是利用磁共振成像对注意力缺失症进行早期临床前预测。他们将 Transformer 与基线三维 CNN 模型和三维递归视觉注意力模型进行了比较，结果表明 Transformer 实现了最佳的准确率和 F1 分数。AdjeiMensah 等人[215] 的研究表明，CNN 在低分辨率医学图像识别方面的表现优于 ViT。Galdran 等人[216] 的研究也表明，在少量数据的情况下，CNN 在糖尿病足溃疡分类方面的表现优于 ViT。总之，现有研究并未表明 ViTs 在所有情况下都优于 CNN，尤其是在少数据和低分辨率的医学图像分析中。因此，与计算机视觉中的方法类似，大多数最新研究都采用了用卷积建立混合模型的方法。</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5 CONCLUSION</h2><p>变形金刚正在改变计算机视觉领域。此外，在医学图像分析领域，使用Transformer的研究也在迅速发展。然而，目前大多数基于 Transformer 的方法都是自然而简单地应用于医学影像问题，并没有大的改变。换句话说，先进的方法，如弱监督学习、多模态学习、多任务学习和模型改进等，很少被探索。此外，我们只看到少数作品关注模型的一般问题，如并行化、可解释性、量化和安全性。这些都指明了医学 Transformer 的未来发展方向。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prior Guided Feature Enrichment Network for Few-Shot Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Prior-Guided-Feature-Enrichment-Network-for-Few-Shot-Segmentation%E2%80%9D-(Zhuotao-Tian-%E7%AD%89%E3%80%82,-2022,-p.-1050)/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Prior-Guided-Feature-Enrichment-Network-for-Few-Shot-Segmentation%E2%80%9D-(Zhuotao-Tian-%E7%AD%89%E3%80%82,-2022,-p.-1050)/</url>
      
        <content type="html"><![CDATA[<h1 id="prior-guided-feature-enrichment-network-for-few-shot-segmentation"><a class="markdownIt-Anchor" href="#prior-guided-feature-enrichment-network-for-few-shot-segmentation"></a> Prior Guided Feature Enrichment Network for Few-Shot Segmentation</h1><h2 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1、介绍</h2><p>深度学习的快速发展为语义分割带来了巨大的改进。标志性的框架[2], [52]已经在自动驾驶、机器人视觉、医学图像等广泛的应用中受益。然而，这些框架的性能在没有足够的完全标记的数据时或在对未见过的类进行工作时很快就会恶化。即使提供了额外的数据，微调仍然是耗费时间和资源的。</p><p>为了解决这个问题，有人提出了小样本分割法[29]，将数据分为支持集和查询集。如图1所示，支持集和查询集的图像首先被发送到骨干网络以提取特征。特征处理可以通过为分类器生成权重[29]、余弦相似度计算[4]、[40]或卷积[13]、[46]来产生最终的预测结果。[image]</p><blockquote><p>图1.最近的小样本分割框架的总结。用于提取支持和查询特征的骨干方法可以是一个单一的共享网络或两个连体网络。</p></blockquote><p>支持集提供了关于目标类别的信息，帮助模型对查询图像进行准确的分割预测。这个过程模拟了这样的场景：一个模型在只有少数标记数据（支持）的情况下对测试图像（查询）进行未见过的类别预测。因此，几率模型需要快速适应新的类别。然而，现有的小样本分割方法的共同问题包括由于滥用高级特征而导致的泛化损失，以及查询和支持样本之间的空间不一致。在本文中，我们主要解决这两个难题。</p><p>笼统的减少和高水平的特征。</p><p>常见的语义分割模型在很大程度上依赖于带有语义信息的高级特征。(<a href="zotero://select/library/items/3AR39Q4N">Zhang 等。, 2019</a>)CANet[46]的实验表明，在小样本模型的特征处理过程中简单地添加高级特征会导致性能下降。因此，在小样本的设置中利用语义信息的方法并不简单。与以前的方法不同，我们使用ImageNet[28]预先训练好的查询和支持图像的高级特征来为模型产生 “先验”。这些先验有助于模型更好地识别查询图像中的目标。由于先验生成过程是免于训练的，因此尽管在训练过程中经常使用所见类别的高层次信息，所产生的模型也不会失去对未见类别的概括能力。</p><p>空间上的不一致。</p><p>此外，由于样本有限，每个支持对象的比例和姿势可能与查询目标有很大的不同，我们称之为空间不一致性。为了解决这个问题，我们提出了一个新的模块，名为特征丰富模块（FEM），用支持特征自适应地丰富查询特征。第4.3节中的消减研究表明，仅仅采用多尺度方案来解决空间不一致的问题是不理想的，因为FEM提供了有条件的特征选择，有助于保留不同尺度上传递的基本信息。FEM比其他多尺度结构，如HRNet[39]、PPM[52]、ASPP[3]和GAU[45]，取得了更优越的性能。</p><p>最后，基于提出的先验生成方法和特征丰富模块，我们建立了一个新的网络–先验引导的特征丰富网络（PFENet）。基于ResNet-50的PFENet只包含10.8M的可学习参数，但在PASCAL-5i[29]和COCO[19]基准上取得了新的最先进的结果，在1-shot和5-shot的设置下分别达到15.9和5.1FPS。此外，我们通过将我们的模型应用于没有标记数据的zero-shot场景来体现其有效性。结果是令人惊讶的–PFENet在没有重大结构修改的情况下仍然取得了不错的性能。</p><p><strong>我们在本文中的贡献有三点:</strong></p><ul><li>我们利用高层次的特征，提出免训练的先验生成，以大大提高预测的准确性，并保持高泛化。</li><li>通过纳入支持特征和先验信息，我们的FEM有助于在有条件的尺度间信息交互下自适应地完善查询特征。</li><li>PFENet在不影响效率的情况下，在PASCAL-5i和COCO数据集上取得了最好的新结果。</li></ul><h2 id="3-我们的方法"><a class="markdownIt-Anchor" href="#3-我们的方法"></a> 3、我们的方法</h2><p>在本节中，我们首先在第3.1节中简要地描述了小样本的分割任务。然后，我们在第3.2和3.3节中分别介绍了先验生成方法和特征丰富模块。最后，在第3.4节中，讨论了我们提出的先验引导的特征丰富网络的细节。</p><h3 id="31-任务描述"><a class="markdownIt-Anchor" href="#31-任务描述"></a> 3.1、任务描述</h3><p>一个小样本的语义分割系统有两个集合，即查询集Q和支持集S。给定支持集S中的K个样本，目标是将未知类 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的区域从查询集的每个查询图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">I_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中分割出来。</p><p>模型在类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（基础）上进行训练，并在以前未见过的类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> （新的）上进行测试，其过程为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub><msub><mi>C</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{train} C_{test}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> .  情节范式是在[38]中提出的，并在[29]中首次应用于小样本分割。每个情节由支持集S和同一类别c的查询集Q组成。支持集S由类别c的K个样本S¼ fS1;S2;…;SKg组成，我们称之为 “K-shot场景”。第1个支持样本Si是一对fISi;MSi g，其中ISi和MSi分别是c的支持图像和标签。对于查询集，Q¼fIQ;MQg，其中IQ是输入的查询图像，MQ是c类的地面真相掩码。查询支持对fIQ;IS1;MS1;IS2;MS2;…;ISK;MSK g构成模型的输入数据批。查询图像的地面真相MQ对模型来说是不可见的，它被用来评估每集查询图像的预测。</p><h3 id="32-小样本分割的先例"><a class="markdownIt-Anchor" href="#32-小样本分割的先例"></a> 3.2 小样本分割的先例</h3><h4 id="321-重要意见"><a class="markdownIt-Anchor" href="#321-重要意见"></a> 3.2.1 重要意见</h4><p>CANet[46]在基准的PASCAL-5i数据集上，只从骨干中提取中间层次的特征（如ResNet-50的conv3_x和conv4_x），其性能大大超过了以前的工作。在CANet中的实验也表明，高层（如ResNet-50的conv5_x）特征会导致性能下降。[46]中解释说，中级特征的表现更好，因为它构成了未见过的类所共享的对象部分，但我们的另一种解释是，高级特征中包含的语义信息比中级特征更具有类的特异性，表明前者更可能对模型对未见过的类的概括能力产生负面影响。此外，高层特征直接提供了训练类Ctrain的语义信息，在识别属于Ctrain的像素和减少训练损失方面比中层信息的贡献更大。因此，这种行为导致了对Ctrain的偏爱。缺乏概括性和对训练类的偏爱对于在未见过的测试类Ctest上的评估都是有害的。</p><p>值得注意的是，与高层特征对小样本分割的性能产生不利影响的发现相反，先前的分割框架[27], [51]利用这些特征为最终预测提供语义线索。这种矛盾促使我们找到一种方法，以一种对训练等级不敏感的方式利用高层信息来提高小样本分割的性能。</p><h4 id="322-前期生成"><a class="markdownIt-Anchor" href="#322-前期生成"></a> 3.2.2 前期生成</h4><p>在我们的工作中，我们将ImageNet[28]预先训练的包含语义信息的高级特征转化为先验掩码，告诉人们像素属于目标类别的概率，如图2所示。在训练过程中，骨干参数与[40]、[46]中的参数固定。因此，先验生成过程不会偏向于训练类Ctrain，并且在对未见过的测试类Ctest进行评估时保持了类的不敏感性。让IQ;IS表示输入的查询和支持图像，MS表示二进制支持掩码，F表示骨干网络，XQ;XS表示高级查询和支持特征。我们有其中是哈达玛德积–XQ和XS的大小都是½h; w; c。注意，F的输出是用ReLU函数处理的。所以二元支持掩码MS通过将其设置为零来去除支持特征中的背景。</p><p>[image]</p><p>具体来说，我们将查询特征XQ的先验YQ定义为揭示XQ和XS之间像素级对应关系的掩码。查询特征XQ的一个像素如果在YQ上的值很高，意味着这个像素与支持特征中的至少一个像素有很高的对应关系。因此，它很可能在查询图像的目标区域内。通过将支持特征的背景设置为零，查询特征的像素与支持特征的背景没有对应关系–它们只与前景目标区域相关。为了生成YQ，我们首先计算xq 2 XQ和xs 2 XS的特征向量之间的像素余弦相似度cosðxq;xsÞ2R，即</p><p>[image]</p><p>[image]</p><p>我们提出的先验生成方法的关键点在于使用固定的高级特征，通过从公式（2）和（3）中给出的大小为hw hw的相似性矩阵中获取最大值来产生先验掩码，这相当简单而有效。在第4.4节中对[24]、[40]、[50]中使用的其他替代方法进行的消融研究表明了我们方法的优越性。</p><h2 id="33-特征丰富化模块"><a class="markdownIt-Anchor" href="#33-特征丰富化模块"></a> 3.3 特征丰富化模块</h2><h4 id="331-动机"><a class="markdownIt-Anchor" href="#331-动机"></a> 3.3.1 动机</h4><p>现有的小样本分割框架[4]、[13]、[24]、[26]、[29]、[31]、[40]、[46]在进一步处理前使用屏蔽的全局平均池，从支持图像中提取类向量。然而，支持图像的全局池化会导致空间信息的不一致，因为查询目标的面积可能比支持样本大得多或小得多。因此，使用全局池化的支持特征来直接匹配查询特征的每个像素并不理想。</p><p>一个自然的选择是加入PPM[52]或ASPP[3]，为特征提供多层次的空间信息。PPM和ASPP帮助基线模型产生更好的性能（正如我们后面的实验所证明的）。然而，这两个模块是次优的，因为。1）它们为合并后的特征提供空间信息，而没有在每个尺度内进行具体的细化处理；2）忽略了不同尺度间的层次关系。</p><p>为了缓解这些问题，我们拆分了多尺度结构，并提出了特征丰富模块，1）将查询特征与各尺度中的支持特征和先验掩码进行横向交互；2）纵向利用层次关系，通过自上而下的信息路径，用从细化特征中提取的基本信息丰富粗略的特征图。经过横向和纵向的优化，投射到不同尺度的特征再被收集起来，形成新的查询特征。FEM的细节如下。</p><h4 id="332-模块结构"><a class="markdownIt-Anchor" href="#332-模块结构"></a> 3.3.2 模块结构</h4><p>如图3所示，特征丰富模块将查询特征、先前掩码和支持特征作为输入。它通过支持特征的丰富信息输出精炼的查询特征。丰富过程可分为三个子过程：1）源间丰富，首先将输入投射到不同的尺度，然后在每个尺度中独立地将查询特征与支持特征和先验掩码进行交互；2）尺度间交互，在不同尺度的合并查询-支持特征之间选择性地传递基本信息；3）信息集中，合并不同尺度的特征，最终产生精炼的查询特征。图4显示了具有四个尺度和自上而下的尺度间交互路径的FEM的图示。</p><p>[image]</p><blockquote><p>图4.有四个尺度和一个自上而下路径的FEM（虚线框）的视觉图示。C、1×1和圆圈M分别代表串联、11卷积和尺度间合并模块。激活函数是ReLU。</p></blockquote><p>[image]</p><p>尺度间的相互作用。值得注意的是，在下采样的特征图中可能不存在微小的物体。一个自上而下的路径，自适应地将信息从较细的特征传递到较粗的特征，有利于在我们的特征丰富模块中建立一个层次关系。现在的互动不仅是每个尺度的查询和支持特征之间的互动（横向），而且是不同尺度的合并特征之间的互动（纵向），这对整体性能是有利的。</p><p>图4中圈出的M代表尺度间合并模块M，它通过选择性地将辅助特征中的有用信息传递给主特征，生成精炼的特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>X</mi><mrow><mi>Q</mi><mo separator="true">,</mo><mi>n</mi><mi>e</mi><mi>w</mi></mrow><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">X^{i}_{Q,new}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.236103em;vertical-align:-0.411439em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.424669em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span></span></span></span> ，在不同尺度间进行交互。这个过程可以写成[image]</p><p>[image]</p><p>规模间互动的其他选择包括自下而上的路径，即用来自粗略特征（辅助）的信息来丰富更精细的特征（主要），以及双向变体，即自上而下的路径后是自下而上的路径，以及自下而上的路径后是自上而下的路径。自上而下的路径在第4.3.1节中显示了其优越性。</p><p>[image]</p><blockquote><p>图5.C是串联，þ是像素级加法。a表示1 1卷积，b表示2 3 3卷积。激活函数是ReLU。对于没有辅助特征的特征，不存在与辅助特征的串联，精炼的特征只由主特征与a和b产生。</p></blockquote><p>尺度间合并模块M的具体结构如图5所示。我们首先将辅助特征的大小调整为与主特征相同的空间大小。然后，我们使用一个1 1卷积a从辅助特征中提取有用的信息，以主特征为条件。随后的两个3 3卷积b用于完成交互，并输出精炼的特征。规模间合并模块M内的剩余链接用于保持输出特征Xi Q;new中主特征的完整性。对于那些没有辅助特征的特征（如自上而下路径中的第一个合并特征X1 Q;m和自下而上路径中的最后一个合并特征Xn Q;m），我们直接忽略与M中的辅助特征的连接–精炼特征只由主特征产生。</p><p>[image]</p><p>图6显示了没有FEM（B1 ¼ h ¼ w）的基线模型的视觉图。为了鼓励更好地丰富特征，我们通过给每个Xi Q;new附加分类头（图7b）来增加中间监督。</p><p>总之，通过将汇集的支持特征和先验掩码纳入不同空间大小的查询特征，该模型学会了在先验掩码的指导和地面实况的监督下，用来自每个位置的支持特征的信息来适应性地丰富查询特征。此外，垂直尺度间的交互作用用辅助特征提供的条件信息补充了主要特征。因此，与其他特征增强设计（如PPM[52]、ASPP[3]和GAU[45]）相比，FEM在基线上产生的性能增益更大。第4.3节的实验提供了更多细节。</p><p>[image]</p><blockquote><p>图6.以输入特征的原始空间大小处理特征的基线结构的视觉说明。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swin Transformer Hierarchical Vision Transformer using Shifted Windows</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Swin/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/Swin/</url>
      
        <content type="html"><![CDATA[<h1 id="swin-transformer-hierarchical-vision-transformer-using-shifted-windows"><a class="markdownIt-Anchor" href="#swin-transformer-hierarchical-vision-transformer-using-shifted-windows"></a> Swin Transformer: Hierarchical Vision Transformer using Shifted Windows</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>This paper presents a new vision Transformer, called Swin Transformer, that capably serves as a general-purpose backbone for computer vision. Challenges in adapting Transformer from language to vision arise from differences between the two domains, such as large variations in the scale of visual entities and the high resolution of pixels in images compared to words in text. To address these differences, we propose a hierarchical Transformer whose representation is computed with Shifted windows. The shifted windowing scheme brings greater efficiency by limiting self-attention computation to non-overlapping local windows while also allowing for cross-window connection. This hierarchical architecture has the flexibility to model at various scales and has linear computational complexity with respect to image size. These qualities of Swin Transformer make it compatible with a broad range of vision tasks, including image classification (87.3 top-1 accuracy on ImageNet-1K) and dense prediction tasks such as object detection (58.7 box AP and 51.1 mask AP on COCO testdev) and semantic segmentation (53.5 mIoU on ADE20K val). Its performance surpasses the previous state-of-theart by a large margin of +2.7 box AP and +2.6 mask AP on COCO, and +3.2 mIoU on ADE20K, demonstrating the potential of Transformer-based models as vision backbones. The hierarchical design and the shifted window approach also prove beneficial for all-MLP architectures.</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>Modeling in computer vision has long been dominated by convolutional neural networks (CNNs). Beginning with AlexNet [35] and its revolutionary performance on the ImageNet image classification challenge, CNN architectures have evolved to become increasingly powerful through greater scale [27, 69], more extensive connections [31], and more sophisticated forms of convolution [64, 17, 75]. With CNNs serving as backbone networks for a variety of vision tasks, these architectural advances have led to performance improvements that have broadly lifted the entire field.</p><p>On the other hand, the evolution of network architectures in natural language processing (NLP) has taken a different path, where the prevalent architecture today is instead the Transformer [58]. Designed for sequence modeling and transduction tasks, the Transformer is notable for its use of attention to model long-range dependencies in the data. Its tremendous success in the language domain has led researchers to investigate its adaptation to computer vision, where it has recently demonstrated promising results on certain tasks, specifically image classification [19] and joint vision-language modeling [43].</p><p>In this paper, we seek to expand the applicability of Transformer such that it can serve as a general-purpose backbone for computer vision, as it does for NLP and as CNNs do in vision. We observe that significant challenges in transferring its high performance in the language domain to the visual domain can be explained by differences between the two modalities. One of these differences involves scale. Unlike the word tokens that serve as the basic elements of processing in language Transformers, visual elements can vary substantially in scale, a problem that receives attention in tasks such as object detection [38, 49, 50]. In existing Transformer-based models [58, 19], tokens are all of a fixed scale, a property unsuitable for these vision applications. Another difference is the much higher resolution of pixels in images compared to words in passages of text. There exist many vision tasks such as semantic segmentation that require dense prediction at the pixel level, and this would be intractable for Transformer on high-resolution images, as the computational complexity of its self-attention is quadratic to image size. To overcome these issues, we propose a generalpurpose Transformer backbone, called Swin Transformer, which constructs hierarchical feature maps and has linear computational complexity to image size. As illustrated in Figure 1(a), Swin Transformer constructs a hierarchical representation by starting from small-sized patches (outlined in gray) and gradually merging neighboring patches in deeper Transformer layers. With these hierarchical feature maps, the Swin Transformer model can conveniently leverage advanced techniques for dense prediction such as feature pyramid networks (FPN) [38] or U-Net [47]. The linear computational complexity is achieved by computing self-attention locally within non-overlapping windows that partition an image (outlined in red). The number of patches in each window is fixed, and thus the complexity becomes linear to image size. These merits make Swin Transformer suitable as a general-purpose backbone for various vision tasks, in contrast to previous Transformer based architectures [19] which produce feature maps of a single resolution and have quadratic complexity.</p><p>A key design element of Swin Transformer is its shift of the window partition between consecutive self-attention layers, as illustrated in Figure 2. The shifted windows bridge the windows of the preceding layer, providing connections among them that significantly enhance modeling power (see Table 4). This strategy is also efficient in regards to real-world latency: all query patches within a window share the same key set1, which facilitates memory access in hardware. In contrast, earlier sliding window based self-attention approaches [30, 46] suffer from low latency on general hardware due to different key sets for different query pixels2. Our experiments show that the proposed shifted window approach has much lower latency than the sliding window method, yet is similar in modeling power (see Tables 5 and 6). The shifted window approach also proves beneficial for all-MLP architectures [56].</p><p>The proposed Swin Transformer achieves strong performance on the recognition tasks of image classification, object detection and semantic segmentation. It outperforms the ViT / DeiT [19, 57] and ResNe(X)t models [27, 64] significantly with similar latency on the three tasks. Its 58.7 box AP and 51.1 mask AP on the COCO test-dev set surpass the previous state-of-the-art results by +2.7 box AP (Copy-paste [23] without external data) and +2.6 mask AP (DetectoRS [42]). On ADE20K semantic segmentation, it obtains 53.5 mIoU on the val set, an improvement of +3.2 mIoU over the previous state-of-the-art (SETR [73]). It also achieves a top-1 accuracy of 87.3% on ImageNet-1K image classification.</p><p>It is our belief that a unified architecture across computer vision and natural language processing could benefit both fields, since it would facilitate joint modeling of visual and textual signals and the modeling knowledge from both domains can be more deeply shared. We hope that Swin Transformer’s strong performance on various vision problems can drive this belief deeper in the community and encourage unified modeling of vision and language signals.</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><h5 id="cnn-and-variants"><a class="markdownIt-Anchor" href="#cnn-and-variants"></a> CNN and variants</h5><p>CNNs serve as the standard network model throughout computer vision. While the CNN has existed for several decades [36], it was not until the introduction of AlexNet [35] that the CNN took off and became mainstream. Since then, deeper and more effective convolutional neural architectures have been proposed to further propel the deep learning wave in computer vision, e.g., VGG [48], GoogleNet [53], ResNet [27], DenseNet [31], HRNet [59], and EfficientNet [54]. In addition to these architectural advances, there has also been much work on improving individual convolution layers, such as depthwise convolution [64] and deformable convolution [17, 75]. While the CNN and its variants are still the primary backbone architectures for computer vision applications, we highlight the strong potential of Transformer-like architectures for unified modeling between vision and language. Our work achieves strong performance on several basic visual recognition tasks, and we hope it will contribute to a modeling shift.</p><h5 id="self-attention-based-backbone-architectures"><a class="markdownIt-Anchor" href="#self-attention-based-backbone-architectures"></a> Self-attention based backbone architectures</h5><p>spired by the success of self-attention layers and Transformer architectures in the NLP field, some works employ self-attention layers to replace some or all of the spatial convolution layers in the popular ResNet [30, 46, 72]. In these works, the self-attention is computed within a local window of each pixel to expedite optimization [30], and they achieve slightly better accuracy/FLOPs trade-offs than the counterpart ResNet architecture. However, their costly memory access causes their actual latency to be significantly larger than that of the convolutional networks [30]. Instead of using sliding windows, we propose to shift windows between consecutive layers, which allows for a more efficient implementation in general hardware.</p><h5 id="self-attentiontransformers-to-complement-cnns"><a class="markdownIt-Anchor" href="#self-attentiontransformers-to-complement-cnns"></a> Self-attention/Transformers to complement CNNs</h5><p>Another line of work is to augment a standard CNN architecture with self-attention layers or Transformers. The selfattention layers can complement backbones [61, 7, 3, 65, 21, 68, 51] or head networks [29, 24] by providing the capability to encode distant dependencies or heterogeneous interactions. More recently, the encoder-decoder design in Transformer has been applied for the object detection and instance segmentation tasks [8, 13, 76, 52]. Our work explores the adaptation of Transformers for basic visual feature extraction and is complementary to these works.</p><h5 id="transformer-based-vision-backbones"><a class="markdownIt-Anchor" href="#transformer-based-vision-backbones"></a> Transformer based vision backbones</h5><p>Most related to our work is the Vision Transformer (ViT) [19] and its follow-ups [57, 66, 15, 25, 60]. The pioneering work of ViT directly applies a Transformer architecture on nonoverlapping medium-sized image patches for image classification. It achieves an impressive speed-accuracy tradeoff on image classification compared to convolutional networks. While ViT requires large-scale training datasets (i.e., JFT-300M) to perform well, DeiT [57] introduces several training strategies that allow ViT to also be effective using the smaller ImageNet-1K dataset. The results of ViT on image classification are encouraging, but its architecture is unsuitable for use as a general-purpose backbone network on dense vision tasks or when the input image resolution is high, due to its low-resolution feature maps and the quadratic increase in complexity with image size. There are a few works applying ViT models to the dense vision tasks of object detection and semantic segmentation by direct upsampling or deconvolution but with relatively lower performance [2, 73]. Concurrent to our work are some that modify the ViT architecture [66, 15, 25] for better image classification. Empirically, we find our Swin Transformer architecture to achieve the best speedaccuracy trade-off among these methods on image classification, even though our work focuses on general-purpose performance rather than specifically on classification. Another concurrent work [60] explores a similar line of thinking to build multi-resolution feature maps on Transformers. Its complexity is still quadratic to image size, while ours is linear and also operates locally which has proven beneficial in modeling the high correlation in visual signals [32, 22, 37]. Our approach is both efficient and effective, achieving state-of-the-art accuracy on both COCO object detection and ADE20K semantic segmentation.</p><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> 3. Method</h2><h3 id="31-overall-architecture"><a class="markdownIt-Anchor" href="#31-overall-architecture"></a> 3.1. Overall Architecture</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/202211081441395.png" alt="" /></p><blockquote><p>图3 (a)Swin Transformer（Swin-T）的结构；(b)两个连续的Swin Transformer块（用公式（3）表示）。W-MSA和SW-MSA是多头自我注意模块，分别具有常规和移位的窗口配置。</p></blockquote><p>图3展示了Swin Transformer结构的概况，其中说明了微小版本（SwinT）。它首先通过一个patches分割模块将输入的RGB图像分割成不重叠的patches，如ViT。每个patches被视为一个 “标记”，其特征被设置为原始像素RGB值的连接。在我们的实现中，我们使用4×4的patches尺寸，因此每个patches的特征维度是4×4×3=48。一个线性嵌入层被应用于这个原始值的特征，将其投射到一个任意的维度（表示为C）。</p><p>几个具有修改过的自我注意计算的转化器块（Swin转化器块）被应用于这些patches标记。变换器块保持了标记的数量（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{H}{4}\times\frac{W}{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>），并与线性嵌入一起被称为 “阶段1”。</p><p>为了产生分层表示，随着网络的深入，通过patches合并层来减少标记的数量。第一个patches合并层将每组2×2的相邻patches的特征连接起来，并在4C维的连接特征上应用一个线性层。这将令牌的数量减少了2×2=4的倍数（2×下采样的分辨率），输出维度被设置为2C。之后应用Swin Transformer块进行特征转换，分辨率保持为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><mn>8</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>8</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{H}{8}\times\frac{W}{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。这第一个patches合并和特征转换块被称为 “阶段2”。该过程重复两次，分别为 &quot;阶段3 &quot;和 “阶段4”，其输出分辨率分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><mn>16</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>16</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{H}{16}\times\frac{W}{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><mn>32</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>32</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{H}{32}\times\frac{W}{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。这些阶段共同产生一个分层表示，其特征图的分辨率与典型的卷积网络相同，例如VGG[48]和ResNet[27]。因此，所提出的架构可以方便地取代现有方法中的骨干网络，用于各种视觉任务。</p><h5 id="swin-transformer-block"><a class="markdownIt-Anchor" href="#swin-transformer-block"></a> Swin Transformer block</h5><p>Swin Transformer是通过将Transformer块中的标准多头自我注意（MSA）模块替换为基于移位窗口的模块（在第3.2节中描述），而其他层保持不变。如图3(b)所示，一个Swin Transformer模块由一个基于移位窗的MSA模块组成，然后是一个两层MLP，中间是GELU非线性。在每个MSA模块和每个MLP之前都有一个LayerNorm（LN）层，在每个模块之后都有一个剩余连接。</p><h3 id="32-shifted-window-based-self-attention"><a class="markdownIt-Anchor" href="#32-shifted-window-based-self-attention"></a> 3.2. Shifted Window based Self-Attention</h3><p>标准的Transformer架构[58]及其用于图像分类的适应性[19]都进行了全局的自我关注，其中一个标记和所有其他标记之间的关系被计算出来。全局计算会导致相对于标记数量的二次复杂性，使得它不适合许多需要大量标记集进行密集预测或表示高分辨率图像的视觉问题。</p><h5 id="非重叠窗口中的自我注意"><a class="markdownIt-Anchor" href="#非重叠窗口中的自我注意"></a> 非重叠窗口中的自我注意</h5><p>为了有效建模，我们建议在局部窗口内计算自我注意力。窗口的安排是以非重叠的方式均匀地划分图像。假设每个窗口包含M×M个patches，那么全局MSA模块和基于窗口的MSA模块的计算复杂性为</p><p>在一个有h×w个patches的图像上，有3个：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>M</mi><mi>S</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn><mi>h</mi><mi>w</mi><msup><mi>C</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mo stretchy="false">(</mo><mi>h</mi><mi>w</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi>C</mi></mrow><annotation encoding="application/x-tex">\Omega( MSA )=4 h w C^{2}+2(h w)^{2} C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi mathvariant="normal">W</mi><mo>−</mo><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">S</mi><mi mathvariant="normal">A</mi></mrow><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn><mi>h</mi><mi>w</mi><msup><mi>C</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><msup><mi>M</mi><mn>2</mn></msup><mi>h</mi><mi>w</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">\Omega(\mathrm{W}-\mathrm{MSA})=4 h w C^{2}+2 M^{2} h w C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">W</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">M</span><span class="mord mathrm">S</span><span class="mord mathrm">A</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p><p>其中，前者对patches数量hw是二次函数，而后者在M固定时是线性的（默认设置为7）。全局性的自我注意计算对于大的hw来说通常是负担不起的，而基于窗口的自我注意是可扩展的。</p><h5 id="在连续的区块中进行移位窗口划分"><a class="markdownIt-Anchor" href="#在连续的区块中进行移位窗口划分"></a> 在连续的区块中进行移位窗口划分</h5><p>基于窗口的自我注意模块缺乏跨窗口的连接，这限制了其建模能力。为了引入跨窗口的连接，同时保持非重叠窗口的有效计算，我们提出了一种移位的窗口划分方法，在连续的Swin Transformer块中交替使用两种划分配置。</p><p>如图2所示，第一个模块采用规则的窗口划分策略，从左上角的像素开始，8×8的特征图被均匀地划分为大小为4×4（M=4）的2×2窗口。然后，下一个模块采用与前一层相移的窗口配置，将窗口从规则分区的窗口中移出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mrow><mo fence="true">⌊</mo><mfrac><mi>M</mi><mn>2</mn></mfrac><mo fence="true">⌋</mo></mrow><mo separator="true">,</mo><mrow><mo fence="true">⌊</mo><mfrac><mi>M</mi><mn>2</mn></mfrac><mo fence="true">⌋</mo></mrow><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(\left\lfloor\frac{M}{2}\right\rfloor,\left\lfloor\frac{M}{2}\right\rfloor\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.222341em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌋</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌋</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>像素。</p><p>用移窗分区的方法，连续的Swin Transformer块计算为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mi>l</mi></msup><mo>=</mo><mi mathvariant="normal">W</mi><mo>−</mo><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">S</mi><mi mathvariant="normal">A</mi></mrow><mrow><mo fence="true">(</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">N</mi></mrow><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">z</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><msup><mi mathvariant="bold">z</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msup><mi mathvariant="bold">z</mi><mi>l</mi></msup><mo>=</mo><mi mathvariant="normal">MLP</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi mathvariant="normal">LN</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mi>l</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mi>l</mi></msup><mspace linebreak="newline"></mspace><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>=</mo><mi mathvariant="normal">SW</mi><mo>⁡</mo><mo>−</mo><mi mathvariant="normal">MSA</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">N</mi></mrow><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">z</mi><mi>l</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><msup><mi mathvariant="bold">z</mi><mi>l</mi></msup><mspace linebreak="newline"></mspace><msup><mi mathvariant="bold">z</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>=</mo><mi mathvariant="normal">MLP</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi mathvariant="normal">LN</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{\mathbf{z}}^{l}=\mathrm{W}-\mathrm{MSA}\left(\mathrm{LN}\left(\mathbf{z}^{l-1}\right)\right)+\mathbf{z}^{l-1},\\\mathbf{z}^{l}=\operatorname{MLP}\left(\operatorname{LN}\left(\hat{\mathbf{z}}^{l}\right)\right)+\hat{\mathbf{z}}^{l}\\\hat{\mathbf{z}}^{l+1}=\operatorname{SW}-\operatorname{MSA}\left(\mathrm{LN}\left(\mathbf{z}^{l}\right)\right)+\mathbf{z}^{l}\\\mathbf{z}^{l+1}=\operatorname{MLP}\left(\operatorname{LN}\left(\hat{\mathbf{z}}^{l+1}\right)\right)+\hat{\mathbf{z}}^{l+1},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">W</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathrm">M</span><span class="mord mathrm">S</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="mop"><span class="mord mathrm">M</span><span class="mord mathrm">L</span><span class="mord mathrm">P</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mop"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="mop"><span class="mord mathrm">S</span><span class="mord mathrm" style="margin-right:0.01389em;">W</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">M</span><span class="mord mathrm">S</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="mop"><span class="mord mathrm">M</span><span class="mord mathrm">L</span><span class="mord mathrm">P</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mop"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>z</mi><mo>^</mo></mover><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\hat{z}^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>z</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">z^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>分别表示（S）WMSA模块和MLP模块对块l的输出特征。W-MSA和SW-MSA分别表示基于窗口的多头自我关注，使用常规和移位的窗口划分配置。</p><p>移位窗口划分方法在上一层的相邻非重叠窗口之间引入了连接，并被发现在图像分类、物体检测和语义分割中是有效的，如表4所示。</p><p><img src="images/image-20221108145437927.png" alt="image-20221108145437927" /></p><blockquote><p>表4：使用Swin-T架构，在三个基准上进行移位窗口方法和不同位置嵌入方法的消融研究。 w/o shifting：所有自我注意模块采用常规的窗口划分，没有移位；abs. pos.：ViT的绝对位置嵌入项；rel. pos.：默认设置，有一个额外的相对位置偏置项（见公式（4））；app.：公式（4）中第一个缩放的点乘项。</p></blockquote><h5 id="efficient-batch-computation-for-shifted-configuration"><a class="markdownIt-Anchor" href="#efficient-batch-computation-for-shifted-configuration"></a> Efficient batch computation for shifted configuration</h5><p>移位窗口划分的一个问题是，它将导致更多的窗口，从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">⌈</mo><mfrac><mi>h</mi><mi>M</mi></mfrac><mo fence="true">⌉</mo></mrow><mo>×</mo><mrow><mo fence="true">⌈</mo><mfrac><mi>w</mi><mi>M</mi></mfrac><mo fence="true">⌉</mo></mrow></mrow><annotation encoding="application/x-tex">\left\lceil\frac{h}{M}\right\rceil \times\left\lceil\frac{w}{M}\right\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2301179999999998em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mrow><mo fence="true">⌈</mo><mfrac><mi>h</mi><mi>M</mi></mfrac><mo fence="true">⌉</mo></mrow><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mrow><mo fence="true">⌈</mo><mfrac><mi>w</mi><mi>M</mi></mfrac><mo fence="true">⌉</mo></mrow><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\left\lceil\frac{h}{M}\right\rceil+1) \times(\left\lceil\frac{w}{M}\right\rceil+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2301179999999998em;vertical-align:-0.35001em;"></span><span class="mopen">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mopen">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>的移位配置，而一些窗口将小于M×M。一个天真的解决方案是将较小的窗口填充到M×M的大小，并在计算注意力时屏蔽掉填充的值。当常规分区中的窗口数量较少时，例如2×2，这种天真的解决方案所增加的计算量是相当大的（2×2→3×3，这是2.25倍的）。在这里，我们提出了一种更有效的批量计算方法，即向左上角方向循环移动，如图4所示。在这种转变之后，一个分批计算的窗口可能由特征图中不相邻的几个子窗口组成，因此采用了一种掩蔽机制，将自我注意的计算限制在每个子窗口内。通过循环移位，分批窗口的数量与常规窗口划分的数量相同，因此也很有效。这种方法的低延迟显示在表5中。</p><h5 id="relative-position-bias"><a class="markdownIt-Anchor" href="#relative-position-bias"></a> Relative position bias</h5><p>在计算自我注意时，我们遵循[45，1，29，30]，在计算相似性时，对每个头都包括一个相对位置偏差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>M</mi><mn>2</mn></msup><mo>×</mo><msup><mi>M</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">B \in \mathbb{R}^{M^{2} \times M^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Attention</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">SoftMax</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup><mi mathvariant="normal">/</mi><msqrt><mi>d</mi></msqrt><mo>+</mo><mi>B</mi><mo fence="true">)</mo></mrow><mi>V</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\operatorname{Attention}(Q, K, V)=\operatorname{SoftMax}\left(QK^{T} / \sqrt{d}+B\right) V,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">A</span><span class="mord mathrm">t</span><span class="mord mathrm">t</span><span class="mord mathrm">e</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span><span class="mord mathrm">i</span><span class="mord mathrm">o</span><span class="mord mathrm">n</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop"><span class="mord mathrm">S</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">M</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">d</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>M</mi><mn>2</mn></msup><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Q, K, V∈\mathbb{R}^{M^2×d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>是查询、键和值矩阵；d是查询/键维度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">M^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>是一个窗口中的patches数量。由于沿每个轴的相对位置位于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mi>M</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-M + 1, M - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>的范围内，我们对一个较小尺寸的偏置矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>B</mi><mo>^</mo></mover><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mn>2</mn><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\hat{B} \in \mathbb{R}^{(2 M-1) \times(2 M-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9858699999999999em;vertical-align:-0.0391em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">×</span><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>进行参数化，B中的值取自<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>B</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>。</p><p>如表4所示，我们观察到，与没有这个偏置项或使用绝对位置嵌入的对应项相比，有明显的改进。此外，像[19]中那样将绝对位置嵌入到输入中会使性能略有下降，因此在我们的实现中没有采用它。</p><p>预训练中学习到的相对位置偏差也可用于初始化模型，通过双立方插值对不同窗口大小进行微调[19, 57]。</p><p><img src="images/image-20221108145437927.png" alt="image-20221108145437927" /></p><blockquote><p>表4：使用Swin-T架构，在三个基准上进行移位窗口方法和不同位置嵌入方法的消融研究。 w/o shifting：所有自我注意模块采用常规的窗口划分，没有移位；abs. pos.：ViT的绝对位置嵌入项；rel. pos.：默认设置，有一个额外的相对位置偏置项（见公式（4））；app.：公式（4）中第一个缩放的点乘项。</p></blockquote><h5 id="33-架构变体"><a class="markdownIt-Anchor" href="#33-架构变体"></a> 3.3. 架构变体</h5><p>我们建立了我们的基础模型，称为Swin-B，其模型大小和计算复杂性与ViTB/DeiT-B相似。我们还介绍了Swin-T、Swin-S和Swin-L，它们的模型大小和计算复杂度分别为0.25倍、0.5倍和2倍。请注意，Swin-T和Swin-S的复杂度分别与ResNet-50（DeiT-S）和ResNet-101相似。窗口大小默认设置为M=7。每个头的查询维度为d=32，每个MLP的扩展层为α=4，对于所有的实验。这些模型变体的结构超参数为:</p><ul><li>Swin-T: C = 96, 层数 = {2, 2, 6, 2}</li><li>Swin-S: C = 96, 层数 = {2, 2, 18, 2}</li><li>Swin-B: C = 128, 层数 ={2, 2, 18, 2}</li><li>Swin-L: C = 192，层数={2，2，18，2}</li><li>其中C是第一阶段隐藏层的通道数。表1中列出了用于ImageNet图像分类的模型大小、理论计算复杂度（FLOPs）和模型变体的吞吐量。</li></ul><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>We conduct experiments on ImageNet-1K image classification [18], COCO object detection [39], and ADE20K semantic segmentation [74]. In the following, we first compare the proposed Swin Transformer architecture with the previous state-of-the-arts on the three tasks. Then, we ablate the important design elements of Swin Transformer.</p><h3 id="41-image-classification-on-imagenet-1k"><a class="markdownIt-Anchor" href="#41-image-classification-on-imagenet-1k"></a> 4.1. Image Classification on ImageNet-1K</h3><h5 id="settings"><a class="markdownIt-Anchor" href="#settings"></a> Settings</h5><p>For image classification, we benchmark the proposed Swin Transformer on ImageNet-1K [18], which contains 1.28M training images and 50K validation images from 1,000 classes. The top-1 accuracy on a single crop is reported. We consider two training settings:</p><ul><li>Regular ImageNet-1K training. This setting mostly follows [57]. We employ an AdamW [33] optimizer for 300 epochs using a cosine decay learning rate scheduler and 20 epochs of linear warm-up. A batch size of 1024, an initial learning rate of 0.001, and a weight decay of 0.05 are used. We include most of the augmentation and regularization strategies of [57] in training, except for repeated augmentation [28] and EMA [41], which do not enhance performance. Note that this is contrary to [57] where repeated augmentation is crucial to stabilize the training of ViT.</li><li>Pre-training on ImageNet-22K and fine-tuning on ImageNet-1K. We also pre-train on the ImageNet-22K dataset, which contains 14.2 million images and 22K classes. We employ an AdamW optimizer for 90 epochs using a cosine learning rate scheduler with a 5-epoch linear warm-up. A batch size of 4096, an initial learning rate of 0.001, and a weight decay of 0.01 are used. In ImageNet-1K fine-tuning, we train for 30 epochs with a batch size of 1024, a constant learning rate of 10−5, and a weight decay of 10−8.</li></ul><h5 id="results-with-regular-imagenet-1k-training"><a class="markdownIt-Anchor" href="#results-with-regular-imagenet-1k-training"></a> Results with regular ImageNet-1K training</h5><p>Table 1(a) presents comparisons to other backbones, including both Transformer-based and ConvNet-based, using regular ImageNet-1K training.</p><p>Compared to the previous state-of-the-art Transformerbased architecture, i.e. DeiT [57], Swin Transformers noticeably surpass the counterpart DeiT architectures with similar complexities: +1.5% for Swin-T (81.3%) over DeiT-S (79.8%) using 2242 input, and +1.5%/1.4% for Swin-B (83.3%/84.5%) over DeiT-B (81.8%/83.1%) using 2242/3842 input, respectively.</p><p>Compared with the state-of-the-art ConvNets, i.e. RegNet [44], the Swin Transformer achieves a slightly better speed-accuracy trade-off. Noting that while RegNet [44] are obtained via a thorough architecture search, the Swin Transformer is manually adapted from a standard Transformer and has potential for further improvement.</p><h5 id="results-with-imagenet-22k-pre-training"><a class="markdownIt-Anchor" href="#results-with-imagenet-22k-pre-training"></a> Results with ImageNet-22K pre-training</h5><p>We also pretrain the larger-capacity Swin-B and Swin-L on ImageNet22K. Results fine-tuned on ImageNet-1K image classification are shown in Table 1(b). For Swin-B, the ImageNet22K pre-training brings 1.8%∼1.9% gains over training on ImageNet-1K from scratch. Compared with the previous best results for ImageNet-22K pre-training, our models achieve significantly better speed-accuracy trade-offs: Swin-B obtains 86.4% top-1 accuracy, which is 2.4% higher than that of ViT with similar inference throughput (84.7 vs. 85.9 images/sec) and slightly lower FLOPs (47.0G vs. 55.4G). The larger Swin-L model achieves 87.3% top-1 accuracy, +0.9% better than that of the Swin-B model.</p><h3 id="42-object-detection-on-coco"><a class="markdownIt-Anchor" href="#42-object-detection-on-coco"></a> 4.2. Object Detection on COCO</h3><h5 id="settings-2"><a class="markdownIt-Anchor" href="#settings-2"></a> Settings</h5><p>Object detection and instance segmentation experiments are conducted on COCO 2017, which contains 118K training, 5K validation and 20K test-dev images. An ablation study is performed using the validation set, and a system-level comparison is reported on test-dev. For the ablation study, we consider four typical object detection frameworks: Cascade Mask R-CNN [26, 6], ATSS [71], RepPoints v2 [12], and Sparse RCNN [52] in mmdetection [10]. For these four frameworks, we utilize the same settings: multi-scale training [8, 52] (resizing the input such that the shorter side is between 480 and 800 while the longer side is at most 1333), AdamW [40] optimizer (initial learning rate of 0.0001, weight decay of 0.05, and batch size of 16), and 3x schedule (36 epochs). For system-level comparison, we adopt an improved HTC [9] (denoted as HTC++) with instaboost [20], stronger multi-scale training [7], 6x schedule (72 epochs), soft-NMS [5], and ImageNet-22K pre-trained model as initialization.</p><p>We compare our Swin Transformer to standard ConvNets, i.e. ResNe(X)t, and previous Transformer networks, e.g. DeiT. The comparisons are conducted by changing only the backbones with other settings unchanged. Note that while Swin Transformer and ResNe(X)t are directly applicable to all the above frameworks because of their hierarchical feature maps, DeiT only produces a single resolution of feature maps and cannot be directly applied. For fair comparison, we follow [73] to construct hierarchical feature maps for DeiT using deconvolution layers.</p><h5 id="comparison-to-resnext"><a class="markdownIt-Anchor" href="#comparison-to-resnext"></a> Comparison to ResNe(X)t</h5><p>Table 2(a) lists the results of Swin-T and ResNet-50 on the four object detection frameworks. Our Swin-T architecture brings consistent +3.4∼4.2 box AP gains over ResNet-50, with slightly larger model size, FLOPs and latency.</p><p>Table 2(b) compares Swin Transformer and ResNe(X)t under different model capacity using Cascade Mask RCNN. Swin Transformer achieves a high detection accuracy of 51.9 box AP and 45.0 mask AP, which are significant gains of +3.6 box AP and +3.3 mask AP over ResNeXt10164x4d, which has similar model size, FLOPs and latency. On a higher baseline of 52.3 box AP and 46.0 mask AP using an improved HTC framework, the gains by Swin Transformer are also high, at +4.1 box AP and +3.1 mask AP (see Table 2©). Regarding inference speed, while ResNe(X)t is built by highly optimized Cudnn functions, our architecture is implemented with built-in PyTorch functions that are not all well-optimized. A thorough kernel optimization is beyond the scope of this paper.</p><h5 id="comparison-to-deit"><a class="markdownIt-Anchor" href="#comparison-to-deit"></a> Comparison to DeiT</h5><p>The performance of DeiT-S using the Cascade Mask R-CNN framework is shown in Table 2(b). The results of Swin-T are +2.5 box AP and +2.3 mask AP higher than DeiT-S with similar model size (86M vs. 80M) and significantly higher inference speed (15.3 FPS vs. 10.4 FPS). The lower inference speed of DeiT is mainly due to its quadratic complexity to input image size.</p><h5 id="comparison-to-previous-state-of-the-art"><a class="markdownIt-Anchor" href="#comparison-to-previous-state-of-the-art"></a> Comparison to previous state-of-the-art</h5><p>Table 2© compares our best results with those of previous state-ofthe-art models. Our best model achieves 58.7 box AP and 51.1 mask AP on COCO test-dev, surpassing the previous best results by +2.7 box AP (Copy-paste [23] without external data) and +2.6 mask AP (DetectoRS [42]).</p><h3 id="43-semantic-segmentation-on-ade20k"><a class="markdownIt-Anchor" href="#43-semantic-segmentation-on-ade20k"></a> 4.3. Semantic Segmentation on ADE20K</h3><h5 id="settings-3"><a class="markdownIt-Anchor" href="#settings-3"></a> Settings</h5><p>ADE20K [74] is a widely-used semantic segmentation dataset, covering a broad range of 150 semantic categories. It has 25K images in total, with 20K for training, 2K for validation, and another 3K for testing. We utilize UperNet [63] in mmseg [16] as our base framework for its high efficiency. More details are presented in the Appendix.</p><h5 id="results"><a class="markdownIt-Anchor" href="#results"></a> Results</h5><p>Table 3 lists the mIoU, model size (#param), FLOPs and FPS for different method/backbone pairs. From these results, it can be seen that Swin-S is +5.3 mIoU higher (49.3 vs. 44.0) than DeiT-S with similar computation cost. It is also +4.4 mIoU higher than ResNet-101, and +2.4 mIoU higher than ResNeSt-101 [70]. Our Swin-L model with ImageNet-22K pre-training achieves 53.5 mIoU on the val set, surpassing the previous best model by +3.2 mIoU (50.3 mIoU by SETR [73] which has a larger model size).</p><h3 id="44-ablation-study"><a class="markdownIt-Anchor" href="#44-ablation-study"></a> 4.4. Ablation Study</h3><p>在这一节中，我们利用ImageNet-1K图像分类、Cascade Mask R-CNN对COCO物体检测和UperNet对ADE20K语义分割的研究，消减了所提出的Swin Transformer中的重要设计元素。</p><h5 id="shifted-windows"><a class="markdownIt-Anchor" href="#shifted-windows"></a> Shifted windows</h5><p>表4中报告了移位窗口方法在三个任务上的消减情况。在ImageNet-1K上，采用移位窗口划分的Swin-T在每个阶段都优于建立在单一窗口划分基础上的对应方法，在COCO上优于+2.8盒AP/+2.2掩码AP，在ADE20K上优于+2.8 mIoU。这些结果表明，使用移位窗口在前面各层的窗口之间建立连接是有效的。如表5所示，移位窗口的延迟开销也很小。</p><h5 id="relative-position-bias-2"><a class="markdownIt-Anchor" href="#relative-position-bias-2"></a> Relative position bias</h5><p>表4显示了不同位置嵌入方法的比较。相对位置偏差的Swin-T在ImageNet-1K上产生了+1.2%/+0.8%的top-1准确率，在COCO上产生了+1.3/+1.5的box AP和+1.1/+1.3的mask AP，在ADE20K上相对于没有位置编码和有绝对位置嵌入的，分别产生了+2.3/+2.9 mIoU，说明相对位置偏差的有效性。还要注意的是，虽然包含绝对位置嵌入提高了图像分类的准确性（+0.4%），但它损害了物体检测和语义分割（在COCO上为-0.2箱/掩码AP，在ADE20K上为-0.6mIoU）。</p><h5 id="different-self-attention-methods"><a class="markdownIt-Anchor" href="#different-self-attention-methods"></a> Different self-attention methods</h5><p>表5中比较了不同的自我注意计算方法和实现的实际速度。我们的循环实现比天真的填充更有硬件效率，特别是对于更深的阶段。总体而言，它在Swin-T、Swin-S和Swin-B上分别带来了13%、18%和18%的速度提升。</p><p>在四个网络阶段上，建立在所提出的移位窗口方法上的自我关注模块比滑动窗口的效率分别高40.8×/2.5×、20.2×/2.5×、9.3×/2.1×和7.6×/1.8×。总的来说，建立在移位窗口上的Swin Transformer架构比建立在滑动窗口上的Swin-T、Swin-S和Swin-B的变体分别快4.1/1.5、4.0/1.5、3.6/1.5倍。表6比较了它们在三个任务上的准确性，显示它们在视觉建模方面的准确性相似。</p><p>与Performer[14]这个最快的Transformer架构之一相比（见[55]），所提出的基于移位窗的自我注意计算和整个Swin Transformer架构的速度略快（见表5），同时在ImageNet-1K上使用Swin-T与Performer相比达到+2.3%的最高准确率（见表6）。</p><h3 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h3><p>本文介绍了Swin Transformer，一种新的视觉变换器，它能产生分层的特征表示，并且相对于输入图像的大小具有线性计算复杂性。Swin Transformer在COCO物体检测和ADE20K语义分割上实现了最先进的性能，大大超过了以前的最佳方法。我们希望Swin Transformer在各种视觉问题上的强大表现将鼓励视觉和语言信号的统一建模。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UNeXt MLP-based Rapid Medical Image Segmentation Network</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/UNeXt/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/UNeXt/</url>
      
        <content type="html"><![CDATA[<h1 id="unext-mlp-based-rapid-medical-image-segmentation-network"><a class="markdownIt-Anchor" href="#unext-mlp-based-rapid-medical-image-segmentation-network"></a> UNeXt: MLP-based Rapid Medical Image Segmentation Network</h1><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>UNet及其最新的扩展，如TransUNet，近年来一直是领先的医学图像分割方法。然而，这些网络不能有效地用于医疗点应用中的快速图像分割，因为它们的参数很高，计算复杂，使用缓慢。为此，我们提出了UNeXt，这是一个基于卷积多层感知器（MLP）的网络，用于图像分割。我们以一种有效的方式设计UNeXt，在早期卷积阶段和潜伏阶段的MLP阶段。我们提出了一个Tokenized 的MLP块，我们有效地标记和投影卷积特征，并使用MLPs来建模表示。为了进一步提高性能，我们建议在输入到MLP的过程中改变输入的通道，以便专注于学习局部依赖关系。在潜伏空间中使用Tokenized 的MLPs可以减少参数的数量和计算的复杂性，同时能够产生更好的表示，以帮助分割。该网络还包括各级编码器和解码器之间的跳跃连接。我们在多个医学图像分割数据集上测试了UNeXt，结果显示我们将参数数量减少了72倍，计算复杂度降低了68倍，推理速度提高了10倍，同时还获得了比最先进的医学图像分割架构更好的分割性能。</p><h2 id="1-引言"><a class="markdownIt-Anchor" href="#1-引言"></a> 1 引言</h2><p>医学成像解决方案在医疗保健领域的诊断和治疗中发挥了关键作用。医学成像应用的一个主要任务是分割，因为它对计算机辅助诊断和图像引导的手术系统至关重要。在过去的十年中，文献中的许多工作都集中在开发高效和稳健的分割方法上。UNet[17]是一项具有里程碑意义的工作，它显示了具有跳跃连接的编码-解码卷积网络在医学图像分割中的效率。近年来，UNet已经成为几乎所有领先的医学图像分割方法的骨干。继UNet之后，一些关键的扩展如UNet++[29]、UNet3+[13]、3D UNet[7]、V-Net[16]、Y-Net[15]和KiUNet[21,22]也被提出。最近，许多基于transformer的网络被提出用于医学图像分割，因为它们可以学习对图像的整体理解，这对分割很有帮助。TransUNet[6]将ViT架构[10]修改为一个用于二维医学图像分割的UNet。其他基于transformer的网络如MedT[20]、TransBTS[25]和UNETR[11]也被提出用于医学图像分割。<strong>请注意，几乎所有的上述工作都集中在提高网络的性能上，但没有过多地关注计算复杂性、推理时间或参数数量，而这些在许多实际应用中是必不可少的。由于大多数都是在实验室环境下进行分析，因此使用具有高计算能力的机器（如GPU）进行测试。这有助于加快推理的速度，也有助于容纳大量的参数。</strong></p><p>近来，医学成像解决方案已经从实验室转化为床边设置。这被称为护理点成像，因为测试和分析是在病人身边完成的。护理点成像[23]帮助临床医生扩大服务选择，改善病人护理。它有助于减少病人去放射科中心就诊的时间和程序。围绕护理点成像的技术改进使病人更加满意。近年来，护理点设备的使用一直在增加。例如，护理点超声（POCUS）设备[1]已被证明对快速检查肺部胸膜不规则情况、心脏血流动力学和自动计算膀胱容量很有用。基于语音相机的图像也被用来检测和诊断皮肤状况[2]。磁共振成像（MRI）机也被开发出来用于床边操作和快速分析[3]。如图1所示，这些最近的诊断发展有助于在医疗点清晰而快速地获取医疗图像。像分割、分类和登记这样的任务也正在与这些设备整合，以帮助病人和临床医生加速诊断过程。这些任务的主要基于深度学习的解决方案（如UNet和TransUNet）具有固有的计算开销和大量的参数，使它们难以用于医疗点的应用。在这项工作中，我们专注于解决这个问题，并设计一个高效的网络，它具有较少的计算开销、较少的参数数量、更快的推理时间，同时也保持良好的性能。设计这样一个网络对于适应医学成像从实验室到床边的转变趋势至关重要。为此，我们提出了UNeXt，它是用卷积网络和（多层感知器）MLPs设计的。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125142107602.png" alt="image-20221125131115932" /></p><blockquote><p>图1 UNeXt的动因。随着医疗成像解决方案越来越适用于医疗点，重要的是要关注使深度网络轻量级和快速，同时也要高效。(a) 护理点的医疗干预工作流程。(b) 最近的医学成像发展。POCUS设备[1]和（c）基于手机的皮肤病变检测和识别应用[2]。</p></blockquote><p>最近，基于MLP的网络也被发现可以胜任计算机视觉任务。特别是<a href="zotero://open-pdf/library/items/L857MNTS">MLP-Mixer[18]</a>，这是一个基于MLP的网络，它以较少的计算量给出了与transformer相当的性能。受这些工作的启发，我们提出了UNeXt，这是一个基于卷积和MLP的网络。我们仍然沿用UNet的5层深度编码器-解码器架构，但改变了每个模块的设计。我们在UNeXt中有两个阶段，一个是卷积阶段，另一个是MLP阶段。我们使用卷积块，在网络的初始和最终块中使用较少数量的过滤器。在瓶颈部分，我们使用了新颖的Tokenized MLP（TokMLP）块，它能有效地保持较少的计算量，同时还能建立一个良好的模型。Tokenized MLP将卷积特征投射到一个抽象的标记中，然后使用MLP来学习有意义的信息进行分割。我们还在MLP中引入移位操作，以提取对应于不同轴shifted 局部信息。由于Tokenized 特征的维度较小，而MLPs比卷积或自注意和变换器更不复杂；我们能够大大减少参数的数量和计算的复杂性，同时也能保持良好的性能。我们在ISIC皮肤病变数据集[8]和乳房超声图像（BUSI）数据集[4]上对UNeXt进行了评估，结果表明它比最近的通用分割架构获得了更好的性能。更重要的是，与TransUNet相比，我们将参数数量减少了72倍，计算复杂度降低了68倍，推理速度提高了10倍，使其适用于护理点医学成像应用。</p><p>综上所述，本文有以下贡献。</p><p>1）我们提出了UNeXt，第一个基于卷积MLP的图像分割网络。</p><p>2）我们提出了一种新颖的具有轴向移动的Tokenized MLP块，以有效地学习潜伏空间的良好表示。</p><p>3）我们成功地提高了医学图像分割任务的性能，同时具有较少的参数、较高的推理速度和较低的计算复杂性。</p><h2 id="2-unext"><a class="markdownIt-Anchor" href="#2-unext"></a> 2 UNeXt</h2><h3 id="21-网络设计"><a class="markdownIt-Anchor" href="#21-网络设计"></a> 2.1 网络设计</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125131115932.png" alt="image-20221125142055525" /></p><p>UNeXt是一个具有两个阶段的编码器-解码器架构:1）卷积阶段 2）Tokenized MLP阶段。**输入图像通过编码器，前3个块是卷积，后2个是Tokenized MLP块。解码器有2个Tokenized MLP块，然后是3个卷积块。每个编码器区块将特征分辨率降低2，每个解码器区块将特征分辨率提高2，编码器和解码器之间还包括跳跃连接。**每个块的通道数是一个超参数，表示为C1至C5。对于使用UNeXt架构的实验，除非另有说明，<strong>我们遵循C1=32，C2=64，C3=128，C4=160，C5=256</strong>。请注意，这些数字实际上比UNet及其变体的过滤器数量要少，这有助于减少参数和计算的第一次变化。</p><p><img src="images/image-20240203174511821.png" alt="image-20240203174511821" /></p><blockquote><p>图 2. 所提出的 UNeXt 架构概述。</p></blockquote><h3 id="22-卷积阶段"><a class="markdownIt-Anchor" href="#22-卷积阶段"></a> 2.2 卷积阶段</h3><p>每个卷积块都有一个卷积层，一个批处理归一化层和ReLU激活。编码器中的卷积块使用池窗口为2×2的最大集合层，而解码器中的卷积块由双线性插值层组成，用于对特征图进行上采样。<strong>我们使用双线性插值而不是转置卷积，因为转置卷积基本上是可学习的上采样，有助于获得更多可学习的参数</strong>。</p><h3 id="23-shifted-mlp阶段"><a class="markdownIt-Anchor" href="#23-shifted-mlp阶段"></a> 2.3 shifted MLP阶段</h3><p><strong>在shifted MLP中，我们首先在Tokenized 之前移位conv特征的通道轴。这有助于MLP只关注卷积特征的某些位置，从而诱导块的位置性</strong>。这里的直觉类似于Swin变换器[5]，其中基于窗口的关注被引入到一个完全全局的模型中，以增加更多的位置性。由于Tokenized MLP块有2个MLP，我们像轴向注意力[24]一样，将特征在其中一个的宽度和另一个的高度上移动。我们将特征分成h个不同的分区，并根据指定的轴线将它们转移到j个位置。这有助于我们创建随机窗口，沿轴线引入位置性。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221121202433141.png" alt="image-20221125142107602" /></p><h3 id="24-tokenized-mlp阶段"><a class="markdownIt-Anchor" href="#24-tokenized-mlp阶段"></a> 2.4 Tokenized MLP阶段</h3><p>在Tokenized MLP区块中，我们首先转移特征并将其投影到标记中。为了Tokenized ，我们首先使用3的核大小，并将通道的数量改为E，其中E是嵌入维度（标记的数量），这是一个超参数。然后，我们将这些标记传递给一个shifted MLP（跨越宽度），MLP的隐藏维度是一个超参数H。我们在这个模块中使用DWConv<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>有两个原因。</p><p>1）它有助于对MLP特征的位置信息进行编码。在[26]中显示，MLP块中的卷积层足以编码位置信息，它实际上比标准的位置编码技术表现得更好。像ViT中的位置编码技术，当测试和训练的分辨率不一样时，需要进行插值，往往会导致性能下降。</p><p>2）DWConv使用的参数数量较少，因此提高了效率。然后我们使用GELU[12]激活层。我们使用GELU而不是RELU，因为它是一个更平滑的选择，而且被发现表现得更好。此外，最近的大多数架构，如ViT[10]和BERT[9]都成功地使用了GELU来获得更好的结果。然后，我们将特征通过另一个shifted MLP（跨越高度），将维度从H转换为O。我们在这里使用残差连接，并将原始标记作为残差加入。然后，我们应用层归一化（LN）并将输出特征传递给下一个区块。LN比BN更受欢迎，因为在Tokenized MLP块中，沿着tokens进行归一化而不是跨批归一化更有意义。</p><p>Tokenized MLP块中的计算可以总结为：。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221121202526890.png" alt="image-20221121202433141" /></p><p>其中，T表示标记，H表示高度，W表示宽度，DW Conv表示深度卷积，LN表示层归一化。请注意，所有这些计算都是在嵌入维度H上进行的，该维度明显小于特征图的维度H N×H N，其中N是一个2的系数，取决于块。在我们的实验中，除非另有说明，我们将H设置为768。这种设计Tokenized MLP块的方式有助于编码有意义的特征信息，在计算或参数方面没有什么贡献。</p><h2 id="3-实验和结果"><a class="markdownIt-Anchor" href="#3-实验和结果"></a> 3 实验和结果</h2><h3 id="31-数据集"><a class="markdownIt-Anchor" href="#31-数据集"></a> 3.1 数据集</h3><p>为了使我们的实验尽可能地接近医疗点成像，我们挑选了国际皮肤成像合作组织（ISIC 2018）[8]和乳房超声图像（BUSI）[4]数据集作为我们结果的基准。ISIC数据集包含相机获取的皮肤学图像和相应的皮肤病变区域的分割图。ISIC 2018数据集由2594张图像组成。我们将所有图像的大小调整为512×512的分辨率。BUSI包括正常、良性和恶性乳腺癌病例的超声波图像以及相应的分割图。我们只使用良性和恶性的图像，结果共有647张图像被调整到256×256的分辨率。</p><h3 id="32-实施细节"><a class="markdownIt-Anchor" href="#32-实施细节"></a> 3.2 实施细节</h3><p>我们使用Pytorch框架开发UNeXt。我们使用二元交叉熵（BCE）和骰子损失的组合来训练UNeXt。预测ˆ y和目标y之间的损失L被表述为。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125144951200.png" alt="image-20221121202526890" /></p><p>我们使用一个学习率为0.0001、momentum为0.9的Adam优化器。我们还使用cosine annealing学习率调度器，最小学习率可达0.00001。批量大小被设定为8。我们对UNeXt进行了总共400个epochs的训练。我们对数据集进行了三次80-20的随机分割，并报告了平均值和方差。</p><h3 id="33-性能比较"><a class="markdownIt-Anchor" href="#33-性能比较"></a> 3.3 性能比较</h3><p>我们将UNeXt的性能与最近广泛使用的医学图像分割框架进行比较。特别是，我们与UNet[17]、UNet++[29]和ResUNet[28]等卷积基线进行比较。我们还与最近的转化器基线如TransUNet[6]和MedT[20]进行比较。请注意，我们主要是在分割性能（F1得分和IoU）以及参数数量、计算复杂性（GFLOPs）和推理时间（ms）方面与基线进行比较。</p><p>我们在表1中列出了结果。可以看出，UNeXt获得了比所有基线更好的分割性能，紧随其后的是TransUNet。这些改进在统计学上是显著的，P&lt;10-5。然而，这里最值得注意的一点是，与TransUNet相比，UNeXt的计算次数非常少，因为UNeXt没有任何注意块。计算量是以浮点运算器（FLOPs）的数量来计算的。我们注意到，与TransUNet的38.52和UNet的55.84相比，UNeXt的GFLOPs最少，为0.57。与所有基线相比，它也是最轻的网络。特别是，我们注意到UNeXt只有1.58M的参数，而TransUNet有105.32M的参数。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125152520456.png" alt="image-20221125144951200" /></p><p>我们还展示了在CPU上运行时的平均推理时间。请注意，我们特别对CPU而不是GPU的推理时间进行了基准测试，因为医疗点设备大多在低计算能力下运行，通常不具备GPU的计算优势。我们对10张分辨率为256×256的图像进行前馈，并报告平均推理时间。用于基准测试的CPU是英特尔至强黄金6140 CPU，工作频率为2.30 GHz。可以注意到，我们用Swin-UNet[5]进行了实验，但发现在小数据集上有收敛问题，导致性能不佳。然而，Swin-UNet的参数很多，有41.35M，而且计算复杂，有11.46GFLOPs。</p><p>在图4中，我们绘制了F1得分与GLOPs、F1得分与推理时间以及F1得分与参数数的对比图。这里使用的F1得分与ISIC数据集相对应。从图表中可以清楚地看到，UNeXt和TransUNet是在分割性能方面表现最好的方法。然而，UNeXt在计算复杂性、推理时间和参数数量方面明显优于其他所有网络，这些都是在医疗点成像应用中需要考虑的重要特征。在图5中，我们展示了UNeXt和其他基线的定性结果样本。可以看出，与其他方法相比，UNeXt产生了有竞争力的分割预测结果。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125145245105.png" alt="image-20221125145245105" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125142055525.png" alt="image-20221125145303006" /></p><h2 id="4-讨论"><a class="markdownIt-Anchor" href="#4-讨论"></a> 4 讨论</h2><h3 id="41-消融实验"><a class="markdownIt-Anchor" href="#41-消融实验"></a> 4.1 消融实验</h3><p>我们进行了一项消融实验（如表2所示），以了解UNeXt中每个模块的单独贡献。我们首先从原始的UNet开始，然后只是减少过滤器的数量，以减少参数的数量和复杂性。我们看到在参数减少不多的情况下，性能有所下降。接下来，我们减少深度，只使用3级深度架构，这基本上是UNeXt的Conv阶段。这大大减少了参数的数量和复杂性，但性能也降低了4%。现在，我们引入了Tokenized 的MLP块，这大大改善了性能，同时将复杂性和参数增加到最小值。接下来，我们使用DWConv增加了位置嵌入方法，如[26]，并看到了一些更多的改进。接下来，我们在MLPs中加入了移位操作，并表明在Tokenized 之前移位特征可以提高性能，而没有增加任何参数或复杂性。由于移位操作对任何加法或乘法都没有贡献，所以不会增加任何FLOPs。我们注意到，在两个轴上移动特征的结果是最好的性能，这是UNeXt的确切配置，参数和复杂性最小。请注意，上述所有的实验都是使用ISIC数据集的单一折叠进行的。</p><h3 id="42-对渠道数量的分析"><a class="markdownIt-Anchor" href="#42-对渠道数量的分析"></a> 4.2 对渠道数量的分析</h3><p>通道数是UNeXt的一个主要超参数，它影响到参数的数量、复杂性和网络的性能。在表3中，我们对ISIC的单折进行了实验，以显示UNeXt的两种不同配置。可以看出，增加通道（UNeXt-L）进一步提高了性能，同时增加了计算的开销。尽管减少通道（UNeXt-S）降低了性能（减少的幅度不大），但我们得到了一个非常轻的模型。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125145303006.png" alt="image-20221125152509416" /></p><h3 id="43-与mlp-mixer的区别"><a class="markdownIt-Anchor" href="#43-与mlp-mixer的区别"></a> 4.3 与MLP-Mixer的区别</h3><p>MLP-Mixer使用全MLP架构进行图像识别。UNeXt是一个用于图像分割的卷积和基于MLP的网络。MLP-Mixer专注于通道混合和标记混合，以学习一个好的表示。相比之下，我们提取卷积特征，然后将通道Tokenized ，并使用一个新颖的Tokenized 的MLPs，使用shifted MLPs来建模表示。值得注意的是，我们用MLPMixer作为编码器和一个普通的卷积解码器进行了实验。对于分割来说，性能并不理想，而且在11M左右的参数下，它仍然很沉重。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125152509416.png" alt="image-20221125152520456" /></p><h2 id="5-结论"><a class="markdownIt-Anchor" href="#5-结论"></a> 5 结论</h2><p>在这项工作中，我们提出了一个新的深度网络架构UNeXt，用于医学图像分割，重点是用于医疗点的应用。UNeXt是一个基于卷积和MLP的架构，其中有一个初始卷积阶段，然后是潜伏空间的MLP。具体来说，我们提出了一个带有移位MLPs的Tokenized MLP块，以最小的复杂度和参数来有效地模拟表示。我们在多个数据集上验证了UNeXt，在那里我们实现了更快的推理，降低了复杂性，减少了参数数量，同时也达到了最先进的性能。</p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221125144046042.png" alt="image-20221125144046042" /> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/bisenetv1/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/bisenetv1/</url>
      
        <content type="html"><![CDATA[<h1 id="bisenet"><a class="markdownIt-Anchor" href="#bisenet"></a> BiSeNet</h1><p><a href="zotero://open-pdf/library/items/FUYHF4SI">BiSeNet: Bilateral Segmentation Network for Real-time Semantic Segmentation</a></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract.</h2><p>语义分割需要丰富的空间信息和相当大的感受野。然而，现代方法通常会牺牲空间分辨率来实现实时推理速度，这导致了性能不佳。在本文中，我们用一个新颖的双边分割网络（BiSeNet）来解决这个难题。我们首先设计了一个小步幅的空间路径，以保留空间信息并产生高分辨率的特征。同时，采用快速下采样策略的Context Path，以获得足够的感受野。在这两条路径的基础上，我们引入了一个新的特征融合模块来有效地结合特征。在Cityscapes、CamVid和COCO-Stuff数据集上，提议的架构在速度和分割性能之间取得了适当的平衡。具体来说，对于2048×1024的输入，我们在Cityscapes测试数据集上实现了68.4%的平均IOU，在一块NVIDIA Titan XP卡上的速度为105FPS，这比现有的具有可比性的方法要快得多。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>语义分割的研究，相当于给每个像素分配语义标签，是计算机视觉中的一项基本任务。它可以广泛地应用于增强现实设备、自动驾驶和视频监控等领域。这些应用对高效的推理速度有很高的要求，以实现快速交互或响应。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20230329193657587.png" alt="image-20230329193657587" /></p><blockquote><p>**Fig. 1.**加速的架构和我们提出的方法的说明。(a)介绍了对输入图像的裁剪或调整大小的操作，以及带有修剪通道或放弃阶段的轻量级模型。(b)表示U型结构。©展示了我们提出的双侧分割网络（BiSeNet）。黑色破折线代表破坏空间信息的操作，而红色破折线代表缩小感受野的操作。绿色块是我们提出的空间路径（SP）。在网络部分，每个区块代表不同下采样大小的特征图。块的长度代表空间分辨率，而厚度则代表通道的数量。</p></blockquote><p>最近，实时语义分割的算法[1,17,25,39]表明，主要有三种方法来加速模型。1）[34,39]试图通过裁剪或调整大小来限制输入尺寸以降低计算的复杂性。虽然该方法简单有效，但空间细节的损失破坏了预测，特别是在边界周围，导致指标和可视化的准确性下降。2) 有些工作没有调整输入图像的大小，而是修剪网络的通道以提高推理速度[1, 8, 25]，特别是在基础模型的早期阶段。然而，它削弱了空间容量。3) 对于最后一种情况，ENet[25]提出放弃模型的最后阶段，以追求一个极其紧密的框架。然而，这种方法的缺点是显而易见的：由于ENet放弃了最后阶段的下采样操作，模型的接受域不足以覆盖大型物体，导致辨别能力差。总的来说，上述所有的方法都在准确性上向速度妥协，这在实践中是比较差的。图1（a）给出了说明。</p><p>为了弥补上述空间细节的损失，研究人员广泛利用U型结构[1,25,35]。通过融合骨干网络的层次特征，U型结构逐渐提高了空间分辨率，填补了一些缺失的细节。然而，这种技术有两个弱点。1）完整的U型结构会降低模型的速度，因为引入了高分辨率特征图的额外计算。2）更重要的是，如图1（b）所示，在修剪或裁剪中丢失的大部分空间信息不能通过涉及浅层而轻易恢复。换句话说，U型技术最好被看作是一种救济，而不是一种基本的解决方案。</p><p>基于上述观察，我们提出了双侧分割网络（BiSeNet），包括两部分： 空间路径（SP）和背景路径（CP）。顾名思义，这两个部分分别是为了应对空间信息的损失和感受野的萎缩而设计的。这两个路径的设计理念是明确的。对于空间路径，我们只堆叠三个卷积层来获得1/8的特征图，它保留了丰富的空间细节。对于Context Path，我们在Xception[8]的尾部附加了一个全局平均池化层，这里的感受野是骨干网络的最大值。图1（c）显示了这两个部分的结构。</p><p>为了追求更好的准确性而不损失速度，我们还研究了两条路径的融合和最终预测的细化，并分别提出了特征融合模块（FFM）和注意细化模块（ARM）。正如我们下面的实验所示，这两个额外的组件可以进一步提高Cityscapes[9]、CamVid[2]和COCO-Stuff[3]两个基准的整体语义分割精度。</p><p>我们的主要贡献总结如下：</p><ul><li><strong>我们提出了一种新的方法，将空间信息保存和感受野提供的功能解耦为两条路径。具体来说，我们提出了一个具有空间路径（SP）和背景路径（CP）的双侧分割网络（BiSeNet）。</strong></li><li>我们设计了两个特定的模块，即特征融合模块（FFM）和注意精化模块（ARM），以可接受的成本进一步提高准确性。</li><li>我们在Cityscapes、CamVid和COCO-Stuff等基准测试中取得了令人印象深刻的结果。更具体地说，我们在Cityscapes测试数据集上取得了68.4%的结果，速度为105 FPS。</li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 Related Work</h2><p>最近，许多基于FCN的方法[22]在语义分割任务的不同基准上取得了最先进的性能。这些方法中的大多数都是为了编码更多的空间信息或扩大接受领域。</p><p><strong>空间信息：</strong> 卷积神经网络（CNN）[16]通过连续的下采样操作对高级语义信息进行编码。然而，在语义分割任务中，图像的空间信息对预测详细输出至关重要。现有的现代方法致力于编码富裕的空间信息。DUC[32]、PSPNet[40]、DeepLab v2[5]和Deeplab v3[6]使用扩张卷积来保留特征图的空间大小。全局卷积网络[26]利用 &quot;大核 &quot;来扩大感受野。</p><p><strong>U形方法：</strong> U型结构[1,10,22,24,27]可以恢复一定程度的空间信息。原始的FCN[22]网络通过一个跳过连接的网络结构来编码不同层次的特征。一些方法采用其特定的细化结构，变成U型网络结构。[1, 24]通过使用去卷积层创建了一个U型网络结构。U-net[27]为这个任务引入了有用的跳过连接网络结构。全局卷积网络[26]将U型结构与 &quot;大核 &quot;相结合。LRR[10]采用了拉普拉斯金字塔重构网络。RefineNet[18]增加了多路径细化结构来细化预测。DFN[36]设计了一个通道关注块来实现特征选择。然而，在U型结构中，一些丢失的空间信息不容易恢复。</p><p><strong>语境信息：</strong> 语义分割需要语境信息来产生高质量的结果。大多数常见的方法都是放大感受野或融合不同的语境信息。[5, 6, 32, 37]在卷积层中采用不同的扩张率来捕捉不同的背景信息。在图像金字塔的驱动下，语义分割网络结构中总是采用多尺度特征组合。在[5]中，提出了一个 &quot;ASPP &quot;模块来捕捉不同感受野的语境信息。PSPNet[40]应用了一个 &quot;PSP &quot;模块，其中包含几个不同尺度的平均集合层。[6]设计了一个带有全局平均池的 &quot;ASPP &quot;模块来捕捉图像的全局背景。[38]通过一个尺度自适应卷积层改进了神经网络，以获得自适应的场背景信息。DFN[36]在U型结构的顶部增加了全局池，以编码全局背景。</p><p><strong>注意机制：</strong> 注意机制可以使用高层信息来指导前馈网络[23，31]。在[7]中，CNN的注意力取决于输入图像的比例。在[13]中，他们将通道注意力应用于识别任务，并达到了最先进的水平。像DFN[36]一样，他们学习全局背景作为注意力并修改特征。</p><p>**实时分割：**实时语义分割算法需要一个快速的方法来生成高质量的预测结果。SegNet[1]利用一个小的网络结构和跳过连接的方法来实现快速的速度。E-Net[25]从头开始设计了一个轻量级网络，并提供了极高的速度。ICNet[39]利用图像级联来加速语义分割方法。[17]采用了级联网络结构来减少 &quot;容易区域 &quot;的计算量。[34]设计了一个新颖的双柱网络和空间稀疏性来减少计算成本。不同的是，我们提出的方法采用了一个轻量级模型来提供足够的感受野。此外，我们设置了一个浅而宽的网络来捕捉足够的空间信息。</p><h2 id="3-bilateral-segmentation-network"><a class="markdownIt-Anchor" href="#3-bilateral-segmentation-network"></a> 3 Bilateral Segmentation Network</h2><p>在这一节中，我们首先详细说明了我们提出的双边分割网络（BiSeNet）的空间路径和背景路径。此外，我们还详细阐述了这两条路径的相应效果。最后，我们展示了如何将这两条路径的特征与特征融合模块和我们BiSeNet的整个架构结合起来。</p><h3 id="31-spatial-path"><a class="markdownIt-Anchor" href="#31-spatial-path"></a> 3.1 Spatial path</h3><p>在语义分割的任务中，一些现有的方法[5, 6, 32, 40]试图保留输入图像的分辨率，用扩张卷积来编码足够的空间信息，而少数方法[5, 6, 26, 40]试图用金字塔集合模块、阿特拉斯空间金字塔集合或 &quot;大内核 &quot;来捕捉足够的接受域。这些方法表明，空间信息和感受野是实现高精确度的关键。然而，要同时满足这两个要求是很难的。特别是在实时语义分割的情况下，现有的现代方法[1, 25, 39]利用小型输入图像或轻量级基础模型来加速。小尺寸的输入图像失去了原始图像的大部分空间信息，而轻量级的模型在通道修剪时损害了空间信息。</p><p><img src="images/image-20230413153312229.png" alt="image-20230413153312229" /></p><blockquote><p>图2.双边分割网络的概述。(a) 网络结构。块的长度表示空间大小，而厚度代表通道的数量。(b) 注意力细化模块（ARM）的组成部分。© 特征融合模块（FFM）的组成部分。读取线代表我们只在测试时采取这一过程。</p></blockquote><p>基于这一观察，我们提出了一个空间路径，以保留原始输入图像的空间大小，并对富裕的空间信息进行编码。空间路径包含三层。每层包括一个stride=2的卷积，然后是BN[15]和ReLU[11]。因此，该路径提取的输出特征图是原始图像的1/8。由于特征图的空间尺寸较大，它编码了丰富的空间信息。图2(a)展示了结构的细节。</p><h3 id="32-context-path"><a class="markdownIt-Anchor" href="#32-context-path"></a> 3.2 Context path</h3><p>**空间路径编码丰富的空间信息，而Context Path则是为了提供足够的感受野。**在语义分割任务中，接受域对性能具有重要意义。为了扩大感受野，一些方法利用了金字塔集合模块[40]、无轨空间金字塔集合[5,6]或 “大核”[26]。然而，这些操作对计算的要求很高，也很耗费内存，导致速度很低。</p><p>考虑到大接收场和高效计算的同时，我们提出了 “Context Path”。**Context Path利用轻量级模型和全局平均池[5, 6, 21]来提供大的感受野。**在这项工作中，轻量级模型，如Xception[8]，可以快速对特征图进行降样，以获得大的感受野，它编码了高水平的语义背景信息。然后，我们在轻量级模型的尾部添加一个全局平均池，它可以提供具有全局语境信息的最大感受野。最后，我们将全局池的上采样输出特征和轻量级模型的特征结合起来。在轻量级模型中，我们部署了U型结构[1, 25, 35]来融合后两个阶段的特征，这是一个不完整的U型结构风格。图2（c）显示了Context Path的整体视角。</p><p><strong>注意力细化模块：</strong> 在语境路径中，我们提出了一个特定的注意力细化模块（ARM）来细化每个阶段的特征。如图2(b)所示，ARM采用全局平均池来捕捉全局背景，并计算出一个注意力向量来指导特征学习。这种设计可以细化Context Path中每个阶段的输出特征。它可以很容易地整合全局上下文信息，而不需要任何向上采样的操作。因此，它要求的计算成本可以忽略不计。</p><h3 id="33-network-architecture"><a class="markdownIt-Anchor" href="#33-network-architecture"></a> 3.3 Network architecture</h3><p>通过空间路径和Context Path，我们提出了BiSeNet，用于实时语义分割，如图2（a）所示。</p><p><strong>我们使用预先训练好的Xception模型作为 &quot;语境路径 &quot;的骨干，使用三个卷积层作为 “空间路径”</strong>。<strong>然后我们融合这两条路径的输出特征</strong>，进行最终的预测。它可以同时实现实时性能和高精确度。首先，我们把重点放在实际计算方面。虽然空间路径有很大的空间尺寸，但它只有三个卷积层。因此，它的计算量不大。至于 “Context Path”，我们使用一个轻量级的模型来快速下采样。此外，这两条路径同时进行计算，这大大增加了效率。第二，我们讨论这个网络的准确性方面。在我们的论文中，空间路径编码了丰富的空间信息，而Context Path提供了大的感受野。它们相互补充，以获得更高的性能。</p><p><strong>特征融合模块：</strong> 两条路径的特征在特征表示水平上是不同的。因此，我们不能简单地将这些特征相加。空间路径捕捉到的空间信息主要编码了丰富的细节信息。此外，&quot;语境路径 &quot;的输出特征主要是编码语境信息。换句话说，空间路径的输出特征是低层次的，而语境路径的输出特征是高层次的。因此，我们提出一个特定的特征融合模块来融合这些特征。</p><p>考虑到特征的不同层次，我们首先将空间路径和Context Path的输出特征连接起来。然后，我们利用批量归一化[15]来平衡这些特征的尺度。接下来，我们将串联的特征汇集成一个特征向量，并计算出一个权重向量，如SENet[13]。这个权重向量可以对特征进行重新加权，这相当于特征选择和组合。图2©显示了这种设计的细节。</p><p><strong>损失函数：</strong> 在本文中，我们还利用了辅助损失函数来监督我们提出的方法的训练。我们使用主损失函数来监督整个BiSeNet的输出。此外，我们增加了两个特定的辅助损失函数来监督Context Path的输出，就像深度监督一样[35]。所有的损失函数都是Softmax损失，如公式1所示。此外，我们使用参数α来平衡主损失和辅助损失的权重，如公式2所示。本文中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>等于1。联合损失使优化器在优化模型时更加舒适。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>L</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mrow><mo fence="true">(</mo><mfrac><msup><mi>e</mi><msub><mi>p</mi><mi>i</mi></msub></msup><mrow><munder><mo>∑</mo><mi>j</mi></munder><msup><mi>e</mi><msub><mi>p</mi><mi>j</mi></msub></msup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">loss=\frac1N\sum_iL_i=\frac1N\sum_i-log\left(\frac{e^{p_i}}{\sum_je^{p_j}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.599109em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.027669em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.341392em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6064620000000001em;"><span style="top:-3.0050700000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p><p>其中p是网络的输出预测值，</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">;</mo><mi>W</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>l</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">;</mo><mi>W</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>2</mn></mrow><mi>K</mi></munderover><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">;</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(X;W)=l_p(X;W)+\alpha\sum_{i=2}^Kl_i(X_i;W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span></span></p><p>其中lp是串联输出的主损失。Xi是Xception模型第i阶段的输出特征。li是第i阶段的辅助损失。K在我们的论文中等于3。L是联合损失函数。这里，我们只在训练阶段使用辅助损失。</p><h2 id="4-experimental-results"><a class="markdownIt-Anchor" href="#4-experimental-results"></a> 4 Experimental Results</h2><p>我们在实时语义分割任务中采用了改进的Xception模型[8]，即Xception39。我们的实现代码将公开提供。</p><p>我们在Cityscapes[9]、CamVid[2]和COCOStuff[3]基准上评估了我们提出的BiSeNet。我们首先介绍了数据集和实施协议。接下来，我们详细描述了我们与其他方法相比的速度策略。然后，我们研究了我们提出的方法的每个组成部分的效果。我们在Cityscapes验证集上评估了所有的性能结果。最后，我们报告了在Cityscapes、CamVid和COCO-Stuff数据集上与其他实时语义分割算法相比的准确性和速度结果。</p><p>城市景观： Cityscapes[9]是一个来自汽车视角的大型城市街道场景数据集。它包含2,975张用于训练的精细注释的图像和另外500张用于验证的图像。在我们的实验中，我们只使用精细数据集。对于测试，它提供了1,525张没有地面真相的图像，以便进行公平比较。这些图像的分辨率都是2,048×1,024，其中每个像素都被注释为预先定义的19类。</p><p>COCO-Stuff： COCO-Stuff[3]增加了流行的COCO[20]数据集的全部164000张图片，其中118000张图片用于训练，5000张图片用于验证，20000张图片用于测试-开发，20000张图片用于测试-挑战。它涵盖了91个东西类和1个 &quot;未标记 &quot;类。</p><h3 id="41-implementation-protocol"><a class="markdownIt-Anchor" href="#41-implementation-protocol"></a> 4.1 Implementation protocol</h3><p>在本节中，我们将详细阐述我们的实施协议。网络： 我们应用三个卷积作为空间路径和<strong>Xception39模型作为背景路径</strong>。然后我们使用特征融合模块来结合这两条路径的特征来预测最终结果。空间路径的输出分辨率和最终的预测结果是原始图像的1/8。</p><p>训练细节： 我们在训练中使用迷你批次随机梯度下降法（SGD）[16]，批次大小为16，动量0.9，权重衰减1e-4。与[5, 6, 21]类似，我们采用 &quot;聚 &quot;学习率策略，其中初始学习率乘以(1 - iter max iter )幂，每次迭代的幂为0.9。最初的学习率是2.5e-2。</p><p>数据增量： 在训练过程中，我们对输入图像采用平均减法、随机水平翻转和随机比例来增加数据集。标度包含{0.75, 1.0, 1.5, 1.75, 2.0}。最后，我们随机地将图像裁剪成固定的尺寸，用于训练。</p><h3 id="42-ablation-study"><a class="markdownIt-Anchor" href="#42-ablation-study"></a> 4.2 Ablation study</h3><p>在本小节中，我们一步一步地详细研究了我们提出的BiSeNet中每个组件的效果。在接下来的实验中，我们使用Xception39作为基础网络，在Cityscapes验证数据集[9]上评估我们的方法。</p><p><img src="images/image-20230412160452141.png" alt="image-20230412160452141" /></p><p>基准线： 我们使用在ImageNet数据集[28]上预训练的Xception39网络作为Context Path的主干。然后我们像FCN[22]一样，直接对网络的输出进行上采样，作为原始输入图像。我们将基础模型的性能作为基线来评估，如表1所示。</p><p>对U型的消融： 我们提出了 “Context Path”，以提供足够的感受野。我们使用一个轻量级的模型，Xception39，作为 &quot;Context Path &quot;的骨干，以快速取样。同时，我们使用U型结构[1, 25, 35]来结合Xception39网络中最后两个阶段的特征，称为U型8s，而不是标准的U型结构，称为U型4s。这个数字代表了输出特征的下采样系数，如图2所示。使用U-shape-8s结构的原因有两个方面。首先，U型结构可以恢复一定程度的空间信息和空间大小。第二，与U形-4s相比，U形-8s结构的速度更快，如表2所示。因此，我们使用U-形-8s结构，它的性能从60.79%提高到66.01%，如表2所示。</p><p>空间路径的消融： 如第一节所述，现有的实时语义分割任务的现代方法面临着失去空间信息的挑战。因此，我们提出了一个空间路径，以保留空间大小并捕获丰富的空间信息。空间路径包含三个跨度=2的卷积，然后是批量归一化[15]和ReLU[11]。这使性能从66.01%提高到67.42%，如表3所示。空间路径编码了丰富的空间信息细节。图3显示，BiSeNet可以获得更详细的空间信息，例如一些交通标志。</p><p><img src="images/image-20230412160521923.png" alt="image-20230412160521923" /></p><p><img src="images/image-20230412160532823.png" alt="image-20230412160532823" /></p><p>注意力细化模块的消融： 为了进一步提高性能，我们专门设计了一个注意力细化模块（ARM）。该模块包含一个全局平均池，将输出特征编码为一个向量。然后我们利用卷积、批量归一化[15]和ReLU单元[11]来计算注意力向量。原始特征将被注意力向量重新加权。对于原始特征，不需要复杂的上采样操作，就可以很容易地捕捉到全局的环境信息。ARM的效果如表3所示。</p><p><img src="images/image-20230412160550434.png" alt="image-20230412160550434" /></p><p><strong>特征融合模块的消融：</strong> 基于空间路径和背景路径，我们需要融合这两条路径的输出特征。考虑到不同层次的特征，低层次的是空间路径的特征，高层次的是Context Path的特征，我们提出了特征融合模块来有效结合这些特征。首先，我们评估了这些特征与我们提出的特征融合模块直接相加的效果，如表3所示。比较性能的差距说明这两条路径的特征依次属于不同的层次。</p><p><strong>全局平均汇集的消融：</strong> 我们期望Context Path能提供足够的感受野。虽然原始的Xception39模型在理论上可以覆盖输入图像的大部分区域，但我们还是通过全局平均池化[21]来进一步扩大感受野。这可以确保有效的感受区足够大。在本文中，我们在Xception39模型的尾部加入了全局平均池。然后，我们对全局平均池的输出进行上采样，并将此特征与Xception39模型中最后一个阶段的输出相加，如DFN[36]。这样就把性能从67.42%提高到了68.42%，这表明了这种设计的效果，如表3所示。</p><p><img src="images/image-20230412160611742.png" alt="image-20230412160611742" /></p><h3 id="43-speed-and-accuracy-analysis"><a class="markdownIt-Anchor" href="#43-speed-and-accuracy-analysis"></a> 4.3 Speed and Accuracy Analysis</h3><p>在本节中，我们首先分析了我们算法的速度。然后，我们报告了我们在Cityscapes[9]、CamVid[2]和COCO-Stuff[3]基准上与其他算法相比的最终结果。</p><p>速度分析： 速度是一个算法的重要因素，特别是当我们在实践中应用它时。我们在不同的设置上进行实验以进行彻底的比较。首先，我们在表4中显示了FLOPS和参数的情况。FLOPS和参数表示处理该分辨率的图像所需的操作数。为了公平比较，我们选择640×360作为输入图像的分辨率。同时，表5列出了我们的方法与其他方法在不同分辨率的输入图像和不同硬件基准上的速度比较。最后，我们报告了我们在Cityscapes测试数据集上的速度和相应的准确性结果。从表6中，我们可以发现我们的方法在速度和准确率方面都比其他方法取得了明显的进步。在评估过程中，我们首先将2048×1024分辨率的输入图像缩放为1536×768的分辨率，以测试其速度和准确度。同时，我们用在线引导策略计算损失函数，如[33]中所述。在这个过程中，我们没有采用任何测试技术，如多尺度或多作物测试。</p><p>准确度分析： 实际上，与其他非实时语义分割算法相比，我们的BiSeNet也可以达到更高的准确率。这里，我们将展示在Cityscapes[9]、CamVid[2]和COCO-Stuff[3]基准上的准确性结果。同时，为了确保我们方法的有效性，我们还在不同的基础模型上采用了该方法，如标准的ResNet18和ResNet101[12]。接下来，我们将详细介绍一些训练细节。<img src="images/image-20230412160642856.png" alt="image-20230412160642856" /></p><p><img src="images/image-20230412160652513.png" alt="image-20230412160652513" /></p><p>城市景观： 如表7所示，我们的方法在不同模型上也取得了令人印象深刻的结果。为了提高准确性，我们随机抽取1024×1024的作物作为输入。图4展示了我们结果的一些视觉例子。</p><p>CamVid： 表8显示了CamVid数据集的统计精度结果。对于测试，我们使用训练数据集和验证数据集来训练我们的模型。这里，我们使用960×720的分辨率进行训练和评估。</p><p>COCO-Stuff： 我们还在表9中报告了我们在COCO-Stuff验证数据集上的准确性结果。在训练和验证过程中，我们将输入的数据裁剪成640×640的分辨率。为了进行公平的比较，我们没有采用多尺度测试。<img src="images/image-20230412160720872.png" alt="image-20230412160720872" /></p><h2 id="5-结论"><a class="markdownIt-Anchor" href="#5-结论"></a> 5 结论</h2><p>本文提出了双侧分割网络（BiSeNet），以同时提高实时语义分割的速度和准确性。我们提出的BiSeNet包含两条路径： 空间路径（SP）和语境路径（CP）。空间路径的设计是为了保留原始图像的空间信息。Context Path利用轻量级模型和全局平均池[6, 21, 40]来迅速获得可观的感受野。有了丰富的空间细节和大的接受域，我们在105FPS下对Cityscapes[9]测试数据集取得了68.4%的平均IOU的结果。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PP-MobileSeg Explore the Fast and Accurate Semantic Segmentation Model on Mobile Devices</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ppmobileseg/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/ppmobileseg/</url>
      
        <content type="html"><![CDATA[<h1 id="pp-mobileseg-explore-the-fast-and-accurate-semantic-segmentation-model-on-mobile-devices"><a class="markdownIt-Anchor" href="#pp-mobileseg-explore-the-fast-and-accurate-semantic-segmentation-model-on-mobile-devices"></a> PP-MobileSeg: Explore the Fast and Accurate Semantic Segmentation Model on Mobile Devices</h1><p><a href="zotero://open-pdf/library/items/RR79NDET">文章链接</a></p><h2 id="1-abstract"><a class="markdownIt-Anchor" href="#1-abstract"></a> 1. Abstract</h2><p>transformer在计算机视觉中的成功导致了一些尝试，以使其适用于移动设备，但其性能在一些实际应用中仍然不令人满意。为了解决这个问题，我们提出了PP-MobileSeg，一个在移动设备上实现最先进性能的语义分割模型。PP-MobileSeg包括三个新的部分：<strong>StrideFormer主干</strong>、<strong>聚合注意力模块（AAM）<strong>和</strong>有效插值模块（VIM）</strong>。<strong>四个阶段的StrideFormer主干是用MV3块和strided SEA注意力构建的，它能够以最小的参数开销提取丰富的语义和细节特征</strong>。<strong>AAM首先通过语义特征集合投票过滤细节特征，然后将其与语义特征相结合，以增强语义信息</strong>。此外，我们提出了VIM，将下采样的特征上采样到输入图像的分辨率。它只对最终预测中存在的类进行插值，从而大大降低了模型的延迟，而插值是导致整体模型延迟的最主要因素。广泛的实验表明，与其他方法相比，PP-MobileSeg在准确性、模型大小和延迟之间实现了卓越的权衡。在ADE20K数据集上，PP-MobileSeg比SeaFormer-Base在高通骁龙855上以32.9%的参数和42.3%的加速实现了1.57%的mIoU准确性。</p><p><img src="images/image-20230509151508213.png" alt="image-20230509151508213" /></p><blockquote><p>图1.我们展示了我们提出的PP-MobileSeg模型在ADE20K验证集上的准确性-延迟-参数分析。权衡分析以气泡图表示，其中x轴表示延迟，y轴表示mIoU。相同颜色的模型来自同一个模型系列。我们的模型实现了更好的准确性-延迟-参数的权衡。请注意，延迟是在高通骁龙855 CPU上使用PaddleLite，以单线程和512x512作为输入形状，用最终的ArgMax算子测试的。</p></blockquote><h2 id="2-introduction"><a class="markdownIt-Anchor" href="#2-introduction"></a> 2. Introduction</h2><ul><li><p>与图像分类[18]或物体检测[37]等其他计算机视觉任务相比，语义分割是一项计算成本很高的任务，因为它涉及预测每个像素的类别。虽然在GPU设备上的语义分割已经取得了重大进展，但很少有研究解决移动语义分割的挑战[12, 27, 33]。这种研究的缺乏阻碍了语义分割在移动应用中的实际应用。</p><p>最近，transformer（ViTs）[10]的兴起证明了基于transformer的cnn在语义分割上的良好表现[5, 24, 31, 35]。多项工作提出了用于轻量级cnn设计的transformer-cnn混合架构，如MobileViT[21]、MobileFormer[4]和EdgeNext[20]。这种混合架构以最低的成本结合了cnn中的全局和局部信息。然而，多头自我注意（MHSA）的计算复杂性使得这些网络很难被部署在移动设备上。尽管已经做出了一些努力来降低时间的复杂性，包括移窗注意[16]、有效注意[23]、外部注意[29]、轴向注意[28]、SEA注意[27]等。但是这些技术中有许多需要复杂的索引操作，而ARM CPU无法支持[27]。除了延迟和准确性，内存存储也是移动应用的一个关键因素，因为移动设备的内存存储是有限的。因此，基本问题出现了：我们能否为移动设备设计一个混合网络，在参数、延迟和精度之间有一个卓越的权衡？</p><p>在这项工作中，我们通过探索模型大小和速度限制下的移动分割架构来解决上述问题，以实现性能的飞跃。在广泛的搜索下，我们设法提出了三个新颖的设计模块：四级骨干StrideFormer、特征融合块AAM和上采样模块VIM，如图2所示。通过结合这些模块，我们提出了一个名为PP-MobileSeg的SOTA移动语义分割网络系列，它非常适合移动设备，具有很好的参数、延迟和准确性平衡。我们改进的网络设计使PPMobileSeg-Base的推理速度提高了40%，模型大小比SeaFormer少了34.9%，同时保持了具有竞争力的1.37高的mIoU（表1）。与MobileSeg-MV3相比，PP-MobileSeg-Tiny实现了3.13个更高的mIoU，同时速度快45%，体积小49.5%（表1）。我们还评估了PP-MobileSeg在Cityscapes数据集[6]上的表现（表2），这显示了它在高分辨率输入上的模型性能优势。虽然PP-MobileSeg-Base的延迟时间稍长，但它保持了模型大小的优势，同时在mIoU上比SeaFormer[27]在城市景观数据集[6]上高出1.96。</p><p><img src="images/image-20230509151602110.png" alt="image-20230509151602110" /></p><blockquote><p>图2.PP-MobileSeg网络的结构。AAM的结构在图的右上方。普通插值模块和VIM的区别显示在图的右下方。通过只选择存在于最终预测中的类别，VIM通过对少数通道进行上采样，大大降低了延迟。</p></blockquote><p><img src="images/image-20230509152849090.png" alt="image-20230509152849090" /></p><blockquote><p>Table 1. Results on ADE20K validation set. Latency is measured with PaddleLite with the final ArgMax operator on Qualcomm Snapdragon 855 CPU) and 512x512 as the input shape. All result is evaluated with a single thread. The mIoU is reported with single-scale inference.</p></blockquote><p><img src="images/image-20230509153004354.png" alt="image-20230509153004354" /></p><blockquote><p>表2.Cityscapes验证集的结果。我们使用PaddleLite与最后的ArgMax算子在一个基于ARM的设备上测量延迟，该设备有一个Qualcomm Snapdragon 855 CPU，输入形状为1024x512。由于Cityscapes数据集中的类的数量很少，我们没有使用有效插值模块（VIM）。所有的结果都是使用单线程评估的，我们使用单尺度推理报告了平均交集大于联盟（mIoU）。</p></blockquote><p>综上所述，我们的贡献如下：</p></li><li><p>我们引入了StrideFormer，这是一个带有MobileNetV3块的四级骨架，可以有效地提取不同感受野的特征，同时最大限度地减少参数开销。我们还对最后两个阶段的输出应用了strided SEA attention[13, 27]，以改善计算限制下的全局特征表示。</p></li><li><p>我们提出了聚合注意模块（AAM），它通过增强语义特征的集合投票来融合骨干的特征，并以最大感受野的语义特征进一步增强融合后的特征。</p></li><li><p>为了减少最终插值和ArgMax操作造成的巨大延迟，我们设计了有效插值模块（VIM），在推理时间内只对最终预测中存在的类进行上采样。用VIM取代最后的插值和ArgMax操作，大大降低了模型的延迟。</p></li><li><p>我们将上述模块结合起来，创建了一个名为PPMobileSeg的SOTA移动细分模型系列。我们广泛的实验表明，PPMobileSeg在ADE20K和Cityscapes数据集上实现了延迟、模型大小和准确性之间的出色平衡。</p></li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>在速度和模型大小的限制下，移动语义分割是旨在以高效的网络设计适应语义分割网络的任务。</p><h3 id="21-semantic-segmentation"><a class="markdownIt-Anchor" href="#21-semantic-segmentation"></a> 2.1. semantic segmentation</h3><p>为了实现语义分割的高性能，几个关键要素是必不可少的，包括捕捉上下文的大感受野[3, 36]，准确分割的大分辨率特征[30, 32]，融合细节和语义特征的精确预测[1, 22]，以及改进特征表示的注意力机制[14, 26, 31]。最先进的模型往往结合了这些元素中的几个甚至全部，以实现卓越的性能。语义分割任务的主要要求是，网络必须能够捕捉到场景的整体视图，同时保留图像的细节和语义。因此，设计能够高效和有效地整合这些元素的网络架构是至关重要的。</p><h3 id="22-efficient-network-designs"><a class="markdownIt-Anchor" href="#22-efficient-network-designs"></a> 2.2. Efficient Network Designs</h3><p>在深度学习领域，有两种类型的高效网络架构。第一类侧重于在推理过程中不引入不必要的延迟的情况下向网络添加新元素。有代表性的是结构重参数化[8,9]，它在推理时用单个分支来接近多分支cnn块。第二类是以降低模型性能为代价来降低网络的规模。属于这一类的设计包括分组卷积[11]、通道洗牌[34]和高效注意力机制[23, 28, 29]。</p><h3 id="23-mobile-semantic-segmentation"><a class="markdownIt-Anchor" href="#23-mobile-semantic-segmentation"></a> 2.3. Mobile semantic segmentation</h3><p>由于语义分割的计算复杂度大，在移动设备上进行分割的研究有限，只有少数作品关注这一领域[12, 27, 33]。其中，TopFormer用一个自我关注块增强了标记金字塔，并使用他们提出的注入模块将其与本地特征融合。此外，SeaFormer通过高效的SEA注意力模块提高了模型性能。两者都明显优于MobileSeg和LRASPP，它们目前代表了移动语义分割的最先进水平。</p><h2 id="3-architecture"><a class="markdownIt-Anchor" href="#3-architecture"></a> 3. Architecture</h2><p><img src="images/image-20230509151602110.png" alt="image-20230509151602110" /></p><blockquote><p>图2.PP-MobileSeg网络的结构。AAM的结构在图的右上方。普通插值模块和VIM的区别显示在图的右下方。通过只选择存在于最终预测中的类别，VIM通过对少数通道进行上采样，大大降低了延迟。</p></blockquote><p>本节介绍了在速度和尺寸限制下设计的移动分割网络的综合探索，旨在实现更好的分割精度。通过研究，我们确定了三个关键模块，它们可以带来更快的推理速度或更小的模型尺寸，并略微提高性能。PP-MobileSeg的完整架构如图2所示，它包括四个主要部分： StrideFormer, Aggregate Attention Module (AAM), segmentation head, and Valid Interpolate Module (VIM)。StrideFormer接收输入图像并生成一个特征金字塔，在最后两个阶段应用分层注意力以纳入全局语义。AAM负责融合局部和语义特征，然后通过分割头来产生分割掩码。最后，上采样模块VIM被用来进一步增强分割掩码，通过只对最终预测中存在的类别所对应的少数通道进行上采样来减少延迟。以下各节对这些模块进行了详细描述。</p><h3 id="31-strideformer"><a class="markdownIt-Anchor" href="#31-strideformer"></a> 3.1. StrideFormer</h3><p>在StrideFormer模块中，我们利用MobileNetV3[12]块的堆栈来提取不同感受野的特征。关于这个架构的变体的更多详细信息可以在3.4小节中找到。给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>∈</mo><msup><mi>R</mi><mrow><mn>3</mn><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">I∈R^{3×H×W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>的图像，其中3、H、W代表图像的通道、高度和宽度。StrideFormer产生的特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mo>×</mo><mn>8</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>16</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>32</mn></mrow></msub></mrow><annotation encoding="application/x-tex">F_{×8}, F_{×16}, F_{×32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，代表与输入图像的分辨率相比被降频8次、16次和32次的特征。一个关键的设计选择是骨干网中的阶段数量，其中每个阶段是一个mobilenetv3块的堆栈，产生其中一个特征集，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mo>×</mo><mi>d</mi><mi>o</mi><mi>w</mi><mi>n</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mtext>−</mtext><mi>r</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{×downsample−rate}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.。受efficientFormer[13]的启发，我们发现四级模型的参数开销最小，同时与五级模型相比，仍然保持优异的性能，如表3所示。 因此，我们用四阶段模式设计了StrideFormer。用四阶段骨干生成的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mo>×</mo><mn>8</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>16</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>32</mn></mrow></msub></mrow><annotation encoding="application/x-tex">F_{×8}, F_{×16}, F_{×32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，我们按照[seaformer]在最后两个阶段的特征上添加M/N SEA注意力块。由于大分辨率输入的自我注意模块的时间复杂性，我们在SEA注意模块之前加入跨度卷积，之后对特征进行上采样。通过这种方式，当我们用全局信息赋予特征时，我们将计算复杂度降低到原始实现的1/4。</p><p><img src="images/image-20230509153436227.png" alt="image-20230509153436227" /></p><blockquote><p>表3.PPMobileSeg-Base的三个拟议模块在ADE20K数据集上的消融研究。</p></blockquote><h3 id="32-aggregated-attention-module"><a class="markdownIt-Anchor" href="#32-aggregated-attention-module"></a> 3.2. Aggregated Attention Module</h3><p>利用骨干网生成的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mo>×</mo><mn>8</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>16</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>32</mn></mrow></msub></mrow><annotation encoding="application/x-tex">F_{×8}, F_{×16}, F_{×32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，我们设计了一个聚合注意模块（AAM）来融合特征。AAM的结构在图2的右上方。在生成的特征中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mo>×</mo><mn>16</mn></mrow></msub><mo separator="true">,</mo><msub><mi>F</mi><mrow><mo>×</mo><mn>32</mn></mrow></msub></mrow><annotation encoding="application/x-tex">F_{×16}, F_{×32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>具有较大的感受野，包含丰富的语义信息。因此，我们将它们作为信息过滤器，通过集合投票找出细节特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mo>×</mo><mn>8</mn></mrow></msub></mrow><annotation encoding="application/x-tex">F_{×8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">×</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>中的重要信息。在过滤过程中，F×16和F×32被上采样到与F×8相同的分辨率。并对它们进行sigmoid运算，以获得权重系数。之后，F×16和F×32被相乘，相乘的结果被用来过滤F×8。我们可以将上述程序表述为公式1 此外，我们观察到，具有丰富语义的特征是对之前过滤的细节特征的补充，对提高模型性能至关重要。因此，应该最大程度地保留它。因此，我们在过滤后的细节特征中加入了F×32，即最大感受野的特征，并在全局视图中进行了增强。</p><p>在特征融合后，融合后的特征同时捕捉到了丰富的空间和语义信息，这是分割性能的基础。在此基础上，我们按照TopFormer[33]添加了一个简单的分割头。分割头由一个1×1层组成，它有助于沿通道维度交换信息。然后，应用滤波层和卷积层来产生下采样的分割图。</p><h3 id="33-valid-interpolate-module"><a class="markdownIt-Anchor" href="#33-valid-interpolate-module"></a> 3.3. Valid Interpolate Module</h3><p>在延迟限制下，我们做了一个延迟分析，发现最后的插值和ArgMax操作占了整个延迟的50%以上。因此，我们设计了Valid Interpolate Module(VIM)来替代插值和ArgMax操作，大大降低了模型的延迟。SeaFormer-Base和PP-MobileSeg-Base的延时情况如图3所示。加入VIM后的详细统计数据见表。3.</p><p><img src="images/image-20230509154012445.png" alt="image-20230509154012445" /></p><blockquote><p>图3.SeaFormer和PPMobileSeg之间的延迟情况比较。</p></blockquote><p>VIM是基于这样的观察：在一个训练有素的模型的预测中出现的类的数量往往比数据集中的总体类的数量少得多，特别是对于有大量类的数据集。这是有大量类的数据集的一个常见情况。因此，在插值和ArgMax过程中，没有必要考虑所有的类。VIM的结构在图2的右下方。如该结构所示，VIM包括三个主要步骤。首先，ArgMax和Unique操作被应用于下采样的分割图，以找出必要的通道。然后，索引选择操作只选择那些有效的通道，并将插值应用于瘦身后的特征。最后，被选中的通道被上采样到原始分辨率，产生最终的分割图。用VIM代替插值和ArgMax操作，我们以更少的延迟成本检索出最终的分割图。</p><p>VIM的使用大大减少了插值和ArgMax操作中涉及的通道，导致模型延迟的大幅下降。然而，VIM只适用于当类的数量大到足以在模型中出现通道冗余的时候。因此，设置了30个类的阈值，当类的数量低于这个阈值时，VIM就不会生效了。</p><h3 id="34-architecture-variants"><a class="markdownIt-Anchor" href="#34-architecture-variants"></a> 3.4. Architecture Variants</h3><p>我们提供了PP-MobileSeg的两个变体，以使我们的模型适应不同的复杂性要求，即PPMobileSeg-Base和PP-MobileSeg-Tiny。这两个变体在512x512形状的输入下的尺寸和延迟显示在表1中。1. 基础模型和微小模型有相同数量的MobileNetV3层，而基础模型比微小模型更宽。而且基础模型产生的特征有更多的通道，以丰富特征表示。此外，在注意力区块中也有一些差异。PP-MobileSeg-Base模型在SEA注意模块中有8个头，M/N=3/3注意块。PP-MobileSeg-Tiny模型在SEA注意模块中有4个头，块数为M/N=2/2。后两个阶段的特征通道，PP-MobileSeg-Base为128，192，PP-MobileSeg-Tiny为64，128。特征融合模块的设置对基础模型和微小模型是相同的，AAM的嵌入通道dim被设置为256。关于网络结构的更多细节，请参考源代码。</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4. Experiments</h2><p>在这一节中，我们首先介绍了用于模型训练和评估的数据集，并提供了关于我们训练和推理实现的细节。其次，我们将所提出的方法与以前在这个任务上最先进的方法在准确性、推理速度和模型大小方面进行比较。最后，我们进行了一项消融研究，以证明我们提出的方法的有效性。</p><h3 id="41-experiments-setup"><a class="markdownIt-Anchor" href="#41-experiments-setup"></a> 4.1. Experiments Setup</h3><h4 id="411-datasets"><a class="markdownIt-Anchor" href="#411-datasets"></a> 4.1.1 Datasets</h4><p>我们在ADE20K[36]和cityscapes[6]数据集上进行了实验，并使用mIoU作为评价指标。ADE20K是一个解析数据集，总共包含25K张图片和150个细粒度的语义概念。所有图像被分成20K/2K/3K，用于训练、验证和测试。Cityscapes是一个用于语义分割的大规模数据集。它由5000张精细注释的图像组成，2975张用于训练，500张用于验证，1525张用于测试开发。图片的分辨率为2048×1024，这对用于移动设备的模型构成了巨大的挑战。</p><h4 id="412-implementation-details"><a class="markdownIt-Anchor" href="#412-implementation-details"></a> 4.1.2 Implementation Details</h4><p>我们的实现是建立在PaddleSeg[15]和PaddlePaddle[19]之上的。</p><p>训练设置 我们的主干是在ImageNet1K[7]上预训练的，以检索关于图像的共同知识。我们将批次大小设置为32，并对模型进行80K次迭代训练。在训练过程中，我们以4:1的损失率交叉熵损失和Lovasz损失[2]来优化模型。我们使用指数移动平均法来平均不同训练迭代的模型参数，移动平均系数为0.999[25]。学习率为0.006，使用ADAMW[17]优化器，权重衰减设置为0.01。学习率计划被设置为热身计划和因子为1.0的聚能计划的组合。学习率从1e-6上升到1500 iters，然后线性下降。对于ADE20K，我们遵循TopFormer和SeaFormer[27, 33]的数据增强策略，包括[0.5, 2.0]的随机比例范围、图像裁剪到给定尺寸、随机水平翻转和随机变形。对于Cityscapes，除了我们将图像裁剪为1024x512而不是ADE20K数据集中的512x512，以及随机比例范围为[0.125, 1.5]外，数据增强是一样的。我们的模型是用两个Tesla V100 GPU训练的。我们报告了验证集上的单一比例结果，以便与其他方法进行比较。</p><p>推理设置 在推理过程中，我们将ADE20K数据集的输入形状设置为512×512，城市景观设置为512×1024。为了测试模型延迟，全精度的PPMobileSeg模型被导出到静态模型中，然后在Qualcomm 855上用PaddleLite单线程测量延迟。在推理过程中，我们使用VIM来代替插值和ArgMax操作。值得注意的是，图像预处理，包括调整大小和归一化，是在推理过程之前完成的，所以推理时间只包括模型推理时间。特别是，VIM的延迟与图像中预测的类的数量相关联。因此，我们使用ADE20K验证集的图像，它具有平均的类别数量，来评估延迟以进行合理的比较。</p><h3 id="42-comparison-with-state-of-the-arts"><a class="markdownIt-Anchor" href="#42-comparison-with-state-of-the-arts"></a> 4.2. Comparison with State-of-the-arts</h3><p>ADE20K结果表。1列出了PP-MobileSeg与以前的移动语义分割模型的比较，包括轻量级视觉transformer和高效的CNN，并报告了参数、延迟和mIoU方面的结果。如结果所示，PP-MobileSeg不仅在延迟上，而且在模型大小上都优于这些SOTA模型，同时在准确性上也保持了竞争优势。与MobileSeg和LRASPP相比，它们都使用MobileNetV3作为骨干，PPMobileSeg-Tiny在mIoU上比它们高3.0以上，同时比MobileSeg小49.47%，快45%。而PP-MobileSeg-Tiny比LRASPP小55%，快70.5%。与基于SOTA视觉transformer的模型TopFormer和SeaFormer相比，PP-MobileSeg使用基于卷积的全局自我注意作为其语义提取器，以较低的延迟和较小的模型尺寸实现了较高的分割精度。PP-MobileSeg-Base与同类产品相比，尺寸基本相同或小34.9%，速度快42.9%至44.7%，同时在准确率上保持竞争优势，在mIoU上高出1.37%至3.77%。这些结果证明了PP-MobileSeg在改善特征表示方面的有效性。</p><p>城市景观结果 从表2中可以看出，PP-MobileSeg-T是一个很好的例子。2中可以看出，PP-MobileSeg-Tiny在准确性、延迟和参数等各个方面都比SeaFormersmall取得了更好的性能。此外，PP-MobileSeg-Base在具有可比性的延迟和较小的模型尺寸的情况下，取得了明显更好的准确性。这些结果表明，即使在高分辨率输入的情况下，PP-MobileSeg也能保持其在准确性、模型大小和速度方面的出色平衡。</p><h3 id="43-ablation-study"><a class="markdownIt-Anchor" href="#43-ablation-study"></a> 4.3. Ablation Study</h3><p>我们进行了一项消融研究，以讨论我们提出的模块的影响，并对这些模块进行剖析和分析。在表3中，我们通过将三个建议的模块逐一加入到基线中，显示了它们的有效性。</p><p>VIM：正如我们之前提到的，VIM作为插值和ArgMax操作的替代品，以加快推理速度。从剖面图的比较中可以看出（图3），应用VIM后，Segmentation的整体延迟从76.32%大大降低到48.71%。而表3的实验结果显示，加入VIM后，模型延迟下降了49.5%。这些实验证明，VIM在具有大量类的数据集上的加速能力是非常出色的。</p><p>StrideFormer： 在StrideFormer中使用四级网络，使参数开销明显减少了32.19%。实验结果还显示准确率提高了0.78%，我们将此归功于增强的骨干网。</p><p>AAM：AAM提高了0.59%的准确性，同时略微增加了延迟和模型大小。为了深入了解AAM的设计，我们将融合模块分成两个分支：如表4所示的集合投票和最终语义。报告的结果显示了这两个分支的重要性，尤其是最终语义的重要性。没有它，准确率会下降0.45%。</p><h2 id="5-conclusion"><a class="markdownIt-Anchor" href="#5-conclusion"></a> 5. Conclusion</h2><p>在本文中，我们研究了混合视觉骨干网的设计方案，并解决了移动语义分割网络的延迟瓶颈问题。经过充分的探索，我们确定了有利于移动的设计选择，并提出了一个新的移动语义分割网络系列，称为PP-MobileSeg，该系列结合了transformer块和CNN。通过精心设计的主干模块、融合模块和插值模块，PP-MobileSeg在基于ARM的设备上实现了模型大小、速度和准确性之间的SOTA平衡。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MobileViT</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/mVIT1/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/mVIT1/</url>
      
        <content type="html"><![CDATA[<h1 id="mobilevit模型简介"><a class="markdownIt-Anchor" href="#mobilevit模型简介"></a> MobileViT模型简介</h1><p><a href="https://blog.csdn.net/qq_37541097/article/details/126715733">blog.csdn.net</a></p><p>论文名称：<strong>MobileViT: Light-Weight, General-Purpose, and Mobile-Friendly Vision Transformer</strong>-<br />论文下载地址：<a href="https://arxiv.org/abs/2110.02178">https://arxiv.org/abs/2110.02178</a>-<br />官方源码（Pytorch实现）：<a href="https://github.com/apple/ml-cvnets">https://github.com/apple/ml-cvnets</a>-<br />自己从ml-cvnets仓库中剥离的代码：<a href="https://github.com/WZMIAOMIAO/deep-learning-for-image-processing/tree/master/pytorch_classification/MobileViT">https://github.com/WZMIAOMIAO/deep-learning-for-image-processing/tree/master/pytorch_classification/MobileViT</a></p><hr /><h3 id="文章目录"><a class="markdownIt-Anchor" href="#文章目录"></a> 文章目录</h3><p>[TOC]</p><hr /><h2 id="0-前言"><a class="markdownIt-Anchor" href="#0-前言"></a> 0 前言</h2><p>自从2020年ViT(Vision <a href="https://so.csdn.net/so/search?q=Transformer&amp;spm=1001.2101.3001.7020">Transformer</a>)模型的横空出世，人们发现了Transformer架构在视觉领域的巨大潜力。近些年，越来越多的科研人员投入Transformer的怀抱，视觉领域的各项任务也不断被Transformer架构模型刷新。Transformer虽然强大，但在现在看来落地仍存在很多难点。比如模型参数太大（比如ViT Large Patch16模型光权重就有1个多G），而且算力要求太高，这基本就给移动端部署Transformer模型判了死刑。尽管近两年Transformer架构在视觉领域出现了很多优秀的工作，比如2021年的Swin-Transformer，它相比ViT效果更好且更轻量，但相比基于CNN的轻量级模型（比如MobileNet系列）无论是在模型参数上还是推理速度上都还有很大的差距。当然毕竟CNN从2012年的AlexNet发表至今已经过去10年了，无论是在模型结构的设计上，还是软硬件的调优上都已经优化的非常到位了。而Transformer模型才刚刚开始，我相信再过个几年，会有越来越多的学者从事研究Transformer轻量化设计，并且各软硬件厂商会针对Transformer做更多的优化，那时Transformer落地移动端将不再是问题。话题扯远了，言归正传今天我们来简单聊聊MobileViT，Apple公司（对，就是那个被啃了一口的苹果）在2021年发表的一篇CNN与Transfomrer的混合架构模型。近两年CNN和Transformer混合架构研究也是一大热点，CNN的轻量和高效+Transformer的自注意力机制和全局视野。为什么不用纯Transformer架构，前面提到了它很“重”，除此之外还有一些其他的问题，比如说:</p><ul><li><strong>Transformer缺少空间归纳偏置(spatial inductive biases)。这个之前在讲Transformer self-attention时有提到过。计算某个token的attention时如果将其他token的顺序打乱对最终结果没有任何影响。但在图像数据中，空间信息是很重要且有意义的。为了解决这个问题，常见的方法是加上位置偏置(position bias)/位置编码，比如Vision Transformer中使用的绝对位置偏置，Swin Transformer中的相对位置偏置，加上位置偏置虽然在一定程度上解决了空间位置的信息丢失的问题，但又引入了一个新的问题。迁移到别的任务上时，位置偏执信息往往需要调整。</strong></li><li><strong>Transformer模型迁移到其他任务(输入图像分辨率发生改变)时比较繁琐。这里所说的繁琐是相对CNN而言的，而主要原因是引入位置偏置导致的。比如在Imagenet上预训练好的Vision Transformer(输入图片大小为<code>224x224</code>)模型后，现在要迁移到更大尺度的任务中，但由于Vision Transformer的绝对位置偏置的序列长度是固定的，等于$ \frac{H \times W}{16 \times 16}$，其中H、W代表输入图片的高和宽，所以只要改变输入图像的尺度就无法直接复用了。现在最常见的处理方法是通过插值的方式将位置偏置插值到对应图像的序列长度。但如果不对网络进行微调直接使用实际效果可能会掉点，比如在<code>224x224</code>尺度上训练的网络，直接对位置偏置进行插值不去微调，在<code>384x384</code>的尺度上进行验证可能会出现掉点(CNN一般会涨点)。如果每次改变输入图像尺度都要重新对位置偏置进行插值和微调，那也太麻烦了。这里有人会说可以使用Swin Transformer中的相对位置偏置，确实如此，Swin Transformer相对位置偏置的序列长度只和Windows大小有关，与输入图像尺度无关。但在实际使用中，Windows的尺度和输入图像尺度又有一定关系。一般输入图像尺度越大，Windows的尺度也会设置的大些。只要Windows尺度发生变化，相对位置偏置也要进行插值了，那么问题又来了。当然这里并不是说位置偏置引入了一堆问题就去否定它的作用，只是现在所采用的位置偏置方式还有很多值得优化的地方。比如在Swin Transformer v2中就对v1的相对位置偏置进行了优化。</strong></li><li><strong>Transformer模型训练困难。根据现有的一些经验，Transformer相比CNN要更难训练。比如Transformer需要更多的训练数据，需要迭代更多的epoch，需要更大的正则项(L2正则)，需要更多的数据增强(且对数据增强很敏感，比如在MobileViT论文的引言中提到，如果将CutMix以及DeIT-style的数据增强移除，模型在Imagenet上的Acc直接掉6个点)。</strong></li></ul><p>针对以上问题，现有的、最简单的方式就是采用CNN与Transformer的混合<a href="https://so.csdn.net/so/search?q=%E6%9E%B6%E6%9E%84&amp;spm=1001.2101.3001.7020">架构</a>，CNN能够提供空间归纳偏置所以可以摆脱位置偏置，而且加入CNN后能够加速网络的收敛，使网络训练过程更加的稳定。下图展示了MobileViT与当时主流的一些Transformer模型对比，通过下图可以看出，即使使用普通的数据增强方式MobileViT也能达到更高的Acc并且参数数量更少。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fb287550996404d44afef8be2b014fe98.png" alt="fig7" /></p><p>除此之外，作者还将MobileViT与一些传统的轻量级CNN进行了对比，如下图所示，在近似的参数数量下MobileViT的Acc要更高。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Ffbabc083d32b49eb9eb6ef12efbf6e09.png" alt="在这里插入图片描述" /></p><p>以上只提到了参数数量和Acc，并没有明确的推理速度对比，在论文中唯一能找到的一个有推理速度对比是表3，通过对比能够看到基于Tranaformer的模型(无论是否为混合架构)推理速度比纯CNN的模型还是要慢很多的(移动端)。作者在论文中给出解释主要还是说当前移动端对Transformer架构优化的还太少。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F73215607e5cd496eb09d8d648902e13e.png" alt="t3" /></p><hr /><h2 id="1-模型结构解析"><a class="markdownIt-Anchor" href="#1-模型结构解析"></a> 1 模型结构解析</h2><h3 id="11-vision-transformer结构"><a class="markdownIt-Anchor" href="#11-vision-transformer结构"></a> 1.1 Vision Transformer结构</h3><p>在讲MobileViT网络之前先简单回顾下Vision Transformer的网络结构，如果还不了解，建议先看下之前写的有关Vision Transformer的文章：<a href="https://blog.csdn.net/qq_37541097/article/details/118242600">https://blog.csdn.net/qq_37541097/article/details/118242600</a>。下图是MobileViT论文中绘制的<code>Standard visual Transformer</code>。首先将输入的图片划分成一个个<code>Patch</code>，然后通过线性变化将每个<code>Patch</code>映射到一个一维向量中（视为一个个<code>Token</code>），接着加上位置偏置信息（可学习参数），再通过一系列Transformer Block，最后通过一个全连接层得到最终预测输出。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Ff02b2cfd2d7549ecb769cbe712331797.png" alt="在这里插入图片描述" /></p><hr /><h3 id="12-mobilevit结构"><a class="markdownIt-Anchor" href="#12-mobilevit结构"></a> 1.2 MobileViT结构</h3><p>简单回顾完Vision Transformer后，再来看看本文要讲的MobileViT。下图对应的是论文中的图1(b)，通过下图可以看到MobileViT主要由普通卷积，<code>MV2</code>（MobiletNetV2中的<code>Inverted Residual block</code>），<code>MobileViT block</code>，全局池化以及全连接层共同组成。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F73aa3a646e0447fa9f00b0a673a95ddb.png" alt="在这里插入图片描述" /></p><p>关于<code>MV2</code>结构之前在讲MobileNetV2时有讲过，这里不再赘述，下图是当stride等于1时的<code>MV2</code>结构。上图中标有向下箭头的<code>MV2</code>结构代表stride等于2的情况，即需要进行下采样。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fa0a78fe10e3843768b8121c3b50503e8.png" alt="在这里插入图片描述" /></p><p>接下来就是最核心的<code>MobileViT block</code>，在论文的图1(b)中作者已经绘制出了<code>MobileViT block</code>的大致结构。首先将特征图通过一个卷积核大小为<code>nxn</code>（代码中是<code>3x3</code>）的卷积层进行局部的特征建模，然后通过一个卷积核大小为<code>1x1</code>的卷积层调整通道数。接着通过<code>Unfold -&gt; Transformer -&gt; Fold</code>结构进行全局的特征建模，然后再通过一个卷积核大小为<code>1x1</code>的卷积层将通道数调整回原始大小。接着通过shortcut捷径分支与原始输入特征图进行<code>Concat</code>拼接（沿通道channel方向拼接），最后再通过一个卷积核大小为<code>nxn</code>（代码中是<code>3x3</code>）的卷积层做特征融合得到输出。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F050aea7d9d9248d7946a6a749211251f.png" alt="在这里插入图片描述" /></p><p>我个人认为有关<code>Unfold -&gt; Transformer -&gt; Fold</code>这块介绍的并不是很清楚（可能是我太菜），所以看了下源码自己重新绘制了一个方便大家理解的版本。这里为了方便我们将<code>Unfold -&gt; Transformer -&gt; Fold</code>简写成<code>Global representations</code>，它的具体计算过程如下图所示。首先对特征图划分<code>Patch</code>（这里为了方便忽略通道channels），图中的<code>Patch</code>大小为<code>2x2</code>，即每个<code>Patch</code>由4个<code>Pixel</code>组成。在进行<code>Self-Attention</code>计算的时候，每个<code>Token</code>（图中的每个<code>Pixel</code>或者说每个小颜色块）只和自己颜色相同的<code>Token</code>进行<code>Attention</code>，这样就达到了减少计算量的目的，没错就这么简单。对于原始的<code>Self-Attention</code>计算每个<code>Token</code>是需要和所有的<code>Token</code>进行<code>Attention</code>，假设特征图的高宽和通道数分别为<code>H, W, C</code>，这里记计算成本为<code>Cost=O(WHC)</code>。如果按照刚刚说的，每个<code>Token</code>只和自己颜色相同的<code>Token</code>做<code>Attention</code>，假设<code>Patch</code>大小为<code>2x2</code>，那么计算成本为<code>Cost=O(WHC/4)</code>，即理论上的计算成本仅为原始的 1 4 \frac{1}{4} 41。至于为什么能这么做，这里简单谈谈我的看法。对于图像数据本身就存在大量的数据冗余，比如对于较浅层的特征图（<code>H, W</code>下采样倍率较低时），相邻像素间信息可能没有太大差异，如果每个<code>Token</code>做<code>Attention</code>的时候都要去看下相邻的这些像素，个人感觉有些浪费<a href="https://so.csdn.net/so/search?q=%E7%AE%97%E5%8A%9B&amp;spm=1001.2101.3001.7020">算力</a>。这里并不是说看相邻的像素没有意义，只是说在分辨率较高的特征图上收益可能很低，增加的计算成本远大于Accuracy上的收益。而且前面已经通过<code>nxn</code>的卷积层进行局部建模了，进行全局建模时就没必要再看这么细了。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fd0a55f0a83fc4450abe0c2816bf62bf8.png" alt="在这里插入图片描述" /></p><p>而刚刚提到的<code>Unfold</code>和<code>Fold</code>只是为了将数据给reshape成计算<code>Self-Attention</code>时所需的数据格式。对于普通的<code>Self-Attention</code>计算前，一般是直接展平<code>H, W</code>两个维度得到一个<code>Token</code>序列，即将<code>[N, H, W, C] -&gt; [N, H*W, C]</code>其中N表示Batch维度。但在<code>MobileViT block</code>的<code>Self-Attention</code>计算中，只是将颜色相同的<code>Token</code>进行了<code>Attention</code>，所以不能简单粗暴的展平<code>H, W</code>维度。如下图所示，文中的<code>Unfold</code>就是将相同颜色的<code>Token</code>展平在一个序列中，这样就可以直接使用普通的<code>Self-Attention</code>并行计算每个序列的<code>Attention</code>了。最后在通过<code>Fold</code>折叠回原特征图即可。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F9fe78d3bd4df4552bda8e5164000ea13.png" alt="在这里插入图片描述" /></p><hr /><h3 id="13-patch-size对性能的影响"><a class="markdownIt-Anchor" href="#13-patch-size对性能的影响"></a> 1.3 Patch Size对性能的影响</h3><p>在上面1.2章节中我们已经讲完了MobileViT结构，接着我们再来聊聊有关<code>patch_size</code>对网络性能的影响。前面有提到大的<code>patch_size</code>能够提升网络推理速度，但是会丢失一些细节信息。这里直接看下论文中给的图8，这里展示了两组不同的<code>patch_size</code>组合在三个任务中的性能，包括图像分类，目标检测以及语义分割。其中配置A的<code>patch_size</code>为<code>&#123;2, 2, 2&#125;</code>，配置B的<code>patch_size</code>为<code>&#123;8, 4, 2&#125;</code>，这三个数字分别对应下采样倍率为8，16，32的特征图所采用的<code>patch_size</code>大小。通过对比可以发现，在图像分类和目标检测任务中（对语义细节要求不高的场景），配置A和配置B在Acc和mAP上没太大区别，但配置B要更快。但在语义分割任务中（对语义细节要求较高的场景）配置A的效果要更好。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F0b0745d1a58e47a394e8f38141d5ff33.png" alt="在这里插入图片描述" /></p><hr /><h2 id="2-模型详细配置"><a class="markdownIt-Anchor" href="#2-模型详细配置"></a> 2 模型详细配置</h2><p>在论文中，关于MobileViT作者提出了三种不同的配置，分别是MobileViT-S(small)，MobileViT-XS(extra small)和MobileViT-XXS(extra extra small)。三者的主要区别在于特征图的通道数不同。下图为MobileViT的整体框架，最开始的<code>3x3</code>卷积层以及最后的<code>1x1</code>卷积层、全局池化、全连接层不去赘述，主要看下图中的标出的Layer1~5，这里是根据源码中的配置信息划分的。下面只列举了部分配置信息，更加详细的配置可查看源码。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fa73e7c9ecedf40358afe74ccdb168cec.png" alt="在这里插入图片描述" /></p><p>对于MobileViT-XXS，Layer1~5的详细配置信息如下：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130145842530.png" alt="image-20221130145842530" /></p><p>对于MobileViT-XS，Layer1~5的详细配置信息如下：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130145901170.png" alt="image-20221130145901170" /></p><p>对于MobileViT-S，Layer1~5的详细配置信息如下：</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/typora/image-20221130145921654.png" alt="image-20221130145921654" /></p><p>其中：</p><ul><li><code>out_channels</code>表示该模块输出的通道数</li><li><code>mv2_exp</code>表示<code>Inverted Residual Block</code>中的expansion ratio</li><li><code>transformer_channels</code>表示<code>Transformer</code>模块输入<code>Token</code>的序列长度（特征图通道数）</li><li><code>num_heads</code>表示多头自注意力机制中的head数</li><li><code>ffn_dim</code>表示FFN中间层<code>Token</code>的序列长度</li><li><code>patch_h</code>表示每个patch的高度</li><li><code>patch_w</code>表示每个patch的宽度</li></ul><hr /><p>到此，有关MobileViT的内容就基本讲完了。如果觉得这篇文章对你有用，记得点赞、收藏并分享给你的小伙伴们哦😄。</p><p><a href="https://blog.csdn.net/qq_37541097/article/details/126715733">查看原网页: blog.csdn.net</a></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pspnet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/pspnet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/pspnet/</url>
      
        <content type="html"><![CDATA[<h1 id="pspnet"><a class="markdownIt-Anchor" href="#pspnet"></a> pspnet</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>对于不受限制的开放词汇和多样化场景，场景解析是一项挑战。在本文中，我们通过我们的金字塔池化模块和所提出的金字塔场景解析网络（PSPNet），利用基于不同区域的上下文聚合，从而利用全局上下文信息的能力。我们的全局先验表示法能有效地在场景解析任务中产生高质量的结果，而 PSPNet 则为像素级预测提供了一个卓越的框架。所提出的方法在各种数据集上都取得了最先进的性能。它在 2016 年 ImageNet 场景解析挑战赛、PASCAL VOC 2012 基准测试和 Cityscapes 基准测试中均名列第一。在 PASCAL VOC 2012 和 Cityscapes 基准测试中，单个 PSPNet 的 mIoU 准确率分别达到 85.4% 和 80.2% 的新纪录。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>基于语义分割的场景解析是计算机视觉领域的一个基本课题。其目标是为图像中的每个像素分配一个类别标签。场景解析可提供对场景的完整理解。它能预测每个元素的标签、位置和形状。这一主题在自动驾驶、机器人传感等潜在应用中具有广泛的意义。</p><p><img src="images/image-20240304202656121.png" alt="image-20240304202656121" /></p><blockquote><p>图 1. ADE20K 数据集中复杂场景的图示。</p></blockquote><p>场景解析的难度与场景和标签的多样性密切相关。最早的场景解析任务[23]是对 LMO 数据集[22]中 2,688 幅图像的 33 个场景进行分类。最近的 PASCAL VOC 语义分割和 PASCAL 上下文数据集[8, 29]包含了更多具有相似上下文的标签，如椅子和沙发、马和牛等。新的 ADE20K 数据集[43]是最具挑战性的数据集，它拥有大量无限制的开放词汇和更多的场景类别。图 1 中显示了一些具有代表性的图像。要为这些数据集开发有效的算法，需要克服一些困难。</p><p>最先进的场景解析框架大多基于全卷积网络（FCN）[26]。基于深度卷积神经网络（CNN）的方法可以增强对物体的动态理解，但考虑到场景的多样性和不受限制的词汇量，这些方法仍然面临挑战。图 2 第一行显示了一个例子，一艘船被误认为是一辆汽车。这些错误是由于物体外观相似造成的。但是，如果根据场景被描述为河边的船屋这一上下文来查看图像，就能得出正确的预测结果。</p><p>为了实现准确的场景感知，知识图谱依赖于场景上下文的先验信息。我们发现，目前基于 FCN 模型的主要问题是缺乏利用全局场景类别线索的合适策略。对于典型的复杂场景理解，以前为了获得全局图像级特征，人们广泛采用空间金字塔汇集法[18]。空间金字塔池网络[12]进一步增强了这种能力。</p><p>与这些方法不同，为了结合合适的全局特征，我们提出了金字塔场景解析网络（PSPNet）。除了传统的用于像素预测的扩张 FCN [3, 40]，我们还将像素级特征扩展到专门设计的全局金字塔集合特征。局部和全局线索共同作用，使最终预测结果更加可靠。我们还提出了一种具有深度监督损失的优化策略。我们在本文中给出了所有实现细节，这些细节是我们取得良好性能的关键，并公开了代码和训练好的模型1。</p><p>我们的方法在所有可用数据集上都达到了最先进的性能。它是 2016 年 ImageNet 场景解析挑战赛的冠军[43]，在 PASCAL VOC 2012 语义分割基准测试中获得第一名[8]，在城市场景 Cityscapes 数据中获得第一名[6]。他们表明，PSPNet 为像素级预测任务提供了一个很有前景的方向，甚至可能在后续工作中惠及基于 CNN 的立体匹配、光流、深度估计等。我们的主要贡献有三方面。</p><ul><li><p>我们提出了一种金字塔场景解析网络，用于在基于 FCN 的像素预测框架中嵌入困难的景物背景特征。</p></li><li><p>我们为基于深度监督损失的深度 ResNet [13] 开发了有效的优化策略。</p></li><li><p>我们为最先进的场景解析和语义分割构建了一个实用系统，其中包括所有关键的实现细节。</p></li></ul><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><p>下面，我们将回顾场景解析和语义分割任务的最新进展。在强大的深度神经网络[17, 33, 34, 13]的驱动下，场景解析和语义分割等像素级预测任务取得了巨大进展，其灵感来自于用卷积层取代分类中的全连接层[26]。为了扩大神经网络的感受野，[3, 40] 的方法使用了扩张卷积。Noh 等人[30]提出了一种粗到细结构的解卷积网络来学习分割掩码。我们的基准网络是 FCN 和扩张网络 [26, 3]。</p><p>其他工作主要有两个方向。一个方向 [26, 3, 5, 39, 11] 是多尺度特征集合。因为在深度网络中，高层特征包含更多语义，而位置信息较少。结合多尺度特征可以提高性能。</p><p>另一个方向是基于结构预测。先驱工作[3]使用条件随机场（CRF）作为后处理来完善分割结果。随后的方法 [25, 41, 1] 则通过端到端建模来完善网络。这两个方向都改善了场景解析的定位能力，使预测的语义边界与物体相吻合。然而，在利用复杂场景中的必要信息方面仍有很大的空间。</p><p>为了充分利用全局图像级先验来理解不同场景，[18, 27]的方法利用传统特征而不是深度神经网络来提取全局上下文信息。在物体检测框架下也有类似的改进[35]。Liu 等人[24]的研究证明，利用 FCN 进行全局平均池化可以改善语义分割结果。然而，我们的实验表明，对于具有挑战性的 ADE20K 数据，这些全局描述符的代表性不足。因此，与 [24] 中的全局池化不同，我们通过金字塔场景解析网络进行基于不同区域的上下文聚合，从而利用全局上下文信息的能力。</p><h3 id="3-pyramid-scene-parsing-network"><a class="markdownIt-Anchor" href="#3-pyramid-scene-parsing-network"></a> 3. Pyramid Scene Parsing Network</h3><p>我们首先观察和分析了将 FCN 方法应用于场景解析时的代表性失败案例。这些案例促使我们提出金字塔池模块作为有效的全局上下文先验。图 3 所示的金字塔场景解析网络 (PSPNet) 可提高复杂场景解析中开放词汇对象和内容识别的性能。</p><p><img src="images/image-20240304202904792.png" alt="image-20240304202904792" /></p><blockquote><p>图 3.我们提出的 PSPNet 概述。给定输入图像 (a)，我们首先使用 CNN 获取最后一个卷积层 (b) 的特征图，然后应用金字塔解析模块来获取不同的子区域表示，然后通过上采样和串联层形成最终的特征表示，在（c）中携带局部和全局上下文信息。最后，将表示输入卷积层以获得最终的每像素预测（d）。</p></blockquote><h3 id="31-important-observations"><a class="markdownIt-Anchor" href="#31-important-observations"></a> 3.1. Important Observations</h3><p><img src="images/image-20240304202956770.png" alt="image-20240304202956770" /></p><blockquote><p>图 2.我们在 ADE20K [43] 数据集上观察到的场景解析问题。第一行显示了关系不匹配的问题——汽车比船很少在水面上航行。第二行显示了混淆类别，其中“建筑”类很容易被混淆为“摩天大楼”。第三行说明了不显眼的类。在这个例子中，枕头的颜色和质地与床单非常相似。这些不显眼的物体很容易被FCN错误分类。</p></blockquote><p>新的 ADE20K 数据集[43]包含 150 个东西/物体类别标签（如墙、天空和树）和 1,038 个图像级场景描述符（如机场航站楼、卧室和街道）。因此，大量的标签和庞大的场景分布就出现了。通过查看 [43] 中提供的 FCN 基线的预测结果，我们总结了复杂场景解析的几个常见问题。</p><p>不匹配的关系 上下文关系具有普遍性，对于复杂场景的理解尤为重要。存在并发的视觉模式。例如，飞机很可能在跑道上或在天空中飞行，而不是在道路上。在图 2 第一行的例子中，FCN 根据黄色方框中的船的外观预测其为 “汽车”。但常识告诉我们，汽车很少会经过河流。缺乏收集上下文信息的能力会增加错误分类的几率。</p><p>混淆类别 在 ADE20K 数据集中，有许多类别标签对在分类时容易混淆。例如，田地和土地；山和山丘；墙壁、房屋、建筑物和摩天大楼。它们具有相似的外观。如文献[43]所述，对整个数据集进行标注的专家标注者仍有 17.60% 的像素误差。在图 2 的第二行中，FCN 将方框中的物体预测为摩天大楼的一部分和建筑物的一部分。这些结果应排除在外，这样整个物体要么是摩天大楼，要么是建筑物，而不是两者都是。利用类别之间的关系可以解决这个问题。</p><p>不显眼的类别 场景中包含任意大小的物体/物品。一些小尺寸的东西，如路灯和招牌，虽然可能非常重要，但却很难找到。相反，大的物体或物品可能会超出 FCN 的感受野，从而导致预测不连续。如图 2 第三行所示，枕头与床单的外观相似。忽略全局场景类别可能会导致无法解析枕头。为了提高对非常小或非常大的物体的性能，我们应该对包含不显眼类别的不同子区域给予更多关注。</p><p>综上所述，许多错误部分或完全与不同感受野的上下文关系和全局信息有关。因此，具有合适的全局场景级先验的深度网络可以大大提高场景解析的性能。</p><h3 id="32-pyramid-pooling-module"><a class="markdownIt-Anchor" href="#32-pyramid-pooling-module"></a> 3.2. Pyramid Pooling Module</h3><p><img src="images/image-20240304202904792.png" alt="image-20240304202904792" /></p><blockquote><p>图 3.我们提出的 PSPNet 概述。给定输入图像 (a)，我们首先使用 CNN 获取最后一个卷积层 (b) 的特征图，然后应用金字塔解析模块来获取不同的子区域表示，然后通过上采样和串联层形成最终的特征表示，在（c）中携带局部和全局上下文信息。最后，将表示输入卷积层以获得最终的每像素预测（d）。</p></blockquote><p>通过上述分析，我们将在下文中介绍金字塔池化模块，经验证明它是一种有效的全局上下文先验。</p><p>在深度神经网络中，感受野的大小可以大致说明我们对上下文信息的利用程度。虽然从理论上讲，ResNet [13] 的感受野已经大于输入图像，但 Zhou 等人[42] 的研究表明，CNN 的经验感受野远远小于理论感受野，尤其是在高层。这使得许多网络无法充分纳入瞬间全局景物先验。针对这一问题，我们提出了一种有效的全局先验表示法。</p><p>全局平均池化是一个很好的全局上下文先验基线模型，常用于图像分类任务 [34, 13]。在 [24] 中，它被成功应用于语义分割。但对于 ADE20K[43] 中的复杂场景图像，这种策略不足以涵盖必要的信息。这些场景图像中的像素被标注了许多内容和对象。直接将它们融合成一个单一的矢量可能会丢失空间关系并造成模糊。在这方面，全局上下文信息和子区域上下文信息有助于区分各种类别。将来自不同子区域的信息与这些感受野融合在一起，可以形成更强大的表征。经典的场景/图像分类工作 [18, 12] 也得出了类似的结论。</p><p>在[12]中，通过金字塔汇集法生成的不同层次的特征图最终被扁平化并连接到一个全连接层中进行分类。这种全局先验的设计是为了消除用于图像分类的 CNN 的固定大小限制。为了进一步减少不同子区域之间的上下文信息损失，我们提出了一种分层全局先验，它包含不同尺度的信息，并且在不同子区域之间各不相同。我们称之为金字塔池化模块，用于在深度神经网络的最终层特征图上构建全局场景先验，如图 3（c）所示。</p><p>金字塔池化模块融合了四种不同金字塔尺度下的特征。红色标注的最粗级别是全局池化，以生成单仓输出。接下来的金字塔级将特征图分成不同的子区域，并形成不同位置的池化表示。金字塔池化模块中不同层级的输出包含不同大小的特征图。为了保持全局特征的权重，我们在每个金字塔层级后使用 1×1 卷积层，将上下文表示的维度降低到原始维度的 1/N（如果金字塔层级大小为 N）。然后，我们直接对低维特征图进行上采样，通过双线性插值得到与原始特征图相同大小的特征。最后，将不同层次的特征汇总为最终的金字塔汇集全局特征。</p><p>注意，金字塔的层数和每个层的大小都可以修改。它们与输入金字塔汇集层的特征图的大小有关。该结构通过采用不同大小的池核，分几步抽象出不同的子区域。因此，多级核应保持合理的表示间隙。我们的金字塔池化模块是一个四级模块，分仓大小分别为 1×1、2×2、3×3 和 6×6。对于最大值和平均值之间的池化操作类型，我们在第 5.2 节中进行了大量实验，以显示两者之间的差异。</p><h3 id="33-network-architecture"><a class="markdownIt-Anchor" href="#33-network-architecture"></a> 3.3. Network Architecture</h3><p>通过金字塔池模块，我们提出了金字塔场景解析网络（PSPNet），如图 3 所示。对于图 3(a) 中的输入图像，我们使用预训练的 ResNet [13] 模型和扩张网络策略 [3, 40] 来提取特征图。最终的特征图大小为输入图像的 1/8，如图 3(b) 所示。在图谱之上，我们使用（c）所示的金字塔池化模块来收集上下文信息。利用我们的 4 级金字塔，池化内核涵盖了图像的全部、一半和一小部分。它们被融合为全局先验。然后，我们在 © 的最后部分将先验图与原始特征图连接起来。之后是卷积层，生成 (d) 中的最终预测图。</p><p>为了解释我们的结构，PSPNet 为像素级场景解析提供了有效的全局上下文先验。金字塔池化模块可以收集各层次的信息，比全局池化更具代表性[24]。在计算成本方面，与原始的扩张 FCN 网络相比，我们的 PSPNet 并没有增加多少成本。在端到端学习中，可以同时优化全局金字塔池模块和局部 FCN 特征。</p><h2 id="4-deep-supervision-for-resnet-based-fcn"><a class="markdownIt-Anchor" href="#4-deep-supervision-for-resnet-based-fcn"></a> 4. Deep Supervision for ResNet-Based FCN</h2><p>深度预训练网络具有良好的性能 [17, 33, 13]。然而，网络深度的增加可能会带来额外的优化困难，如用于图像分类的 [32, 19] 所示。ResNet 通过在每个块中跳过连接来解决这个问题。深层 ResNet 的后几层主要基于前几层学习残差。</p><p>与此相反，我们建议通过附加损失的监督生成初始结果，之后再通过最终损失学习残差。因此，深度网络的优化被分解为两个部分，每个部分的求解都更简单。</p><p>图 4 举例说明了我们的深度监督 ResNet101 [13] 模型。除了使用 softmax 损失训练最终分类器的主分支外，在第四阶段后还应用了另一个分类器，即 res4b22 残差块。不同于中继反向传播法[32]将后向辅助损失阻断到几个浅层，我们让两个损失函数通过前面的所有层。辅助损失有助于优化学习过程，而主分支损失则承担最大责任。我们增加权重来平衡辅助损失。</p><p>在测试阶段，我们放弃辅助分支，只使用优化后的主分支进行最终预测。这种基于 ResNet 的 FCN 深度监督训练策略在不同的实验环境下具有广泛的实用性，并能与预训练的 ResNet 模型配合使用。这体现了这种学习策略的通用性。更多详情请参见第 5.2 节。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEAFORMER SQUEEZE-ENHANCED AXIAL TRANSFORMER FOR MOBILE SEMANTIC SEGMENTATION</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/seaformer/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/seaformer/</url>
      
        <content type="html"><![CDATA[<h1 id="seaformer-squeeze-enhanced-axial-transformer-for-mobile-semantic-segmentation"><a class="markdownIt-Anchor" href="#seaformer-squeeze-enhanced-axial-transformer-for-mobile-semantic-segmentation"></a> SEAFORMER: SQUEEZE-ENHANCED AXIAL TRANSFORMER FOR MOBILE SEMANTIC SEGMENTATION</h1><p><a href="zotero://open-pdf/library/items/G7WE785Q">文章链接</a></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> ABSTRACT</h2><p>自从引入transformer后，许多计算机视觉任务（如语义分割）的格局，最近被CNN压倒性地主宰，发生了显著的变化。然而，计算成本和内存要求使得这些方法不适合在移动设备上使用，特别是对于高分辨率的每像素语义分割任务。在本文中，我们介绍了一种用于移动语义分割的新方法挤压增强轴向变换器（SeaFormer）。具体来说，我们设计了一个通用的注意力块，其特点是制定挤压轴和细节增强。它可以进一步用于创建一个具有卓越成本效益的骨干架构系列。与轻型分割头相结合，我们在ADE20K和Cityscapes数据集上基于ARM的移动设备上实现了分割精度和延迟之间的最佳权衡。最关键的是，我们以更好的性能和更低的延迟击败了对移动设备友好的对手和基于transformer的同行，而没有任何花哨的东西。除了语义分割之外，我们还将提出的SeaFormer架构应用于图像分类问题，展示了其作为多功能移动友好骨干的潜力。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 INTRODUCTION</h2><p>作为计算机视觉的一个基本问题，语义分割的目的是为图像中的每个像素分配一个语义类标签。传统的方法依靠堆叠局部卷积核Long等人（2015）来感知图像的长程结构信息。</p><p>自从引入Vision Transformers，语义分割的格局发生了明显的变化。基于变换器的方法 Zheng等人（2021）；Xie等人（2021）已经显著地证明了全局上下文建模的能力。然而，Transformer的计算成本和内存要求使得这些方法不适合在移动设备上使用，特别是对于高分辨率的图像输入。</p><p>遵循传统的高效操作智慧，基于局部/窗口的注意力Luong等人（2015）；Liu等人（2021）；Huang等人（2021a）；Yuan等人（2021），轴向注意力Huang等人（2019b）；Ho等人（2019）；Wang等人（2020a），动态图消息传递Zhang等人（2020；2022b）和基于局部/窗口的注意力。(2020; 2022b)和一些轻量级的注意力机制 Hou et al. (2020); Li et al. (2021b;c; 2020); Liu et al. (2018); Shen et al. (2021); Xu et al. (2021); Cao et al. (2019); Woo et al.; Wang et al. (2020b); Choromanski et al. (2021); Chen et al.; Mehta &amp; Rastegari (2022a)都被引入。</p><p>然而，由于高分辨率输入的高延迟，这些进展仍然不足以满足移动设备的设计要求和限制（见图1）。最近，人们对建立一个基于Transformer的语义分割的兴趣大增。为了降低高分辨率下的计算成本，TopFormer Zhang等人（2022c）致力于以原始输入的1/64比例应用全局注意力，这无疑会损害分割性能。</p><p>为了解决像素级分割任务的高分辨率计算和移动设备上的低延迟要求的困境，我们提出了一系列基于移动友好的Transformer的语义分割模型，被称为挤压增强型轴向转化器（SeaFormer），它将轴向注意力的计算复杂度从O（（H+W）HW）降低到O（HW），以实现移动设备上卓越的准确性-效率权衡，并填补了移动友好型高效转化器的空缺。</p><p><img src="images/image-20240129011533969.png" alt="image-20240129011533969" /></p><p><strong>核心构件挤压增强轴向注意力（SEA注意力）试图将输入的特征图沿水平/垂直轴挤压（汇集）到一个紧凑的列/行中，并计算出自我注意力。我们将查询、键和值连接起来，以补偿挤压过程中牺牲的细节信息，然后将其送入深度卷积层，以增强局部细节。</strong></p><p><strong>再加上一个轻型分割头，我们的设计（见图2）与小规模特征中提出的SeaFormer层能够在移动设备上以低延迟进行高分辨率的图像语义分割。如图1所示，拟议的SeaFormer在ADE20K数据集上以较低的延迟胜过其他高效的神经网络。特别是，SeaFormer-Base在基于ARM的移动设备上以较低的延迟（106ms vs. 126ms）优于轻量级CNN对应的MobileNetV3（41.0 vs. 33.1 mIoU）。</strong></p><p><img src="images/image-20230509164826056.png" alt="image-20230509164826056" /></p><blockquote><p>图2：SeaFormer的整体架构。它包含共享STEM、Context branch（红色）、空间分支（蓝色）、融合块和light分割头。MV2块指的是MobileNetV2块，MV2↓2指的是有下采样的MobileNetV2块。SeaFormer层和带破折号的融合块只存在于SeaFormer-L中。符号⊗表示元素-明智的乘法。</p></blockquote><p>我们做出了以下贡献：</p><p>(i) 我们为移动语义分割引入了一个新颖的挤压增强轴向变换器（SeaFormer）框架；</p><p>(ii) 关键是，我们设计了一个通用的注意力块，其特点是挤压轴向和细节增强的制定；它可以用来创建一个具有卓越成本效益的骨干架构系列；</p><p>(iii) 我们在ADE20K和Cityscapes数据集上显示了顶级的性能，以明显的优势击败了移动友好的对手和基于Transformer的分割模型；</p><p>(iv) 除了语义分割，我们进一步将提出的SeaFormer架构应用于图像分类问题，展示了作为通用的移动友好骨干网的潜力。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 RELATED WORK</h2><p>变形器和卷积的结合 卷积的效率相对较高，但不适合捕捉长距离的依赖关系，而视觉变形器具有强大的能力，具有全局接受场，但由于自我注意的计算而缺乏效率。为了充分利用这两个方面的优势，MobileViT Mehta &amp; Rastegari (2022a), TopFormer Zhang等人(2022c), LVT Yang等人(2022), Mobile-Former Chen等人(2022b), EdgeViTs Pan等人(2022a). (2022a)、MobileViTv2 Mehta &amp; Rastegari (2022b)、EdgeFormer Zhang等人(2022a)和EfficientFormer Li等人(2022)是通过结合卷积和变形器构建的高效ViTs。Mobile-ViT、Mobile-Former、TopFormer和EfficientFormer受到变形器块的限制，在模型设计中必须在效率和性能之间进行权衡。LVT、MobileViTv2和EdgeViTs以相对较高的计算量为代价保持模型的小尺寸，这也意味着高延迟。</p><p><strong>轴向注意力和变体</strong> 轴向注意力 Huang等人（2019b）；Ho等人（2019）；Wang等人（2020a）是为了降低原始全局自我注意力Vaswani等人（2017）的计算复杂性。它一次计算单个轴上的自我注意，并堆叠一个水平和一个垂直轴注意模块，以获得全局感受野。Strip pooling Hou等人（2020）和Coordinate attention Hou等人（2021）使用一个带状形状的集合窗口，沿着水平或垂直维度进行集合，以收集长距离背景。Kronecker注意力网络 Gao等人（2020）利用水平和横向平均矩阵的并列，对输入矩阵进行平均，并进行注意力操作。这些方法和其他类似的实现方法与轴向注意力相比，部分地以相当低的计算成本提供了性能的提高。然而，它们忽略了集合/平均操作所带来的局部细节的缺乏。</p><p><strong>移动语义分割</strong> 高效分割方法的主流是基于轻量级CNN的。DFANet Li等人（2019）采用轻量级骨干来降低计算成本，并增加了一个特征聚合模块来细化高层和低层特征。ICNet Zhao等人（2018）设计了一个图像级联网络来加速算法，而BiSeNet Yu等人（2018；2021）分别提出了低层细节和高层背景信息的双流路径。Fast-SCNN Poudel等人（2019）分担了多分支网络的计算成本，产生了一个运行时快速分割的CNN。TopFormer Zhang等人（2022c）提出了一个新的架构，结合了CNN和ViT，在移动语义分割的准确性和计算成本之间实现了良好的权衡。然而，它仍然受到全局自我关注的沉重计算负荷的限制。</p><h2 id="3-method"><a class="markdownIt-Anchor" href="#3-method"></a> 3 METHOD</h2><h3 id="31-overall-architecture"><a class="markdownIt-Anchor" href="#31-overall-architecture"></a> 3.1 OVERALL ARCHITECTURE</h3><p>受Yu等人（2021）；Poudel等人（2019）；Hong等人（2021）；Huang等人（2021b）；Chen等人（2022b）的双分支架构的启发，我们设计了一个挤压增强的轴向变形器（SeaFormer）框架。如图2所示，SeaFormer由这些部分组成：共享STEM、Context branch、空间分支、融合块和光分割头。为了公平比较，我们按照TopFormer Zhang等人（2022c）设计STEM。它由一个步长为2的常规卷积和四个MobileNet块组成，其中第一个和第三个块的步长为2。Context branch和空间分支共享产生的特征图，这使我们能够建立一个快速的语义分割模型。</p><p><img src="images/image-20230509164826056.png" alt="image-20230509164826056" /></p><blockquote><p>图2：SeaFormer的整体架构。它包含共享STEM、Context branch（红色）、空间分支（蓝色）、融合块和light分割头。MV2块指的是MobileNetV2块，MV2↓2指的是有下采样的MobileNetV2块。SeaFormer层和带破折号的融合块只存在于SeaFormer-L中。符号⊗表示元素-明智的乘法。</p></blockquote><p><strong>Context branch</strong> Context branch旨在从特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">x_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中获取富含语境的信息。如图2中的红色分支所示，Context branch分为三个阶段。为了获得更大的感受野，我们在应用MobileNet块下采样和扩大特征维度后，堆叠SeaFormer层。与作为下采样模块的标准卷积相比，MobileNet块增加了模型的表示能力，同时保持较低的计算量和延迟。对于除SeaFormer-Large以外的其他变体，SeaFormer层被应用于最后两个阶段，以便在准确性和效率之间进行出色的权衡。对于SeaFormer-Large，我们在Context branch的每个阶段插入SeaFormer层。为了在分割精度和推理速度之间实现良好的权衡，我们设计了一个挤压增强的轴向注意块（SEA注意），在下一小节中说明。</p><p><strong>空间分支</strong> 空间分支的设计是为了获得高分辨率的空间信息。与Context branch相同，空间分支重复使用特征图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">x_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。然而，来自早期卷积层的特征包含丰富的空间细节，但缺乏高水平的语义信息。因此，我们设计了一个融合块，将Context branch的特征融合到空间分支中，将高层次的语义信息引入低层次的空间信息。</p><p><strong>融合模块</strong> 如图2所示，空间分支中的高分辨率特征图经过1×1卷积和批量归一化层，产生了一个要融合的特征。Context branch中的低分辨率特征图被送入1×1卷积层、批量归一化层和sigmoid层，并通过双线性插值上采样到高分辨率以产生语义权值。然后，来自Context branch的语义权重与来自空间分支的高分辨率特征进行元素明智地相乘。融合块使低层次的空间特征获得高层次的语义信息。</p><p><strong>light分割头</strong> 最后一个融合块之后的特征被直接送入拟议的分割头，如图2所示。为了达到快速推理的目的，我们的light分割头由两个卷积层组成，后面分别有一个批量归一化层，第一个批量归一化层的特征被送入一个激活层。</p><h3 id="32-squeeze-enhanced-axial-attention"><a class="markdownIt-Anchor" href="#32-squeeze-enhanced-axial-attention"></a> 3.2 SQUEEZE-ENHANCED AXIAL ATTENTION</h3><p>全局注意力可以表示为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">y</mi><mi>o</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow></munder><msub><mo><mi mathvariant="normal">softmax</mi><mo>⁡</mo></mo><mi>p</mi></msub><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">q</mi><mi>o</mi><mi mathvariant="normal">⊤</mi></msubsup><msub><mi mathvariant="bold">k</mi><mi>p</mi></msub><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{y}_o=\sum_{p\in\mathcal{G}(o)}\operatorname{softmax}_p\left(\mathbf{q}_o^\top\mathbf{k}_p\right)\mathbf{v}_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.0593em;">G</span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">o</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">x∈R^{H×W×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的线性投影，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>=</mo><msub><mi>W</mi><mi>q</mi></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">q=W_{q}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><msub><mi>W</mi><mi>k</mi></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">k=W_kx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>=</mo><msub><mi>W</mi><mi>v</mi></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">v=W_vx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">W_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>k</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>C</mi><mi>q</mi><mi>k</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W_k∈R^{Cqk×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>v</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><msub><mi>C</mi><mi>v</mi></msub><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W_v∈R^{C_v×C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>是可学习权重。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(o)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mclose">)</span></span></span></span>指位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo>=</mo><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o=(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>的特征图上的所有位置。当传统的注意力模块应用于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H×W×C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的特征图时，时间复杂度可以达到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>H</mi><mn>2</mn></msup><msup><mi>W</mi><mn>2</mn></msup><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(H^2W^2(C_{qk} + C_v))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1002159999999999em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，导致效率低下，延迟高。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">y</mi><mi>o</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><msub><mi mathvariant="script">N</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><mrow><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow></mrow></munder><msub><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mi>p</mi></msub><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">q</mi><mi>o</mi><mi mathvariant="normal">⊤</mi></msubsup><msub><mi mathvariant="bold">k</mi><mi>p</mi></msub><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{y}_o=\sum_{p\in\mathcal{N}_{m\times m}{(o)}}\mathrm{softmax}_p\left(\mathbf{q}_o^\top\mathbf{k}_p\right)\mathbf{v}_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2736642857142857em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">o</span><span class="mclose mtight">)</span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">y</mi><mi>o</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><msub><mi mathvariant="script">N</mi><mrow><mn>1</mn><mo>×</mo><mi>W</mi></mrow></msub><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow></munder><msub><mtext>softmax</mtext><mi>p</mi></msub><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">q</mi><mi>o</mi><mi mathvariant="normal">⊤</mi></msubsup><msub><mi mathvariant="bold">k</mi><mi>p</mi></msub><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mi>p</mi></msub><mo>+</mo><munder><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><msub><mi mathvariant="script">N</mi><mrow><mi>H</mi><mo>×</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow></munder><msub><mtext>softmax</mtext><mi>p</mi></msub><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">q</mi><mi>o</mi><mi mathvariant="normal">⊤</mi></msubsup><msub><mi mathvariant="bold">k</mi><mi>p</mi></msub><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{y}_o=\sum_{p\in\mathcal{N}_{1\times W}(o)}\text{softmax}_p\left(\mathbf{q}_o^\top\mathbf{k}_p\right)\mathbf{v}_p+\sum_{p\in\mathcal{N}_{H\times1}(o)}\text{softmax}_p\left(\mathbf{q}_o^\top\mathbf{k}_p\right)\mathbf{v}_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.356707142857143em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20281428571428572em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">o</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord text"><span class="mord">softmax</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.356707142857143em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20281428571428572em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">o</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord text"><span class="mord">softmax</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>为了提高效率，有一些作品Liu等人（2021）；Huang等人（2019b）；Ho等人（2019）在局部区域内计算自我注意。我们在方程2，3中展示了两个最具代表性的高效Transformer。方程2由基于窗口的注意力Luong等人（2015）表示，成功地将时间复杂度降低到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><msup><mi>m</mi><mn>2</mn></msup><mi>H</mi><mi>W</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mi>H</mi><mi>W</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathcal{O}(m^2HW(C_{qk}+C_v))=\mathcal{O}(HW)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.524108em;vertical-align:-0.512054em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.012054em;"><span style="top:-3.147946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.512054em;"><span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">N</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{N}_{m\times m}(o)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mclose">)</span></span></span></span>指<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">o</span></span></span></span>的邻居<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">m×m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>位置，但失去了全局接受能力。方程3用轴向注意力Ho等人（2019）表示，只将时间复杂度降低到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>H</mi><mo>+</mo><mi>W</mi><mo stretchy="false">)</mo><mi>H</mi><mi>W</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>H</mi><mi>W</mi><msup><mo stretchy="false">)</mo><mn>1.5</mn></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathcal{O}((H+W)HW(C_{qk}+C_v))&amp;=\mathcal{O}((HW)^{1.5})\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.524108em;vertical-align:-0.512054em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.012054em;"><span style="top:-3.147946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.512054em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.012054em;"><span style="top:-3.147946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.512054em;"><span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">N</mi><mrow><mi>H</mi><mo>×</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{N}_{H\times1}(o)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mclose">)</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">o</span></span></span></span>的列的所有位置；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">N</mi><mrow><mn>1</mn><mo>×</mo><mi>W</mi></mrow></msub><mo stretchy="false">(</mo><mi>o</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{N}_{1\times W}(o)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mclose">)</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">o</span></span></span></span>的行的所有位置。</p><p>根据他们的缺点，我们提出了便于移动的挤压增强轴向注意力，用简洁的挤压轴向注意力进行全局语义提取，用高效的基于卷积的细节增强内核进行局部细节补充。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>W</mi></mfrac><msup><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">q</mi><mrow><mo>→</mo><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">)</mo></mrow></msup><msub><mn mathvariant="double-struck">1</mn><mi>W</mi></msub><mo fence="true">)</mo></mrow><mrow><mo>→</mo><mo stretchy="false">(</mo><mi>H</mi><mo separator="true">,</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mspace width="1em"/><msub><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>H</mi></mfrac><msup><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">q</mi><mrow><mo>→</mo><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo separator="true">,</mo><mi>W</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></msup><msub><mn mathvariant="double-struck">1</mn><mi>H</mi></msub><mo fence="true">)</mo></mrow><mrow><mo>→</mo><mo stretchy="false">(</mo><mi>W</mi><mo separator="true">,</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{q}_{(h)}=\frac{1}{W}\left(\mathbf{q}^{\rightarrow(C_{qk},H,W)}\mathbb{1}_{W}\right)^{\rightarrow(H,C_{qk})},\quad\mathbf{q}_{(v)}=\frac{1}{H}\left(\mathbf{q}^{\rightarrow(C_{qk},W,H)}\mathbb{1}_{H}\right)^{\rightarrow(W,C_{qk})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1138999999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9379999999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">→</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.4278999999999997em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">→</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1138999999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9379999999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">→</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.4278999999999997em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">→</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>Squeeze Axial attention</strong> 为了实现更有效的计算并同时聚合全局信息，我们采用了一种更激进的策略。以同样的方式，首先从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>中得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">W</mi><mi>q</mi><mrow><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">W</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>C</mi><mi>q</mi></msub><mi>k</mi><mo>×</mo><mi>C</mi></mrow></msup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">W</mi><mi>v</mi><mrow><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>C</mi><mi>v</mi></msub><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{W}_q^{(s)},\mathbf{W}_k^{(s)}\in\mathbb{R}^{C_qk\times C},\mathbf{W}_v^{(s)}\in\mathbb{R}^{C_v\times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.30130799999999996em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2526999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>。根据公式4，我们首先通过对水平方向上的查询特征图进行平均来实现水平挤压。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">z</mi><mrow><mo>→</mo><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{z}^{\rightarrow(\cdot)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">→</span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>表示对张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>的维度进行置换，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn mathvariant="double-struck">1</mn><mi>m</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">\mathbb{1}_m\in\mathbb{R}^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span>是一个所有元素都等于1的向量。对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>的挤压操作也重复在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>上，所以我们最终得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub><mo separator="true">,</mo><msub><mi mathvariant="bold">k</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub><mo separator="true">,</mo><msub><mi mathvariant="bold">v</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{q}_{(h)},\mathbf{k}_{(h)},\mathbf{v}_{(h)}\in\mathbb{R}^{H\times C_{qk}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub><mo separator="true">,</mo><msub><mi mathvariant="bold">k</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub><mo separator="true">,</mo><msub><mi mathvariant="bold">v</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>W</mi><mo>×</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{q}_{(v)},\mathbf{k}_{(v)},\mathbf{v}_{(v)}\in\mathbb{R}^{W\times C_{qk}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>。挤压操作将全局信息保留在一个轴上，从而大大缓解了下面由方程5显示的全局语义提取问题。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>H</mi></munderover><msub><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mi>p</mi></msub><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>i</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><msub><mi mathvariant="bold">k</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>W</mi></munderover><msub><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mi>p</mi></msub><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>j</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><msub><mi mathvariant="bold">k</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{y}_{(i,j)}=\sum_{p=1}^H\mathrm{softmax}_p\left(\mathbf{q}_{(h)i}^\top\mathbf{k}_{(h)p}\right)\mathbf{v}_{(h)p}+\sum_{p=1}^W\mathrm{softmax}_p\left(\mathbf{q}_{(v)j}^\top\mathbf{k}_{(v)p}\right)\mathbf{v}_{(v)p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>特征图的每个位置只传播两个挤压的轴向特征的信息。尽管与方程3相比，它没有显示出明显的计算量减少，但方程5的重复可以通过最有效的广播操作简单实现。详细情况见图3。挤压<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>H</mi><mo>+</mo><mi>W</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}((H+W)(2C_{qk}+C_{v}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，关注操作需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>H</mi><mn>2</mn></msup><mo>+</mo><msup><mi>W</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathcal{O}((H^2+W^2)(C_{qk}+C_v))\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.524108em;vertical-align:-0.512054em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.012054em;"><span style="top:-3.147946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.512054em;"><span></span></span></span></span></span></span></span></span></span></span>时间。因此，我们的挤压轴向注意力成功地将时间复杂性降低到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>H</mi><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(HW )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>。</p><p><img src="images/image-20230509173859692.png" alt="image-20230509173859692" /></p><blockquote><p>图3：右图：提议的挤压增强轴向变换器层的示意图，包括挤压增强轴向注意力和前馈网络（FFN）。左边是挤压增强的轴向变换器层，包括细节增强核和挤压轴向注意力。符号⊕表示元素间的加法运算。Mul表示乘法。</p></blockquote><p><strong>Squeeze Axial position embedding</strong> 然而，公式 4 并不具有位置感知能力，不包含特征图的位置信息。因此，我们提出了挤压轴向位置嵌入来挤压轴向注意力。对于挤压轴向注意力，我们通过引入位置嵌入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mi>q</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{r}_{(h)}^q,\mathbf{r}_{(h)}^k\in\mathbb{R}^{H\times C_{qk}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3643079999999999em;vertical-align:-0.5151999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>来使 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">q_{(h)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">k_{(h)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 意识到它们在挤压轴向特征中的位置，这些位置嵌入是从可学习参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">B</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mi>q</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">B</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>L</mi><mo>×</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub></mrow></msup><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathbf{B}_{(h)}^q,\mathbf{B}_{(h)}^k\in\mathbb{R}^{L\times C_{qk}}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3643079999999999em;vertical-align:-0.5151999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">.</span></span></span></span> 线性插值而来。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span> 是一个常数。同样，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><mi>q</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>W</mi><mo>×</mo><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{r}_{(v)}^q,\mathbf{r}_{(v)}^k\in\mathbb{R}^{W\times C_{qk}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3643079999999999em;vertical-align:-0.5151999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.378em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>也适用于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">q_{(v)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">k_{(v)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>。因此，位置感知挤压轴向注意力可表示为公式 6。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="bold">Y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>H</mi></munderover><msub><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mi>p</mi></msub><mrow><mo fence="true">(</mo><mo stretchy="false">(</mo><msub><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>i</mi></mrow></msub><mo>+</mo><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>i</mi></mrow><mi>q</mi></msubsup><msup><mo stretchy="false">)</mo><mi mathvariant="normal">⊤</mi></msup><mo stretchy="false">(</mo><msub><mi mathvariant="bold">k</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub><mo>+</mo><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>p</mi></mrow><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>W</mi></munderover><msub><mrow><mi mathvariant="normal">s</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi></mrow><mi>p</mi></msub><mrow><mo fence="true">(</mo><mo stretchy="false">(</mo><msub><mi mathvariant="bold">q</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>j</mi></mrow></msub><mo>+</mo><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>j</mi></mrow><mi>q</mi></msubsup><msup><mo stretchy="false">)</mo><mi mathvariant="normal">⊤</mi></msup><mo stretchy="false">(</mo><msub><mi mathvariant="bold">k</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub><mo>+</mo><msubsup><mi mathvariant="bold">r</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>p</mi></mrow><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><msub><mi mathvariant="bold">v</mi><mrow><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi>p</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{gathered}\mathbf{Y}(i,j) =\sum_{p=1}^H\mathrm{softmax}_p\left((\mathbf{q}_{(h)i}+\mathbf{r}_{(h)i}^q)^\top(\mathbf{k}_{(h)p}+\mathbf{r}_{(h)p}^k)\right)\mathbf{v}_{(h)p} \\+\sum_{p=1}^W\mathrm{softmax}_p\left((\mathbf{q}_{(v)j}+\mathbf{r}_{(v)j}^q)^\top(\mathbf{k}_{(v)p}+\mathbf{r}_{(v)p}^k)\right)\mathbf{v}_{(v)p} \end{gathered}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.063114000000001em;vertical-align:-3.2815570000000003em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7815570000000003em;"><span style="top:-5.781557em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7822999999999999em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">s</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">t</span><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7822999999999999em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2815570000000003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>细节增强内核</strong> 挤压操作虽然有效地提取了全局语义信息，但牺牲了局部细节。因此，一个基于卷积的辅助核被应用来增强空间细节。如图3上部路径所示，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>首先从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>中得到另一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">W</mi><mi>q</mi><mrow><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">W</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>×</mo><mi>C</mi></mrow></msup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">W</mi><mi>v</mi><mrow><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msub><mi>C</mi><mi>v</mi></msub><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{W}_q^{(e)},\mathbf{W}_k^{(e)}\in\mathbb{R}^{C_{qk}\times C},\mathbf{W}_v^{(e)}\in\mathbb{R}^{C_v\times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.30130799999999996em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">e</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2526999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.398692em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2197999999999998em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">e</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">e</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，并在通道维度上进行连接，然后传递给由3×3深度卷积和批量归一化组成的块。</p><p>通过使用3×3卷积，可以从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>中聚合出辅助的局部细节。然后使用激活函数的线性投影和批量归一化，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2C_{qk}+C_v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>维度挤压到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，并产生细节增强权值。最后，增强的特征将与挤压轴向注意力给出的特征相融合。实验部分将比较不同的增强模式，包括元素间的加法和乘法。3×3深度卷积的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><msup><mn>3</mn><mn>2</mn></msup><mi>H</mi><mi>W</mi><mo stretchy="false">(</mo><mn>2</mn><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathcal{O}(3^2HW(2C_{qk}+C_{v}))\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.524108em;vertical-align:-0.512054em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.012054em;"><span style="top:-3.147946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.512054em;"><span></span></span></span></span></span></span></span></span></span></span>，1×1卷积的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mi>H</mi><mi>W</mi><mi>C</mi><mo stretchy="false">(</mo><mn>2</mn><msub><mi>C</mi><mrow><mi>q</mi><mi>k</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}(HWC(2C_{qk}+C_{v}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>。其他操作如激活的时间可以省略。</p><p><strong>结构和变体</strong> 我们介绍了四种变体，SeaFormer-Tiny、Small、Base和L（T、S、B和L）。更多的配置细节列在补充材料中。</p><h2 id="4-experiments"><a class="markdownIt-Anchor" href="#4-experiments"></a> 4 EXPERIMENTS</h2><p>我们在语义分割和图像分类任务上评估了我们的方法。首先，我们描述了实施细节，并将结果与现有技术水平进行比较。然后，我们进行了一系列的消融研究来验证SeaFormer的设计。每个提议的组件和重要的超参数都被彻底检查。</p><h3 id="41-experimental-setup"><a class="markdownIt-Anchor" href="#41-experimental-setup"></a> 4.1 EXPERIMENTAL SETUP</h3><h4 id="411-dataset"><a class="markdownIt-Anchor" href="#411-dataset"></a> 4.1.1 DATASET</h4><p>我们对ADE20K Zhou等人（2017）、CityScapes Cordts等人（2016）进行分割实验。交叉大于联合的平均值（mIoU）被设定为评价指标。我们将全精度模型转换为TNN贡献者（2019），并在基于ARM的设备上测量延迟，该设备配有一个高通Snapdragon 865处理器。</p><p>ADE20K数据集涵盖150个类别，包含25K图像，分为20K/2K/3K，用于Train、val和test。CityScapes是一个用于语义分割的驱动数据集。它由5000张精细注释的高分辨率图像组成，有19个类别。</p><h4 id="412-implementation-details"><a class="markdownIt-Anchor" href="#412-implementation-details"></a> 4.1.2 IMPLEMENTATION DETAILS</h4><p>我们将ImageNet-1K Deng等人（2009）的预训练网络设置为骨干网络，ImageNet-1K的训练细节在最后一小节说明。对于语义分割，标准的BatchNorm Ioffe &amp; Szegedy（2015）层被同步的BatchNorm取代。</p><p>训练 我们的实现是基于公共代码库mmsegmentation Contributors（2020）。我们遵循TopFormer Zhang等人（2022c）的批次大小、训练迭代调度器和数据增强策略进行公平比较。初始学习率为0.0005，权重衰减为0.01。采用系数为1.0的 &quot;聚 &quot;学习率调度。在推理过程中，我们设置了与TopFormer相同的调整大小和裁剪规则，以确保公平性。城市景观的比较包含全分辨率和半分辨率。对于全分辨率版本，训练图像被随机缩放，然后裁剪为1024×1024的固定尺寸。对于半分辨率版本，训练图像被调整为1024×512并随机缩放，裁剪尺寸为1024×512。</p><h3 id="42-comparison-with-state-of-the-art"><a class="markdownIt-Anchor" href="#42-comparison-with-state-of-the-art"></a> 4.2 COMPARISON WITH STATE OF THE ART</h3><p>ADE20K 表1显示了SeaFormer和以前的高效骨干网在ADE20K估值集上的结果。比较包括Params、FLOPs、Latency和mIoU。如表1所示，SeaFormer以相当或更少的FLOPs和更低的延迟胜过了这些方法。与专门设计的移动骨干网TopFormer相比，SeaFormer将全局注意力作为其语义提取器，以较低的延迟实现了更高的分割精度。而SeaFormer-B的性能超过了MobileNetV3，以较低的延迟（-16%）获得了+7.9%的mIoU。这些结果表明我们的SeaFormer层明显提高了表示能力。</p><p>城市景观 从表2可以看出，SeaFormer-S以较少的计算成本和延迟取得了与TopFormer-B相当或更好的结果，这证明了SeaFormer在高分辨率场景下也能实现性能和延迟之间的良好权衡。</p><h3 id="43-ablation-studies"><a class="markdownIt-Anchor" href="#43-ablation-studies"></a> 4.3 ABLATION STUDIES</h3><p>在这一节中，我们阐述了不同的自我注意实现方式和所提出的模型中的一些重要设计元素，包括我们的挤压增强轴向注意模块（SEA注意）和ADE20K数据集的融合块。</p><p>SEA注意中各组成部分的影响 我们对几种配置进行了实验，包括仅有细节增强内核，仅有挤压轴向注意，以及两者的融合。如表3所示，只有细节增强或挤压轴注意的性能相对较差，而用细节增强内核增强挤压轴注意在ADE20K上带来了2.3% mIoU的性能提升。结果表明，用卷积的局部细节增强挤压轴向注意力的全局语义特征可以优化Transformer块的特征提取能力。对于增强输入，upconv(x)和conv(x)之间存在着明显的性能差距。而我们的结论是，增加通道将大大提升性能。比较concat[qkv]和upconv(x)，它们也对应于细节增强内核和挤压轴向注意力之间是否共享卷积权重，我们可以发现，共享权重使我们的模型在性能损失最小的情况下提高推理效率（35.8对35.9）。至于增强模式，将挤压轴向注意力和细节增强内核的特征相乘，比添加增强的效果要好0.4% mIoU。</p><p>与不同的自我注意模块的比较 为了消除我们架构的影响，证明SEA注意的有效性和泛化能力，我们对Swin Transformer Liu等人（2021）进行了实验，用不同的注意块代替了Swin Transformer中的窗口注意。我们设置了与Swin相同的训练协议、超参数和模型架构配置，以进行公平的比较。当用CCAttention（CCNet）或DoubleAttention（A2-Nets）替换窗口注意力时，它们的FLOPs比SeaFormer和其他注意力块低得多。考虑到我们可能无法严格地得出结论，我们将其Transformer块的数量增加了一倍（包括MLP）。由于ACmix的架构配置与Swin相同，我们借用原论文的结果。从表4可以看出，SeaFormer以较低的FLOPs和延迟优于其他注意力机制。</p><p>融合块中宽度的影响 为了研究融合块中宽度的影响，我们在SeaFormer-Base上进行了融合块中不同嵌入尺寸的实验，M表示空间分支和Context branch特征在两个融合块中映射的通道。结果显示在表5中。</p><h3 id="44-image-classification"><a class="markdownIt-Anchor" href="#44-image-classification"></a> 4.4 IMAGE CLASSIFICATION</h3><p>We conduct experiments on ImageNet-1K Deng et al. (2009), which contains 1.28M training</p><p>images and 50K validation images from 1,000 classes. We employ an AdamW Kingma &amp; Ba (2014) optimizer for 600 epochs using a cosine decay learning rate scheduler. A batch size of 1024, an initial learning rate of 0.064, and a weight decay of 2e-5 are used. The results are illustrated in Table 6. Compared with other efficient approaches, SeaFormer achieves a relatively better trade-off between latency and accuracy.</p><h3 id="45-latency-statistics"><a class="markdownIt-Anchor" href="#45-latency-statistics"></a> 4.5 LATENCY STATISTICS</h3><p>We make the statistics of the latency of the proposed SeaFormer-Tiny, as shown in Figure 4, the shared STEM takes up about half of the latency of the whole network (49%). The latency of the context branch is about a third of the total latency (34%), whilst the actual latency of the spatial branch is relatively low (8%) due to sharing early convolution layers with the context branch. Our light segmentation head (8%) also contributes to the success of building a light model.</p><p>5 CONCLUSION</p><p>In this paper, we have proposed squeeze-enhanced Axial Transformer (SeaFormer) for mobile semantic segmentation, filling the vacancy of mobile-friendly efficient Transformer. Moreover, we create a family of backbone architectures of SeaFormer and achieve cost-effectiveness. The superior performance on the ADE20K and Cityscapes, and the lowest latency demonstrate its effectiveness on the ARM-based mobile device. Beyond semantic segmentation, we further apply the proposed SeaFormer architecture to image classification problem, demonstrating the potential of serving as a versatile mobile-friendly backbone.</p><img src="images/d87adb4716344b3e8024ed6d9ee74b6e.png" alt="在这里插入图片描述" style="zoom:200%;" />]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SegGPT</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/seggpt/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/seggpt/</url>
      
        <content type="html"><![CDATA[<h1 id="seggpt"><a class="markdownIt-Anchor" href="#seggpt"></a> SegGPT</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>我们提出的 SegGPT 是一种用于在上下文中分割一切的通用模型。我们将各种分割任务统一到一个通用的上下文学习框架中，该框架通过将不同种类的分割数据转换为相同格式的图像，来适应不同种类的分割数据。SegGPT 的训练被表述为对每个数据样本进行随机颜色映射的上下文着色问题。目的是根据上下文完成不同的任务，而不是依赖特定的颜色。经过训练后，SegGPT 可以通过上下文推理执行图像或视频中的任意分割任务，如对象实例、东西、部分、轮廓和文本。SegGPT 在广泛的任务中进行了评估，包括小样本语义分割、视频对象分割、语义分割和全景分割。结果表明，无论是定性还是定量分析，SegGPT 都能很好地分割域内和域外目标。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2><p>分割是计算机视觉领域最基本的问题之一，其目的是在像素级别定位和重新组织有意义的概念，例如前景、类别、对象实例等。近年来，我们在为各种分割任务开发更准确、更快速的算法方面取得了巨大进步，例如前景分割 [41]、交互式分割 [51, 34]、语义分割 [32, 28, 54, 39]、实例分割 [18, 11, 2, 48] 和全景分割 [23, 5, 8]。</p><p>然而，这些专业分割模型仅限于特定的任务、类别、粒度和数据类型等。如果要适应不同的环境，例如分割一个新概念，或分割视频而不是图像中的物体，就必须训练一个新的模型。这需要昂贵的标注工作，而且对于大量的分割任务来说是不可持续的。</p><p>在这项工作中，我们的目标是训练一个单一的模型，使其能够解决多样化、无限制的分割任务。主要的挑战有两个方面：（1）在训练中纳入那些非常不同的数据类型，例如，部件、语义、实例、全景、人物、医疗图像、航空图像等；（2）设计一种不同于传统多任务学习的通用训练方案，这种方案在任务定义上非常灵活，能够处理域外任务。</p><p>为了应对这些挑战，我们提出了 SegGPT，这是一种用于分割上下文中所有内容的通用模型。我们将分割视为视觉感知的一种通用格式，并将不同的分割任务统一到一个通用的上下文学习框架中[46]。该框架通过将不同类型的分割数据转换为相同格式的图像，从而将它们容纳进来。SegGPT 的训练被表述为对每个数据样本进行随机颜色映射的上下文着色问题。其目标是仅根据上下文为相应区域（如类、对象实例、部件等）着色。通过使用随机着色方案，模型不得不参考上下文信息来完成指定任务，而不是依赖特定的颜色。这使得训练方法更加灵活和通用。训练的其余部分与 [46] 相同，使用 vanilla ViT [42] 和简单的 smooth-ℓ1 [17] loss。</p><p>经过训练后，SegGPT 能够通过上下文推理，在给定几个例子的情况下执行图像或视频中的各种分割任务，如物体实例、东西、部分、轮廓、文本等。为了有效地集合多个上下文实例，我们提出了一种简单而有效的上下文集合策略–特征集合，它可以帮助模型从多实例提示设置中获益。此外，SegGPT 还可以在不更新模型参数的情况下，通过调整特定的提示，方便地充当专业模型，用于专门的使用案例，例如域内 ADE20K 语义分割。</p><p>我们的主要贡献如下：</p><p>(1) 我们首次展示了一个能够自动执行各种分割任务的通用模型。</p><p>(2) 我们在广泛的任务中直接评估了预训练的 SegGPT，即无需微调，包括小样本语义分割、视频对象分割、语义分割和全视角分割。</p><p>(3) 我们的研究结果表明，无论是从定性还是定量的角度来看，我们都具有很强的分割域内和域外目标的能力。</p><p>不过，这项工作的目的并不在于宣称取得了新的最先进成果，或在所有基准上都优于现有的专业方法，因为我们认为这可能不是通用模型的职责所在。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2. Related Work</h2><h3 id="21-visual-segmentation"><a class="markdownIt-Anchor" href="#21-visual-segmentation"></a> 2.1. Visual Segmentation</h3><p>分割是计算机视觉中的一个基本问题，涉及在像素级别定位和组织有意义的概念。分割任务的类型因前景、类别或对象实例等概念的定义而异。例如，语义分割 [55] 涉及图像的像素级语义分类，而实例分割 [30] 则旨在识别不同的物体实例及其类别。视频对象分割[52, 37, 12]是指在整个视频序列中，仅根据第一帧的对象掩码对特定对象进行分割。</p><p>以往的分割方法[32, 28, 54, 39, 18, 11, 2, 48, 23, 5, 8]都是专门针对某些任务而设计的，无法通用于切换任务或改变类别。本文介绍了一种通用界面，该界面可兼容所有分割任务，只要有适当的训练方案，一个通用模型就能在域内和域外分割任务中取得良好的定性或定量性能。</p><h3 id="22-vision-generalist"><a class="markdownIt-Anchor" href="#22-vision-generalist"></a> 2.2. Vision Generalist</h3><p>近年来，人们一直在努力使用基于transformer的模型来统一视觉领域的不同任务，从而产生了一些视觉通用头[6, 7, 56, 33, 24]。DETR [5] 是最早采用 Transformer [42] 作为物体检测任务专用头的软件之一。Pix2Seq 系列 [6, 7] 将视觉任务的输出空间定义为离散空间，并以自动回归的方式执行物体检测、实例分割、关键点估算和图像字幕等任务。Unified-IO [33] 和 OFA [45] 以序列到序列的方式对视觉、视觉与语言和 NLP 任务进行联合建模，即输入和输出都定义为离散标记序列。UViM[24]将像素标记任务统一在一起，如全景分割、深度估计和着色，但对每个任务都训练单独的模型。</p><p>虽然这些研究表面上看都是将不同的任务统一到相似的空间中，但实际上它们都是通过某种形式的硬指标（如特殊标记）来完成每项任务的，因此很难推广到新的任务中。与此相反，这项研究采用了一种上下文框架，保持了任务定义的灵活性，并利用随机着色方案防止模型坍缩为多任务学习解决方案，而是迫使它通过参考上下文信息来完成分配的任务。另一个不同之处在于任务的范围。这项工作主要侧重于视觉感知中的一个重要类别，即图像分割。</p><h3 id="23-in-context-visual-learning"><a class="markdownIt-Anchor" href="#23-in-context-visual-learning"></a> 2.3. In-Context Visual Learning</h3><p>GPT-3 [3]将上下文学习的概念引入了深度学习，它允许将一系列 NLP 任务表述为给定提示和示例的文本完成问题。在计算机视觉领域，[1] 首次提出了一种上下文训练框架，利用离散标记对视觉文章中的数字和信息图进行内绘，展示了该框架在前景分割、单个物体检测和着色方面的能力。Painter[46]在连续像素上采用遮蔽图像建模，利用有监督数据集对七种不同的、具有挑战性的视觉任务进行上下文训练，在这些任务上取得了极具竞争力的结果。</p><p>我们的工作以 Painter 框架为基础，但特别关注分割任务，因为它在视觉感知中起着核心作用。因此，这项工作统一了不同的分割数据，包括语义分割、实例分割、部件分割，甚至还有航空图像等特殊场景的分割数据。此外，我们还设计了一种随机着色方案，迫使模型参考上下文信息来完成指定任务，但又不会塌陷到多任务解决方案中。与深度/姿态估计相比，分割任务和数据集的可变性较小，因此更容易共享内部结构，从而对域内任务进行有效训练，同时保持对域外分割任务的泛化能力。</p><h2 id="3-approach"><a class="markdownIt-Anchor" href="#3-approach"></a> 3. Approach</h2><p>SegGPT 是 Painter [46] 框架的一个特殊版本，它可以用通用的 Painter 对万物进行分割，因此我们的模型被命名为 SegGPT。该训练框架将视觉任务的输出空间重新定义为 “图像”，并将不同任务统一为同一个图像涂色问题，即随机屏蔽任务输出图像并重建缺失像素。为了保持简单性和通用性，我们没有修改架构和损失函数，即 vanilla ViT [13] 和简单的 smooth-ℓ1 [17] 损失，但在上下文训练中设计了一种新的随机着色方案，以获得更好的泛化能力。</p><h3 id="31-in-context-coloring"><a class="markdownIt-Anchor" href="#31-in-context-coloring"></a> 3.1. In-Context Coloring</h3><p>在传统的 Painter 框架中，每项任务的色彩空间都是预先定义好的，这就导致解决方案坍缩为多任务学习。例如，在语义分割中，预先定义了一组颜色，并为每个语义类别分配了固定的颜色。同样，在实例分割中，实例对象的颜色是根据其位置类别分配的，即颜色的数量等于空间位置的数量，这导致模型只能依靠颜色本身来确定任务，而不是利用分割之间的关系。</p><p>为了解决这一局限性，我们提出了一种用于上下文着色的随机着色方案。首先，我们随机抽样另一张与输入图像具有相似上下文的图像，如相同的语义类别或对象实例。接着，我们从目标图像中随机取样一组颜色，并将每种颜色映射到一个随机颜色上。这将导致相应像素的重新着色。这样，我们就得到了两对图像，这两对图像被定义为 “上下文对”。此外，我们还引入了混合上下文训练法，使用混合示例来训练模型。这包括将具有相同颜色映射的多幅图像拼接在一起。然后随机裁剪和调整生成的图像，形成混合上下文训练样本。通过这种方法，模型可以学会关注图像的上下文信息，而不是仅仅依靠特定的颜色信息来确定任务。</p><p>这种统一使我们能够以一致的方式利用所有分割数据集，只需根据具体任务改变数据采样策略即可。我们根据不同的数据类型定义不同的情境。对于语义分割，我们对类别进行随机抽样。对于实例分割，对象实例以随机数取样。同一图像的不同视图（例如，通过一组增强功能转换的图像）被视为上下文中的图像。在实施过程中，采样都是以颜色为单位，例如，相同的颜色指的是相同的类别或相同的实例。</p><h3 id="32-context-ensemble"><a class="markdownIt-Anchor" href="#32-context-ensemble"></a> 3.2. Context Ensemble</h3><p>一旦完成训练，它就能在推理过程中释放出全部能量。SegGPT 可在上下文中进行任意分割，例如，以单幅图像及其目标图像为例。目标图像可以是单一颜色（不包括背景），也可以是多种颜色，例如，在一个镜头中分割多个类别或感兴趣的对象。具体来说，在给定待测输入图像后，我们将其与示例图像拼接，并输入 SegGPT 以获得相应的上下文预测。</p><p>为了提供更准确、更具体的上下文，可以使用多个示例。例如，可以使用同一语义类别的多个示例或视频中的前几帧。为了在 SegGPT 模型中有效利用多个示例，我们提出了两种上下文集合方法。一种称为 “空间集合”（Spatial Ensemble），即将多个示例按 n × n 网格串联起来，然后再进行子采样，使其大小与单个示例相同。这种方法与上下文着色的直觉相吻合，多个示例的语义信息可以在几乎不增加额外成本的情况下进行上下文提取。另一种方法是特征集合。多个示例在批量维度上进行组合，除了在每个注意层之后对查询图像的特征进行平均之外，其他计算都是独立的。这样，查询图像就能在推理过程中收集多个示例的信息。</p><h3 id="33-in-context-tuning"><a class="markdownIt-Anchor" href="#33-in-context-tuning"></a> 3.3. In-Context Tuning</h3><p>SegGPT 能够在不更新模型参数的情况下适应独特的使用情况。我们冻结整个模型，并初始化一个可学习的图像张量作为输入上下文。在训练过程中，只更新这个可学习的图像张量。训练的其他部分保持不变，例如相同的损失函数。调整完成后，我们将学习到的图像张量取出，并将其作为特定应用的即插即用密钥。例如，给定一个具有固定对象类别集（如 ADE20K）的数据集，我们可以为该数据集训练一个定制的提示，同时不会损害模型的通用性。或者，我们可以针对特定场景（如您的公寓）或特定人物（如伯特的脸）优化提示图像。这就为广泛的应用提供了机会。</p><h2 id="4-experiment"><a class="markdownIt-Anchor" href="#4-experiment"></a> 4. Experiment</h2><h3 id="41-training-data"><a class="markdownIt-Anchor" href="#41-training-data"></a> 4.1. Training Data</h3><p>我们的方法使用不同的分割数据集，包括部件、语义、实例、全景、人物、视网膜血管和航空图像分割。与以往依赖手工标签合并来组合不同类型的分割数据集的方法不同，我们的方法提供了一个统一的视角，无需对数据集进行额外的工作或调整。特别是，在添加额外数据集时，我们的方法无需对架构或训练管道进行任何修改。</p><p><strong>ADE20K</strong>[55]为150个语义类别提供了分割标签，共有25K张图像，包括20K张训练图像、2K张验证图像和3K张测试图像。</p><p><strong>COCO</strong>[30]是一个广泛使用的视觉感知数据集，支持实例分割、语义分割和泛视分割。它包含 118K 张训练图像和 5K 张验证图像，其中有 80 个 &quot;事物 &quot;类别和 53 个 &quot;物品 &quot;类别。</p><p><strong>PASCAL VOC</strong> [14] 是一个经典的物体识别数据集。我们使用的是增强分割版本，它在 10582 张训练图像上提供了 20 个类别的注释。</p><p><strong>Cityscapes</strong> [10] 侧重于街景的场景理解。我们使用的是 2954 幅训练图像，其中包含 19 个类别的语义分割注释。</p><p><strong>LIP</strong> [26] 侧重于对人物的语义理解。我们使用了 30385 张带有 19 个人体部位类别分割标签的训练图像。</p><p><strong>PACO</strong> [38] 是一个新发布的数据集，提供常见物体的部分和属性注释。我们处理并使用了带有部件注释的 41807 张训练图像。</p><p><strong>CHASE DB1</strong> [16]、<strong>DRIVE</strong> [40]、<strong>HRF</strong> [4] 和 <strong>STARE</strong> [20] 为视网膜血管分割提供了注释。我们对高分辨率原始图像进行了随机裁剪。</p><p><strong>SAID</strong> [49] 和 <strong>loveDA</strong> [44] 专注于航空图像的语义理解，分别为 15 和 6 个语义类别提供了 23262 和 2520 幅训练图像。</p><h3 id="42-one-shot-training-details"><a class="markdownIt-Anchor" href="#42-one-shot-training-details"></a> 4.2. One-Shot Training Details</h3><p>我们的分割任务方法采用通用界面，我们强调只用混合数据集训练一个通用模型，并在不同基准上对该模型进行评估。根据文献[46]，我们使用视觉transformer（ViT-L）编码器[13]，该编码器有 3.07 亿个参数。我们使用 [46] 中预先训练好的检查点作为初始化。我们使用 AdamW 优化器 [22] 和余弦学习率调度器，基本学习率为 1e-4。权重衰减设置为 0.05。批次大小为 2048。我们进行了 9K 次迭代训练，热身期为 1.8K 次迭代。我们使用了一组数据增强，包括随机大小裁剪、颜色抖动和随机水平翻转。单张输入图像的大小为 448 × 448。</p><h3 id="43-qualitative-results"><a class="markdownIt-Anchor" href="#43-qualitative-results"></a> 4.3. Qualitative Results</h3><p>为了从直观的角度展示 SegGPT 的能力，我们将所选图像的任务输出与专门的任务提示进行了可视化，如图 1 和图 5 所示。这两幅图包含了多种分割任务，例如具有不同粒度的任意部分/对象分割、文本分割、无视频训练的视频对象分割，以及具有可学习提示调整功能的近集实例/语义分割。图 6 展示了 YouTube-VOS 2018 数据集视频对象分割的更多可视化效果。从这些可视化效果来看，SegGPT 展示了在各种任务中进行高精度预测的能力，同时在任务定义中保持了超强的灵活性。</p><h3 id="44-comparison-with-specialist-methods"><a class="markdownIt-Anchor" href="#44-comparison-with-specialist-methods"></a> 4.4. Comparison with Specialist Methods</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231224211249990.png" alt="image-20231224211249990" /></p><blockquote><p>表 1：COCO-20i 和 PASCAL-5i 基于实例的语义分割的量化结果。* 表示训练中的类别涵盖了测试中的类别。</p></blockquote><p>**小样本语义分割。**我们对 SegGPT 的性能进行了评估，评估采用了两种小样本语义分割设置：COCO-20i/PASCAL-5i 上的域内语义分割和 FSS-1000 上的域外语义分割。表 1 显示了 COCO20i/PASCAL-5i 上基于示例的语义分割结果。为了进行公平比较，我们还对标有 * 的域内类别的专家模型进行了评估。我们的结果表明，在这两个基准上，SegGPT 的性能可与最近发布的最先进的专家模型相媲美，甚至明显优于后者。需要注意的是，现有技术中的 FPTrans 使用不同的镜头分别训练不同的模型。此外，SegGPT 还大大超过了通用的 Painter [46]。</p><p>视频对象分割 视频对象分割（VOS）是一项在视频帧中分割特定对象的任务。在这项工作中，我们将重点放在半监督 VOS 设置上，并在三个数据集的验证分割上评估我们提出的方法 SegGPT： 这三个数据集是：YouTube-VOS 2018 [52]、DAVIS 2017 [37] 和最近发布的具有挑战性的基准 MOSE [12]。我们使用 VOS 中常用的两个指标进行评估：J score 和 F score，并通过官方评估服务器或工具对我们的结果进行评估。</p><p>SegGPT 通过将第一帧及其对象掩码转换为上下文着色示例来执行视频对象分割。在测试当前帧时，我们使用其前 K 帧（如果有）来构建多个示例。这些帧的对象掩码已被预测并存储在 FIFO 队列中。构建多个示例后，将应用特征集合（见第 3.2 节），并将预测结果存储到下一帧。我们在多个基准测试中评估了我们的模型，结果如表 3 所示。尽管我们的方法不是专门针对该任务训练的，但与在这些数据集上训练的专业模型相比，我们的方法取得了具有竞争力的结果。例如，在 YouTube-VOS 2018 [52] 上，我们的方法明显优于特定任务方法 AGAME [21] 和 AGSS [29]。在具有挑战性的 MOSE 基准（侧重于复杂场景）上，SegGPT 的表现甚至可与最先进的方法 RDE 相媲美。</p><h3 id="45-ablation-study"><a class="markdownIt-Anchor" href="#45-ablation-study"></a> 4.5. Ablation Study</h3><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231224211906709.png" alt="image-20231224211408843" /></p><blockquote><p>表 4：在上下文推理中对集合策略（a）和帧数（b）的消减研究。空间集合方法在 FSS-1000 数据集上表现良好，但在 DAVIS 2017 数据集上性能下降。由于没有子采样，特征集合取得了更好的结果。</p></blockquote><p>在这里，我们删除了两种上下文集合策略，即空间集合和特征集合。结果如表 4a 所示。我们的研究结果表明，空间集合方法在 FSS-1000 数据集上表现良好，但在 DAVIS 2017 数据集上性能下降。我们将其归因于空间集合对示例进行了子采样。值得注意的是，与高分辨率的 DAVIS 数据集（640×480）相比，FSS-1000 数据集的图像分辨率（224×224）较低，因此，子采样不会导致 FSS-1000 数据集的重大信息损失。而我们观察到，特征集合可以减少子采样时的这种信息损失，并在 DAVIS 2017 上取得明显更好的性能。</p><p>我们还消减了 DAVIS 2017 中的帧数，如表 4b 所示。随着帧数的增加，性能在达到收益递减点之前最初会有所改善。特别是，我们观察到，当使用 8 个帧时，性能达到最佳。</p><h3 id="46-in-context-tuning"><a class="markdownIt-Anchor" href="#46-in-context-tuning"></a> 4.6. In-Context Tuning</h3><p>通过上下文调整，可以使用一组数据样本定制独特的应用程序。例如，针对特定的数据集、场景甚至人物调整提示。具体来说，我们将任务提示定义为可学习张量，冻结整个模型，然后使用相同的训练损失来优化任务提示。在此，我们对具有挑战性的 ADE20K 语义分割和 COCO 全景分割进行了上下文调整。我们在相应的基准测试中评估了带有可学习提示的 SegGPT。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231224211823599.png" alt="image-20231224211823599" /></p><blockquote><p>表 5：ADE20K 语义分割结果</p></blockquote><p>ADE20K 语义分割的结果如表 5 所示。我们的模型 SegGPT 的性能与 RefineNet 等专业模型相比具有竞争力。不过，与通用模型 Painter 相比，我们的方法在 mIoU 方面下降了 10.3 个百分点。这一现象的原因在于我们引入了随机颜色方案，这使得模型将颜色作为域内任务的简单指标变得更具挑战性。相反，模型需要依靠上下文示例来确定任务，这就大大增加了优化的难度。同样，表 6 显示了我们的 SegGPT 模型在 COCO 全景分割上的结果。在这里，我们再次观察到 PQ 与通用 Painter 相比下降了 9.0 个百分点。在特定基准测试中超越所有专业方法并不是这项工作的目的，我们相信未来还有很大的改进空间。</p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20231224211408843.png" alt="image-20231224211906709" /></p><blockquote><p>Table 6: Results on COCO panoptic segmentation.</p></blockquote><h2 id="5-discussion-and-conclusion"><a class="markdownIt-Anchor" href="#5-discussion-and-conclusion"></a> 5. Discussion and Conclusion</h2><p>在这项工作中，我们提出了一种通用分割模型，展示了如何设计适当的训练策略，以充分利用上下文视觉学习的灵活性。我们的模型在处理域内和域外分割任务方面都表现出强大的能力，包括物体实例、东西、部件、轮廓、文本分割等。</p><p>这项工作并非没有缺点。虽然我们的工作引入了一种新的随机着色机制，以提高上下文训练的泛化能力，但它也增加了训练任务的内在难度，这可能是在训练数据充足的域内任务中表现较差的原因，例如 ADE20K 上的语义分割和 COCO 上的全视角分割。</p><p>展望未来，我们相信，通过利用任务定义的灵活性和上下文推理，我们的方法有可能成为图像/视频分割领域实现更多样化应用的有力工具。扩大模型规模是我们计划进一步提高性能的途径之一。有了更大的模型，就能捕捉到数据中更复杂的模式，从而获得更好的分割结果。不过，这也带来了寻找更多数据的挑战。一个潜在的解决方案是探索自监督学习技术。我们希望我们的工作能激励社区继续探索计算机视觉中上下文学习的潜力。我们仍然乐观地认为，GPT-3 在视觉领域的最佳时刻还未到来。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>采样方式</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="采样方式"><a class="markdownIt-Anchor" href="#采样方式"></a> 采样方式</h1><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20230201182315710.png" alt="image-20230201182315710" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20230201182323814.png" alt="image-20230201182323814" /></p><p><img src="images/image-20230201182340248.png" alt="" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20230201182348102.png" alt="image-20230201182348102" /></p><p><img src="images/image-20230201182353771.png" alt="image-20230201182353771" /></p><p><img src="http://qjl988-tuchuang.oss-cn-beijing.aliyuncs.com/img/image-20230201182358918.png" alt="image-20230201182358918" /></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BiSeNetV2</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/bisenetv2/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/bisenetv2/</url>
      
        <content type="html"><![CDATA[<h1 id="bisenetv2"><a class="markdownIt-Anchor" href="#bisenetv2"></a> BiSeNetV2</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>低层次的细节和高层次的语义对于语义分割任务都是至关重要的。然而，为了加快模型推理的速度，目前的方法几乎总是牺牲低层次的细节，导致准确性大大降低。我们建议分别处理这些空间细节和分类语义，以实现实时语义分割的高准确性和高效率。为此，我们提出了一个高效的架构，在速度和准确性之间做了很好的权衡，称为双边分割网络（BiSeNet V2）。**这个架构包括以下几个方面： (i) 一个细节分支，具有宽通道和浅层，以捕捉低层次的细节并产生高分辨率的特征表示；(ii) 一个语义分支，具有窄通道和深层，以获得高层次的语义背景。细节分支有宽通道尺寸和浅层，而语义分支有窄通道尺寸和深层。由于通道容量的减少和快速下采样策略的使用，语义分支是轻量级的，可以由任何有效的模型实现。**我们设计了一个导引聚合层，以加强相互联系，融合两种类型的特征表示。此外，我们还设计了一个助推器训练策略来提高分割性能，而不需要任何额外的推理成本。广泛的定量和定性评估表明，与几个最先进的实时语义分割方法相比，所提出的架构显示出良好的性能。具体来说，对于2048×1024的输入，我们在一块NVIDIA GeForce GTX 1080 Ti显卡上，在Cityscapes测试集上实现了72.6%的Mean IoU，速度为156 FPS，这比现有的方法要快得多，但我们实现了更好的分割精度。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p><img src="images/image-20230427122145463.png" alt="image-20230427122145463" /></p><blockquote><p>图1 在Cityscapes测试集上的速度-准确度权衡比较 红点表示我们的方法，而灰点表示其他方法。红线代表实时速度（在线彩色图）。</p></blockquote><p>语义分割是为每个像素分配语义标签的任务。它是计算机视觉中的一个基本问题，有着广泛的应用，包括场景理解（Zhou等人，2019）、自主驾驶（Cordts等人，2016；Geiger等人，2012）、人机交互和视频监控，仅此而已。近年来，随着卷积神经网络（Krizhevsky等人，2012）的进步，一系列基于全卷积网络（FCN）（Long等人，2015）的语义分割方法（Zhao等人，2017；Chen等人，2017；Yuetal.2018b；Chen等人，2018；Zhang等人，2018a）不断推进最先进性能。</p><p>这些方法的高精确度取决于其骨干网络。主要有两种架构作为骨干网络：(i) 扩张骨干网络，它去掉了下采样操作，对相应的滤波核进行上采样，以保持高分辨率的特征表示(Chen et al. 2015; Chen et al. 2018; Chen et al. 2018; Zhao et al. 2017, 2018b; Fuetal.2019 ;Yuetal.2020b)，如图2a所示；(ii)编码器-解码器主干，通过自上而下和跳过连接来恢复解码器部分的高分辨率特征表示（Lin等人，2017；Peng等人，2017；Yuetal.2018b），如图2b所示。然而，这两种架构都是为一般的语义分割任务设计的，很少考虑推理速度和计算成本。在扩张骨干网中，扩张卷积很耗时，去除下采样操作后，会产生很高的计算复杂性和内存占用。编码器-解码器架构中的众多连接对于获得低内存访问成本是不利的（Ma等人，2018）。然而，实时语义分割应用需要高速的高效推理。</p><p>为了满足这一需求，基于这两个骨干网络，现有的方法（Badrinarayanan等人，2017；Paszke等人，2016；Zhao等人，2018a；Romera等人，2018；Mazzini 2018）主要采用两种方法来加速模型：（i）输入限制。在相同的网络结构下，较小的输入分辨率会带来较低的计算成本。为了实现实时推理速度，许多算法（Zhao等人2018a；Romera等人2018；Mazzini 2018；Romera等人2018）试图限制输入大小以降低整体计算复杂性；（ii）通道修剪。这是一种直接的加速方法，特别是在早期阶段修剪通道以提升推理速度（Badrinarayanan等人2017；Paszke等人2016；Chollet 2017）。尽管推理速度有所提高，但这两种方法都牺牲了低层次的细节和空间容量，导致准确性急剧下降。因此，同时实现高效率和高精确度是具有挑战性的，对于利用特定的架构进行实时语义分割任务具有重要意义。</p><p>低层次的细节和高层次的语义对于语义分割任务都是至关重要的。在一般语义分割任务的架构中，深度和宽度网络同时编码这两类信息。然而，我们观察到，这两种类型的信息本质上需要不同的架构，即不同的宽度和深度。低层次的细节，通常有高分辨率的特征图，存在于架构的低级阶段，并编码许多不同的模式，因此需要宽通道维度。高层次的语义，通常有低分辨率的特征图，存在于架构的高阶段，需要深层来抽象信息。这促使我们将空间细节和分类语义分开处理，以实现实时语义分割任务的准确性和推理速度之间的权衡。</p><p>为了实现这一目标，<strong>我们提出了一个双路径架构，我们称之为双边分割网络（BiSeNet V2），用于实时语义分割。其中一条通路被设计用来捕捉具有宽通道尺寸和浅层的空间细节，即较大的分支宽度和较小的分支深度，并被称为细节分支。与此相反，另一条途径被引入以提取具有窄通道尺寸和深层的分类语义，即较小的分支宽度和较大的分支深度，并被命名为语义分支。语义分支只需要一个大的感受野来捕捉语义背景，而详细的信息可以由细节分支提供。因此，语义分支可以通过较少的通道维度和快速下采样策略变得非常轻便。这两种类型的特征被合并以构建一个更强大和更全面的特征表示。如图2c所示，这一概念设计导致了一个高效和有效的实时语义分割的架构。</strong></p><p>两个分支都采用不同的深度来编码信息，导致两个特征之间的语义差距。在这项研究中，我们设计了一个引导性的聚合层来有效地合并这两类特征。BiSeNetV1（Yu等人，2018a）采用横向连接来进一步迭代增强语义分支的特征。然而，横向连接对于获得低内存访问成本是不利的。因此，遵循深度监督的理念（Xie和Tu 2015），我们提出了一个带有一系列辅助预测头的助推器训练策略。它在训练阶段逐级增强特征表示能力，并在推理阶段丢弃，不增加任何推理复杂性。广泛的定量和定性评估表明，与最先进的实时语义分割方法相比，所提出的架构显示了良好的性能，如图1所示。</p><p>这项工作的主要贡献总结如下：</p><ul><li><p>我们提出了一个高效的双路径架构，称为双边分割网络，用于实时语义分割，它分别处理空间细节和分类语义。</p></li><li><p>对于语义学分支，我们设计了一个基于深度卷积的新的轻量级结构，以增强感受野并捕获丰富的上下文信息。</p></li><li><p>在不增加推理成本的情况下，引入了增量训练策略来进一步提高分割性能。</p></li><li><p>我们的架构在Cityscapes（Cordts等人，2016）、CamVid（Brostow等人，2008a）、COCO-Stuff（Caesar等人，2018）和ADE20K（Zhou等人，2019）基准测试中取得了令人瞩目的结果。具体来说，我们在Cityscapes测试集上获得了72.6%的平均IoU的结果，在一块NVIDIA GeForce GTX 1080Ti卡上的速度为156 FPS。</p></li></ul><p>这项工作的初步版本发表在（Yu et al. 2018a）。我们对会议版本做了如下扩展。(i) 我们简化了原来的结构，提出了一个高效和有效的实时语义分割架构。我们删除了原始版本中耗时的跨层连接，以获得一个更清晰和更简单的架构。(ii) 我们用更紧凑的网络结构和精心设计的组件重新设计了整体架构。具体来说，我们加深了细节分支以编码更多的细节。我们为语义分支设计了基于深度卷积的轻量级组件。同时，我们提出了一个高效的聚合层，以加强两个路径之间的相互联系。(iii) 我们进行了全面的消融实验，阐述了所提方法的有效性和效率。(iv) 我们在以前的工作中显著提高了该方法的准确性和速度；即对于2048×1024的输入，在Cityscapes测试集上实现了72.6%的平均IoU，在一块NVIDIA GeForce GTX 1080Ti卡上的速度为156FPS。</p><h2 id="2-related-work"><a class="markdownIt-Anchor" href="#2-related-work"></a> 2 Related Work</h2><p>最近几年，图像语义分割取得了重大进展。在本节中，我们的讨论主要集中在与我们工作最相关的三组方法上，即通用语义分割方法、实时语义分割方法和轻量级架构。</p><p><img src="images/image-20230427140405459.png" alt="image-20230427140405459" /></p><blockquote><p>图2 不同骨干网结构的说明。a是扩张骨干网，它去掉了下采样操作，并对相应的卷积滤波器进行上采样。b是编码器-解码器主干网络，它增加了额外的自上而下和横向连接来恢复高分辨率的特征图。网络中的这些连接在内存访问成本方面不太有利。为了同时实现高精度和高效率，我们设计了c双边分割主干网络。这个架构有两个通路，一个是用于空间细节的细节分支，一个是用于分类语义的语义分支。细节分支有宽通道和浅层，而语义分支有窄通道和深层，可以通过系数（λ，例如1/4）使其变得非常轻盈</p></blockquote><h3 id="21-generic-semantic-segmentation"><a class="markdownIt-Anchor" href="#21-generic-semantic-segmentation"></a> 2.1 Generic Semantic Segmentation</h3><p>基于阈值选择（Otsu 1979）、区域生长（Vincent和Soille 1991）、超级像素（Ren和Malik 2003；Achanta等人2012；Van den Bergh等人2012）和图（Boykov和Jolly 2001；Rother等人2004）算法的传统分割方法采用手工制作的特征来解决这个问题。最近，新一代基于FCN的算法（Long等人，2015；Shelhamer等人，2017）在不同的基准上不断提高最先进的性能。各种方法都是基于两种类型的骨干网络：（i）扩张骨干网络，和（ii）编码器-解码器骨干网络。</p><p>一方面，扩张骨干网去掉了下采样操作，对卷积滤波器进行上采样，以保留高分辨率的特征表示。由于扩张卷积的简单性，各种方法（Chen et al. 2018; Chen et al. 2018; Zhao et al. 2017; Wang et al. 2018a; Zhang et al. 2018a;Yuetal.2020b）在其上开发了不同的新颖有效的组件。Deeplabv3（Chen等人，2017）设计了一个tratous空间金字塔池来捕捉多尺度的背景，而PSPNet（Zhao等人，2017）在扩张骨架上采用了金字塔池模块。同时，一些方法引入了注意机制，如自我注意（Yuan and Wang, 2018; Fu et al., 2019; Yu et al., 2020b）、空间注意（Zhao et al. 2018b）和通道注意（Zhang et al. 2018a），来捕捉基于扩张主干的长距离语境。</p><p>另一方面，编码器-解码器骨干网络增加了额外的自上而下和横向的连接，以恢复解码器部分的高分辨率特征图。FCN和Hypercolumns（Hariharan等人，2015）采用跳过连接来整合低层次的特征。同时，U-net（Ronneberger等人，2015）、带有保存的池化指数的SegNet（Badrinarayanan等人，2017）、带有多路径细化的RefineNet（Lin等人，2017）、带有逐步重建的LRR（Ghiasi和Fowlkes，2016）、带有 &quot;大核 &quot;卷积的GCN（Peng等人，2017）和带有通道注意模块的DFN（Yu等人，2018b）都纳入了这个骨干网络来恢复细节信息。HRNet（Wang等人，2020）和Lite-HRNet（Yu等人，2021）采用多分支来保持高解析度。</p><p>这两种类型的骨干网络都是用广义和深义的网络同时编码低级细节和高级语义。尽管这两种类型的骨干网络都达到了最先进的性能，但大多数方法都表现出推理速度缓慢。在这项研究中，我们提出了一种新的、高效的架构，分别处理空间细节和分类语义，以实现分割精度和推理速度之间的有利权衡。</p><h3 id="22-real-time-semantic-segmentation"><a class="markdownIt-Anchor" href="#22-real-time-semantic-segmentation"></a> 2.2 Real-time Semantic Segmentation</h3><p>当要求越来越高的实际应用需要快速互动和响应时，实时语义分割算法吸引了越来越多的关注。SegNet（Badrinarayanan等人，2017）使用紧凑的网络结构和跳过连接来实现高速度。E-Net（Paszke等人，2016）设计了一个轻量级的网络，并提供了一个非常高的推理速度。DLC（Li等人，2017）采用了一个级联网络结构，以减少 &quot;简单区域 &quot;的计算。ERFNet（Romera等人，2018）采用了残差连接和因子化卷积来保持效率和准确性。同时，ESPNet（Mehta等人，2018，2019）设计了一个高效的空间金字塔扩张卷积，用于实时语义分割。DFANet（Li等人，2019b）重用了特征，增强了特征表示，降低了复杂性。</p><p>虽然这些方法可以达到实时推理的速度，但它们往往为了效率而大大牺牲了准确性，主要是由于损失了低层次的细节。在这项工作中，我们同时考虑到了低层次的细节和高层次的语义，以实现高精确度和高效率。</p><p>双分支/多分支架构。这项工作也与实时语义分割任务中的其他双/多分支架构有关。ICNet（Zhao等人，2018a）是第一个用于实时语义分割的多分支架构。它采用了具有不同深度的树枝来处理不同分辨率的输入。低分辨率和中等分辨率的分支部分共享权重。GUN（Mazzini 2018）和ContextNet（Poudel等人，2018）共享ICNet的类似结构。它们对两个分辨率的输入只有两个分支。Fast-SCNN（Poudel等人，2019）遵循BiSeNetV1（Yu等人，2018a）的架构理念。它与BiSeNetV1的不同之处在于，它学习对输入进行向下采样，然后用两个分支处理信息。</p><p>与这些工作不同，我们的研究观察到（i）丰富的图像信息对分割的准确性至关重要，（ii）空间细节和分类语义需要不同的编码结构。因此，我们提出的架构保持了丰富的图像信息，并为空间细节和分类语义分别采用了不同的结构。</p><h3 id="23-lightweight-architecture"><a class="markdownIt-Anchor" href="#23-lightweight-architecture"></a> 2.3 Lightweight Architecture</h3><p>继分组/深度卷积和可分离卷积的开创性工作之后，轻量级架构设计取得了快速发展，包括Xception（Chollet 2017）、MobileNet（Howard等人，2017；Sandler等人，2018）和ShuffleNet（Zhang等人，2018b；Maetal.2018）等等。这些方法在分类任务的速度和准确性之间实现了良好的权衡。在这项研究中，考虑到计算复杂度、内存访问成本和实时语义分割的实际推理速度，我们设计了一个轻量级网络。</p><h2 id="3-bilateral-segmentation-network"><a class="markdownIt-Anchor" href="#3-bilateral-segmentation-network"></a> 3 Bilateral Segmentation Network</h2><p>我们的 BiSeNet 概念是通用的，可以用不同的卷积模型（He 等人，2016 年；Huang 等人，2017 年；Chollet，2017 年；Iandola 等人，2016 年；Howard 等人，2017 年；Sandler 等人，2018 年；Zhang 等人，2018b;Maetal. 2018）以及任何具体的设计。主要有三个关键概念：(i) 细节分支具有宽通道维度和浅层，空间细节的感受野小；(ii) 语义分支具有窄通道维度和深层，分类语义的感受野大。(iii) 设计一个高效的聚合层来融合这两类表征。</p><p>在本节中，我们将展示整体架构的概念和相应的实例，以及其他一些具体设计，如图 3 所示。</p><p><img src="images/image-20230427140538818.png" alt="image-20230427140538818" /></p><blockquote><p>图3 双边分割网络概述。该网络具有三个主要组件：紫色虚线框中的双通道主干、橙色虚线框中的聚合层以及黄色虚线框中的增强组件。双路径主干包含细节分支（蓝色立方体）和语义分支（绿色立方体）。详细分支中的三个阶段分别具有 C1、C2、C3 通道。语义分支中相应阶段的通道可以通过因子 λ(λ &lt; 1) 进行轻量化。语义分支的最后一个阶段是上下文嵌入块的输出。同时，立方体中的数字显示特征图与输入分辨率的比率。在聚合层组件中，我们采用双边聚合层。 Down表示下采样操作，Up表示上采样操作，φ是sigmoid函数，⊗表示元素乘积。此外，在booster组件中，我们设计了一些辅助分割头来提高分割性能，而无需任何额外的推理成本（网上彩图）</p></blockquote><h3 id="31-detail-branch"><a class="markdownIt-Anchor" href="#31-detail-branch"></a> 3.1 Detail Branch</h3><h4 id="concept"><a class="markdownIt-Anchor" href="#concept"></a> Concept.</h4><p>细节分支负责低级空间细节。细节信息具有丰富的模式，需要较高的通道容量，即较宽的通道尺寸。由于低级细节信息通常存在于架构的低级阶段，我们可以设计一种分支层数较少的浅层结构，使该分支的步长较小。总之，细节分支的关键概念是使用宽通道尺寸和浅层，即较大的分支宽度和较小的分支深度来处理空间细节。由于该分支具有高分辨率特征图和宽通道尺寸，考虑到内存访问成本，最好采用 VGGNet（Simonyan 和 Zisserman，2015 年）的架构，而不使用任何残余连接。</p><h4 id="instantiation"><a class="markdownIt-Anchor" href="#instantiation"></a> Instantiation.</h4><p><img src="images/image-20240125021127449.png" alt="image-20240125021127449" /></p><blockquote><p>表 1 细节分支和语义分支的实例化 每个阶段 S 包含一个或多个操作 opr（例如 Conv2d、Stem、GE、CE）。每个操作都有一个内核大小 k、步长 s 和输出通道 c，重复 r 次。扩展因子 e 用于扩展操作的通道数。这里的通道比为 λ = 1/4 。绿色表示在细节分支的相应阶段，语义分支的通道数较少。符号 Conv2d 表示卷积层，之后是一个批处理归一化层和 relu 激活函数。Stem 表示干块。GE 表示聚集扩展层。CE 表示上下文嵌入块</p></blockquote><p>如表 1 所示，细节分支具有树形阶段，每一层都是卷积层，然后是批量归一化（Ioffe 和 Szegedy，2015 年）和激活函数（Glorot 等，2011 年）。每个阶段的第一层的跨距 s = 2，而同一阶段的其他层的滤波器数量和输出特征图大小相同。因此，该分支提取的输出特征图是原始输入的 1/8。由于通道容量大，该细节分支可以编码丰富的空间细节。</p><h3 id="32-semantics-branch"><a class="markdownIt-Anchor" href="#32-semantics-branch"></a> 3.2 Semantics Branch</h3><h4 id="concept-2"><a class="markdownIt-Anchor" href="#concept-2"></a> Concept.</h4><p>与细节分支并行，语义分支旨在捕捉高级语义。该分支的通道尺寸较窄，因为空间细节可由细节分支提供。高级语义需要上下文相关性和较大的感受野。因此，</p><p>(i) 我们采用快速下采样策略来提高特征表示的水平，并快速扩大感受野；</p><p>(ii) 我们采用全局平均池化（Liu 等人，2016 年）来嵌入全局上下文响应。由于采用了快速下采样策略和较窄的通道维度，语义分支是轻量级的，可以由任何高效模型实现（如 Chollet 2017；Iandola 等人，2016；Howardetal.2017；Sandler 等人，2018；Zhang 等人，2018b；Maetal.2018）。</p><h4 id="instantiation-2"><a class="markdownIt-Anchor" href="#instantiation-2"></a> Instantiation.</h4><p>同时考虑到大感受野和高效计算，我们设计了语义分支，其灵感来自轻量级模型的设计，例如 Xception（Chollet 2017）、MobileNet（Howard 等人，2017；Sandler 等人，2018；Howardetal.2019）、ShuffleNet（Zhang 等人，2018b；Maetal.2018）。语义分支与细节分支的通道比例为 λ（λ &lt; 1），以保持较窄的通道维度。语义分支的一些主要特点如下。</p><h4 id="stem-block"><a class="markdownIt-Anchor" href="#stem-block"></a> Stem Block.</h4><p><img src="images/image-20240125021443373.png" alt="image-20240125021443373" /></p><blockquote><p>图 4 干块和上下文嵌入块示意图 a 是干块，采用快速降采样策略。该块有两个分支，以不同的方式对特征表示进行下采样。b 是上下文嵌入块。如第 3.2 节所示，其语义是 如 3.2 节所示，语义分支需要较大的感受野。因此，我们设计了一个具有全局平均池化功能的上下文嵌入块来嵌入全局上下文信息。符号 Conv 是卷积操作。BN 是批归一化。ReLu 是 ReLu 激活函数。Mpooling 是最大池化。GPooling 是全局平均池化。同时，1 × 1、3 × 3 表示内核大小，H × W × C 表示张量形状（高度、宽度、通道维度）。</p></blockquote><p>受（Szegedy 等人，2017；Shen 等人，2017；Wang 等人，2018b）的启发，我们采用干块作为语义分支的第一阶段，如图 4 所示。它采用两种不同的下采样方式来缩小特征表示。两个分支的输出特征被串联起来作为输出。这种结构具有高效的计算成本和有效的特征表达能力。</p><h4 id="context-embedding-block"><a class="markdownIt-Anchor" href="#context-embedding-block"></a> Context Embedding Block.</h4><p>如第 3.2 节所述，语义分支需要较大的感受野来捕捉高级语义。语义分支需要较大的感受野来捕捉高级语义。受（Yu et al. 2018b；Liu et al. 2016；Zhao et al. 2017；Chen et al. 2017）的启发，我们设计了上下文嵌入块。如图 4 所示，该块使用全局平均池化和残差连接（He 等人，2016 年）来高效嵌入全局上下文信息。</p><h4 id="gather-and-expansion-layer"><a class="markdownIt-Anchor" href="#gather-and-expansion-layer"></a> Gather-and-Expansion Layer.</h4><p><img src="images/image-20240125021626289.png" alt="image-20240125021626289" /></p><blockquote><p>图 5 倒置瓶颈层和聚集扩展层示意图。a 是 MobileNetv2 中提出的移动倒置瓶颈层 Conv。bc 为提议的聚合-扩展层。</p><p>瓶颈结构采用 (i) 3 × 3 卷积，收集局部特征响应并扩展到高维空间；(ii) 3 × 3 深度卷积，在扩展层的每个独立输出通道上独立执行；(iii) 1 × 1 卷积，作为投影层，将深度卷积的输出投影到低通道容量空间。当步长 = 2 时，我们在主路径上采用两个核大小 = 3 的深度卷积，并采用 3 × 3 的可分离卷积作为捷径。符号 Conv 是卷积操作。BN 是批量归一化。ReLu 是 ReLu 激活函数。同时，1 × 1、3 × 3 表示内核大小，H × W × C 表示张量形状（高度、宽度、通道维度）。</p></blockquote><p>利用深度卷积的优势，我们提出了 “聚集-扩展层”（gather-and-expansion Layer），如图 5 所示。聚集-扩展层由以下部分组成： (i) 3 × 3 卷积，<strong>用于有效聚合特征响应并扩展到更高维空间</strong>；(ii) 3×3 深度卷积，<strong>在扩展层的每个独立输出通道上独立执行</strong>；(iii) 1 × 1 卷积，作为投影层，<strong>将深度卷积的输出投影到低通道容量空间</strong>。最近的轻量级作品（Tan 等人，2019；Howardetal.2019）大量采用 5 × 5 可分离卷积来扩大感受野。在这一层中，当步长 = 2 时，我们采用两个 3 × 3 深度卷积来代替 5 × 5 深度卷积，以更少的 FLOPs 来扩大感受野。</p><p>与 MobileNetv2 中的倒置瓶颈不同，GE 层多了一个 3 × 3 卷积。这是因为 3 × 3 卷积在 CUDNN 库（Chetlur 等人，2014 年）中进行了专门优化。在 ShuffleNetV2（Ma 等人，2018 年）中也观察到，3 × 3 卷积并不比 1 × 1 卷积慢多少。3 × 3 卷积具有更大的感受野，有利于语义分支。因此，它是在分割准确性和效率之间权衡的一个不错选择。</p><h3 id="33-bilateral-guided-aggregation"><a class="markdownIt-Anchor" href="#33-bilateral-guided-aggregation"></a> 3.3 Bilateral Guided Aggregation</h3><h4 id="concept-3"><a class="markdownIt-Anchor" href="#concept-3"></a> Concept.</h4><p>这两个分支都有不同的深度和宽度，导致了两个特征表示之间的语义差距。两个分支的下采样策略也不同，因此产生了分辨率差距。因此，需要一个聚合层来补偿语义和分辨率上的差距，以合并两种类型的特征表示。</p><h4 id="instantiation-3"><a class="markdownIt-Anchor" href="#instantiation-3"></a> Instantiation.</h4><p><img src="images/image-20240125021856207.png" alt="image-20240125021856207" /></p><blockquote><p>图 6 双边导引聚合层的详细设计。符号 Conv 是卷积操作。DWConv 是深度卷积。APooling 表示平均池化。BN 表示批量归一化。Upsample 表示双线性插值。Sigmoid 是指 sigmoid 激活函数。Sum 表示求和。同时，1×1、3×3 表示核大小，H ×W ×C 表示张量形状（高度、宽度、通道维度），⊗ 表示元素乘积</p></blockquote><p><strong>简单的组合，即元素相加和串联，忽略了两类信息的多样性，导致性能更差，难以优化。</strong></p><p>基于这些观察，我们提出了双边引导聚合层，以融合来自两个分支的互补信息，如图6所示。该层采用语义分支的上下文信息来指导细节分支的特征响应。利用不同尺度的引导，我们可以捕捉到不同尺度的特征表现，内在地对多尺度信息进行编码。同时，与简单的组合方式相比，这种引导方式能够实现两个分支之间的有效沟通。</p><h3 id="34-booster-training-strategy"><a class="markdownIt-Anchor" href="#34-booster-training-strategy"></a> 3.4 Booster Training Strategy</h3><p>阶段性地增强语义是有利于语义分支的。然而，BiSeNetV1使用的横向连接对获得低内存访问成本是不利的。在深度监督（Xie和Tu 2015）之后，我们提出了一个助推器训练策略。顾名思义，它类似于火箭助推器。它在训练阶段增强了特征表示，并在推理阶段被丢弃。它为每个阶段增加约束条件，以增强语义信息。</p><p>因此，在推理阶段，它不会增加任何计算的复杂性。如图3所示，我们可以将辅助分割头插入到语义分支的不同位置。在第4.1节中，我们对辅助分割头进行了分析。4.1中，我们分析了在不同位置插入的效果。图7说明了分割头的细节。我们可以通过控制通道尺寸Ct来调整辅助分割头和主分割头的计算复杂性。</p><p><img src="images/image-20240125022108332.png" alt="image-20240125022108332" /></p><blockquote><p>图 7 Booster 中分割头的详细设计。符号 Conv 表示卷积操作。BN 表示批量归一化。Upsample 表示双线性插值。同时，1 × 1、3 × 3 表示内核大小，H ×W ×C 表示张量形状（高度、宽度、通道维度），C 表示通道维度，S 表示上采样比例，N 是最终输出维度。</p></blockquote><h2 id="4-experimental-results"><a class="markdownIt-Anchor" href="#4-experimental-results"></a> 4 Experimental Results</h2><p>在本节中，我们首先介绍数据集和实施细节。接下来，我们将研究我们提出的方法的每个组成部分对Cityscapes验证集的影响。最后，我们报告在不同基准上与其他算法相比的最终准确率和速度结果。</p><p><strong>Datasets.</strong> Cityscapes（Cordts 等人，2016 年）侧重于从汽车的视角对城市街景进行语义理解。该数据集分为训练集、验证集和测试集，分别包含 2975 张、500 张和 1525 张图像。在我们的实验中，我们只使用精细标注的图像来验证我们所提方法的有效性。注释包括 30 个类别，其中 19 个类别用于语义分割任务。该数据集具有 2048 × 1024 的高分辨率，因此对实时语义分割具有挑战性。</p><p>Cambridge-driving 标签视频数据库（CamVid）（Brostow 等人，2008a）是一个从汽车行驶视角出发的道路场景数据集。它包含从视频序列中提取的 701 幅分辨率为 960 × 720 的图像。按照 Brostow 等人（2008b）、Sturgess 等人（2009）和 Badrinarayanan 等人（2017）的开创性工作，这些图像被分成 367 幅用于训练，101 幅用于验证，233 幅用于测试。为了与其他方法进行公平比较，我们使用了所提供的 32 个候选类别中的 11 个类别子集。不属于这些类别的像素将被忽略。</p><p>COCO-Stuff（Caesar 等人，2018 年）在广受欢迎的 COCO（Lin 等人，2014 年）数据集的 10K 张复杂图像上添加了密集的内容注释。对于实时语义分割来说，这也是一个具有挑战性的数据集，因为它有更复杂的类别，包括 91 个事物类和 91 个东西类用于评估。为了进行公平比较，我们按照（Caesar 等，2018 年）中的拆分方法，使用 9K 幅图像进行训练，使用 1K 幅图像进行测试。</p><p>ADE20K（Zhou 等人，2019 年）是一个场景理解数据集，包含 20K 张训练图像和 2K 张验证图像，最多可有 150 个类别标签。由于类别繁多且场景具有挑战性，该数据集对实时语义分割方法而言具有相当大的挑战性。</p><p><strong>Training.</strong> 我们的模型是采用（He 等人，2015 年）中提出的初始化方式从头开始训练的。我们使用动量为 0.9 的随机梯度下降（SGD）算法来训练模型。对于所有数据集，我们都采用了 16 个批次的规模。对于 Cityscapes 和 CamVid 数据集，权重衰减为 0.0005，而对于 COCO-Stuff 和 ADE20K 数据集，权重衰减为 0.0001。我们注意到，权重衰减正则化仅用于卷积层的参数。初始速率设置为 5e-2，采用 &quot;多 &quot;学习速率策略，即初始速率乘以（1 - iter itersmax ）幂，每次迭代的幂为 0.9。此外，我们对 Cityscapes、CamVid、COCOStuff 和 ADE20K 数据集的模型分别进行了 150K、10K、20K 和 150K 次迭代训练。</p><p>在增强训练中，我们将输入图像随机水平翻转、随机缩放和随机裁剪成固定大小。随机比例包含{0.75, 1, 1.25, 1.5, 1.75, 2.0}。裁剪后的分辨率分别为：Cityscapes 为 2048 × 1024，CamVid 为 960 × 720，COCO-Stuff 为 640 × 640，ADE20K 为 480 × 480。此外，Cityscapes 的增强输入将调整为 1024 × 512 分辨率，以训练我们的模型。</p><p><strong>Inference.</strong> 我们没有采用任何评估技巧，例如滑动窗口评估和多尺度测试，这些方法虽然可以提高准确性，但却非常耗时。对于Cityscapes，输入分辨率为 2048×1024，我们首先将其调整为 1024×512 的分辨率进行推理，然后将预测调整为输入的原始尺寸。我们只用一块 GPU 卡测量推理时间，并重复 5000 次迭代以消除误差波动。我们注意到，调整大小的时间包含在推理时间的测量中。换句话说，在测量推理时间时，实际输入大小为 2048 × 1024。同时，我们对 Cityscapes 和 CamVid 数据集采用了平均交集联合度量（mIoU）这一标准度量，而 COCO-Stuff 和 ADE20K 数据集则采用了平均交集联合度量（mIoU）和像素精度（pixAcc）作为度量。</p><p><strong>Setup.</strong> 我们基于 PyTorch 1.0 进行了实验。模型被转换为 ONNX 格式，并用 TensorRT v5.1.51 进行了优化。与其他方法相比，推理时间是在一台 NVIDIA GeForce GTX 1080Ti 上运行 CUDA 9.0 和 CUDNN 7.0 得到的。</p><p>我们还报告了采用 TensorRT 优化技术的英伟达 Jetson TX2 上的推理时间。</p><h3 id="41-ablative-evaluation-on-cityscapes"><a class="markdownIt-Anchor" href="#41-ablative-evaluation-on-cityscapes"></a> 4.1 Ablative Evaluation on Cityscapes</h3><p>本节将介绍消融实验，以验证我们方法中每个组件的有效性。在接下来的实验中，我们将在 Cityscapes（Cordts 等人，2016 年）训练集上训练我们的模型，并在 Cityscapes 验证集上进行评估。</p><p><img src="images/image-20240125023204665.png" alt="image-20240125023204665" /></p><blockquote><p>表 2  Cityscapes的消融实验。我们逐步验证了每个组件的有效性。我们展示了分割准确率（mIoU%）和以 GFLOPs 为单位的计算复杂度（输入空间大小为 2048 × 1024）。符号： Detail 是细节分支。Semantics 是语义分支。BGA 表示双边引导聚合层。Booster 指助推训练策略。OHEM 是难样本挖掘</p></blockquote><p><img src="images/image-20240125023359617.png" alt="image-20240125023359617" /></p><blockquote><p>图 8 显示细节分支不同阶段可视化解释的示例。根据 Grad-CAM（Selvaraju 等人，2017 年），我们将细节分支的 Grad-CAM 可视化。可视化结果表明，细节分支可以关注空间细节，例如边界，逐渐地</p></blockquote><p><strong>Individual pathways.</strong> 我们首先具体探讨了单个路径的效果。表 2 的前两行说明了仅使用一条路径的分割精度和计算复杂度。细节分支缺乏足够的高级语义，而语义分支则缺乏低级空间细节，导致结果不尽人意。图 8 显示了对细节分支空间细节的逐步关注。表 2 中的第二组显示，在所有情况下，两个分支的不同组合都比只有一个途径的模型要好。这两个分支可以提供互补的表征，从而实现更好的分割性能。单独的语义分支和细节分支分别只能达到 64.68% 和 62.35% 的 mIoU。然而，通过简单求和，语义分支比细节分支提高了 6% 以上，而细节分支比语义分支提高了 4%。这一观察结果表明，这两种表征对于实时语义分割任务来说是互补的，也是必不可少的。</p><p><img src="images/image-20240125023515259.png" alt="image-20240125023515259" /></p><blockquote><p>图 9 双侧引导聚合层对城市景观阀集的视觉改进</p></blockquote><p><strong>Aggregation methods.</strong> 我们还研究了两个分支的聚合方法，如表 2 所示。为了实现高效聚合，我们设计了双边引导聚合层，它采用高层语义作为聚合多尺度低层细节的引导。我们还展示了不使用双边引导聚合层的两种变体，即两个分支输出的求和与并集。为了进行公平比较，求和与合并的输入分别经过一个可分离层。图 9 展示了细节分支、语义分支和两个分支汇总后的可视化输出。这说明细节分支可以提供足够的空间细节，而语义分支则可以捕捉语义上下文。</p><p><img src="images/image-20240125023640388.png" alt="image-20240125023640388" /></p><blockquote><p>表 3  Cityscapes上语义分支设计的消融。我们对语义分支的信道容量、区块设计和扩展率进行了实验研究。符号： GLayer 表示聚集层，即 GE 层中的第一个 3 × 3 卷积。DDWConv 表示双深度卷积层</p></blockquote><p>表 3 展示了语义分支设计的一系列分析实验。</p><p><strong>Channel capacity of the semantics branch.</strong> 如第 3.2 节所述，语义分支负责高层语义，不考虑空间细节。语义分支负责高层语义，不考虑空间细节。因此，语义分支可以用窄信道维度变得非常轻量级，而窄信道维度是用信道容量比 λ 来修改的。</p><p>不同的 λ 会对纯细节基线产生不同程度的改进。即使在 λ = 1/16 的情况下，语义分支的第一层也只有 4 个通道维度，相对于基线提高了 6% (62.35% → 68.27%)。在此，我们采用 λ = 1/4 作为默认值。</p><p><strong>Block design of the semantics branch.</strong> 按照先驱者的工作（Sandler 等人，2018；Howardetal.2019），我们设计了一个聚集膨胀层，如第 3.2 节所述和图 5 所示。3.2 节中的讨论和图 5 中的说明。主要改进有两方面：(i) 我们采用一个 3 × 3 卷积作为聚合层，而不是 MobileNetV2（Sandler 等人，2018 年）倒置瓶颈中的一个点向卷积；(ii) 当步长 = 2 时，我们采用两个 3 × 3 深度卷积来替代一个 5 × 5 深度卷积。</p><p><strong>Expansion ratio of GE layer.</strong> GE 层中的第一个 3 × 3 卷积层也是一个扩展层，可以将输入投射到高维空间。它在内存访问成本方面具有优势（Sandler 等人，2018 年；Howard 等人，2019 年）。扩展比可以控制该层的输出维度。表 3c 研究了改变 . 令人惊讶的是，即使在 = 1 的情况下，语义分支也能将基线的平均 IoU 提高 4% (62.35% → 67.48%)，验证了轻量级语义分支的高效性和有效性。</p><p><img src="images/image-20240125023933653.png" alt="image-20240125023933653" /></p><blockquote><p>表 4 助推器位置。我们可以在不同位置添加辅助切分头作为语义分支的助推器。这里，stages表示在s stage之后添加辅助分割头。 stage5_4和stage5_5分别表示上下文嵌入块之前和之后的位置。 OHEM代表在线引导策略</p></blockquote><p><strong>Booster training strategy.</strong> 如第 3.4 节所述，我们提出了一种助推器训练策略，以进一步提高分割精度。3.4. 我们在训练阶段将图 7 所示的分割头插入语义分支的不同位置，这些分割头在推理阶段会被丢弃。因此，它们不会增加推理阶段的计算复杂度，这与火箭的助推器类似。表 4 显示了在不同位置插入分割头的效果。可以看出，助推器训练策略可以明显提高分割精度。我们选择表 4 中第三行的配置，在不影响推理速度的情况下，平均 IoU 进一步提高了 3% 以上（69.67% → 73.19%）。在此配置的基础上，我们采用了在线引导策略（Wu 等人，2016 年）来进一步提高性能。</p><h3 id="42-generalization-capability"><a class="markdownIt-Anchor" href="#42-generalization-capability"></a> 4.2 Generalization Capability</h3><p><img src="images/image-20240125023951104.png" alt="image-20240125023951104" /></p><blockquote><p>表 5 大型模型的推广。我们从两个方面扩大我们的模型：（i）更宽的模型； (ii) 更深层次的模型</p></blockquote><p><img src="images/image-20240125024034887.png" alt="image-20240125024034887" /></p><blockquote><p>表 6 与其他型号的兼容性。我们采用不同的轻量级模型作为语义分支来探索我们架构的兼容性</p></blockquote><p>在本节中，我们将主要探讨我们提出的架构的泛化能力。首先，我们研究了表 5 中更宽模型和更深模型的性能。接下来，我们用其他一些通用轻量级模型替换语义分支，以探索与表 6 所示结果的兼容性。</p><p><strong>Generalization to large models.</strong> 虽然我们的架构主要是为轻量级任务（如实时语义分割）设计的，但 BiSeNet V2 也可以推广到大型模型。表 5 显示了不同宽度乘数 α 和不同深度乘数 d 下更宽模型的分割精度和计算复杂度。根据实验结果，我们选择 α = 2.0 和 d = 3.0 来构建我们的大型架构，称为 BiSeNetV2-Large；该架构实现了 75.8% 的 mIoU 和 GFLOPs。</p><p><strong>Compatibility with other models.</strong> BiSeNetV2 是一个具有两个分支的通用架构。在这项工作中，我们为语义分支设计了一些特定的模块。语义分支可以是任何轻量级卷积模型（He 等人，2016；Howardetal.2017）。因此，为了探索我们架构的兼容性，我们用不同的通用轻量级模型进行了一系列实验。表 6 显示了与不同模型的组合结果。</p><h3 id="43-performance-evaluation"><a class="markdownIt-Anchor" href="#43-performance-evaluation"></a> 4.3 Performance Evaluation</h3><p>在本节中，我们将在四个基准数据集上比较我们的最佳模型（BiSeNetV2 和 BiSeNetV2-Large）和其他最先进的方法： Cityscapes、CamVid、COCO-Stuff 和 ADE20K。最后，我们报告了在英伟达 Jeston TX2 上的运行效率。</p><p><img src="images/image-20240125024149046.png" alt="image-20240125024149046" /></p><blockquote><p>表 7 与Cityscapes最先进技术的比较。我们使用 2048 × 1024 分辨率输入来训练和评估我们的模型，该输入在模型中调整为 1024 × 512。推理时间是在一张 NVIDIA GeForce 1080Ti 卡上测量的。符号：γ为原始2048×1024分辨率对应的降采样比。 backbone 表示在 ImageNet 数据集上预训练的主干模型。 † 表示模型是从头开始训练的。 “-”表示该方法没有报告相应的结果。 DFANet A和DFANet B采用1024×1024输入尺寸并使用优化的深度卷积来提高速度</p></blockquote><p><strong>Cityscapes.</strong> 我们介绍了 BiSeNetV2 在Cityscapes测试集上的分割精度和推理速度。我们使用 2048 × 1024 输入的训练集和验证集来训练我们的模型，这些模型首先被调整为 1024 × 512 分辨率。然后，在测试集上对模型进行评估。推理时间的测量是在一块 NVIDIA GeForce 1080Ti 显卡上进行的。表 7 报告了我们的方法与最先进方法的比较结果。第一组是非实时方法，包括 CRF-RNN（Zheng 等人，2015 年）、Deeplab-CRF（Chen 等人，2015 年）、FCN-8S（Long 等人，2015 年）、Dilation10（Yu 等人，2015 年 2015）、Dilation10（Yu 和 Koltun，2016）、LRR（Ghiasi 和 Fowlkes，2016）、Deeplabv2-CRF（Chen 等，2018）、FRRN（Pohlen 等，2017）、RefineNet（Lin 等，2017）、DUC（Wang 等，2018a）、PSPNet（Zhao 等，2017）。实时语义分割算法列在第二组，包括ENet（Paszke等人，2016）、SQ（Treml等人，2016）、ESPNet（Mehta等人，2018）、ESPNetV2（Mehta等人，2019）、ERFNet（Romera等人，2018）、Fast-SCNN（Poudel等人，2019）、ICNet（Zhao等人，2018a）、DABNet（Lietal.2019 a）、DFANet（Li 等人，2019b）、GUN（Mazzini，2018）、SwiftNet（Orsic 等人，2019）、SwiftNet-pyr（Orsic 和 Segvic，2021）以及 BiSeNetV1（Yu 等人，2018a）。第三组是复杂程度不同的我们的方法。</p><p>如表 7 所示，我们的方法以 156 FPS 实现了 72.6% 的平均 IoU。与其他大多数实时方法相比，BiSeNetV2 实现了更好的分割结果和更高的推理速度。与 DFANet 相比，BiSeNetV2 在推理速度相当的情况下获得了更高的分割结果。与 SwiftNet 和 SwiftNet-pyr 相比，BiSeNetV2 的结果较低，但推理速度却高得多。这些方法采用的预训练模型可以显著提高性能。我们的模型都是从头开始训练的。随着模型规模的扩大，BiSeNetV2-Large 实现了 75.3% 的平均 IoU 和 47.3 FPS。这些结果甚至优于表 7 第一组中的一些非实时算法。我们注意到，许多非实时方法可能会采用一些评估技巧，例如多尺度测试和多作物评估，这虽然能显著提高准确性，但却非常耗时。因此，出于对推理速度的考虑，我们没有采用这种策略。为了更加直观，我们在图 1 中说明了性能和速度之间的权衡。为了突出我们方法的有效性，我们还在图 11 中展示了 BiSeNetV2 在Cityscapes上的一些可视化示例。</p><p><strong>CamVid.</strong> 表 8 显示了 CamVid 数据集的统计准确度指标和速度结果。在推理阶段，我们使用训练数据集和验证数据集以 960 × 720 分辨率输入来训练我们的模型。我们的模型与一些非实时算法进行了比较，即 SegNet（Badrinarayanan 等人，2017 年）、Deeplab（Chen 等人，2015 年）、RTA（Huang 等人，2018 年）、Dilate8（Yu 和 Koltun，2016 年）、PSPNet（Zhao 等人，2017 年）、VideoGCRF（Chandra 等人，2018 年）和 DenseDecec。2018）和 DenseDecoder（Bilinski 和 Prisacariu 2018），以及实时算法，即 ENet（Paszke 等人，2016）、ICNet（赵等人，2018a）、DABNet（李等人，2019a）、DFANet（李等人，2019b）、SwiftNet（Orsic 等人，2019）、SwiftNet-pyr（Orsic 和 Segvic，2021）、BiSeNetV1（于等人，2018a）。</p><p>与大多数方法相比，BiSeNetV2 以更高的推理速度实现了更高的分割精度。与 DFANet 相比，BiSeNetV2 的推理速度更慢，但获得的分割结果却高得多。此外，我们还研究了预训练数据集对 CamVid 的影响。表 8 的最后两行显示，在 CamVid 测试集上，Cityscapes 的预训练可将平均 IoU 大幅提高 6% 以上。</p><p><img src="images/image-20240125024417827.png" alt="image-20240125024417827" /></p><blockquote><p>表 9 与 COCO-Stuff 上最新技术的比较。我们的模型使用 640 × 640 分辨率的输入进行训练和评估。符号：backbone表示在ImageNet数据集上预训练的backbone模型</p></blockquote><p><strong>COCO-Stuff.</strong> 我们还在表 9 中报告了在 COCO-Stuff 验证数据集上的准确度和速度结果。在推理阶段，我们将输入填充为 640 × 640 分辨率。为了公平比较（Long 等人，2015；Chen 等人，2018；Zhao 等人，2017，2018a），我们没有采用任何耗时的测试技巧，如多尺度和翻转测试。即使对于该数据集中更复杂的类别，与先驱工作相比，我们的 BiSeNetV2 仍然显示出更高的效率，并实现了相当的准确性。</p><p><img src="images/image-20240125024442020.png" alt="image-20240125024442020" /></p><blockquote><p>表 10 与 ADE20K 验证集上最新技术的比较。我们的模型使用 480 × 480 分辨率的输入进行训练。所有方法都报告单尺度结果，无需任何测试技巧。符号：backbone表示在ImageNet数据集上预训练的主干模型。 RT表示实时推理速度</p></blockquote><p><strong>ADE20K.</strong> 表 10 报告了我们的方法和其他最先进方法的结果，包括 CPNet（Yu 等人，2020b）、RGNet（Yu 等人，2020a）、PSANet（Zhao 等人，2018b）、PSPNet（Zhao 等人，2017）、Dilated FCN（Chen 等人，2018）和 Swift-pyr（Orsic 和 Segvic，2021）。BiSeNetV2 实现了 29.2% 的 mIoU。在扩展到更大的模型后，BiSeNetV2-Large 获得了 32.5% 的 mIoU。这些结果验证了我们方法的泛化能力和模型容量。与大型模型相比，我们的方法以更快的推理速度和更低的复杂度取得了更低的结果。与 SwiftNet-pyr 相比，BiSeNetV2-Large 的结果相当。我们注意到 SwiftNet-pyr 采用了预训练模型，这对 ADE20K 数据集尤其重要，因为该数据集包含许多类别。</p><p><img src="images/image-20240125024513307.png" alt="image-20240125024513307" /></p><blockquote><p>图 10 不同输入分辨率下 NVIDIA Jetson TX2 的推理速度。两个模型都使用 TensorRT 以 FP32 (a) 和 FP16 精度 (b) 进行优化</p></blockquote><p>Jetson TX2 上的运行效率。我们在搭载 PyTorch 和 TensorRT 框架的英伟达 Jetson TX2 上使用我们的方法来测量推理时间。TX2 的技术规格如下所示： 人工智能性能：1.33 TFLOPs；内存：8 GB 128 位 LPDDR4，59.7GB/s。图 10 显示了 BiSeNetV2 和 BiSeNetV2-Large 在 32 位（FP32）和 16 位（FP16）浮点精度下的推理速度。由于资源有限，我们没有在 1024 × 2048 分辨率下进行实验。</p><h2 id="5-concluding-remarks"><a class="markdownIt-Anchor" href="#5-concluding-remarks"></a> 5 Concluding Remarks</h2><p>我们发现，语义分割任务既需要低级细节，也需要高级语义。我们提出了一种将空间细节和分类语义分开处理的新架构，即双边分割网络（BiSeNetV2）。BiSeNetV2 框架是一种通用架构，可由大多数卷积模型实现。我们的 BiSeNetV2 实现在分割准确性和推理速度之间取得了良好的平衡。我们希望 BiSeNetV2 这一通用架构能促进语义分割领域的进一步研究。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SegNet</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SegNet/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/SegNet/</url>
      
        <content type="html"><![CDATA[<h1 id="segnet"><a class="markdownIt-Anchor" href="#segnet"></a> SegNet</h1><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>我们提出了一种用于语义像素分割的新型实用深度全卷积神经网络架构，称为 SegNet。 这种可训练的核心分割引擎由一个编码器网络、一个相应的解码器网络和一个像素分类层组成。编码器网络的架构在拓扑结构上与 VGG16 网络中的 13 个卷积层相同[1]。解码器网络的作用是将低分辨率编码器特征图映射到全输入分辨率特征图，以进行像素分类。SegNet 的新颖之处在于解码器对低分辨率输入特征图进行上采样的方式。具体来说，解码器使用在相应编码器的最大池化步骤中计算出的池化指数来执行非线性上采样。这样就无需学习上采样。上采样图是稀疏的，然后与可训练滤波器卷积，生成密集的特征图。我们将提议的架构与广泛采用的 FCN [2] 以及著名的 DeepLab-LargeFOV [3] 和 DeconvNet [4] 架构进行了比较。这种比较揭示了实现良好分割性能所涉及的内存与精度权衡问题。</p><p>SegNet 主要受场景理解应用的启发。因此，它的设计在内存和推理过程中的计算时间方面都很高效。与其他同类架构相比，SegNet 的可训练参数数量要少得多，而且可以使用随机梯度下降法进行端到端训练。我们还在道路场景和 SUN RGB-D 室内场景分割任务中对 SegNet 和其他架构进行了对照基准测试。这些定量评估结果表明，与其他架构相比，SegNet 具有良好的性能，推理时间具有竞争力，推理内存效率最高。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 INTRODUCTION</h2><p>语义分割具有广泛的应用范围，从场景理解、推断物体之间的支持关系到自动驾驶。早期依赖低级视觉线索的方法很快就被流行的机器学习算法所取代。特别是，深度学习最近在手写数字识别、语音、整个图像的分类和图像中物体的检测方面取得了巨大成功 [5]，[6]。现在，人们对语义像素标注法[7][8][9][2][4][10][11][12][13][3][14][15][16]产生了浓厚的兴趣。然而，最近的一些方法试图直接采用为类别预测而设计的深度架构来进行像素标注[7]。结果虽然非常令人鼓舞，但却显得粗糙[3]。这主要是因为最大池化和子采样降低了特征图的分辨率。我们设计 SegNet 的动机就来自于这种将低分辨率特征映射到输入分辨率以进行像素分类的需要。这种映射必须产生有助于准确边界定位的特征。</p><p>我们的 SegNet 架构旨在成为像素语义分割的高效架构。它主要受道路场景理解应用的启发，这些应用需要对外观（道路、建筑）、形状（汽车、行人）进行建模，并理解不同类别（如道路和人行道）之间的空间关系（上下文）。在典型的道路场景中，大部分像素都属于道路、建筑等大类，因此网络必须能产生平滑的分割。引擎还必须能够根据物体的形状来划分物体，尽管它们的尺寸很小。因此，在提取的图像表征中保留边界信息非常重要。从计算的角度来看，网络在推理过程中的内存和计算时间都必须高效。采用随机梯度下降（SGD）[17] 等有效的权重更新技术对网络中的所有权重进行联合优化，从而实现端到端训练，这也是一种额外的优势，因为它更容易重复。SegNet 的设计就是为了满足这些标准。</p><p>SegNet 中的编码器网络在拓扑结构上与 VGG16 [1] 中的卷积层完全相同。我们去掉了 VGG16 中的全连接层，这使得 SegNet 编码器网络比许多其他最新架构更小，更容易训练 [2]、[4]、[11]、[18]。SegNet 的关键部分是解码器网络，它由分层的解码器组成，每个编码器对应一个解码器。其中，相应的解码器使用从相应编码器接收到的最大池化指数对其输入特征图进行非线性上采样。这一想法来自为无监督特征学习设计的架构[19]。在解码过程中重复使用最大池化指数有几个实际优势：(i) 它改善了边界划分，(ii) 它减少了参数数量，实现了端到端的训练，(iii) 这种形式的上采样可以纳入任何编码器-解码器架构，如 [2]、[10]，只需稍加修改。</p><p>本文的主要贡献之一是分析了 SegNet 解码技术和广泛使用的全卷积网络（FCN）[2]。这是为了表达设计分割架构时的实际权衡。最近用于分割的深度架构大多采用相同的编码器网络，即 VGG16，但在解码器网络、训练和推理形式上有所不同。另一个共同特点是，它们的可训练参数高达数亿量级，因此在进行端到端训练时会遇到困难[4]。训练这些网络的困难导致了多阶段训练[2]、将网络附加到预训练架构（如 FCN）[10]、使用辅助工具（如推理的区域建议）[4]、分类和分割网络的分离训练[18]以及使用额外的训练数据进行预训练[11][20]或全面训练[10]。此外，性能提升后处理技术[3]也很流行。虽然所有这些因素都提高了在具有挑战性的基准上的性能[21]，但遗憾的是，很难从它们的定量结果中找出实现良好性能所必需的关键设计因素。因此，我们分析了其中一些方法[2]、[4]所使用的解码过程，并揭示了它们的优缺点。</p><p>我们评估了 SegNet 在两个场景分割任务上的性能，即 CamVid 道路场景分割 [22] 和 SUN RGB-D 室内场景分割 [23]。多年来，Pascal VOC12 [21] 一直是场景分割的基准挑战。然而，这项任务的大部分内容都是一个或两个前景类，周围是千差万别的背景。这暗中有利于用于检测的技术，正如最近关于解耦分类-分割网络的工作[18]所示，分类网络可以使用大量弱标签数据集进行训练，独立分割网络的性能也得到了提高。文献[3]中的方法还利用分类网络的特征图和独立的 CRF 后处理技术来进行分割。此外，还可以通过使用额外的推理辅助工具（如区域建议[4]、[24]）来提高性能。因此，它不同于场景理解，后者的理念是利用物体和其他空间上下文的共现进行稳健的分割。为了展示 SegNet 的功效，我们提供了一个实时在线演示，将道路场景划分为 11 个自动驾驶感兴趣的类别（见图 1 中的链接）。图 1 显示了在谷歌随机取样的道路场景图像和 SUN RGB-D 数据集[23]的室内测试场景上生成的一些测试结果示例。</p><p>本文的其余部分安排如下。在第 2 节中，我们回顾了近期的相关文献。第 3 节介绍 SegNet 架构及其分析。在第 4 节中，我们将评估 SegNet 在室外和室内场景数据集上的性能。随后，我们在第 5 节中对我们的方法进行了一般性讨论，并对未来的工作进行了展望。最后，我们将在第 6 节中进行总结。</p><h2 id="2-literature-review"><a class="markdownIt-Anchor" href="#2-literature-review"></a> 2 LITERATURE REVIEW</h2><p>具有挑战性的数据集[21]、[22]、[23]、[25]、[26]推动着语义像素分割成为一个活跃的研究课题。在深度网络出现之前，性能最好的方法大多依赖于人工设计的独立像素分类特征。通常情况下，将补丁输入分类器，如随机森林分类器 [27]、[28] 或提升分类器 [29]、[30] 来预测中心像素的类别概率。CamVid 道路场景理解测试 [22] 探索了基于外观 [27] 或 SfM 和外观 [28]、[29]、[30] 的特征。然后使用成对或更高阶的 CRF [29], [30]，对这些来自分类器的每像素噪声预测（通常称为单项）进行平滑处理，以提高准确性。最新的方法旨在通过尝试预测补丁中所有像素的标签，而不是只预测中心像素的标签，来生成高质量的单词。这种方法提高了基于随机森林的单体分类结果[31]，但薄结构类的分类结果较差。从 CamVid 视频中计算出的密集深度图也被用作使用随机森林分类的输入[32]。另一种方法主张结合使用流行的手工设计特征和时空超像素化来获得更高的准确率[33]。在 CamVid 测试中表现最好的技术[30]通过在 CRF 框架中将物体检测输出与分类器预测相结合，解决了标签频率不平衡的问题。所有这些技术的结果都表明，需要改进分类特征。</p><p>自纽约大学数据集[25]发布以来，室内 RGBD 像素语义分割也越来越受欢迎。该数据集显示了深度通道对改进分割的有用性。他们的方法使用 RGB-SIFT、深度-SIFT 和像素位置等特征作为神经网络分类器的输入，来预测像素的单值。然后使用 CRF 对有噪声的单元进行平滑处理。为了获得更高的准确率[34]，我们使用了更丰富的特征集（包括 LBP 和区域分割）进行改进，然后再使用 CRF。在最近的研究中[25]，使用基于 RGB 和深度的线索组合，同时推断类别分割和支持关系。另一种方法侧重于实时联合重建和语义分割，使用随机森林作为分类器 [35]。Gupta 等人[36]在进行类别分割之前使用了边界检测和分层分组。所有这些方法的共同点是使用人工设计的特征对 RGB 或 RGBD 图像进行分类。</p><p>最近，深度卷积神经网络在物体分类方面的成功使研究人员开始利用其特征学习能力来解决结构化预测问题，如分割。也有人尝试将为物体分类设计的网络应用于分割，特别是通过分块复制最深层特征来匹配图像维度 [7]、[37]、[38]、[39]。然而，这样得到的分类结果是块状的 [38]。另一种方法是使用递归神经网络 [40] 将多个低分辨率预测合并，以创建输入图像分辨率预测。这些技术已经比手工设计的特征有所改进[7]，但它们划分边界的能力较差。</p><p>最新的深度架构[2]、[4]、[10]、[13]、[18]特别针对分割而设计，通过学习解码或将低分辨率图像表征映射到像素级预测，推动了先进技术的发展。在所有这些架构中，产生这些低分辨率表示的编码器网络是 VGG16 分类网络[1]，它有 13 个卷积层和 3 个全连接层。该编码器网络的权重通常是在大型 ImageNet 物体分类数据集上预先训练的[41]。解码器网络在这些架构中各不相同，是负责为每个像素生成多维特征以进行分类的部分。</p><p>全卷积网络 (FCN) 架构 [2] 中的每个解码器都会学习对其输入特征图进行上采样，并将其与相应的编码器特征图相结合，生成下一个解码器的输入。这种架构的编码器网络有大量可训练参数（1.34 亿），但解码器网络却很小（0.5 亿）。该网络的总体规模较大，因此很难对相关任务进行端到端训练。因此，作者采用了分阶段的训练过程。在此，解码器网络中的每个解码器都被逐步添加到现有的训练网络中。该网络一直发展到无法观察到性能的进一步提高为止。这种增长在三个解码器之后停止，因此忽略高分辨率特征图肯定会导致边缘信息的丢失 [4]。除了与训练相关的问题，在解码器中重复使用编码器特征图的需要也使其在测试时占用大量内存。我们将更详细地研究这种网络，因为它是其他最新架构的核心[10]、[11]。</p><p>通过在 FCN 上附加递归神经网络（RNN）[10]，并在大型数据集上对其进行微调[21]、[42]，FCN 的预测性能得到了进一步提高。RNN 层模仿了 CRF 的锐利边界划分能力，同时利用了 FCN 的特征表示能力。研究结果表明，与 FCN-8 相比，RNN 有明显的改进，但同时也表明，当使用更多的训练数据来训练 FCN-8 时，这种差异会减小。当 CRF-RNN 与 FCN8 等架构联合训练时，它的主要优势就显现出来了。最近的其他研究结果[43]、[44]也显示了联合训练的优势。有趣的是，解卷积网络 [4] 的性能明显优于 FCN，但代价是更复杂的训练和推理。不过，这也提出了一个问题，即 CRF-RNN 的优势是否会随着核心前馈分割引擎的改进而减弱。无论如何，CRF-RNN 网络可以附加到包括 SegNet 在内的任何深度分割架构中。</p><p>多尺度深度架构也在研究之中 [13], [44]。它们有两种类型：(i) 使用几个尺度的输入图像和相应的深度特征提取网络；(ii) 结合来自单一深度架构不同层的特征图[45] [11]。它们的共同理念是使用在多个尺度上提取的特征来提供局部和全局上下文[46]，并使用早期编码层的特征图来保留更多高频细节，从而形成更清晰的类别边界。由于参数的大小，其中一些架构很难训练[13]。因此，需要采用多阶段训练过程和数据增强。此外，采用多个卷积路径进行特征提取的推理成本也很高。还有一些研究 [44] 将 CRF 附加到多尺度网络中，并对它们进行联合训练。不过，这些方法在测试时不是前馈的，需要优化才能确定 MAP 标签。</p><p>最近提出的几种用于分割的深度架构在推理时也不是前馈的 [4]、[3]、[18]。它们需要在 CRF 上进行 MAP 推断[44]、[43]，或使用区域建议[4]等辅助工具进行推理。我们认为，使用 CRF 可以提高性能，这是因为它们的核心前馈分割引擎缺乏良好的解码技术。另一方面，SegNet 使用解码器来获取精确像素分类的特征。</p><p>最近提出的解卷积网络[4]及其半监督变体解耦网络[18]使用编码器特征图的最大位置（池化指数）在解码器网络中执行非线性上采样。这些架构的作者在 SegNet（首次提交给 CVPR 2015 [12]）之外，提出了在解码器网络中解码的这一想法。然而，他们的编码器网络由 VGG-16 网络的全连接层组成，而 VGG-16 网络的参数约占整个网络参数的 90%。这使得他们的网络训练非常困难，因此需要额外的辅助工具，如使用区域建议来进行训练。此外，在推理过程中还需要使用这些建议，这大大增加了推理时间。从基准测试的角度来看，这也使得在没有其他辅助工具的情况下，很难评估其架构（编码器-解码器网络）的性能。在这项工作中，我们舍弃了 VGG16 编码器网络的全连接层，这使我们能够使用相关的训练集，通过 SGD 优化来训练网络。另一种最新方法[3]显示了在不牺牲性能、减少内存消耗和缩短推理时间的情况下大幅减少参数数量的好处。</p><p>我们的工作受到了 Ranzato 等人提出的无监督特征学习架构的启发[19]。关键的学习模块是一个编码器-解码器网络。编码器包括与滤波器组的卷积、元素向 tanh 非线性、最大池化和子采样，以获得特征图。对于每个样本，池化过程中计算出的最大位置的索引会被存储并传递给解码器。解码器利用存储的池化指数对特征图进行上采样。解码器使用可训练的解码器滤波器组对上采样图进行卷积，以重建输入图像。这种架构用于无监督的分类预训练。类似的解码技术也被用于可视化训练卷积网络的分类[47]。Ranzato 等人的架构主要集中在使用小的输入片段进行分层特征学习。Kavukcuoglu 等人[48] 将其扩展到接受全尺寸图像作为输入来学习分层编码器。不过，这两种方法都没有尝试使用深度编码器-解码器网络进行无监督特征训练，因为它们在每次编码器训练后都会丢弃解码器。在这里，SegNet 与这些架构不同，因为深度编码器-解码器网络是为监督学习任务而联合训练的，因此解码器在测试时是网络不可分割的一部分。</p><p>使用深度网络进行像素预测的其他应用包括图像超分辨率[49]和单幅图像的深度图预测[50]。作者在 [50] 中讨论了学习从低分辨率特征图进行上采样的必要性，这也是本文的核心主题。</p><h2 id="3-architecture"><a class="markdownIt-Anchor" href="#3-architecture"></a> 3 ARCHITECTURE</h2><p><img src="images/image-20240124165810638.png" alt="image-20240124165810638" /></p><blockquote><p>图 2. SegNet 架构示意图。没有全连接层，因此只有卷积层。解码器使用编码器传输的池指数对输入进行上采样，生成稀疏的特征图。然后，解码器使用可训练的滤波器组进行卷积，使特征图更加密集。解码器输出的最终特征图被送入软最大分类器进行像素分类。</p></blockquote><p>SegNet 有一个编码器网络和一个相应的解码器网络，最后是一个像素分类层。这一架构如图 2 所示。编码器网络由 13 个卷积层组成，这些卷积层与为物体分类设计的 VGG16 网络[1]中的前 13 个卷积层相对应。因此，我们可以根据在大型数据集上进行分类时训练的权重来初始化训练过程[40]。我们还可以舍弃全连接层，在最深的编码器输出端保留分辨率更高的特征图。这也大大减少了 SegNet 编码器网络中的参数数量（从 134 个减少到 1470 万个），与其他最新的架构[2]、[4]相比（见表 6）。每个编码器层都有一个相应的解码器层，因此解码器网络有 13 层。解码器的最终输出被送入一个多类软最大分类器，为每个像素独立生成类别概率。</p><p>编码器网络中的每个编码器都与滤波器组进行卷积，生成一组特征图。然后对这些特征图进行批量归一化处理 [51], [52]）。然后应用元素整流线性非线性（ReLU）max(0, x)。然后，使用 2 × 2 窗口和跨距 2（非重叠窗口）进行最大池化处理，并对得到的输出进行 2 倍的子采样。子采样的结果是为特征图中的每个像素提供一个大的输入图像上下文（空间窗口）。虽然多层最大池化和子采样可以获得更多的平移不变性，从而实现稳健的分类，但相应地也会损失特征图的空间分辨率。越来越多的有损（边界细节）图像表示法不利于对边界划分至关重要的分割。因此，在进行子采样之前，有必要在编码器特征图中捕捉并存储边界信息。如果推理过程中的内存不受限制，则可以存储所有编码器特征图（子采样后）。在实际应用中通常不会出现这种情况，因此我们提出了一种更有效的方法来存储这些信息。这种方法只需存储最大池化指数，即为每个编码器特征图记忆每个池化窗口中最大特征值的位置。原则上，每个 2 × 2 汇集窗口只需使用 2 位即可完成，因此与记忆浮点精度的特征图相比，存储效率要高得多。正如我们在后面的工作中所展示的，这种较低的内存存储会导致精度略有下降，但仍然适用于实际应用。</p><p><img src="images/image-20240124165621195-1706087078879-1.png" alt="image-20240124165621195" /></p><blockquote><p>图 3. a、b、c、d 对应于特征图中的值。SegNet 使用最大池化指数对特征图进行上采样（无需学习），并与可训练的解码器滤波器组进行卷积。FCN 通过学习对输入特征图进行解卷积来进行上采样，并添加相应的编码器特征图来生成解码器输出。该特征图是相应编码器中最大池化层（包括子采样）的输出。请注意，FCN 中没有可训练的解码器滤波器。</p></blockquote><p>解码器网络中的相应解码器会使用从相应编码器特征图中记忆的最大池化指数对其输入特征图进行上采样。这一步骤产生稀疏特征图。图 3 展示了这种 SegNet 解码技术。然后，这些特征图与可训练解码器滤波器组进行卷积，生成密集特征图。然后对每个特征图进行批量归一化处理。请注意，与第一个编码器（最接近输入图像）相对应的解码器生成的是多通道特征图，尽管其编码器输入只有 3 个通道（RGB）。这与网络中的其他解码器不同，它们生成的特征图的大小和通道数与其编码器输入相同。最终解码器输出端的高维特征表示被输入到一个可训练的软最大分类器中。这个软最大分类器对每个像素进行独立分类。软最大分类器的输出是一个 K 通道的概率图像，其中 K 是类别的数量。预测的分割对应于每个像素上概率最大的类别。</p><p>我们在此补充说明，另外两种架构，即 DeconvNet [53] 和 U-Net [16]，与 SegNet 架构相似，但有一些不同之处。DeconvNet 的参数化规模更大，需要的计算资源更多，端到端的训练难度更高（表 6），这主要是由于它使用了全连接层（尽管是卷积方式）。</p><p>与 SegNet 相比，U-Net [16]（针对医学成像领域提出）没有重复使用池化指数，而是将整个特征图（以增加内存为代价）传输到相应的解码器，并将它们连接到上采样（通过解卷积）解码器特征图。U-Net 中没有 VGG 网架构中的 conv5 和 max-pool 5 块。另一方面，SegNet 使用 VGG 网络中所有预训练的卷积层权重作为预训练权重。</p><h3 id="31-decoder-variants"><a class="markdownIt-Anchor" href="#31-decoder-variants"></a> 3.1 Decoder Variants</h3><p>许多分割架构 [2]、[3]、[4] 都使用相同的编码器网络，它们只是在解码器网络的形式上有所不同。我们选择将 SegNet 解码技术与广泛使用的全卷积网络（FCN）解码技术[2], [10]进行比较。</p><p>为了分析 SegNet 并将其性能与 FCN（解码器变体）进行比较，我们使用了一个较小版本的 SegNet，称为 SegNet-Basic 1，它有 4 个编码器和 4 个解码器。SegNet-Basic 中的所有编码器都执行最大池化和下采样，相应的解码器使用接收到的最大池化指数对输入进行上采样。编码器和解码器网络的每个卷积层之后都使用了批量归一化。卷积后不使用偏置，解码器网络中也不存在 ReLU 非线性。此外，所有编码器层和解码器层的内核大小恒定为 7 × 7，以便为平滑标记提供广泛的背景，即最深层特征图（第 4 层）中的一个像素可以追溯到输入图像中 106×106 像素的背景窗口。SegNet-Basic 的这种小尺寸允许我们探索许多不同的变体（解码器），并在合理的时间内对它们进行训练。同样，我们创建了 FCN-Basic，这是 FCN 的一个可比版本，用于我们的分析，它与 SegNet-Basic 使用相同的编码器网络，但其所有解码器都使用了 FCN 解码技术（见图 3）。</p><p>图 3 左侧是 SegNet（也是 SegNet-Basic）使用的解码技术，其中的上采样步骤不涉及学习。不过，上采样图会与可训练的多通道解码器滤波器进行卷积，以密集其稀疏输入。每个解码器滤波器的通道数与上采样特征图的通道数相同。一个较小的变体是解码器滤波器是单通道的，即它们只对相应的上采样特征图进行卷积。这种变体（SegNetBasic-SingleChannelDecoder）大大减少了可训练参数的数量和推理时间。</p><p>图 3 右侧是 FCN（也称 FCN-Basic）解码技术。FCN 模型的重要设计元素是编码器特征图的降维步骤。这可以压缩编码器特征图，然后将其用于相应的解码器。编码器特征图（例如 64 个通道）的降维是通过与 1 × 1 × 64 × K 可训练滤波器卷积来完成的，其中 K 是类别数。压缩后的 K 通道最终编码器层特征图是解码器网络的输入。在该网络的解码器中，通过使用固定或可训练的多通道上采样核进行反卷积来进行上采样。我们将核大小设置为 8 × 8。这种上采样方式也被称为解卷积。请注意，与 SegNet 相比，使用可训练解码器滤波器的多通道卷积是在上采样后进行的，以便对特征图进行致密化处理。FCN 中的上采样特征图有 K 个通道。然后将其逐个添加到相应分辨率的编码器特征图中，生成输出解码器特征图。上采样核使用双线性插值权重初始化[2]。</p><p>FCN 解码器模型需要在推理过程中存储编码器特征图。对于嵌入式应用来说，这可能会占用大量内存；例如，以 180 × 240 分辨率、32 位浮点精度存储 FCN-Basic 第一层的 64 个特征图需要 11MB。使用降维技术可将存储空间缩小到 11 个特征图，这需要的存储空间≈ 1.9MB。另一方面，SegNet 的池化索引所需的存储成本几乎可以忽略不计（如果每个 2 × 2 池化窗口使用 2 位存储，则存储空间为 0.17MB）。我们还可以创建 FCN-Basic 模型的变体，放弃编码器特征图添加步骤，只学习上采样核（FCN-Basic-NoAddition）。</p><p>除上述变体外，我们还研究了使用固定双线性插值权重的上采样，因此无需学习上采样（双线性插值）。在另一个极端，我们可以在 SegNet 解码器的相应输出特征图的每一层添加 64 个编码器特征图，从而创建一个更耗费内存的 SegNet 变体（SegNet-BasicEncoderAddition）。这里使用了用于上采样的池化指数，然后使用卷积步骤对稀疏输入进行增密。然后将其按元素顺序添加到相应的编码器特征图中，生成解码器输出。</p><p>另一种更耗费内存的 FCN-Basic 变体（FCN-Basic-NoDimReduction）不对编码器特征图进行降维处理。这意味着与 FCN-Basic 不同的是，最终的编码器特征图在传递给解码器网络之前不会被压缩到 K 个通道。因此，每个解码器末端的通道数与相应编码器的通道数相同（即 64 个）。</p><p>我们还尝试了其他通用变体，即通过复制[7]对特征图进行简单的上采样，或使用固定（稀疏）的索引数组进行上采样。与上述变体相比，这些变体的性能相当差。没有最大池化和编码器网络子采样的变体（解码器是冗余的）会消耗更多内存，收敛时间更长，性能也更差。最后，请注意，为了鼓励复制我们的结果，我们发布了所有变体的 Caffe 实现 2。</p><h3 id="32-training"><a class="markdownIt-Anchor" href="#32-training"></a> 3.2 Training</h3><p>我们使用 CamVid 道路场景数据集来衡量解码器变体的性能。这个数据集很小，由 367 张训练用 RGB 图像和 233 张测试用 RGB 图像（白天和黄昏场景）组成，分辨率为 360 × 480。挑战在于分割 11 个类别，如道路、建筑、汽车、行人、标志、电线杆、人行道等。我们对 RGB 输入进行了局部对比度归一化处理 [54]。</p><p>编码器和解码器权重均采用 He 等人[55]中描述的技术进行初始化。为了训练所有变体，我们使用随机梯度下降法（SGD），学习率固定为 0.1，动量为 0.9 [17]，并使用我们的 SegNet-Basic Caffe 实现 [56]。我们对变体进行训练，直到训练损失收敛为止。每次训练前，我们都会对训练集进行洗牌，然后按顺序挑选每个迷你批次（12 幅图像），从而确保每幅图像在一次训练中只使用一次。我们选择在验证数据集上表现最好的模型。</p><p>我们使用交叉熵损失 [2] 作为训练网络的目标函数。损失是一个迷你批次中所有像素的总和。当训练集中每个类别的像素数量差异较大时（例如，CamVid 数据集中主要是道路、天空和建筑像素），就需要根据真实类别对损失进行不同的加权。这就是所谓的类别平衡。我们使用频率中值平衡法[13]，在损失函数中分配给一个类别的权重是在整个训练集上计算的类别频率中值除以类别频率的比值。这意味着训练集中较大类的权重小于 1，而最小类的权重最大。我们还尝试了在不进行类平衡或等效使用自然频率平衡的情况下训练不同的变体。</p><h3 id="33-analysis"><a class="markdownIt-Anchor" href="#33-analysis"></a> 3.3 Analysis</h3><p>为了比较不同解码器变体的定量性能，我们使用了三种常用的性能指标：全局准确度 (G)，用于衡量数据集中正确分类像素的百分比；类平均准确度 ©，即所有类的预测准确度的平均值；以及所有类的平均交集大于联合 (mIoU)，如 Pascal VOC12 挑战赛[21]中使用的指标。mIoU 指标比类平均准确率更严格，因为它惩罚假阳性预测。不过，mIoU 指标不能直接通过类平衡交叉熵损失进行优化。</p><p>mIoU 指标又称 Jacard 指数，是基准测试中最常用的指标。然而，Csurka 等人[57]指出，这一指标并不总是与人类对优质分割的定性判断（等级）相对应。他们通过实例表明，mIoU 更倾向于区域的平滑度，而不能评估边界的准确性，FCN [58] 的作者最近也提到了这一点。因此，他们建议使用基于伯克利轮廓匹配得分的边界测量方法来补充 mIoU 指标，该方法通常用于评估无监督图像分割质量[59]。Csurka 等人[57] 简单地将其扩展到了语义分割，并表明与 mIoU 指标结合使用的语义轮廓准确度指标更符合人类对分割输出结果的排序。</p><p>计算语义轮廓分数的关键思路是评估 F1 测量[59]，这涉及到在给定像素容差距离的情况下，计算预测类别边界和地面真实类别边界之间的精确度和召回值。我们使用图像对角线的 0.75% 作为容差距离。对地面实况测试图像中出现的每个类别的 F1measure 值进行平均，得出图像的 F1measure 值。然后，我们通过平均图像 F1 测量值来计算整个测试集的平均值，即边界 F1 测量值（BF）。</p><p>在 CamVid 验证集上每迭代 1000 次优化后，我们会测试每个架构变体，直到训练损失收敛为止。由于训练小批量的大小为 12，这相当于大约每 33 个历时（遍数）通过训练集进行一次测试。我们在验证集的评估中选择全局准确率最高的迭代。此时，我们将在保留的 CamVid 测试集上报告所有三项性能指标。虽然我们在训练变体时使用了类平衡，但实现较高的全局准确率对于实现整体平滑的分割仍然非常重要。另一个原因是，分割对自动驾驶的贡献主要在于划分道路、建筑物、人行道、天空等类别。这些类别占据了图像中的大部分像素，而高的全局精确度则对应于对这些重要类别的良好分割。我们还观察到，当类别平均值最高时，报告的数值性能往往与低总体准确率相对应，表明分割输出的感知噪声较大。</p><p>在表 1 中，我们报告了分析的数值结果。我们还显示了可训练参数和最高分辨率特征图或池化指数存储内存的大小，即最大池化和子采样后第一层特征图的大小。我们展示的是 Caffe 实现一次前向传递的平均时间，该时间是在配备 cuDNN v3 加速的英伟达 Titan GPU 上使用 360 × 480 输入进行的 50 次测量的平均值。我们注意到，SegNet 变体中的上采样层并未使用 cuDNN 加速进行优化。我们显示了所有变体在选定迭代时的测试和训练结果。此外，我们还列出了不进行类平衡（固有频率）时的训练和测试精确度结果。下面我们将分析类平衡的结果。</p><p>从表 1 中我们可以看出，基于双线性插值法的上采样方法在没有任何学习的情况下，在所有精度指标上表现最差。所有其他方法，无论是使用学习进行上采样（FCN-Basic 及其变体），还是在上采样后学习解码器滤波器（SegNet-Basic 及其变体），其性能都要好得多。这强调了学习解码器进行分割的必要性。其他作者在比较 FCN 和 SegNet 类型解码技术时收集的实验证据也证明了这一点[4]。</p><p>当我们比较 SegNet-Basic 和 FCN-Basic 时，我们发现两者在这项测试中的所有准确度指标上都表现相当。两者的区别在于，SegNet 在推理过程中使用的内存更少，因为它只存储最大池化索引。另一方面，FCN-Basic 会完整地存储编码器特征图，这会消耗更多内存（11 倍）。SegNet-Basic 有一个解码器，每个解码器层有 64 个特征图。相比之下，FCN-Basic 采用了降维技术，每个解码器层中的特征图数量更少（11 个）。这减少了解码器网络中的卷积次数，因此 FCN-Basic 在推理（前向传递）过程中速度更快。从另一个角度看，SegNet-Basic 中的解码器网络使其整体规模大于 FCN-Basic。这赋予了它更大的灵活性，因此在迭代次数相同的情况下，它比 FCN-Basic 获得了更高的训练精度。总之，我们看到，在推理时间内存受限，但推理时间在一定程度上可以妥协的情况下，SegNet-Basic 比 FCN-Basic 更有优势。</p><p>就解码器而言，SegNet-Basic 与 FCN-Basic-NoAddition 最为相似，尽管 SegNet 的解码器更大。两者都通过学习生成密集的特征图，要么像 FCN-Basic-NoAddition 那样直接学习进行解卷积，要么先进行上采样，然后用训练有素的解码器滤波器进行卷积。SegNet-Basic 的性能更优越，部分原因是其解码器规模更大。FCN-Basic-NoAddition 的准确度也低于 FCN-Basic。这表明，为了获得更好的性能，捕捉编码器特征图中的信息至关重要。特别要注意的是，这两个变体之间的 BF 测量值下降幅度很大。这也是 SegNet-Basic 性能优于 FCN-BasicNoAddition 的部分原因。</p><p>FCN-Basic-NoAddition-NoDimReduction 模型的大小略大于 SegNet-Basic，因为最终编码器特征图并没有压缩到与类 K 的数量相匹配。在测试中，该 FCN 变体的性能比 SegNet-Basic 差，但在相同的训练历元数下，其训练精度也更低。这表明，仅使用较大的解码器是不够的，还必须捕捉编码器特征图信息，特别是细粒度轮廓信息，以便更好地学习（注意 BF 测量值的下降）。同样有趣的是，与 FCNBasic-NoDimReduction 等更大的模型相比，SegNet-Basic 的训练准确率更有竞争力。</p><p>FCN-BasicNoAddition 和 SegNet-Basic-SingleChannelDecoder 之间另一个有趣的比较表明，使用最大池化指数进行上采样和使用更大的解码器会带来更好的性能。这也证明 SegNet 是一种很好的分割架构，特别是当需要在存储成本、准确性和推理时间之间找到折衷方案时。在内存和推理时间都不受限制的最佳情况下，FCN-Basic-NoDimReduction 和 SegNet-EncoderAddition 等较大的模型都比其他变体更准确。特别是，在 FCN-Basic 模型中摒弃降维导致 FCN-Basic 变体中性能最佳，BF 分数较高。这再次强调了分割架构在内存和准确性之间的权衡。</p><p>表 1 的最后两列显示了不使用类平衡（固有频率）时的结果。在这里，我们可以看到，在不加权的情况下，所有变体的结果都较差，尤其是类平均准确率和 mIoU 指标。在没有加权的情况下，全局精度是最高的，因为大部分场景都是由天空、道路和建筑物像素构成的。除此之外，变体比较分析的所有推论也适用于自然频率平衡，包括 BF 指标的趋势。SegNetBasic 和 FCN-Basic 的表现一样好，而且优于更大的 FCN-Basic-NoAddition-NoDimReduction。规模较大但效率较低的 FCN-Basic-NoDimReduction 和 SegNetEncoderAddition 的表现优于其他变体。</p><p>现在，我们可以用以下几点概括上述分析。</p><p>当编码器特征图全部存储时，性能最佳。这一点在语义轮廓划分指标（BF）中体现得最为明显。</p><p>当推理过程中内存受限时，可以存储编码器特征图的压缩形式（降维、最大池化指数），并与适当的解码器（如 SegNet 类型）配合使用，以提高性能。</p><p>对于给定的编码器网络，较大的解码器可提高性能。</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>采样方式</title>
      <link href="/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/%E6%95%B0%E6%8D%AE%E9%9B%86%E7%B1%BB%E5%88%AB%E7%BC%96%E5%8F%B7%E5%92%8C%E6%95%B0%E9%87%8F/"/>
      <url>/2024/12/10/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/%E6%95%B0%E6%8D%AE%E9%9B%86%E7%B1%BB%E5%88%AB%E7%BC%96%E5%8F%B7%E5%92%8C%E6%95%B0%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="数据集类别数量"><a class="markdownIt-Anchor" href="#数据集类别数量"></a> 数据集类别数量</h3><p>总：   166</p><p>红：1 155<br />绿：2 136<br />黄：3 58</p><h3 id="第一种类别"><a class="markdownIt-Anchor" href="#第一种类别"></a> 第一种类别</h3><p>0001<br />0002<br />0003<br />0004<br />0005<br />0006<br />0007<br />0008<br />0009<br />0010<br />0011<br />0012<br />0013<br />0014<br />0015<br />0016<br />0017<br />0018<br />0019<br />0020<br />0021<br />0022<br />0023<br />0024<br />0025<br />0026<br />0027<br />0028<br />0029<br />0030<br />0031<br />0032<br />0033<br />0034<br />0035<br />0036<br />0037<br />0038<br />0039<br />0040<br />0041<br />0042<br />0043<br />0044<br />0045<br />0046<br />0047<br />0048<br />0049<br />0050<br />0051<br />0052<br />0053<br />0054<br />0055<br />0056<br />0057<br />0058<br />0059<br />0060<br />0061<br />0062<br />0063<br />0064<br />0065<br />0066<br />0067<br />0068<br />0069<br />0070<br />0071<br />0072<br />0073<br />0074<br />0075<br />0076<br />0077<br />0078<br />0079<br />0080<br />0081<br />0082<br />0083<br />0084<br />0085<br />0086<br />0087<br />0088<br />0089<br />0090<br />0091<br />0092<br />0093<br />0094<br />0095<br />0096<br />0097<br />0098<br />0099<br />0100<br />0101<br />0102<br />0103<br />0106<br />0107<br />0108<br />0109<br />0110<br />0112<br />0113<br />0114<br />0115<br />0116<br />0117<br />0118<br />0120<br />0121<br />0122<br />0123<br />0124<br />0125<br />0126<br />0127<br />0128<br />0129<br />0130<br />0131<br />0132<br />0133<br />0134<br />0135<br />0136<br />0137<br />0138<br />0139<br />0140<br />0141<br />0142<br />0144<br />0145<br />0146<br />0147<br />0150<br />0151<br />0154<br />0155<br />0157<br />0159<br />0160<br />0161<br />0162<br />0163<br />0164<br />0165<br />0166</p><h3 id="第二种类别"><a class="markdownIt-Anchor" href="#第二种类别"></a> 第二种类别</h3><p>0001<br />0002<br />0006<br />0007<br />0009<br />0010<br />0011<br />0014<br />0016<br />0017<br />0018<br />0019<br />0020<br />0021<br />0022<br />0023<br />0024<br />0025<br />0026<br />0027<br />0028<br />0029<br />0030<br />0031<br />0032<br />0033<br />0034<br />0035<br />0036<br />0037<br />0038<br />0039<br />0040<br />0042<br />0043<br />0044<br />0045<br />0046<br />0047<br />0048<br />0050<br />0051<br />0052<br />0053<br />0054<br />0055<br />0056<br />0058<br />0059<br />0060<br />0061<br />0062<br />0064<br />0065<br />0067<br />0068<br />0069<br />0070<br />0071<br />0072<br />0073<br />0074<br />0075<br />0076<br />0077<br />0078<br />0079<br />0080<br />0081<br />0082<br />0084<br />0086<br />0088<br />0089<br />0090<br />0092<br />0093<br />0094<br />0095<br />0096<br />0097<br />0098<br />0099<br />0100<br />0101<br />0102<br />0103<br />0104<br />0105<br />0106<br />0108<br />0109<br />0113<br />0114<br />0115<br />0116<br />0117<br />0118<br />0119<br />0120<br />0121<br />0122<br />0123<br />0124<br />0126<br />0127<br />0128<br />0129<br />0130<br />0131<br />0133<br />0134<br />0135<br />0136<br />0137<br />0138<br />0139<br />0140<br />0142<br />0148<br />0149<br />0150<br />0151<br />0152<br />0153<br />0154<br />0155<br />0156<br />0157<br />0158<br />0159<br />0160<br />0161<br />0162<br />0163<br />0165</p><h3 id="第三种类别"><a class="markdownIt-Anchor" href="#第三种类别"></a> 第三种类别</h3><p>0006<br />0010<br />0011<br />0014<br />0018<br />0019<br />0022<br />0031<br />0034<br />0036<br />0037<br />0038<br />0040<br />0044<br />0046<br />0048<br />0065<br />0067<br />0069<br />0075<br />0080<br />0082<br />0088<br />0090<br />0094<br />0098<br />0099<br />0100<br />0102<br />0103<br />0104<br />0105<br />0108<br />0114<br />0115<br />0118<br />0120<br />0123<br />0126<br />0128<br />0129<br />0130<br />0132<br />0134<br />0135<br />0136<br />0138<br />0140<br />0144<br />0145<br />0146<br />0148<br />0151<br />0154<br />0160<br />0161<br />0163<br />0166</p><h3 id="第四种类别"><a class="markdownIt-Anchor" href="#第四种类别"></a> 第四种类别</h3><p>0026<br />0033<br />0047<br />0110<br />0111<br />0129<br />0131<br />0143</p><h3 id="第五种类别"><a class="markdownIt-Anchor" href="#第五种类别"></a> 第五种类别</h3><p>0099<br />0101<br />0103<br />0105<br />0115<br />0123<br />0127<br />0129<br />0131<br />0137<br />0139<br />0141<br />0142<br />0147<br />0149<br />0151<br />0153<br />0158</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/12/08/hello-world/"/>
      <url>/2024/12/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
